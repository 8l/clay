alias GL_2D = 0x600u32;
alias GL_2_BYTES = 0x1407u32;
alias GL_3D = 0x601u32;
alias GL_3D_COLOR = 0x602u32;
alias GL_3D_COLOR_TEXTURE = 0x603u32;
alias GL_3_BYTES = 0x1408u32;
alias GL_4D_COLOR_TEXTURE = 0x604u32;
alias GL_4_BYTES = 0x1409u32;
alias GL_ACCUM = 0x100u32;
alias GL_ACCUM_ALPHA_BITS = 0xd5bu32;
alias GL_ACCUM_BLUE_BITS = 0xd5au32;
alias GL_ACCUM_BUFFER_BIT = 0x200u32;
alias GL_ACCUM_CLEAR_VALUE = 0xb80u32;
alias GL_ACCUM_GREEN_BITS = 0xd59u32;
alias GL_ACCUM_RED_BITS = 0xd58u32;
alias GL_ACTIVE_ATTRIBUTES = 0x8b89u32;
alias GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8b8au32;
alias GL_ACTIVE_SUBROUTINES = 0x8de5u32;
alias GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8e48u32;
alias GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8de6u32;
alias GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8e47u32;
alias GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8e49u32;
alias GL_ACTIVE_TEXTURE = 0x84e0u32;
alias GL_ACTIVE_UNIFORMS = 0x8b86u32;
alias GL_ACTIVE_UNIFORM_BLOCKS = 0x8a36u32;
alias GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8a35u32;
alias GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8b87u32;
alias GL_ADD = 0x104u32;
alias GL_ADD_SIGNED = 0x8574u32;
alias GL_ALIASED_LINE_WIDTH_RANGE = 0x846eu32;
alias GL_ALIASED_POINT_SIZE_RANGE = 0x846du32;
alias GL_ALL_ATTRIB_BITS = 0xfffffu32;
alias GL_ALL_CLIENT_ATTRIB_BITS = 0xffffffffu32;
alias GL_ALPHA = 0x1906u32;
alias GL_ALPHA12 = 0x803du32;
alias GL_ALPHA16 = 0x803eu32;
alias GL_ALPHA16F_ARB = 0x881cu32;
alias GL_ALPHA16I_EXT = 0x8d8au32;
alias GL_ALPHA16UI_EXT = 0x8d78u32;
alias GL_ALPHA32F_ARB = 0x8816u32;
alias GL_ALPHA32I_EXT = 0x8d84u32;
alias GL_ALPHA32UI_EXT = 0x8d72u32;
alias GL_ALPHA4 = 0x803bu32;
alias GL_ALPHA8 = 0x803cu32;
alias GL_ALPHA8I_EXT = 0x8d90u32;
alias GL_ALPHA8UI_EXT = 0x8d7eu32;
alias GL_ALPHA_BIAS = 0xd1du32;
alias GL_ALPHA_BITS = 0xd55u32;
alias GL_ALPHA_INTEGER_EXT = 0x8d97u32;
alias GL_ALPHA_SCALE = 0xd1cu32;
alias GL_ALPHA_TEST = 0xbc0u32;
alias GL_ALPHA_TEST_FUNC = 0xbc1u32;
alias GL_ALPHA_TEST_REF = 0xbc2u32;
alias GL_ALREADY_SIGNALED = 0x911au32;
alias GL_ALWAYS = 0x207u32;
alias GL_AMBIENT = 0x1200u32;
alias GL_AMBIENT_AND_DIFFUSE = 0x1602u32;
alias GL_AND = 0x1501u32;
alias GL_AND_INVERTED = 0x1504u32;
alias GL_AND_REVERSE = 0x1502u32;
alias GL_ANY_SAMPLES_PASSED = 0x8c2fu32;
alias GL_ARRAY_BUFFER = 0x8892u32;
alias GL_ARRAY_BUFFER_BINDING = 0x8894u32;
alias GL_ATTACHED_SHADERS = 0x8b85u32;
alias GL_ATTRIB_STACK_DEPTH = 0xbb0u32;
alias GL_AUTO_NORMAL = 0xd80u32;
alias GL_AUX0 = 0x409u32;
alias GL_AUX1 = 0x40au32;
alias GL_AUX2 = 0x40bu32;
alias GL_AUX3 = 0x40cu32;
alias GL_AUX_BUFFERS = 0xc00u32;
alias GL_BACK = 0x405u32;
alias GL_BACK_LEFT = 0x402u32;
alias GL_BACK_RIGHT = 0x403u32;
alias GL_BGR = 0x80e0u32;
alias GL_BGRA = 0x80e1u32;
alias GL_BGRA_INTEGER = 0x8d9bu32;
alias GL_BGR_INTEGER = 0x8d9au32;
alias GL_BITMAP = 0x1a00u32;
alias GL_BITMAP_TOKEN = 0x704u32;
alias GL_BLEND = 0xbe2u32;
alias GL_BLEND_COLOR = 0x8005u32;
alias GL_BLEND_DST = 0xbe0u32;
alias GL_BLEND_DST_ALPHA = 0x80cau32;
alias GL_BLEND_DST_RGB = 0x80c8u32;
alias GL_BLEND_EQUATION = 0x8009u32;
alias GL_BLEND_EQUATION_ALPHA = 0x883du32;
alias GL_BLEND_EQUATION_RGB = 0x8009u32;
alias GL_BLEND_SRC = 0xbe1u32;
alias GL_BLEND_SRC_ALPHA = 0x80cbu32;
alias GL_BLEND_SRC_RGB = 0x80c9u32;
alias GL_BLUE = 0x1905u32;
alias GL_BLUE_BIAS = 0xd1bu32;
alias GL_BLUE_BITS = 0xd54u32;
alias GL_BLUE_INTEGER = 0x8d96u32;
alias GL_BLUE_SCALE = 0xd1au32;
alias GL_BOOL = 0x8b56u32;
alias GL_BOOL_VEC2 = 0x8b57u32;
alias GL_BOOL_VEC3 = 0x8b58u32;
alias GL_BOOL_VEC4 = 0x8b59u32;
alias GL_BUFFER_ACCESS = 0x88bbu32;
alias GL_BUFFER_MAPPED = 0x88bcu32;
alias GL_BUFFER_MAP_POINTER = 0x88bdu32;
alias GL_BUFFER_SIZE = 0x8764u32;
alias GL_BUFFER_USAGE = 0x8765u32;
alias GL_BYTE = 0x1400u32;
alias GL_C3F_V3F = 0x2a24u32;
alias GL_C4F_N3F_V3F = 0x2a26u32;
alias GL_C4UB_V2F = 0x2a22u32;
alias GL_C4UB_V3F = 0x2a23u32;
alias GL_CCW = 0x901u32;
alias GL_CLAMP = 0x2900u32;
alias GL_CLAMP_READ_COLOR = 0x891cu32;
alias GL_CLAMP_TO_BORDER = 0x812du32;
alias GL_CLAMP_TO_EDGE = 0x812fu32;
alias GL_CLEAR = 0x1500u32;
alias GL_CLIENT_ACTIVE_TEXTURE = 0x84e1u32;
alias GL_CLIENT_ALL_ATTRIB_BITS = 0xffffffffu32;
alias GL_CLIENT_ATTRIB_STACK_DEPTH = 0xbb1u32;
alias GL_CLIENT_PIXEL_STORE_BIT = 0x1u32;
alias GL_CLIENT_VERTEX_ARRAY_BIT = 0x2u32;
alias GL_CLIP_DISTANCE0 = 0x3000u32;
alias GL_CLIP_DISTANCE1 = 0x3001u32;
alias GL_CLIP_DISTANCE2 = 0x3002u32;
alias GL_CLIP_DISTANCE3 = 0x3003u32;
alias GL_CLIP_DISTANCE4 = 0x3004u32;
alias GL_CLIP_DISTANCE5 = 0x3005u32;
alias GL_CLIP_PLANE0 = 0x3000u32;
alias GL_CLIP_PLANE1 = 0x3001u32;
alias GL_CLIP_PLANE2 = 0x3002u32;
alias GL_CLIP_PLANE3 = 0x3003u32;
alias GL_CLIP_PLANE4 = 0x3004u32;
alias GL_CLIP_PLANE5 = 0x3005u32;
alias GL_COEFF = 0xa00u32;
alias GL_COLOR = 0x1800u32;
alias GL_COLOR_ARRAY = 0x8076u32;
alias GL_COLOR_ARRAY_BUFFER_BINDING = 0x8898u32;
alias GL_COLOR_ARRAY_POINTER = 0x8090u32;
alias GL_COLOR_ARRAY_SIZE = 0x8081u32;
alias GL_COLOR_ARRAY_STRIDE = 0x8083u32;
alias GL_COLOR_ARRAY_TYPE = 0x8082u32;
alias GL_COLOR_ATTACHMENT0 = 0x8ce0u32;
alias GL_COLOR_ATTACHMENT1 = 0x8ce1u32;
alias GL_COLOR_ATTACHMENT10 = 0x8ceau32;
alias GL_COLOR_ATTACHMENT11 = 0x8cebu32;
alias GL_COLOR_ATTACHMENT12 = 0x8cecu32;
alias GL_COLOR_ATTACHMENT13 = 0x8cedu32;
alias GL_COLOR_ATTACHMENT14 = 0x8ceeu32;
alias GL_COLOR_ATTACHMENT15 = 0x8cefu32;
alias GL_COLOR_ATTACHMENT2 = 0x8ce2u32;
alias GL_COLOR_ATTACHMENT3 = 0x8ce3u32;
alias GL_COLOR_ATTACHMENT4 = 0x8ce4u32;
alias GL_COLOR_ATTACHMENT5 = 0x8ce5u32;
alias GL_COLOR_ATTACHMENT6 = 0x8ce6u32;
alias GL_COLOR_ATTACHMENT7 = 0x8ce7u32;
alias GL_COLOR_ATTACHMENT8 = 0x8ce8u32;
alias GL_COLOR_ATTACHMENT9 = 0x8ce9u32;
alias GL_COLOR_BUFFER_BIT = 0x4000u32;
alias GL_COLOR_CLEAR_VALUE = 0xc22u32;
alias GL_COLOR_INDEX = 0x1900u32;
alias GL_COLOR_INDEXES = 0x1603u32;
alias GL_COLOR_LOGIC_OP = 0xbf2u32;
alias GL_COLOR_MATERIAL = 0xb57u32;
alias GL_COLOR_MATERIAL_FACE = 0xb55u32;
alias GL_COLOR_MATERIAL_PARAMETER = 0xb56u32;
alias GL_COLOR_SUM = 0x8458u32;
alias GL_COLOR_WRITEMASK = 0xc23u32;
alias GL_COMBINE = 0x8570u32;
alias GL_COMBINE_ALPHA = 0x8572u32;
alias GL_COMBINE_RGB = 0x8571u32;
alias GL_COMPARE_REF_TO_TEXTURE = 0x884eu32;
alias GL_COMPARE_R_TO_TEXTURE = 0x884eu32;
alias GL_COMPATIBLE_SUBROUTINES = 0x8e4bu32;
alias GL_COMPILE = 0x1300u32;
alias GL_COMPILE_AND_EXECUTE = 0x1301u32;
alias GL_COMPILE_STATUS = 0x8b81u32;
alias GL_COMPRESSED_ALPHA = 0x84e9u32;
alias GL_COMPRESSED_INTENSITY = 0x84ecu32;
alias GL_COMPRESSED_LUMINANCE = 0x84eau32;
alias GL_COMPRESSED_LUMINANCE_ALPHA = 0x84ebu32;
alias GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT = 0x8c72u32;
alias GL_COMPRESSED_LUMINANCE_LATC1_EXT = 0x8c70u32;
alias GL_COMPRESSED_RED = 0x8225u32;
alias GL_COMPRESSED_RED_RGTC1 = 0x8dbbu32;
alias GL_COMPRESSED_RG = 0x8226u32;
alias GL_COMPRESSED_RGB = 0x84edu32;
alias GL_COMPRESSED_RGBA = 0x84eeu32;
alias GL_COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83f1u32;
alias GL_COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83f2u32;
alias GL_COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83f3u32;
alias GL_COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83f0u32;
alias GL_COMPRESSED_RG_RGTC2 = 0x8dbdu32;
alias GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT = 0x8c73u32;
alias GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT = 0x8c71u32;
alias GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8dbcu32;
alias GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8dbeu32;
alias GL_COMPRESSED_SLUMINANCE = 0x8c4au32;
alias GL_COMPRESSED_SLUMINANCE_ALPHA = 0x8c4bu32;
alias GL_COMPRESSED_SRGB = 0x8c48u32;
alias GL_COMPRESSED_SRGB_ALPHA = 0x8c49u32;
alias GL_COMPRESSED_TEXTURE_FORMATS = 0x86a3u32;
alias GL_CONDITION_SATISFIED = 0x911cu32;
alias GL_CONSTANT = 0x8576u32;
alias GL_CONSTANT_ALPHA = 0x8003u32;
alias GL_CONSTANT_ATTENUATION = 0x1207u32;
alias GL_CONSTANT_COLOR = 0x8001u32;
alias GL_CONTEXT_COMPATIBILITY_PROFILE_BIT = 0x2u32;
alias GL_CONTEXT_CORE_PROFILE_BIT = 0x1u32;
alias GL_CONTEXT_FLAGS = 0x821eu32;
alias GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT = 0x1u32;
alias GL_CONTEXT_PROFILE_MASK = 0x9126u32;
alias GL_COORD_REPLACE = 0x8862u32;
alias GL_COPY = 0x1503u32;
alias GL_COPY_INVERTED = 0x150cu32;
alias GL_COPY_PIXEL_TOKEN = 0x706u32;
alias GL_COPY_READ_BUFFER = 0x8f36u32;
alias GL_COPY_WRITE_BUFFER = 0x8f37u32;
alias GL_CULL_FACE = 0xb44u32;
alias GL_CULL_FACE_MODE = 0xb45u32;
alias GL_CURRENT_BIT = 0x1u32;
alias GL_CURRENT_COLOR = 0xb00u32;
alias GL_CURRENT_FOG_COORD = 0x8453u32;
alias GL_CURRENT_FOG_COORDINATE = 0x8453u32;
alias GL_CURRENT_INDEX = 0xb01u32;
alias GL_CURRENT_NORMAL = 0xb02u32;
alias GL_CURRENT_PROGRAM = 0x8b8du32;
alias GL_CURRENT_QUERY = 0x8865u32;
alias GL_CURRENT_RASTER_COLOR = 0xb04u32;
alias GL_CURRENT_RASTER_DISTANCE = 0xb09u32;
alias GL_CURRENT_RASTER_INDEX = 0xb05u32;
alias GL_CURRENT_RASTER_POSITION = 0xb07u32;
alias GL_CURRENT_RASTER_POSITION_VALID = 0xb08u32;
alias GL_CURRENT_RASTER_SECONDARY_COLOR = 0x845fu32;
alias GL_CURRENT_RASTER_TEXTURE_COORDS = 0xb06u32;
alias GL_CURRENT_SECONDARY_COLOR = 0x8459u32;
alias GL_CURRENT_TEXTURE_COORDS = 0xb03u32;
alias GL_CURRENT_VERTEX_ATTRIB = 0x8626u32;
alias GL_CW = 0x900u32;
alias GL_DECAL = 0x2101u32;
alias GL_DECR = 0x1e03u32;
alias GL_DECR_WRAP = 0x8508u32;
alias GL_DELETE_STATUS = 0x8b80u32;
alias GL_DEPTH = 0x1801u32;
alias GL_DEPTH24_STENCIL8 = 0x88f0u32;
alias GL_DEPTH32F_STENCIL8 = 0x8cadu32;
alias GL_DEPTH_ATTACHMENT = 0x8d00u32;
alias GL_DEPTH_BIAS = 0xd1fu32;
alias GL_DEPTH_BITS = 0xd56u32;
alias GL_DEPTH_BUFFER = 0x8223u32;
alias GL_DEPTH_BUFFER_BIT = 0x100u32;
alias GL_DEPTH_CLAMP = 0x864fu32;
alias GL_DEPTH_CLEAR_VALUE = 0xb73u32;
alias GL_DEPTH_COMPONENT = 0x1902u32;
alias GL_DEPTH_COMPONENT16 = 0x81a5u32;
alias GL_DEPTH_COMPONENT24 = 0x81a6u32;
alias GL_DEPTH_COMPONENT32 = 0x81a7u32;
alias GL_DEPTH_COMPONENT32F = 0x8cacu32;
alias GL_DEPTH_FUNC = 0xb74u32;
alias GL_DEPTH_RANGE = 0xb70u32;
alias GL_DEPTH_SCALE = 0xd1eu32;
alias GL_DEPTH_STENCIL = 0x84f9u32;
alias GL_DEPTH_STENCIL_ATTACHMENT = 0x821au32;
alias GL_DEPTH_TEST = 0xb71u32;
alias GL_DEPTH_TEXTURE_MODE = 0x884bu32;
alias GL_DEPTH_WRITEMASK = 0xb72u32;
alias GL_DIFFUSE = 0x1201u32;
alias GL_DITHER = 0xbd0u32;
alias GL_DOMAIN = 0xa02u32;
alias GL_DONT_CARE = 0x1100u32;
alias GL_DOT3_RGB = 0x86aeu32;
alias GL_DOT3_RGBA = 0x86afu32;
alias GL_DOUBLE = 0x140au32;
alias GL_DOUBLEBUFFER = 0xc32u32;
alias GL_DOUBLE_MAT2 = 0x8f46u32;
alias GL_DOUBLE_MAT2x3 = 0x8f49u32;
alias GL_DOUBLE_MAT2x4 = 0x8f4au32;
alias GL_DOUBLE_MAT3 = 0x8f47u32;
alias GL_DOUBLE_MAT3x2 = 0x8f4bu32;
alias GL_DOUBLE_MAT3x4 = 0x8f4cu32;
alias GL_DOUBLE_MAT4 = 0x8f48u32;
alias GL_DOUBLE_MAT4x2 = 0x8f4du32;
alias GL_DOUBLE_MAT4x3 = 0x8f4eu32;
alias GL_DOUBLE_VEC2 = 0x8ffcu32;
alias GL_DOUBLE_VEC3 = 0x8ffdu32;
alias GL_DOUBLE_VEC4 = 0x8ffeu32;
alias GL_DRAW_BUFFER = 0xc01u32;
alias GL_DRAW_BUFFER0 = 0x8825u32;
alias GL_DRAW_BUFFER1 = 0x8826u32;
alias GL_DRAW_BUFFER10 = 0x882fu32;
alias GL_DRAW_BUFFER11 = 0x8830u32;
alias GL_DRAW_BUFFER12 = 0x8831u32;
alias GL_DRAW_BUFFER13 = 0x8832u32;
alias GL_DRAW_BUFFER14 = 0x8833u32;
alias GL_DRAW_BUFFER15 = 0x8834u32;
alias GL_DRAW_BUFFER2 = 0x8827u32;
alias GL_DRAW_BUFFER3 = 0x8828u32;
alias GL_DRAW_BUFFER4 = 0x8829u32;
alias GL_DRAW_BUFFER5 = 0x882au32;
alias GL_DRAW_BUFFER6 = 0x882bu32;
alias GL_DRAW_BUFFER7 = 0x882cu32;
alias GL_DRAW_BUFFER8 = 0x882du32;
alias GL_DRAW_BUFFER9 = 0x882eu32;
alias GL_DRAW_FRAMEBUFFER = 0x8ca9u32;
alias GL_DRAW_FRAMEBUFFER_BINDING = 0x8ca6u32;
alias GL_DRAW_INDIRECT_BUFFER = 0x8f3fu32;
alias GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8f43u32;
alias GL_DRAW_PIXEL_TOKEN = 0x705u32;
alias GL_DST_ALPHA = 0x304u32;
alias GL_DST_COLOR = 0x306u32;
alias GL_DYNAMIC_COPY = 0x88eau32;
alias GL_DYNAMIC_DRAW = 0x88e8u32;
alias GL_DYNAMIC_READ = 0x88e9u32;
alias GL_EDGE_FLAG = 0xb43u32;
alias GL_EDGE_FLAG_ARRAY = 0x8079u32;
alias GL_EDGE_FLAG_ARRAY_BUFFER_BINDING = 0x889bu32;
alias GL_EDGE_FLAG_ARRAY_POINTER = 0x8093u32;
alias GL_EDGE_FLAG_ARRAY_STRIDE = 0x808cu32;
alias GL_ELEMENT_ARRAY_BUFFER = 0x8893u32;
alias GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895u32;
alias GL_EMISSION = 0x1600u32;
alias GL_ENABLE_BIT = 0x2000u32;
alias GL_EQUAL = 0x202u32;
alias GL_EQUIV = 0x1509u32;
alias GL_EVAL_BIT = 0x10000u32;
alias GL_EXP = 0x800u32;
alias GL_EXP2 = 0x801u32;
alias GL_EXTENSIONS = 0x1f03u32;
alias GL_EYE_LINEAR = 0x2400u32;
alias GL_EYE_PLANE = 0x2502u32;
alias GL_FALSE = 0x0u32;
alias GL_FASTEST = 0x1101u32;
alias GL_FEEDBACK = 0x1c01u32;
alias GL_FEEDBACK_BUFFER_POINTER = 0xdf0u32;
alias GL_FEEDBACK_BUFFER_SIZE = 0xdf1u32;
alias GL_FEEDBACK_BUFFER_TYPE = 0xdf2u32;
alias GL_FILL = 0x1b02u32;
alias GL_FIRST_VERTEX_CONVENTION = 0x8e4du32;
alias GL_FIXED_ONLY = 0x891du32;
alias GL_FLAT = 0x1d00u32;
alias GL_FLOAT = 0x1406u32;
alias GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dadu32;
alias GL_FLOAT_MAT2 = 0x8b5au32;
alias GL_FLOAT_MAT2x3 = 0x8b65u32;
alias GL_FLOAT_MAT2x4 = 0x8b66u32;
alias GL_FLOAT_MAT3 = 0x8b5bu32;
alias GL_FLOAT_MAT3x2 = 0x8b67u32;
alias GL_FLOAT_MAT3x4 = 0x8b68u32;
alias GL_FLOAT_MAT4 = 0x8b5cu32;
alias GL_FLOAT_MAT4x2 = 0x8b69u32;
alias GL_FLOAT_MAT4x3 = 0x8b6au32;
alias GL_FLOAT_VEC2 = 0x8b50u32;
alias GL_FLOAT_VEC3 = 0x8b51u32;
alias GL_FLOAT_VEC4 = 0x8b52u32;
alias GL_FOG = 0xb60u32;
alias GL_FOG_BIT = 0x80u32;
alias GL_FOG_COLOR = 0xb66u32;
alias GL_FOG_COORD = 0x8451u32;
alias GL_FOG_COORDINATE = 0x8451u32;
alias GL_FOG_COORDINATE_ARRAY = 0x8457u32;
alias GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING = 0x889du32;
alias GL_FOG_COORDINATE_ARRAY_POINTER = 0x8456u32;
alias GL_FOG_COORDINATE_ARRAY_STRIDE = 0x8455u32;
alias GL_FOG_COORDINATE_ARRAY_TYPE = 0x8454u32;
alias GL_FOG_COORDINATE_SOURCE = 0x8450u32;
alias GL_FOG_COORD_ARRAY = 0x8457u32;
alias GL_FOG_COORD_ARRAY_BUFFER_BINDING = 0x889du32;
alias GL_FOG_COORD_ARRAY_POINTER = 0x8456u32;
alias GL_FOG_COORD_ARRAY_STRIDE = 0x8455u32;
alias GL_FOG_COORD_ARRAY_TYPE = 0x8454u32;
alias GL_FOG_COORD_SRC = 0x8450u32;
alias GL_FOG_DENSITY = 0xb62u32;
alias GL_FOG_END = 0xb64u32;
alias GL_FOG_HINT = 0xc54u32;
alias GL_FOG_INDEX = 0xb61u32;
alias GL_FOG_MODE = 0xb65u32;
alias GL_FOG_START = 0xb63u32;
alias GL_FRACTIONAL_EVEN = 0x8e7cu32;
alias GL_FRACTIONAL_ODD = 0x8e7bu32;
alias GL_FRAGMENT_DEPTH = 0x8452u32;
alias GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8e5du32;
alias GL_FRAGMENT_SHADER = 0x8b30u32;
alias GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8bu32;
alias GL_FRAMEBUFFER = 0x8d40u32;
alias GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215u32;
alias GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214u32;
alias GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210u32;
alias GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211u32;
alias GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216u32;
alias GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213u32;
alias GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8da7u32;
alias GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8cd1u32;
alias GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8cd0u32;
alias GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212u32;
alias GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217u32;
alias GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8cd3u32;
alias GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4u32;
alias GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8cd2u32;
alias GL_FRAMEBUFFER_BINDING = 0x8ca6u32;
alias GL_FRAMEBUFFER_COMPLETE = 0x8cd5u32;
alias GL_FRAMEBUFFER_DEFAULT = 0x8218u32;
alias GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8cd6u32;
alias GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT = 0x8cd9u32;
alias GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8cdbu32;
alias GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT = 0x8cdau32;
alias GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB = 0x8da9u32;
alias GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8da8u32;
alias GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8cd7u32;
alias GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8d56u32;
alias GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8cdcu32;
alias GL_FRAMEBUFFER_SRGB = 0x8db9u32;
alias GL_FRAMEBUFFER_UNDEFINED = 0x8219u32;
alias GL_FRAMEBUFFER_UNSUPPORTED = 0x8cddu32;
alias GL_FRONT = 0x404u32;
alias GL_FRONT_AND_BACK = 0x408u32;
alias GL_FRONT_FACE = 0xb46u32;
alias GL_FRONT_LEFT = 0x400u32;
alias GL_FRONT_RIGHT = 0x401u32;
alias GL_FUNC_ADD = 0x8006u32;
alias GL_FUNC_REVERSE_SUBTRACT = 0x800bu32;
alias GL_FUNC_SUBTRACT = 0x800au32;
alias GL_GENERATE_MIPMAP = 0x8191u32;
alias GL_GENERATE_MIPMAP_HINT = 0x8192u32;
alias GL_GEOMETRY_INPUT_TYPE = 0x8917u32;
alias GL_GEOMETRY_OUTPUT_TYPE = 0x8918u32;
alias GL_GEOMETRY_SHADER = 0x8dd9u32;
alias GL_GEOMETRY_SHADER_INVOCATIONS = 0x887fu32;
alias GL_GEOMETRY_VERTICES_OUT = 0x8916u32;
alias GL_GEQUAL = 0x206u32;
alias GL_GREATER = 0x204u32;
alias GL_GREEN = 0x1904u32;
alias GL_GREEN_BIAS = 0xd19u32;
alias GL_GREEN_BITS = 0xd53u32;
alias GL_GREEN_INTEGER = 0x8d95u32;
alias GL_GREEN_SCALE = 0xd18u32;
alias GL_HALF_FLOAT = 0x140bu32;
alias GL_HINT_BIT = 0x8000u32;
alias GL_INCR = 0x1e02u32;
alias GL_INCR_WRAP = 0x8507u32;
alias GL_INDEX = 0x8222u32;
alias GL_INDEX_ARRAY = 0x8077u32;
alias GL_INDEX_ARRAY_BUFFER_BINDING = 0x8899u32;
alias GL_INDEX_ARRAY_POINTER = 0x8091u32;
alias GL_INDEX_ARRAY_STRIDE = 0x8086u32;
alias GL_INDEX_ARRAY_TYPE = 0x8085u32;
alias GL_INDEX_BITS = 0xd51u32;
alias GL_INDEX_CLEAR_VALUE = 0xc20u32;
alias GL_INDEX_LOGIC_OP = 0xbf1u32;
alias GL_INDEX_MODE = 0xc30u32;
alias GL_INDEX_OFFSET = 0xd13u32;
alias GL_INDEX_SHIFT = 0xd12u32;
alias GL_INDEX_WRITEMASK = 0xc21u32;
alias GL_INFO_LOG_LENGTH = 0x8b84u32;
alias GL_INT = 0x1404u32;
alias GL_INTENSITY = 0x8049u32;
alias GL_INTENSITY12 = 0x804cu32;
alias GL_INTENSITY16 = 0x804du32;
alias GL_INTENSITY16F_ARB = 0x881du32;
alias GL_INTENSITY16I_EXT = 0x8d8bu32;
alias GL_INTENSITY16UI_EXT = 0x8d79u32;
alias GL_INTENSITY32F_ARB = 0x8817u32;
alias GL_INTENSITY32I_EXT = 0x8d85u32;
alias GL_INTENSITY32UI_EXT = 0x8d73u32;
alias GL_INTENSITY4 = 0x804au32;
alias GL_INTENSITY8 = 0x804bu32;
alias GL_INTENSITY8I_EXT = 0x8d91u32;
alias GL_INTENSITY8UI_EXT = 0x8d7fu32;
alias GL_INTERLEAVED_ATTRIBS = 0x8c8cu32;
alias GL_INTERPOLATE = 0x8575u32;
alias GL_INT_2_10_10_10_REV = 0x8d9fu32;
alias GL_INT_SAMPLER_1D = 0x8dc9u32;
alias GL_INT_SAMPLER_1D_ARRAY = 0x8dceu32;
alias GL_INT_SAMPLER_2D = 0x8dcau32;
alias GL_INT_SAMPLER_2D_ARRAY = 0x8dcfu32;
alias GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109u32;
alias GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910cu32;
alias GL_INT_SAMPLER_2D_RECT = 0x8dcdu32;
alias GL_INT_SAMPLER_3D = 0x8dcbu32;
alias GL_INT_SAMPLER_BUFFER = 0x8dd0u32;
alias GL_INT_SAMPLER_CUBE = 0x8dccu32;
alias GL_INT_VEC2 = 0x8b53u32;
alias GL_INT_VEC3 = 0x8b54u32;
alias GL_INT_VEC4 = 0x8b55u32;
alias GL_INVALID_ENUM = 0x500u32;
alias GL_INVALID_FRAMEBUFFER_OPERATION = 0x506u32;
alias GL_INVALID_INDEX = 0xffffffffu32;
alias GL_INVALID_OPERATION = 0x502u32;
alias GL_INVALID_VALUE = 0x501u32;
alias GL_INVERT = 0x150au32;
alias GL_ISOLINES = 0x8e7au32;
alias GL_KEEP = 0x1e00u32;
alias GL_LAST_VERTEX_CONVENTION = 0x8e4eu32;
alias GL_LEFT = 0x406u32;
alias GL_LEQUAL = 0x203u32;
alias GL_LESS = 0x201u32;
alias GL_LIGHT0 = 0x4000u32;
alias GL_LIGHT1 = 0x4001u32;
alias GL_LIGHT2 = 0x4002u32;
alias GL_LIGHT3 = 0x4003u32;
alias GL_LIGHT4 = 0x4004u32;
alias GL_LIGHT5 = 0x4005u32;
alias GL_LIGHT6 = 0x4006u32;
alias GL_LIGHT7 = 0x4007u32;
alias GL_LIGHTING = 0xb50u32;
alias GL_LIGHTING_BIT = 0x40u32;
alias GL_LIGHT_MODEL_AMBIENT = 0xb53u32;
alias GL_LIGHT_MODEL_COLOR_CONTROL = 0x81f8u32;
alias GL_LIGHT_MODEL_LOCAL_VIEWER = 0xb51u32;
alias GL_LIGHT_MODEL_TWO_SIDE = 0xb52u32;
alias GL_LINE = 0x1b01u32;
alias GL_LINEAR = 0x2601u32;
alias GL_LINEAR_ATTENUATION = 0x1208u32;
alias GL_LINEAR_MIPMAP_LINEAR = 0x2703u32;
alias GL_LINEAR_MIPMAP_NEAREST = 0x2701u32;
alias GL_LINES = 0x1u32;
alias GL_LINES_ADJACENCY = 0xau32;
alias GL_LINE_BIT = 0x4u32;
alias GL_LINE_LOOP = 0x2u32;
alias GL_LINE_RESET_TOKEN = 0x707u32;
alias GL_LINE_SMOOTH = 0xb20u32;
alias GL_LINE_SMOOTH_HINT = 0xc52u32;
alias GL_LINE_STIPPLE = 0xb24u32;
alias GL_LINE_STIPPLE_PATTERN = 0xb25u32;
alias GL_LINE_STIPPLE_REPEAT = 0xb26u32;
alias GL_LINE_STRIP = 0x3u32;
alias GL_LINE_STRIP_ADJACENCY = 0xbu32;
alias GL_LINE_TOKEN = 0x702u32;
alias GL_LINE_WIDTH = 0xb21u32;
alias GL_LINE_WIDTH_GRANULARITY = 0xb23u32;
alias GL_LINE_WIDTH_RANGE = 0xb22u32;
alias GL_LINK_STATUS = 0x8b82u32;
alias GL_LIST_BASE = 0xb32u32;
alias GL_LIST_BIT = 0x20000u32;
alias GL_LIST_INDEX = 0xb33u32;
alias GL_LIST_MODE = 0xb30u32;
alias GL_LOAD = 0x101u32;
alias GL_LOGIC_OP = 0xbf1u32;
alias GL_LOGIC_OP_MODE = 0xbf0u32;
alias GL_LOWER_LEFT = 0x8ca1u32;
alias GL_LUMINANCE = 0x1909u32;
alias GL_LUMINANCE12 = 0x8041u32;
alias GL_LUMINANCE12_ALPHA12 = 0x8047u32;
alias GL_LUMINANCE12_ALPHA4 = 0x8046u32;
alias GL_LUMINANCE16 = 0x8042u32;
alias GL_LUMINANCE16F_ARB = 0x881eu32;
alias GL_LUMINANCE16I_EXT = 0x8d8cu32;
alias GL_LUMINANCE16UI_EXT = 0x8d7au32;
alias GL_LUMINANCE16_ALPHA16 = 0x8048u32;
alias GL_LUMINANCE32F_ARB = 0x8818u32;
alias GL_LUMINANCE32I_EXT = 0x8d86u32;
alias GL_LUMINANCE32UI_EXT = 0x8d74u32;
alias GL_LUMINANCE4 = 0x803fu32;
alias GL_LUMINANCE4_ALPHA4 = 0x8043u32;
alias GL_LUMINANCE6_ALPHA2 = 0x8044u32;
alias GL_LUMINANCE8 = 0x8040u32;
alias GL_LUMINANCE8I_EXT = 0x8d92u32;
alias GL_LUMINANCE8UI_EXT = 0x8d80u32;
alias GL_LUMINANCE8_ALPHA8 = 0x8045u32;
alias GL_LUMINANCE_ALPHA = 0x190au32;
alias GL_LUMINANCE_ALPHA16F_ARB = 0x881fu32;
alias GL_LUMINANCE_ALPHA16I_EXT = 0x8d8du32;
alias GL_LUMINANCE_ALPHA16UI_EXT = 0x8d7bu32;
alias GL_LUMINANCE_ALPHA32F_ARB = 0x8819u32;
alias GL_LUMINANCE_ALPHA32I_EXT = 0x8d87u32;
alias GL_LUMINANCE_ALPHA32UI_EXT = 0x8d75u32;
alias GL_LUMINANCE_ALPHA8I_EXT = 0x8d93u32;
alias GL_LUMINANCE_ALPHA8UI_EXT = 0x8d81u32;
alias GL_LUMINANCE_ALPHA_INTEGER_EXT = 0x8d9du32;
alias GL_LUMINANCE_INTEGER_EXT = 0x8d9cu32;
alias GL_MAJOR_VERSION = 0x821bu32;
alias GL_MAP1_COLOR_4 = 0xd90u32;
alias GL_MAP1_GRID_DOMAIN = 0xdd0u32;
alias GL_MAP1_GRID_SEGMENTS = 0xdd1u32;
alias GL_MAP1_INDEX = 0xd91u32;
alias GL_MAP1_NORMAL = 0xd92u32;
alias GL_MAP1_TEXTURE_COORD_1 = 0xd93u32;
alias GL_MAP1_TEXTURE_COORD_2 = 0xd94u32;
alias GL_MAP1_TEXTURE_COORD_3 = 0xd95u32;
alias GL_MAP1_TEXTURE_COORD_4 = 0xd96u32;
alias GL_MAP1_VERTEX_3 = 0xd97u32;
alias GL_MAP1_VERTEX_4 = 0xd98u32;
alias GL_MAP2_COLOR_4 = 0xdb0u32;
alias GL_MAP2_GRID_DOMAIN = 0xdd2u32;
alias GL_MAP2_GRID_SEGMENTS = 0xdd3u32;
alias GL_MAP2_INDEX = 0xdb1u32;
alias GL_MAP2_NORMAL = 0xdb2u32;
alias GL_MAP2_TEXTURE_COORD_1 = 0xdb3u32;
alias GL_MAP2_TEXTURE_COORD_2 = 0xdb4u32;
alias GL_MAP2_TEXTURE_COORD_3 = 0xdb5u32;
alias GL_MAP2_TEXTURE_COORD_4 = 0xdb6u32;
alias GL_MAP2_VERTEX_3 = 0xdb7u32;
alias GL_MAP2_VERTEX_4 = 0xdb8u32;
alias GL_MAP_COLOR = 0xd10u32;
alias GL_MAP_FLUSH_EXPLICIT_BIT = 0x10u32;
alias GL_MAP_INVALIDATE_BUFFER_BIT = 0x8u32;
alias GL_MAP_INVALIDATE_RANGE_BIT = 0x4u32;
alias GL_MAP_READ_BIT = 0x1u32;
alias GL_MAP_STENCIL = 0xd11u32;
alias GL_MAP_UNSYNCHRONIZED_BIT = 0x20u32;
alias GL_MAP_WRITE_BIT = 0x2u32;
alias GL_MATRIX_MODE = 0xba0u32;
alias GL_MAX = 0x8008u32;
alias GL_MAX_3D_TEXTURE_SIZE = 0x8073u32;
alias GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88ffu32;
alias GL_MAX_ATTRIB_STACK_DEPTH = 0xd35u32;
alias GL_MAX_CLIENT_ATTRIB_STACK_DEPTH = 0xd3bu32;
alias GL_MAX_CLIP_DISTANCES = 0xd32u32;
alias GL_MAX_CLIP_PLANES = 0xd32u32;
alias GL_MAX_COLOR_ATTACHMENTS = 0x8cdfu32;
alias GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910eu32;
alias GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33u32;
alias GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS = 0x8a32u32;
alias GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8e1eu32;
alias GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8e1fu32;
alias GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8b4du32;
alias GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2eu32;
alias GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31u32;
alias GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851cu32;
alias GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910fu32;
alias GL_MAX_DRAW_BUFFERS = 0x8824u32;
alias GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88fcu32;
alias GL_MAX_ELEMENTS_INDICES = 0x80e9u32;
alias GL_MAX_ELEMENTS_VERTICES = 0x80e8u32;
alias GL_MAX_EVAL_ORDER = 0xd30u32;
alias GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125u32;
alias GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8e5cu32;
alias GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2du32;
alias GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49u32;
alias GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123u32;
alias GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124u32;
alias GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8de0u32;
alias GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8e5au32;
alias GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8c29u32;
alias GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8de1u32;
alias GL_MAX_GEOMETRY_UNIFORM_BLOCKS = 0x8a2cu32;
alias GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8ddfu32;
alias GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB = 0x8dddu32;
alias GL_MAX_INTEGER_SAMPLES = 0x9110u32;
alias GL_MAX_LIGHTS = 0xd31u32;
alias GL_MAX_LIST_NESTING = 0xb31u32;
alias GL_MAX_MODELVIEW_STACK_DEPTH = 0xd36u32;
alias GL_MAX_NAME_STACK_DEPTH = 0xd37u32;
alias GL_MAX_PATCH_VERTICES = 0x8e7du32;
alias GL_MAX_PIXEL_MAP_TABLE = 0xd34u32;
alias GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905u32;
alias GL_MAX_PROJECTION_STACK_DEPTH = 0xd38u32;
alias GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84f8u32;
alias GL_MAX_RENDERBUFFER_SIZE = 0x84e8u32;
alias GL_MAX_SAMPLES = 0x8d57u32;
alias GL_MAX_SAMPLE_MASK_WORDS = 0x8e59u32;
alias GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111u32;
alias GL_MAX_SUBROUTINES = 0x8de7u32;
alias GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8de8u32;
alias GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886cu32;
alias GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8e83u32;
alias GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8e81u32;
alias GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8e85u32;
alias GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8e89u32;
alias GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8e7fu32;
alias GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886du32;
alias GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8e86u32;
alias GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8e82u32;
alias GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8e8au32;
alias GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8e80u32;
alias GL_MAX_TESS_GEN_LEVEL = 0x8e7eu32;
alias GL_MAX_TESS_PATCH_COMPONENTS = 0x8e84u32;
alias GL_MAX_TEXTURE_BUFFER_SIZE = 0x8c2bu32;
alias GL_MAX_TEXTURE_COORDS = 0x8871u32;
alias GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872u32;
alias GL_MAX_TEXTURE_LOD_BIAS = 0x84fdu32;
alias GL_MAX_TEXTURE_SIZE = 0xd33u32;
alias GL_MAX_TEXTURE_STACK_DEPTH = 0xd39u32;
alias GL_MAX_TEXTURE_UNITS = 0x84e2u32;
alias GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8e70u32;
alias GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8au32;
alias GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8bu32;
alias GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80u32;
alias GL_MAX_UNIFORM_BLOCK_SIZE = 0x8a30u32;
alias GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2fu32;
alias GL_MAX_VARYING_COMPONENTS = 0x8b4bu32;
alias GL_MAX_VARYING_FLOATS = 0x8b4bu32;
alias GL_MAX_VERTEX_ATTRIBS = 0x8869u32;
alias GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122u32;
alias GL_MAX_VERTEX_STREAMS = 0x8e71u32;
alias GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8b4cu32;
alias GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2bu32;
alias GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4au32;
alias GL_MAX_VERTEX_VARYING_COMPONENTS_ARB = 0x8ddeu32;
alias GL_MAX_VIEWPORT_DIMS = 0xd3au32;
alias GL_MIN = 0x8007u32;
alias GL_MINOR_VERSION = 0x821cu32;
alias GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8e5bu32;
alias GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904u32;
alias GL_MIRRORED_REPEAT = 0x8370u32;
alias GL_MODELVIEW = 0x1700u32;
alias GL_MODELVIEW_MATRIX = 0xba6u32;
alias GL_MODELVIEW_STACK_DEPTH = 0xba3u32;
alias GL_MODULATE = 0x2100u32;
alias GL_MULT = 0x103u32;
alias GL_MULTISAMPLE = 0x809du32;
alias GL_MULTISAMPLE_BIT = 0x20000000u32;
alias GL_N3F_V3F = 0x2a25u32;
alias GL_NAME_STACK_DEPTH = 0xd70u32;
alias GL_NAND = 0x150eu32;
alias GL_NEAREST = 0x2600u32;
alias GL_NEAREST_MIPMAP_LINEAR = 0x2702u32;
alias GL_NEAREST_MIPMAP_NEAREST = 0x2700u32;
alias GL_NEVER = 0x200u32;
alias GL_NICEST = 0x1102u32;
alias GL_NONE = 0x0u32;
alias GL_NOOP = 0x1505u32;
alias GL_NOR = 0x1508u32;
alias GL_NORMALIZE = 0xba1u32;
alias GL_NORMAL_ARRAY = 0x8075u32;
alias GL_NORMAL_ARRAY_BUFFER_BINDING = 0x8897u32;
alias GL_NORMAL_ARRAY_POINTER = 0x808fu32;
alias GL_NORMAL_ARRAY_STRIDE = 0x807fu32;
alias GL_NORMAL_ARRAY_TYPE = 0x807eu32;
alias GL_NORMAL_MAP = 0x8511u32;
alias GL_NOTEQUAL = 0x205u32;
alias GL_NO_ERROR = 0x0u32;
alias GL_NUM_COMPATIBLE_SUBROUTINES = 0x8e4au32;
alias GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86a2u32;
alias GL_NUM_EXTENSIONS = 0x821du32;
alias GL_OBJECT_LINEAR = 0x2401u32;
alias GL_OBJECT_PLANE = 0x2501u32;
alias GL_OBJECT_TYPE = 0x9112u32;
alias GL_ONE = 0x1u32;
alias GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004u32;
alias GL_ONE_MINUS_CONSTANT_COLOR = 0x8002u32;
alias GL_ONE_MINUS_DST_ALPHA = 0x305u32;
alias GL_ONE_MINUS_DST_COLOR = 0x307u32;
alias GL_ONE_MINUS_SRC1_ALPHA = 0x88fbu32;
alias GL_ONE_MINUS_SRC1_COLOR = 0x88fau32;
alias GL_ONE_MINUS_SRC_ALPHA = 0x303u32;
alias GL_ONE_MINUS_SRC_COLOR = 0x301u32;
alias GL_OPERAND0_ALPHA = 0x8598u32;
alias GL_OPERAND0_RGB = 0x8590u32;
alias GL_OPERAND1_ALPHA = 0x8599u32;
alias GL_OPERAND1_RGB = 0x8591u32;
alias GL_OPERAND2_ALPHA = 0x859au32;
alias GL_OPERAND2_RGB = 0x8592u32;
alias GL_OR = 0x1507u32;
alias GL_ORDER = 0xa01u32;
alias GL_OR_INVERTED = 0x150du32;
alias GL_OR_REVERSE = 0x150bu32;
alias GL_OUT_OF_MEMORY = 0x505u32;
alias GL_PACK_ALIGNMENT = 0xd05u32;
alias GL_PACK_IMAGE_HEIGHT = 0x806cu32;
alias GL_PACK_LSB_FIRST = 0xd01u32;
alias GL_PACK_ROW_LENGTH = 0xd02u32;
alias GL_PACK_SKIP_IMAGES = 0x806bu32;
alias GL_PACK_SKIP_PIXELS = 0xd04u32;
alias GL_PACK_SKIP_ROWS = 0xd03u32;
alias GL_PACK_SWAP_BYTES = 0xd00u32;
alias GL_PASS_THROUGH_TOKEN = 0x700u32;
alias GL_PATCHES = 0xeu32;
alias GL_PATCH_DEFAULT_INNER_LEVEL = 0x8e73u32;
alias GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8e74u32;
alias GL_PATCH_VERTICES = 0x8e72u32;
alias GL_PERSPECTIVE_CORRECTION_HINT = 0xc50u32;
alias GL_PIXEL_MAP_A_TO_A = 0xc79u32;
alias GL_PIXEL_MAP_A_TO_A_SIZE = 0xcb9u32;
alias GL_PIXEL_MAP_B_TO_B = 0xc78u32;
alias GL_PIXEL_MAP_B_TO_B_SIZE = 0xcb8u32;
alias GL_PIXEL_MAP_G_TO_G = 0xc77u32;
alias GL_PIXEL_MAP_G_TO_G_SIZE = 0xcb7u32;
alias GL_PIXEL_MAP_I_TO_A = 0xc75u32;
alias GL_PIXEL_MAP_I_TO_A_SIZE = 0xcb5u32;
alias GL_PIXEL_MAP_I_TO_B = 0xc74u32;
alias GL_PIXEL_MAP_I_TO_B_SIZE = 0xcb4u32;
alias GL_PIXEL_MAP_I_TO_G = 0xc73u32;
alias GL_PIXEL_MAP_I_TO_G_SIZE = 0xcb3u32;
alias GL_PIXEL_MAP_I_TO_I = 0xc70u32;
alias GL_PIXEL_MAP_I_TO_I_SIZE = 0xcb0u32;
alias GL_PIXEL_MAP_I_TO_R = 0xc72u32;
alias GL_PIXEL_MAP_I_TO_R_SIZE = 0xcb2u32;
alias GL_PIXEL_MAP_R_TO_R = 0xc76u32;
alias GL_PIXEL_MAP_R_TO_R_SIZE = 0xcb6u32;
alias GL_PIXEL_MAP_S_TO_S = 0xc71u32;
alias GL_PIXEL_MAP_S_TO_S_SIZE = 0xcb1u32;
alias GL_PIXEL_MODE_BIT = 0x20u32;
alias GL_PIXEL_PACK_BUFFER = 0x88ebu32;
alias GL_PIXEL_PACK_BUFFER_BINDING = 0x88edu32;
alias GL_PIXEL_UNPACK_BUFFER = 0x88ecu32;
alias GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88efu32;
alias GL_POINT = 0x1b00u32;
alias GL_POINTS = 0x0u32;
alias GL_POINT_BIT = 0x2u32;
alias GL_POINT_DISTANCE_ATTENUATION = 0x8129u32;
alias GL_POINT_FADE_THRESHOLD_SIZE = 0x8128u32;
alias GL_POINT_SIZE = 0xb11u32;
alias GL_POINT_SIZE_GRANULARITY = 0xb13u32;
alias GL_POINT_SIZE_MAX = 0x8127u32;
alias GL_POINT_SIZE_MIN = 0x8126u32;
alias GL_POINT_SIZE_RANGE = 0xb12u32;
alias GL_POINT_SMOOTH = 0xb10u32;
alias GL_POINT_SMOOTH_HINT = 0xc51u32;
alias GL_POINT_SPRITE = 0x8861u32;
alias GL_POINT_SPRITE_COORD_ORIGIN = 0x8ca0u32;
alias GL_POINT_TOKEN = 0x701u32;
alias GL_POLYGON = 0x9u32;
alias GL_POLYGON_BIT = 0x8u32;
alias GL_POLYGON_MODE = 0xb40u32;
alias GL_POLYGON_OFFSET_FACTOR = 0x8038u32;
alias GL_POLYGON_OFFSET_FILL = 0x8037u32;
alias GL_POLYGON_OFFSET_LINE = 0x2a02u32;
alias GL_POLYGON_OFFSET_POINT = 0x2a01u32;
alias GL_POLYGON_OFFSET_UNITS = 0x2a00u32;
alias GL_POLYGON_SMOOTH = 0xb41u32;
alias GL_POLYGON_SMOOTH_HINT = 0xc53u32;
alias GL_POLYGON_STIPPLE = 0xb42u32;
alias GL_POLYGON_STIPPLE_BIT = 0x10u32;
alias GL_POLYGON_TOKEN = 0x703u32;
alias GL_POSITION = 0x1203u32;
alias GL_PREVIOUS = 0x8578u32;
alias GL_PRIMARY_COLOR = 0x8577u32;
alias GL_PRIMITIVES_GENERATED = 0x8c87u32;
alias GL_PRIMITIVE_RESTART = 0x8f9du32;
alias GL_PRIMITIVE_RESTART_INDEX = 0x8f9eu32;
alias GL_PROGRAM_POINT_SIZE = 0x8642u32;
alias GL_PROJECTION = 0x1701u32;
alias GL_PROJECTION_MATRIX = 0xba7u32;
alias GL_PROJECTION_STACK_DEPTH = 0xba4u32;
alias GL_PROVOKING_VERTEX = 0x8e4fu32;
alias GL_PROXY_TEXTURE_1D = 0x8063u32;
alias GL_PROXY_TEXTURE_1D_ARRAY = 0x8c19u32;
alias GL_PROXY_TEXTURE_2D = 0x8064u32;
alias GL_PROXY_TEXTURE_2D_ARRAY = 0x8c1bu32;
alias GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101u32;
alias GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103u32;
alias GL_PROXY_TEXTURE_3D = 0x8070u32;
alias GL_PROXY_TEXTURE_CUBE_MAP = 0x851bu32;
alias GL_PROXY_TEXTURE_RECTANGLE = 0x84f7u32;
alias GL_Q = 0x2003u32;
alias GL_QUADRATIC_ATTENUATION = 0x1209u32;
alias GL_QUADS = 0x7u32;
alias GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8e4cu32;
alias GL_QUAD_STRIP = 0x8u32;
alias GL_QUERY_BY_REGION_NO_WAIT = 0x8e16u32;
alias GL_QUERY_BY_REGION_WAIT = 0x8e15u32;
alias GL_QUERY_COUNTER_BITS = 0x8864u32;
alias GL_QUERY_NO_WAIT = 0x8e14u32;
alias GL_QUERY_RESULT = 0x8866u32;
alias GL_QUERY_RESULT_AVAILABLE = 0x8867u32;
alias GL_QUERY_WAIT = 0x8e13u32;
alias GL_R = 0x2002u32;
alias GL_R11F_G11F_B10F = 0x8c3au32;
alias GL_R16 = 0x822au32;
alias GL_R16F = 0x822du32;
alias GL_R16I = 0x8233u32;
alias GL_R16UI = 0x8234u32;
alias GL_R16_SNORM = 0x8f98u32;
alias GL_R32F = 0x822eu32;
alias GL_R32I = 0x8235u32;
alias GL_R32UI = 0x8236u32;
alias GL_R3_G3_B2 = 0x2a10u32;
alias GL_R8 = 0x8229u32;
alias GL_R8I = 0x8231u32;
alias GL_R8UI = 0x8232u32;
alias GL_R8_SNORM = 0x8f94u32;
alias GL_RASTERIZER_DISCARD = 0x8c89u32;
alias GL_READ_BUFFER = 0xc02u32;
alias GL_READ_FRAMEBUFFER = 0x8ca8u32;
alias GL_READ_FRAMEBUFFER_BINDING = 0x8caau32;
alias GL_READ_ONLY = 0x88b8u32;
alias GL_READ_WRITE = 0x88bau32;
alias GL_RED = 0x1903u32;
alias GL_RED_BIAS = 0xd15u32;
alias GL_RED_BITS = 0xd52u32;
alias GL_RED_INTEGER = 0x8d94u32;
alias GL_RED_SCALE = 0xd14u32;
alias GL_RED_SNORM = 0x8f90u32;
alias GL_REFLECTION_MAP = 0x8512u32;
alias GL_RENDER = 0x1c00u32;
alias GL_RENDERBUFFER = 0x8d41u32;
alias GL_RENDERBUFFER_ALPHA_SIZE = 0x8d53u32;
alias GL_RENDERBUFFER_BINDING = 0x8ca7u32;
alias GL_RENDERBUFFER_BLUE_SIZE = 0x8d52u32;
alias GL_RENDERBUFFER_DEPTH_SIZE = 0x8d54u32;
alias GL_RENDERBUFFER_GREEN_SIZE = 0x8d51u32;
alias GL_RENDERBUFFER_HEIGHT = 0x8d43u32;
alias GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8d44u32;
alias GL_RENDERBUFFER_RED_SIZE = 0x8d50u32;
alias GL_RENDERBUFFER_SAMPLES = 0x8cabu32;
alias GL_RENDERBUFFER_STENCIL_SIZE = 0x8d55u32;
alias GL_RENDERBUFFER_WIDTH = 0x8d42u32;
alias GL_RENDERER = 0x1f01u32;
alias GL_RENDER_MODE = 0xc40u32;
alias GL_REPEAT = 0x2901u32;
alias GL_REPLACE = 0x1e01u32;
alias GL_RESCALE_NORMAL = 0x803au32;
alias GL_RETURN = 0x102u32;
alias GL_RG = 0x8227u32;
alias GL_RG16 = 0x822cu32;
alias GL_RG16F = 0x822fu32;
alias GL_RG16I = 0x8239u32;
alias GL_RG16UI = 0x823au32;
alias GL_RG16_SNORM = 0x8f99u32;
alias GL_RG32F = 0x8230u32;
alias GL_RG32I = 0x823bu32;
alias GL_RG32UI = 0x823cu32;
alias GL_RG8 = 0x822bu32;
alias GL_RG8I = 0x8237u32;
alias GL_RG8UI = 0x8238u32;
alias GL_RG8_SNORM = 0x8f95u32;
alias GL_RGB = 0x1907u32;
alias GL_RGB10 = 0x8052u32;
alias GL_RGB10_A2 = 0x8059u32;
alias GL_RGB10_A2UI = 0x906fu32;
alias GL_RGB12 = 0x8053u32;
alias GL_RGB16 = 0x8054u32;
alias GL_RGB16F = 0x881bu32;
alias GL_RGB16I = 0x8d89u32;
alias GL_RGB16UI = 0x8d77u32;
alias GL_RGB16_SNORM = 0x8f9au32;
alias GL_RGB32F = 0x8815u32;
alias GL_RGB32I = 0x8d83u32;
alias GL_RGB32UI = 0x8d71u32;
alias GL_RGB4 = 0x804fu32;
alias GL_RGB5 = 0x8050u32;
alias GL_RGB5_A1 = 0x8057u32;
alias GL_RGB8 = 0x8051u32;
alias GL_RGB8I = 0x8d8fu32;
alias GL_RGB8UI = 0x8d7du32;
alias GL_RGB8_SNORM = 0x8f96u32;
alias GL_RGB9_E5 = 0x8c3du32;
alias GL_RGBA = 0x1908u32;
alias GL_RGBA12 = 0x805au32;
alias GL_RGBA16 = 0x805bu32;
alias GL_RGBA16F = 0x881au32;
alias GL_RGBA16I = 0x8d88u32;
alias GL_RGBA16UI = 0x8d76u32;
alias GL_RGBA16_SNORM = 0x8f9bu32;
alias GL_RGBA2 = 0x8055u32;
alias GL_RGBA32F = 0x8814u32;
alias GL_RGBA32I = 0x8d82u32;
alias GL_RGBA32UI = 0x8d70u32;
alias GL_RGBA4 = 0x8056u32;
alias GL_RGBA8 = 0x8058u32;
alias GL_RGBA8I = 0x8d8eu32;
alias GL_RGBA8UI = 0x8d7cu32;
alias GL_RGBA8_SNORM = 0x8f97u32;
alias GL_RGBA_INTEGER = 0x8d99u32;
alias GL_RGBA_MODE = 0xc31u32;
alias GL_RGBA_SNORM = 0x8f93u32;
alias GL_RGB_INTEGER = 0x8d98u32;
alias GL_RGB_SCALE = 0x8573u32;
alias GL_RGB_SNORM = 0x8f92u32;
alias GL_RG_INTEGER = 0x8228u32;
alias GL_RG_SNORM = 0x8f91u32;
alias GL_RIGHT = 0x407u32;
alias GL_S = 0x2000u32;
alias GL_SAMPLER_1D = 0x8b5du32;
alias GL_SAMPLER_1D_ARRAY = 0x8dc0u32;
alias GL_SAMPLER_1D_ARRAY_SHADOW = 0x8dc3u32;
alias GL_SAMPLER_1D_SHADOW = 0x8b61u32;
alias GL_SAMPLER_2D = 0x8b5eu32;
alias GL_SAMPLER_2D_ARRAY = 0x8dc1u32;
alias GL_SAMPLER_2D_ARRAY_SHADOW = 0x8dc4u32;
alias GL_SAMPLER_2D_MULTISAMPLE = 0x9108u32;
alias GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910bu32;
alias GL_SAMPLER_2D_RECT = 0x8b63u32;
alias GL_SAMPLER_2D_RECT_SHADOW = 0x8b64u32;
alias GL_SAMPLER_2D_SHADOW = 0x8b62u32;
alias GL_SAMPLER_3D = 0x8b5fu32;
alias GL_SAMPLER_BINDING = 0x8919u32;
alias GL_SAMPLER_BUFFER = 0x8dc2u32;
alias GL_SAMPLER_CUBE = 0x8b60u32;
alias GL_SAMPLER_CUBE_SHADOW = 0x8dc5u32;
alias GL_SAMPLES = 0x80a9u32;
alias GL_SAMPLES_PASSED = 0x8914u32;
alias GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809eu32;
alias GL_SAMPLE_ALPHA_TO_ONE = 0x809fu32;
alias GL_SAMPLE_BUFFERS = 0x80a8u32;
alias GL_SAMPLE_COVERAGE = 0x80a0u32;
alias GL_SAMPLE_COVERAGE_INVERT = 0x80abu32;
alias GL_SAMPLE_COVERAGE_VALUE = 0x80aau32;
alias GL_SAMPLE_MASK = 0x8e51u32;
alias GL_SAMPLE_MASK_VALUE = 0x8e52u32;
alias GL_SAMPLE_POSITION = 0x8e50u32;
alias GL_SCISSOR_BIT = 0x80000u32;
alias GL_SCISSOR_BOX = 0xc10u32;
alias GL_SCISSOR_TEST = 0xc11u32;
alias GL_SECONDARY_COLOR_ARRAY = 0x845eu32;
alias GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING = 0x889cu32;
alias GL_SECONDARY_COLOR_ARRAY_POINTER = 0x845du32;
alias GL_SECONDARY_COLOR_ARRAY_SIZE = 0x845au32;
alias GL_SECONDARY_COLOR_ARRAY_STRIDE = 0x845cu32;
alias GL_SECONDARY_COLOR_ARRAY_TYPE = 0x845bu32;
alias GL_SELECT = 0x1c02u32;
alias GL_SELECTION_BUFFER_POINTER = 0xdf3u32;
alias GL_SELECTION_BUFFER_SIZE = 0xdf4u32;
alias GL_SEPARATE_ATTRIBS = 0x8c8du32;
alias GL_SEPARATE_SPECULAR_COLOR = 0x81fau32;
alias GL_SET = 0x150fu32;
alias GL_SHADER_SOURCE_LENGTH = 0x8b88u32;
alias GL_SHADER_TYPE = 0x8b4fu32;
alias GL_SHADE_MODEL = 0xb54u32;
alias GL_SHADING_LANGUAGE_VERSION = 0x8b8cu32;
alias GL_SHININESS = 0x1601u32;
alias GL_SHORT = 0x1402u32;
alias GL_SIGNALED = 0x9119u32;
alias GL_SIGNED_NORMALIZED = 0x8f9cu32;
alias GL_SINGLE_COLOR = 0x81f9u32;
alias GL_SLUMINANCE = 0x8c46u32;
alias GL_SLUMINANCE8 = 0x8c47u32;
alias GL_SLUMINANCE8_ALPHA8 = 0x8c45u32;
alias GL_SLUMINANCE_ALPHA = 0x8c44u32;
alias GL_SMOOTH = 0x1d01u32;
alias GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0xb23u32;
alias GL_SMOOTH_LINE_WIDTH_RANGE = 0xb22u32;
alias GL_SMOOTH_POINT_SIZE_GRANULARITY = 0xb13u32;
alias GL_SMOOTH_POINT_SIZE_RANGE = 0xb12u32;
alias GL_SOURCE0_ALPHA = 0x8588u32;
alias GL_SOURCE0_RGB = 0x8580u32;
alias GL_SOURCE1_ALPHA = 0x8589u32;
alias GL_SOURCE1_RGB = 0x8581u32;
alias GL_SOURCE2_ALPHA = 0x858au32;
alias GL_SOURCE2_RGB = 0x8582u32;
alias GL_SPECULAR = 0x1202u32;
alias GL_SPHERE_MAP = 0x2402u32;
alias GL_SPOT_CUTOFF = 0x1206u32;
alias GL_SPOT_DIRECTION = 0x1204u32;
alias GL_SPOT_EXPONENT = 0x1205u32;
alias GL_SRC0_ALPHA = 0x8588u32;
alias GL_SRC0_RGB = 0x8580u32;
alias GL_SRC1_ALPHA = 0x8589u32;
alias GL_SRC1_COLOR = 0x88f9u32;
alias GL_SRC1_RGB = 0x8581u32;
alias GL_SRC2_ALPHA = 0x858au32;
alias GL_SRC2_RGB = 0x8582u32;
alias GL_SRC_ALPHA = 0x302u32;
alias GL_SRC_ALPHA_SATURATE = 0x308u32;
alias GL_SRC_COLOR = 0x300u32;
alias GL_SRGB = 0x8c40u32;
alias GL_SRGB8 = 0x8c41u32;
alias GL_SRGB8_ALPHA8 = 0x8c43u32;
alias GL_SRGB_ALPHA = 0x8c42u32;
alias GL_STACK_OVERFLOW = 0x503u32;
alias GL_STACK_UNDERFLOW = 0x504u32;
alias GL_STATIC_COPY = 0x88e6u32;
alias GL_STATIC_DRAW = 0x88e4u32;
alias GL_STATIC_READ = 0x88e5u32;
alias GL_STENCIL = 0x1802u32;
alias GL_STENCIL_ATTACHMENT = 0x8d20u32;
alias GL_STENCIL_BACK_FAIL = 0x8801u32;
alias GL_STENCIL_BACK_FUNC = 0x8800u32;
alias GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802u32;
alias GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803u32;
alias GL_STENCIL_BACK_REF = 0x8ca3u32;
alias GL_STENCIL_BACK_VALUE_MASK = 0x8ca4u32;
alias GL_STENCIL_BACK_WRITEMASK = 0x8ca5u32;
alias GL_STENCIL_BITS = 0xd57u32;
alias GL_STENCIL_BUFFER = 0x8224u32;
alias GL_STENCIL_BUFFER_BIT = 0x400u32;
alias GL_STENCIL_CLEAR_VALUE = 0xb91u32;
alias GL_STENCIL_FAIL = 0xb94u32;
alias GL_STENCIL_FUNC = 0xb92u32;
alias GL_STENCIL_INDEX = 0x1901u32;
alias GL_STENCIL_INDEX1 = 0x8d46u32;
alias GL_STENCIL_INDEX16 = 0x8d49u32;
alias GL_STENCIL_INDEX4 = 0x8d47u32;
alias GL_STENCIL_INDEX8 = 0x8d48u32;
alias GL_STENCIL_PASS_DEPTH_FAIL = 0xb95u32;
alias GL_STENCIL_PASS_DEPTH_PASS = 0xb96u32;
alias GL_STENCIL_REF = 0xb97u32;
alias GL_STENCIL_TEST = 0xb90u32;
alias GL_STENCIL_VALUE_MASK = 0xb93u32;
alias GL_STENCIL_WRITEMASK = 0xb98u32;
alias GL_STEREO = 0xc33u32;
alias GL_STREAM_COPY = 0x88e2u32;
alias GL_STREAM_DRAW = 0x88e0u32;
alias GL_STREAM_READ = 0x88e1u32;
alias GL_SUBPIXEL_BITS = 0xd50u32;
alias GL_SUBTRACT = 0x84e7u32;
alias GL_SYNC_CONDITION = 0x9113u32;
alias GL_SYNC_FENCE = 0x9116u32;
alias GL_SYNC_FLAGS = 0x9115u32;
alias GL_SYNC_FLUSH_COMMANDS_BIT = 0x1u32;
alias GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117u32;
alias GL_SYNC_STATUS = 0x9114u32;
alias GL_T = 0x2001u32;
alias GL_T2F_C3F_V3F = 0x2a2au32;
alias GL_T2F_C4F_N3F_V3F = 0x2a2cu32;
alias GL_T2F_C4UB_V3F = 0x2a29u32;
alias GL_T2F_N3F_V3F = 0x2a2bu32;
alias GL_T2F_V3F = 0x2a27u32;
alias GL_T4F_C4F_N3F_V4F = 0x2a2du32;
alias GL_T4F_V4F = 0x2a28u32;
alias GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8e75u32;
alias GL_TESS_CONTROL_SHADER = 0x8e88u32;
alias GL_TESS_EVALUATION_SHADER = 0x8e87u32;
alias GL_TESS_GEN_MODE = 0x8e76u32;
alias GL_TESS_GEN_POINT_MODE = 0x8e79u32;
alias GL_TESS_GEN_SPACING = 0x8e77u32;
alias GL_TESS_GEN_VERTEX_ORDER = 0x8e78u32;
alias GL_TEXTURE = 0x1702u32;
alias GL_TEXTURE0 = 0x84c0u32;
alias GL_TEXTURE1 = 0x84c1u32;
alias GL_TEXTURE10 = 0x84cau32;
alias GL_TEXTURE11 = 0x84cbu32;
alias GL_TEXTURE12 = 0x84ccu32;
alias GL_TEXTURE13 = 0x84cdu32;
alias GL_TEXTURE14 = 0x84ceu32;
alias GL_TEXTURE15 = 0x84cfu32;
alias GL_TEXTURE16 = 0x84d0u32;
alias GL_TEXTURE17 = 0x84d1u32;
alias GL_TEXTURE18 = 0x84d2u32;
alias GL_TEXTURE19 = 0x84d3u32;
alias GL_TEXTURE2 = 0x84c2u32;
alias GL_TEXTURE20 = 0x84d4u32;
alias GL_TEXTURE21 = 0x84d5u32;
alias GL_TEXTURE22 = 0x84d6u32;
alias GL_TEXTURE23 = 0x84d7u32;
alias GL_TEXTURE24 = 0x84d8u32;
alias GL_TEXTURE25 = 0x84d9u32;
alias GL_TEXTURE26 = 0x84dau32;
alias GL_TEXTURE27 = 0x84dbu32;
alias GL_TEXTURE28 = 0x84dcu32;
alias GL_TEXTURE29 = 0x84ddu32;
alias GL_TEXTURE3 = 0x84c3u32;
alias GL_TEXTURE30 = 0x84deu32;
alias GL_TEXTURE31 = 0x84dfu32;
alias GL_TEXTURE4 = 0x84c4u32;
alias GL_TEXTURE5 = 0x84c5u32;
alias GL_TEXTURE6 = 0x84c6u32;
alias GL_TEXTURE7 = 0x84c7u32;
alias GL_TEXTURE8 = 0x84c8u32;
alias GL_TEXTURE9 = 0x84c9u32;
alias GL_TEXTURE_1D = 0xde0u32;
alias GL_TEXTURE_1D_ARRAY = 0x8c18u32;
alias GL_TEXTURE_2D = 0xde1u32;
alias GL_TEXTURE_2D_ARRAY = 0x8c1au32;
alias GL_TEXTURE_2D_MULTISAMPLE = 0x9100u32;
alias GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102u32;
alias GL_TEXTURE_3D = 0x806fu32;
alias GL_TEXTURE_ALPHA_SIZE = 0x805fu32;
alias GL_TEXTURE_ALPHA_TYPE = 0x8c13u32;
alias GL_TEXTURE_BASE_LEVEL = 0x813cu32;
alias GL_TEXTURE_BINDING_1D = 0x8068u32;
alias GL_TEXTURE_BINDING_1D_ARRAY = 0x8c1cu32;
alias GL_TEXTURE_BINDING_2D = 0x8069u32;
alias GL_TEXTURE_BINDING_2D_ARRAY = 0x8c1du32;
alias GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104u32;
alias GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105u32;
alias GL_TEXTURE_BINDING_3D = 0x806au32;
alias GL_TEXTURE_BINDING_BUFFER = 0x8c2cu32;
alias GL_TEXTURE_BINDING_CUBE_MAP = 0x8514u32;
alias GL_TEXTURE_BINDING_RECTANGLE = 0x84f6u32;
alias GL_TEXTURE_BIT = 0x40000u32;
alias GL_TEXTURE_BLUE_SIZE = 0x805eu32;
alias GL_TEXTURE_BLUE_TYPE = 0x8c12u32;
alias GL_TEXTURE_BORDER = 0x1005u32;
alias GL_TEXTURE_BORDER_COLOR = 0x1004u32;
alias GL_TEXTURE_BUFFER = 0x8c2au32;
alias GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8c2du32;
alias GL_TEXTURE_BUFFER_FORMAT = 0x8c2eu32;
alias GL_TEXTURE_COMPARE_FUNC = 0x884du32;
alias GL_TEXTURE_COMPARE_MODE = 0x884cu32;
alias GL_TEXTURE_COMPONENTS = 0x1003u32;
alias GL_TEXTURE_COMPRESSED = 0x86a1u32;
alias GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86a0u32;
alias GL_TEXTURE_COMPRESSION_HINT = 0x84efu32;
alias GL_TEXTURE_COORD_ARRAY = 0x8078u32;
alias GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING = 0x889au32;
alias GL_TEXTURE_COORD_ARRAY_POINTER = 0x8092u32;
alias GL_TEXTURE_COORD_ARRAY_SIZE = 0x8088u32;
alias GL_TEXTURE_COORD_ARRAY_STRIDE = 0x808au32;
alias GL_TEXTURE_COORD_ARRAY_TYPE = 0x8089u32;
alias GL_TEXTURE_CUBE_MAP = 0x8513u32;
alias GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516u32;
alias GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518u32;
alias GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851au32;
alias GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515u32;
alias GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517u32;
alias GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519u32;
alias GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884fu32;
alias GL_TEXTURE_DEPTH = 0x8071u32;
alias GL_TEXTURE_DEPTH_SIZE = 0x884au32;
alias GL_TEXTURE_DEPTH_TYPE = 0x8c16u32;
alias GL_TEXTURE_ENV = 0x2300u32;
alias GL_TEXTURE_ENV_COLOR = 0x2201u32;
alias GL_TEXTURE_ENV_MODE = 0x2200u32;
alias GL_TEXTURE_FILTER_CONTROL = 0x8500u32;
alias GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107u32;
alias GL_TEXTURE_GEN_MODE = 0x2500u32;
alias GL_TEXTURE_GEN_Q = 0xc63u32;
alias GL_TEXTURE_GEN_R = 0xc62u32;
alias GL_TEXTURE_GEN_S = 0xc60u32;
alias GL_TEXTURE_GEN_T = 0xc61u32;
alias GL_TEXTURE_GREEN_SIZE = 0x805du32;
alias GL_TEXTURE_GREEN_TYPE = 0x8c11u32;
alias GL_TEXTURE_HEIGHT = 0x1001u32;
alias GL_TEXTURE_INTENSITY_SIZE = 0x8061u32;
alias GL_TEXTURE_INTENSITY_TYPE_ARB = 0x8c15u32;
alias GL_TEXTURE_INTERNAL_FORMAT = 0x1003u32;
alias GL_TEXTURE_LOD_BIAS = 0x8501u32;
alias GL_TEXTURE_LUMINANCE_SIZE = 0x8060u32;
alias GL_TEXTURE_LUMINANCE_TYPE_ARB = 0x8c14u32;
alias GL_TEXTURE_MAG_FILTER = 0x2800u32;
alias GL_TEXTURE_MATRIX = 0xba8u32;
alias GL_TEXTURE_MAX_LEVEL = 0x813du32;
alias GL_TEXTURE_MAX_LOD = 0x813bu32;
alias GL_TEXTURE_MIN_FILTER = 0x2801u32;
alias GL_TEXTURE_MIN_LOD = 0x813au32;
alias GL_TEXTURE_PRIORITY = 0x8066u32;
alias GL_TEXTURE_RECTANGLE = 0x84f5u32;
alias GL_TEXTURE_RED_SIZE = 0x805cu32;
alias GL_TEXTURE_RED_TYPE = 0x8c10u32;
alias GL_TEXTURE_RESIDENT = 0x8067u32;
alias GL_TEXTURE_SAMPLES = 0x9106u32;
alias GL_TEXTURE_SHARED_SIZE = 0x8c3fu32;
alias GL_TEXTURE_STACK_DEPTH = 0xba5u32;
alias GL_TEXTURE_STENCIL_SIZE = 0x88f1u32;
alias GL_TEXTURE_SWIZZLE_A = 0x8e45u32;
alias GL_TEXTURE_SWIZZLE_B = 0x8e44u32;
alias GL_TEXTURE_SWIZZLE_G = 0x8e43u32;
alias GL_TEXTURE_SWIZZLE_R = 0x8e42u32;
alias GL_TEXTURE_SWIZZLE_RGBA = 0x8e46u32;
alias GL_TEXTURE_WIDTH = 0x1000u32;
alias GL_TEXTURE_WRAP_R = 0x8072u32;
alias GL_TEXTURE_WRAP_S = 0x2802u32;
alias GL_TEXTURE_WRAP_T = 0x2803u32;
alias GL_TIMEOUT_EXPIRED = 0x911bu32;
alias GL_TIMEOUT_IGNORED = 0xffffffffffffffffu32;
alias GL_TIMESTAMP = 0x8e28u32;
alias GL_TIME_ELAPSED = 0x88bfu32;
alias GL_TRANSFORM_BIT = 0x1000u32;
alias GL_TRANSFORM_FEEDBACK = 0x8e22u32;
alias GL_TRANSFORM_FEEDBACK_BINDING = 0x8e25u32;
alias GL_TRANSFORM_FEEDBACK_BUFFER = 0x8c8eu32;
alias GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8e24u32;
alias GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8fu32;
alias GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7fu32;
alias GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8e23u32;
alias GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85u32;
alias GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84u32;
alias GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88u32;
alias GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8c83u32;
alias GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8c76u32;
alias GL_TRANSPOSE_COLOR_MATRIX = 0x84e6u32;
alias GL_TRANSPOSE_MODELVIEW_MATRIX = 0x84e3u32;
alias GL_TRANSPOSE_PROJECTION_MATRIX = 0x84e4u32;
alias GL_TRANSPOSE_TEXTURE_MATRIX = 0x84e5u32;
alias GL_TRIANGLES = 0x4u32;
alias GL_TRIANGLES_ADJACENCY = 0xcu32;
alias GL_TRIANGLE_FAN = 0x6u32;
alias GL_TRIANGLE_STRIP = 0x5u32;
alias GL_TRIANGLE_STRIP_ADJACENCY = 0xdu32;
alias GL_TRUE = 0x1u32;
alias GL_UNIFORM_ARRAY_STRIDE = 0x8a3cu32;
alias GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42u32;
alias GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43u32;
alias GL_UNIFORM_BLOCK_BINDING = 0x8a3fu32;
alias GL_UNIFORM_BLOCK_DATA_SIZE = 0x8a40u32;
alias GL_UNIFORM_BLOCK_INDEX = 0x8a3au32;
alias GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8a41u32;
alias GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46u32;
alias GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER = 0x8a45u32;
alias GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84f0u32;
alias GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84f1u32;
alias GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44u32;
alias GL_UNIFORM_BUFFER = 0x8a11u32;
alias GL_UNIFORM_BUFFER_BINDING = 0x8a28u32;
alias GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34u32;
alias GL_UNIFORM_BUFFER_SIZE = 0x8a2au32;
alias GL_UNIFORM_BUFFER_START = 0x8a29u32;
alias GL_UNIFORM_IS_ROW_MAJOR = 0x8a3eu32;
alias GL_UNIFORM_MATRIX_STRIDE = 0x8a3du32;
alias GL_UNIFORM_NAME_LENGTH = 0x8a39u32;
alias GL_UNIFORM_OFFSET = 0x8a3bu32;
alias GL_UNIFORM_SIZE = 0x8a38u32;
alias GL_UNIFORM_TYPE = 0x8a37u32;
alias GL_UNPACK_ALIGNMENT = 0xcf5u32;
alias GL_UNPACK_IMAGE_HEIGHT = 0x806eu32;
alias GL_UNPACK_LSB_FIRST = 0xcf1u32;
alias GL_UNPACK_ROW_LENGTH = 0xcf2u32;
alias GL_UNPACK_SKIP_IMAGES = 0x806du32;
alias GL_UNPACK_SKIP_PIXELS = 0xcf4u32;
alias GL_UNPACK_SKIP_ROWS = 0xcf3u32;
alias GL_UNPACK_SWAP_BYTES = 0xcf0u32;
alias GL_UNSIGNALED = 0x9118u32;
alias GL_UNSIGNED_BYTE = 0x1401u32;
alias GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362u32;
alias GL_UNSIGNED_BYTE_3_3_2 = 0x8032u32;
alias GL_UNSIGNED_INT = 0x1405u32;
alias GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8c3bu32;
alias GL_UNSIGNED_INT_10_10_10_2 = 0x8036u32;
alias GL_UNSIGNED_INT_24_8 = 0x84fau32;
alias GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368u32;
alias GL_UNSIGNED_INT_5_9_9_9_REV = 0x8c3eu32;
alias GL_UNSIGNED_INT_8_8_8_8 = 0x8035u32;
alias GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367u32;
alias GL_UNSIGNED_INT_SAMPLER_1D = 0x8dd1u32;
alias GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8dd6u32;
alias GL_UNSIGNED_INT_SAMPLER_2D = 0x8dd2u32;
alias GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7u32;
alias GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910au32;
alias GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910du32;
alias GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8dd5u32;
alias GL_UNSIGNED_INT_SAMPLER_3D = 0x8dd3u32;
alias GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8dd8u32;
alias GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4u32;
alias GL_UNSIGNED_INT_VEC2 = 0x8dc6u32;
alias GL_UNSIGNED_INT_VEC3 = 0x8dc7u32;
alias GL_UNSIGNED_INT_VEC4 = 0x8dc8u32;
alias GL_UNSIGNED_NORMALIZED = 0x8c17u32;
alias GL_UNSIGNED_SHORT = 0x1403u32;
alias GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366u32;
alias GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033u32;
alias GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365u32;
alias GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034u32;
alias GL_UNSIGNED_SHORT_5_6_5 = 0x8363u32;
alias GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364u32;
alias GL_UPPER_LEFT = 0x8ca2u32;
alias GL_V2F = 0x2a20u32;
alias GL_V3F = 0x2a21u32;
alias GL_VALIDATE_STATUS = 0x8b83u32;
alias GL_VENDOR = 0x1f00u32;
alias GL_VERSION = 0x1f02u32;
alias GL_VERTEX_ARRAY = 0x8074u32;
alias GL_VERTEX_ARRAY_BINDING = 0x85b5u32;
alias GL_VERTEX_ARRAY_BUFFER_BINDING = 0x8896u32;
alias GL_VERTEX_ARRAY_POINTER = 0x808eu32;
alias GL_VERTEX_ARRAY_SIZE = 0x807au32;
alias GL_VERTEX_ARRAY_STRIDE = 0x807cu32;
alias GL_VERTEX_ARRAY_TYPE = 0x807bu32;
alias GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889fu32;
alias GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622u32;
alias GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fdu32;
alias GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886au32;
alias GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645u32;
alias GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623u32;
alias GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624u32;
alias GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625u32;
alias GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642u32;
alias GL_VERTEX_PROGRAM_TWO_SIDE = 0x8643u32;
alias GL_VERTEX_SHADER = 0x8b31u32;
alias GL_VIEWPORT = 0xba2u32;
alias GL_VIEWPORT_BIT = 0x800u32;
alias GL_WAIT_FAILED = 0x911du32;
alias GL_WEIGHT_ARRAY_BUFFER_BINDING = 0x889eu32;
alias GL_WRITE_ONLY = 0x88b9u32;
alias GL_XOR = 0x1506u32;
alias GL_ZERO = 0x0u32;
alias GL_ZOOM_X = 0xd16u32;
alias GL_ZOOM_Y = 0xd17u32;

