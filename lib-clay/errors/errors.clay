



//
// error (exceptions disabled)
//

errorNoThrow(...e) {
    printlnTo(stderr, "error: ", ...e);
}

[ | not ExceptionsEnabled?]
error(...e) {
    errorNoThrow(...e);
}



//
// error (exceptions enabled)
//

record Error {
    msg : String;
}

instance Exception = Error;

[ | ExceptionsEnabled?]
overload error(...e) {
    var buf = String();
    printTo(buf, ...e);
    throw Error(move(buf));
}



//
// assert
//

macro assert(cond:Bool) {
    if (not cond)
        error("assertion failed");
}

macro overload assert(cond:Bool, message) {
    if (not cond)
        error("assertion failed: ", message);
}
