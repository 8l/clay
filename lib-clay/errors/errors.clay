import libc.(abort);



//
// error (exceptions disabled)
//

errorNoThrow(..e) {
    printlnTo(stderr, "error: ", ..e);
    flush(stderr);
    abort();
}

[ | not ExceptionsEnabled?]
error(..e) {
    errorNoThrow(..e);
}



//
// error (exceptions enabled)
//

record Error (msg : String);

instance Exception (Error);

[ | ExceptionsEnabled?]
overload error(..e) {
    var buf = String();
    printTo(buf, ..e);
    throw Error(move(buf));
}



//
// assert
//

alias assert(cond:Bool, ..message) {
    if (not cond)
        errorNoThrow(StaticName(__FILE__), "(", __LINE__, ",", __COLUMN__, "): assertion ", __ARG__ cond, " failed: ", ..message);
}

alias overload assert(cond:Bool) {
    if (not cond)
        errorNoThrow(StaticName(__FILE__), "(", __LINE__, ",", __COLUMN__, "): assertion ", __ARG__ cond, " failed");
}
