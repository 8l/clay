// Auto-Generated by BindingsGenerator

import types.*;
import operators.*;
import numbers.*;
import pointers.*;

private static OpaquePointer = RawPointer;
private static UnknownType = Int;
private static AUnionType = Int;


static __u_char = CUChar;

static __u_short = UShort;

static __u_int = UInt;

static __u_long = CULong;

static __int8_t = CChar;

static __uint8_t = CUChar;

static __int16_t = Short;

static __uint16_t = UShort;

static __int32_t = Int;

static __uint32_t = UInt;

static __int64_t = Int64;

static __uint64_t = UInt64;

static __quad_t = Int64;

static __u_quad_t = UInt64;

static __dev_t = UInt64;

static __uid_t = UInt;

static __gid_t = UInt;

static __ino_t = CULong;

static __ino64_t = UInt64;

static __mode_t = UInt;

static __nlink_t = UInt;

static __off_t = CLong;

static __off64_t = Int64;

static __pid_t = Int;

record UnnamedStruct {
    __val : Array[Int,2];
}

static __fsid_t = UnnamedStruct;

static __clock_t = CLong;

static __rlim_t = CULong;

static __rlim64_t = UInt64;

static __id_t = UInt;

static __time_t = CLong;

static __useconds_t = UInt;

static __suseconds_t = CLong;

static __daddr_t = Int;

static __swblk_t = CLong;

static __key_t = Int;

static __clockid_t = Int;

static __timer_t = RawPointer;

static __blksize_t = CLong;

static __blkcnt_t = CLong;

static __blkcnt64_t = Int64;

static __fsblkcnt_t = CULong;

static __fsblkcnt64_t = UInt64;

static __fsfilcnt_t = CULong;

static __fsfilcnt64_t = UInt64;

static __ssize_t = Int;

static __loff_t = Int64;

static __qaddr_t = Pointer[Int64];

static __caddr_t = Pointer[CChar];

static __intptr_t = Int;

static __socklen_t = UInt;

static ssize_t = Int;

static size_t = UInt;

static gid_t = UInt;

static uid_t = UInt;

static off_t = Int64;

static useconds_t = UInt;

static pid_t = Int;

static intptr_t = Int;

static socklen_t = UInt;

external access(
    __name : Pointer[CChar],
    __type : Int) : Int;

external faccessat(
    __fd : Int,
    __file : Pointer[CChar],
    __type : Int,
    __flag : Int) : Int;

external ("lseek64") lseek(
    __fd : Int,
    __offset : Int64,
    __whence : Int) : Int64;

external close(
    __fd : Int) : Int;

external read(
    __fd : Int,
    __buf : RawPointer,
    __nbytes : UInt) : Int;

external write(
    __fd : Int,
    __buf : RawPointer,
    __n : UInt) : Int;

external pipe(
    __pipedes : Pointer[Int]) : Int;

external alarm(
    __seconds : UInt) : UInt;

external sleep(
    __seconds : UInt) : UInt;

external ualarm(
    __value : UInt,
    __interval : UInt) : UInt;

external usleep(
    __useconds : UInt) : Int;

external pause() : Int;

external chown(
    __file : Pointer[CChar],
    __owner : UInt,
    __group : UInt) : Int;

external fchown(
    __fd : Int,
    __owner : UInt,
    __group : UInt) : Int;

external lchown(
    __file : Pointer[CChar],
    __owner : UInt,
    __group : UInt) : Int;

external fchownat(
    __fd : Int,
    __file : Pointer[CChar],
    __owner : UInt,
    __group : UInt,
    __flag : Int) : Int;

external chdir(
    __path : Pointer[CChar]) : Int;

external fchdir(
    __fd : Int) : Int;

external getcwd(
    __buf : Pointer[CChar],
    __size : UInt) : Pointer[CChar];

external getwd(
    __buf : Pointer[CChar]) : Pointer[CChar];

external dup(
    __fd : Int) : Int;

external dup2(
    __fd : Int,
    __fd2 : Int) : Int;

external __environ : Pointer[Pointer[CChar]];

external execve(
    __path : Pointer[CChar],
    __argv : Pointer[Pointer[CChar]],
    __envp : Pointer[Pointer[CChar]]) : Int;

external fexecve(
    __fd : Int,
    __argv : Pointer[Pointer[CChar]],
    __envp : Pointer[Pointer[CChar]]) : Int;

external execv(
    __path : Pointer[CChar],
    __argv : Pointer[Pointer[CChar]]) : Int;

external execle(
    __path : Pointer[CChar],
    __arg : Pointer[CChar],
    ...) : Int;

external execl(
    __path : Pointer[CChar],
    __arg : Pointer[CChar],
    ...) : Int;

external execvp(
    __file : Pointer[CChar],
    __argv : Pointer[Pointer[CChar]]) : Int;

external execlp(
    __file : Pointer[CChar],
    __arg : Pointer[CChar],
    ...) : Int;

external nice(
    __inc : Int) : Int;

external _exit(
    __status : Int) : Void;

static _PC_LINK_MAX = 0;
static _PC_MAX_CANON = 1;
static _PC_MAX_INPUT = 2;
static _PC_NAME_MAX = 3;
static _PC_PATH_MAX = 4;
static _PC_PIPE_BUF = 5;
static _PC_CHOWN_RESTRICTED = 6;
static _PC_NO_TRUNC = 7;
static _PC_VDISABLE = 8;
static _PC_SYNC_IO = 9;
static _PC_ASYNC_IO = 10;
static _PC_PRIO_IO = 11;
static _PC_SOCK_MAXBUF = 12;
static _PC_FILESIZEBITS = 13;
static _PC_REC_INCR_XFER_SIZE = 14;
static _PC_REC_MAX_XFER_SIZE = 15;
static _PC_REC_MIN_XFER_SIZE = 16;
static _PC_REC_XFER_ALIGN = 17;
static _PC_ALLOC_SIZE_MIN = 18;
static _PC_SYMLINK_MAX = 19;
static _PC_2_SYMLINKS = 20;

static _SC_ARG_MAX = 0;
static _SC_CHILD_MAX = 1;
static _SC_CLK_TCK = 2;
static _SC_NGROUPS_MAX = 3;
static _SC_OPEN_MAX = 4;
static _SC_STREAM_MAX = 5;
static _SC_TZNAME_MAX = 6;
static _SC_JOB_CONTROL = 7;
static _SC_SAVED_IDS = 8;
static _SC_REALTIME_SIGNALS = 9;
static _SC_PRIORITY_SCHEDULING = 10;
static _SC_TIMERS = 11;
static _SC_ASYNCHRONOUS_IO = 12;
static _SC_PRIORITIZED_IO = 13;
static _SC_SYNCHRONIZED_IO = 14;
static _SC_FSYNC = 15;
static _SC_MAPPED_FILES = 16;
static _SC_MEMLOCK = 17;
static _SC_MEMLOCK_RANGE = 18;
static _SC_MEMORY_PROTECTION = 19;
static _SC_MESSAGE_PASSING = 20;
static _SC_SEMAPHORES = 21;
static _SC_SHARED_MEMORY_OBJECTS = 22;
static _SC_AIO_LISTIO_MAX = 23;
static _SC_AIO_MAX = 24;
static _SC_AIO_PRIO_DELTA_MAX = 25;
static _SC_DELAYTIMER_MAX = 26;
static _SC_MQ_OPEN_MAX = 27;
static _SC_MQ_PRIO_MAX = 28;
static _SC_VERSION = 29;
static _SC_PAGESIZE = 30;
static _SC_RTSIG_MAX = 31;
static _SC_SEM_NSEMS_MAX = 32;
static _SC_SEM_VALUE_MAX = 33;
static _SC_SIGQUEUE_MAX = 34;
static _SC_TIMER_MAX = 35;
static _SC_BC_BASE_MAX = 36;
static _SC_BC_DIM_MAX = 37;
static _SC_BC_SCALE_MAX = 38;
static _SC_BC_STRING_MAX = 39;
static _SC_COLL_WEIGHTS_MAX = 40;
static _SC_EQUIV_CLASS_MAX = 41;
static _SC_EXPR_NEST_MAX = 42;
static _SC_LINE_MAX = 43;
static _SC_RE_DUP_MAX = 44;
static _SC_CHARCLASS_NAME_MAX = 45;
static _SC_2_VERSION = 46;
static _SC_2_C_BIND = 47;
static _SC_2_C_DEV = 48;
static _SC_2_FORT_DEV = 49;
static _SC_2_FORT_RUN = 50;
static _SC_2_SW_DEV = 51;
static _SC_2_LOCALEDEF = 52;
static _SC_PII = 53;
static _SC_PII_XTI = 54;
static _SC_PII_SOCKET = 55;
static _SC_PII_INTERNET = 56;
static _SC_PII_OSI = 57;
static _SC_POLL = 58;
static _SC_SELECT = 59;
static _SC_UIO_MAXIOV = 60;
static _SC_IOV_MAX = 60;
static _SC_PII_INTERNET_STREAM = 61;
static _SC_PII_INTERNET_DGRAM = 62;
static _SC_PII_OSI_COTS = 63;
static _SC_PII_OSI_CLTS = 64;
static _SC_PII_OSI_M = 65;
static _SC_T_IOV_MAX = 66;
static _SC_THREADS = 67;
static _SC_THREAD_SAFE_FUNCTIONS = 68;
static _SC_GETGR_R_SIZE_MAX = 69;
static _SC_GETPW_R_SIZE_MAX = 70;
static _SC_LOGIN_NAME_MAX = 71;
static _SC_TTY_NAME_MAX = 72;
static _SC_THREAD_DESTRUCTOR_ITERATIONS = 73;
static _SC_THREAD_KEYS_MAX = 74;
static _SC_THREAD_STACK_MIN = 75;
static _SC_THREAD_THREADS_MAX = 76;
static _SC_THREAD_ATTR_STACKADDR = 77;
static _SC_THREAD_ATTR_STACKSIZE = 78;
static _SC_THREAD_PRIORITY_SCHEDULING = 79;
static _SC_THREAD_PRIO_INHERIT = 80;
static _SC_THREAD_PRIO_PROTECT = 81;
static _SC_THREAD_PROCESS_SHARED = 82;
static _SC_NPROCESSORS_CONF = 83;
static _SC_NPROCESSORS_ONLN = 84;
static _SC_PHYS_PAGES = 85;
static _SC_AVPHYS_PAGES = 86;
static _SC_ATEXIT_MAX = 87;
static _SC_PASS_MAX = 88;
static _SC_XOPEN_VERSION = 89;
static _SC_XOPEN_XCU_VERSION = 90;
static _SC_XOPEN_UNIX = 91;
static _SC_XOPEN_CRYPT = 92;
static _SC_XOPEN_ENH_I18N = 93;
static _SC_XOPEN_SHM = 94;
static _SC_2_CHAR_TERM = 95;
static _SC_2_C_VERSION = 96;
static _SC_2_UPE = 97;
static _SC_XOPEN_XPG2 = 98;
static _SC_XOPEN_XPG3 = 99;
static _SC_XOPEN_XPG4 = 100;
static _SC_CHAR_BIT = 101;
static _SC_CHAR_MAX = 102;
static _SC_CHAR_MIN = 103;
static _SC_INT_MAX = 104;
static _SC_INT_MIN = 105;
static _SC_LONG_BIT = 106;
static _SC_WORD_BIT = 107;
static _SC_MB_LEN_MAX = 108;
static _SC_NZERO = 109;
static _SC_SSIZE_MAX = 110;
static _SC_SCHAR_MAX = 111;
static _SC_SCHAR_MIN = 112;
static _SC_SHRT_MAX = 113;
static _SC_SHRT_MIN = 114;
static _SC_UCHAR_MAX = 115;
static _SC_UINT_MAX = 116;
static _SC_ULONG_MAX = 117;
static _SC_USHRT_MAX = 118;
static _SC_NL_ARGMAX = 119;
static _SC_NL_LANGMAX = 120;
static _SC_NL_MSGMAX = 121;
static _SC_NL_NMAX = 122;
static _SC_NL_SETMAX = 123;
static _SC_NL_TEXTMAX = 124;
static _SC_XBS5_ILP32_OFF32 = 125;
static _SC_XBS5_ILP32_OFFBIG = 126;
static _SC_XBS5_LP64_OFF64 = 127;
static _SC_XBS5_LPBIG_OFFBIG = 128;
static _SC_XOPEN_LEGACY = 129;
static _SC_XOPEN_REALTIME = 130;
static _SC_XOPEN_REALTIME_THREADS = 131;
static _SC_ADVISORY_INFO = 132;
static _SC_BARRIERS = 133;
static _SC_BASE = 134;
static _SC_C_LANG_SUPPORT = 135;
static _SC_C_LANG_SUPPORT_R = 136;
static _SC_CLOCK_SELECTION = 137;
static _SC_CPUTIME = 138;
static _SC_THREAD_CPUTIME = 139;
static _SC_DEVICE_IO = 140;
static _SC_DEVICE_SPECIFIC = 141;
static _SC_DEVICE_SPECIFIC_R = 142;
static _SC_FD_MGMT = 143;
static _SC_FIFO = 144;
static _SC_PIPE = 145;
static _SC_FILE_ATTRIBUTES = 146;
static _SC_FILE_LOCKING = 147;
static _SC_FILE_SYSTEM = 148;
static _SC_MONOTONIC_CLOCK = 149;
static _SC_MULTI_PROCESS = 150;
static _SC_SINGLE_PROCESS = 151;
static _SC_NETWORKING = 152;
static _SC_READER_WRITER_LOCKS = 153;
static _SC_SPIN_LOCKS = 154;
static _SC_REGEXP = 155;
static _SC_REGEX_VERSION = 156;
static _SC_SHELL = 157;
static _SC_SIGNALS = 158;
static _SC_SPAWN = 159;
static _SC_SPORADIC_SERVER = 160;
static _SC_THREAD_SPORADIC_SERVER = 161;
static _SC_SYSTEM_DATABASE = 162;
static _SC_SYSTEM_DATABASE_R = 163;
static _SC_TIMEOUTS = 164;
static _SC_TYPED_MEMORY_OBJECTS = 165;
static _SC_USER_GROUPS = 166;
static _SC_USER_GROUPS_R = 167;
static _SC_2_PBS = 168;
static _SC_2_PBS_ACCOUNTING = 169;
static _SC_2_PBS_LOCATE = 170;
static _SC_2_PBS_MESSAGE = 171;
static _SC_2_PBS_TRACK = 172;
static _SC_SYMLOOP_MAX = 173;
static _SC_STREAMS = 174;
static _SC_2_PBS_CHECKPOINT = 175;
static _SC_V6_ILP32_OFF32 = 176;
static _SC_V6_ILP32_OFFBIG = 177;
static _SC_V6_LP64_OFF64 = 178;
static _SC_V6_LPBIG_OFFBIG = 179;
static _SC_HOST_NAME_MAX = 180;
static _SC_TRACE = 181;
static _SC_TRACE_EVENT_FILTER = 182;
static _SC_TRACE_INHERIT = 183;
static _SC_TRACE_LOG = 184;
static _SC_LEVEL1_ICACHE_SIZE = 185;
static _SC_LEVEL1_ICACHE_ASSOC = 186;
static _SC_LEVEL1_ICACHE_LINESIZE = 187;
static _SC_LEVEL1_DCACHE_SIZE = 188;
static _SC_LEVEL1_DCACHE_ASSOC = 189;
static _SC_LEVEL1_DCACHE_LINESIZE = 190;
static _SC_LEVEL2_CACHE_SIZE = 191;
static _SC_LEVEL2_CACHE_ASSOC = 192;
static _SC_LEVEL2_CACHE_LINESIZE = 193;
static _SC_LEVEL3_CACHE_SIZE = 194;
static _SC_LEVEL3_CACHE_ASSOC = 195;
static _SC_LEVEL3_CACHE_LINESIZE = 196;
static _SC_LEVEL4_CACHE_SIZE = 197;
static _SC_LEVEL4_CACHE_ASSOC = 198;
static _SC_LEVEL4_CACHE_LINESIZE = 199;
static _SC_IPV6 = 235;
static _SC_RAW_SOCKETS = 236;
static _SC_V7_ILP32_OFF32 = 237;
static _SC_V7_ILP32_OFFBIG = 238;
static _SC_V7_LP64_OFF64 = 239;
static _SC_V7_LPBIG_OFFBIG = 240;
static _SC_SS_REPL_MAX = 241;
static _SC_TRACE_EVENT_NAME_MAX = 242;
static _SC_TRACE_NAME_MAX = 243;
static _SC_TRACE_SYS_MAX = 244;
static _SC_TRACE_USER_EVENT_MAX = 245;
static _SC_XOPEN_STREAMS = 246;
static _SC_THREAD_ROBUST_PRIO_INHERIT = 247;
static _SC_THREAD_ROBUST_PRIO_PROTECT = 248;

static _CS_PATH = 0;
static _CS_V6_WIDTH_RESTRICTED_ENVS = 1;
static _CS_GNU_LIBC_VERSION = 2;
static _CS_GNU_LIBPTHREAD_VERSION = 3;
static _CS_V5_WIDTH_RESTRICTED_ENVS = 4;
static _CS_V7_WIDTH_RESTRICTED_ENVS = 5;
static _CS_LFS_CFLAGS = 1000;
static _CS_LFS_LDFLAGS = 1001;
static _CS_LFS_LIBS = 1002;
static _CS_LFS_LINTFLAGS = 1003;
static _CS_LFS64_CFLAGS = 1004;
static _CS_LFS64_LDFLAGS = 1005;
static _CS_LFS64_LIBS = 1006;
static _CS_LFS64_LINTFLAGS = 1007;
static _CS_XBS5_ILP32_OFF32_CFLAGS = 1100;
static _CS_XBS5_ILP32_OFF32_LDFLAGS = 1101;
static _CS_XBS5_ILP32_OFF32_LIBS = 1102;
static _CS_XBS5_ILP32_OFF32_LINTFLAGS = 1103;
static _CS_XBS5_ILP32_OFFBIG_CFLAGS = 1104;
static _CS_XBS5_ILP32_OFFBIG_LDFLAGS = 1105;
static _CS_XBS5_ILP32_OFFBIG_LIBS = 1106;
static _CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 1107;
static _CS_XBS5_LP64_OFF64_CFLAGS = 1108;
static _CS_XBS5_LP64_OFF64_LDFLAGS = 1109;
static _CS_XBS5_LP64_OFF64_LIBS = 1110;
static _CS_XBS5_LP64_OFF64_LINTFLAGS = 1111;
static _CS_XBS5_LPBIG_OFFBIG_CFLAGS = 1112;
static _CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 1113;
static _CS_XBS5_LPBIG_OFFBIG_LIBS = 1114;
static _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 1115;
static _CS_POSIX_V6_ILP32_OFF32_CFLAGS = 1116;
static _CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 1117;
static _CS_POSIX_V6_ILP32_OFF32_LIBS = 1118;
static _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS = 1119;
static _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 1120;
static _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 1121;
static _CS_POSIX_V6_ILP32_OFFBIG_LIBS = 1122;
static _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS = 1123;
static _CS_POSIX_V6_LP64_OFF64_CFLAGS = 1124;
static _CS_POSIX_V6_LP64_OFF64_LDFLAGS = 1125;
static _CS_POSIX_V6_LP64_OFF64_LIBS = 1126;
static _CS_POSIX_V6_LP64_OFF64_LINTFLAGS = 1127;
static _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 1128;
static _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 1129;
static _CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 1130;
static _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS = 1131;
static _CS_POSIX_V7_ILP32_OFF32_CFLAGS = 1132;
static _CS_POSIX_V7_ILP32_OFF32_LDFLAGS = 1133;
static _CS_POSIX_V7_ILP32_OFF32_LIBS = 1134;
static _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS = 1135;
static _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS = 1136;
static _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS = 1137;
static _CS_POSIX_V7_ILP32_OFFBIG_LIBS = 1138;
static _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS = 1139;
static _CS_POSIX_V7_LP64_OFF64_CFLAGS = 1140;
static _CS_POSIX_V7_LP64_OFF64_LDFLAGS = 1141;
static _CS_POSIX_V7_LP64_OFF64_LIBS = 1142;
static _CS_POSIX_V7_LP64_OFF64_LINTFLAGS = 1143;
static _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS = 1144;
static _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS = 1145;
static _CS_POSIX_V7_LPBIG_OFFBIG_LIBS = 1146;
static _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS = 1147;

external pathconf(
    __path : Pointer[CChar],
    __name : Int) : CLong;

external fpathconf(
    __fd : Int,
    __name : Int) : CLong;

external sysconf(
    __name : Int) : CLong;

external confstr(
    __name : Int,
    __buf : Pointer[CChar],
    __len : UInt) : UInt;

external getpid() : Int;

external getppid() : Int;

external getpgrp() : Int;

external __getpgid(
    __pid : Int) : Int;

external setpgid(
    __pid : Int,
    __pgid : Int) : Int;

external setpgrp() : Int;

external setsid() : Int;

external getuid() : UInt;

external geteuid() : UInt;

external getgid() : UInt;

external getegid() : UInt;

external getgroups(
    __size : Int,
    __list : Pointer[UInt]) : Int;

external setuid(
    __uid : UInt) : Int;

external setreuid(
    __ruid : UInt,
    __euid : UInt) : Int;

external seteuid(
    __uid : UInt) : Int;

external setgid(
    __gid : UInt) : Int;

external setregid(
    __rgid : UInt,
    __egid : UInt) : Int;

external setegid(
    __gid : UInt) : Int;

external fork() : Int;

external vfork() : Int;

external ttyname(
    __fd : Int) : Pointer[CChar];

external ttyname_r(
    __fd : Int,
    __buf : Pointer[CChar],
    __buflen : UInt) : Int;

external isatty(
    __fd : Int) : Int;

external ttyslot() : Int;

external link(
    __from : Pointer[CChar],
    __to : Pointer[CChar]) : Int;

external linkat(
    __fromfd : Int,
    __from : Pointer[CChar],
    __tofd : Int,
    __to : Pointer[CChar],
    __flags : Int) : Int;

external symlink(
    __from : Pointer[CChar],
    __to : Pointer[CChar]) : Int;

external readlink(
    __path : Pointer[CChar],
    __buf : Pointer[CChar],
    __len : UInt) : Int;

external symlinkat(
    __from : Pointer[CChar],
    __tofd : Int,
    __to : Pointer[CChar]) : Int;

external readlinkat(
    __fd : Int,
    __path : Pointer[CChar],
    __buf : Pointer[CChar],
    __len : UInt) : Int;

external unlink(
    __name : Pointer[CChar]) : Int;

external unlinkat(
    __fd : Int,
    __name : Pointer[CChar],
    __flag : Int) : Int;

external rmdir(
    __path : Pointer[CChar]) : Int;

external tcgetpgrp(
    __fd : Int) : Int;

external tcsetpgrp(
    __fd : Int,
    __pgrp_id : Int) : Int;

external getlogin() : Pointer[CChar];

external getlogin_r(
    __name : Pointer[CChar],
    __name_len : UInt) : Int;

external setlogin(
    __name : Pointer[CChar]) : Int;

external optarg : Pointer[CChar];

external optind : Int;

external opterr : Int;

external optopt : Int;

external getopt(
    ___argc : Int,
    ___argv : Pointer[Pointer[CChar]],
    __shortopts : Pointer[CChar]) : Int;

external gethostname(
    __name : Pointer[CChar],
    __len : UInt) : Int;

external sethostname(
    __name : Pointer[CChar],
    __len : UInt) : Int;

external sethostid(
    __id : CLong) : Int;

external getdomainname(
    __name : Pointer[CChar],
    __len : UInt) : Int;

external setdomainname(
    __name : Pointer[CChar],
    __len : UInt) : Int;

external vhangup() : Int;

external revoke(
    __file : Pointer[CChar]) : Int;

external profil(
    __sample_buffer : Pointer[UShort],
    __size : UInt,
    __offset : UInt,
    __scale : UInt) : Int;

external acct(
    __name : Pointer[CChar]) : Int;

external getusershell() : Pointer[CChar];

external endusershell() : Void;

external setusershell() : Void;

external daemon(
    __nochdir : Int,
    __noclose : Int) : Int;

external chroot(
    __path : Pointer[CChar]) : Int;

external getpass(
    __prompt : Pointer[CChar]) : Pointer[CChar];

external fsync(
    __fd : Int) : Int;

external gethostid() : CLong;

external sync() : Void;

external getpagesize() : Int;

external getdtablesize() : Int;

external ("truncate64") truncate(
    __file : Pointer[CChar],
    __length : Int64) : Int;

external ("ftruncate64") ftruncate(
    __fd : Int,
    __length : Int64) : Int;

external brk(
    __addr : RawPointer) : Int;

external sbrk(
    __delta : Int) : RawPointer;

external syscall(
    __sysno : CLong,
    ...) : CLong;

external ("lockf64") lockf(
    __fd : Int,
    __cmd : Int,
    __len : Int64) : Int;

external fdatasync(
    __fildes : Int) : Int;

external __errno_location() : Pointer[Int];

record Struct_timespec {
    tv_sec : CLong;
    tv_nsec : CLong;
}

record Struct_sched_param {
    __sched_priority : Int;
}

external clone(
    __fn : CCodePointer[RawPointer,Int],
    __child_stack : RawPointer,
    __flags : Int,
    __arg : RawPointer,
    ...) : Int;

external unshare(
    __flags : Int) : Int;

external sched_getcpu() : Int;

record Struct___sched_param {
    __sched_priority : Int;
}

static __cpu_mask = CULong;

record UnnamedStruct2 {
    __bits : Array[CULong,32];
}

static cpu_set_t = UnnamedStruct2;

external __sched_cpucount(
    __setsize : UInt,
    __setp : Pointer[cpu_set_t]) : Int;

external __sched_cpualloc(
    __count : UInt) : Pointer[cpu_set_t];

external __sched_cpufree(
    __set : Pointer[cpu_set_t]) : Void;

external sched_setparam(
    __pid : Int,
    __param : Pointer[Struct_sched_param]) : Int;

external sched_getparam(
    __pid : Int,
    __param : Pointer[Struct_sched_param]) : Int;

external sched_setscheduler(
    __pid : Int,
    __policy : Int,
    __param : Pointer[Struct_sched_param]) : Int;

external sched_getscheduler(
    __pid : Int) : Int;

external sched_yield() : Int;

external sched_get_priority_max(
    __algorithm : Int) : Int;

external sched_get_priority_min(
    __algorithm : Int) : Int;

external sched_rr_get_interval(
    __pid : Int,
    __t : Pointer[Struct_timespec]) : Int;

static clock_t = CLong;

static time_t = CLong;

static clockid_t = Int;

static timer_t = __timer_t;

record Struct_tm {
    tm_sec : Int;
    tm_min : Int;
    tm_hour : Int;
    tm_mday : Int;
    tm_mon : Int;
    tm_year : Int;
    tm_wday : Int;
    tm_yday : Int;
    tm_isdst : Int;
    tm_gmtoff : CLong;
    tm_zone : Pointer[CChar];
}

record Struct_itimerspec {
    it_interval : Struct_timespec;
    it_value : Struct_timespec;
}

external clock() : CLong;

external time(
    __timer : Pointer[CLong]) : CLong;

external difftime(
    __time1 : CLong,
    __time0 : CLong) : Double;

external mktime(
    __tp : Pointer[Struct_tm]) : CLong;

external strftime(
    __s : Pointer[CChar],
    __maxsize : UInt,
    __format : Pointer[CChar],
    __tp : Pointer[Struct_tm]) : UInt;

record Struct___locale_struct {
    __locales : Array[OpaquePointer,13];
    __ctype_b : Pointer[UShort];
    __ctype_tolower : Pointer[Int];
    __ctype_toupper : Pointer[Int];
    __names : Array[Pointer[CChar],13];
}

static __locale_t = Pointer[Struct___locale_struct];

static locale_t = __locale_t;

external strftime_l(
    __s : Pointer[CChar],
    __maxsize : UInt,
    __format : Pointer[CChar],
    __tp : Pointer[Struct_tm],
    __loc : __locale_t) : UInt;

external gmtime(
    __timer : Pointer[CLong]) : Pointer[Struct_tm];

external localtime(
    __timer : Pointer[CLong]) : Pointer[Struct_tm];

external gmtime_r(
    __timer : Pointer[CLong],
    __tp : Pointer[Struct_tm]) : Pointer[Struct_tm];

external localtime_r(
    __timer : Pointer[CLong],
    __tp : Pointer[Struct_tm]) : Pointer[Struct_tm];

external asctime(
    __tp : Pointer[Struct_tm]) : Pointer[CChar];

external ctime(
    __timer : Pointer[CLong]) : Pointer[CChar];

external asctime_r(
    __tp : Pointer[Struct_tm],
    __buf : Pointer[CChar]) : Pointer[CChar];

external ctime_r(
    __timer : Pointer[CLong],
    __buf : Pointer[CChar]) : Pointer[CChar];

external __tzname : Array[Pointer[CChar],2];

external __daylight : Int;

external __timezone : CLong;

external tzname : Array[Pointer[CChar],2];

external tzset() : Void;

external daylight : Int;

external timezone : CLong;

external stime(
    __when : Pointer[CLong]) : Int;

external timegm(
    __tp : Pointer[Struct_tm]) : CLong;

external timelocal(
    __tp : Pointer[Struct_tm]) : CLong;

external dysize(
    __year : Int) : Int;

external nanosleep(
    __requested_time : Pointer[Struct_timespec],
    __remaining : Pointer[Struct_timespec]) : Int;

external clock_getres(
    __clock_id : Int,
    __res : Pointer[Struct_timespec]) : Int;

external clock_gettime(
    __clock_id : Int,
    __tp : Pointer[Struct_timespec]) : Int;

external clock_settime(
    __clock_id : Int,
    __tp : Pointer[Struct_timespec]) : Int;

external clock_nanosleep(
    __clock_id : Int,
    __flags : Int,
    __req : Pointer[Struct_timespec],
    __rem : Pointer[Struct_timespec]) : Int;

external clock_getcpuclockid(
    __pid : Int,
    __clock_id : Pointer[Int]) : Int;

external timer_create(
    __clock_id : Int,
    __evp : OpaquePointer,
    __timerid : Pointer[timer_t]) : Int;

external timer_delete(
    __timerid : timer_t) : Int;

external timer_settime(
    __timerid : timer_t,
    __flags : Int,
    __value : Pointer[Struct_itimerspec],
    __ovalue : Pointer[Struct_itimerspec]) : Int;

external timer_gettime(
    __timerid : timer_t,
    __value : Pointer[Struct_itimerspec]) : Int;

external timer_getoverrun(
    __timerid : timer_t) : Int;

static __sig_atomic_t = Int;

record UnnamedStruct3 {
    __val : Array[CULong,32];
}

static __sigset_t = UnnamedStruct3;

static sigset_t = __sigset_t;

static pthread_t = CULong;

static pthread_attr_t = AUnionType;

record Struct___pthread_internal_slist {
    __next : Pointer[Struct___pthread_internal_slist];
}

static __pthread_slist_t = Struct___pthread_internal_slist;

static pthread_mutex_t = AUnionType;

static pthread_mutexattr_t = AUnionType;

static pthread_cond_t = AUnionType;

static pthread_condattr_t = AUnionType;

static pthread_key_t = UInt;

static pthread_once_t = Int;

static pthread_rwlock_t = AUnionType;

static pthread_rwlockattr_t = AUnionType;

static pthread_spinlock_t = Int;

static pthread_barrier_t = AUnionType;

static pthread_barrierattr_t = AUnionType;

static __jmp_buf = Array[Int,6];

static PTHREAD_CREATE_JOINABLE = 0;
static PTHREAD_CREATE_DETACHED = 1;

static PTHREAD_MUTEX_TIMED_NP = 0;
static PTHREAD_MUTEX_RECURSIVE_NP = 1;
static PTHREAD_MUTEX_ERRORCHECK_NP = 2;
static PTHREAD_MUTEX_ADAPTIVE_NP = 3;

static PTHREAD_MUTEX_STALLED = 0;
static PTHREAD_MUTEX_STALLED_NP = 0;
static PTHREAD_MUTEX_ROBUST = 1;
static PTHREAD_MUTEX_ROBUST_NP = 1;

static PTHREAD_RWLOCK_PREFER_READER_NP = 0;
static PTHREAD_RWLOCK_PREFER_WRITER_NP = 1;
static PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = 2;
static PTHREAD_RWLOCK_DEFAULT_NP = 0;

static PTHREAD_INHERIT_SCHED = 0;
static PTHREAD_EXPLICIT_SCHED = 1;

static PTHREAD_SCOPE_SYSTEM = 0;
static PTHREAD_SCOPE_PROCESS = 1;

static PTHREAD_PROCESS_PRIVATE = 0;
static PTHREAD_PROCESS_SHARED = 1;

record Struct__pthread_cleanup_buffer {
    __routine : CCodePointer[RawPointer,Void];
    __arg : RawPointer;
    __canceltype : Int;
    __prev : Pointer[Struct__pthread_cleanup_buffer];
}

static PTHREAD_CANCEL_ENABLE = 0;
static PTHREAD_CANCEL_DISABLE = 1;

static PTHREAD_CANCEL_DEFERRED = 0;
static PTHREAD_CANCEL_ASYNCHRONOUS = 1;

external pthread_create(
    __newthread : Pointer[CULong],
    __attr : Pointer[pthread_attr_t],
    __start_routine : CCodePointer[RawPointer,RawPointer],
    __arg : RawPointer) : Int;

external pthread_exit(
    __retval : RawPointer) : Void;

external pthread_join(
    __th : CULong,
    __thread_return : Pointer[RawPointer]) : Int;

external pthread_detach(
    __th : CULong) : Int;

external pthread_self() : CULong;

external pthread_equal(
    __thread1 : CULong,
    __thread2 : CULong) : Int;

external pthread_attr_init(
    __attr : Pointer[pthread_attr_t]) : Int;

external pthread_attr_destroy(
    __attr : Pointer[pthread_attr_t]) : Int;

external pthread_attr_getdetachstate(
    __attr : Pointer[pthread_attr_t],
    __detachstate : Pointer[Int]) : Int;

external pthread_attr_setdetachstate(
    __attr : Pointer[pthread_attr_t],
    __detachstate : Int) : Int;

external pthread_attr_getguardsize(
    __attr : Pointer[pthread_attr_t],
    __guardsize : Pointer[UInt]) : Int;

external pthread_attr_setguardsize(
    __attr : Pointer[pthread_attr_t],
    __guardsize : UInt) : Int;

external pthread_attr_getschedparam(
    __attr : Pointer[pthread_attr_t],
    __param : Pointer[Struct_sched_param]) : Int;

external pthread_attr_setschedparam(
    __attr : Pointer[pthread_attr_t],
    __param : Pointer[Struct_sched_param]) : Int;

external pthread_attr_getschedpolicy(
    __attr : Pointer[pthread_attr_t],
    __policy : Pointer[Int]) : Int;

external pthread_attr_setschedpolicy(
    __attr : Pointer[pthread_attr_t],
    __policy : Int) : Int;

external pthread_attr_getinheritsched(
    __attr : Pointer[pthread_attr_t],
    __inherit : Pointer[Int]) : Int;

external pthread_attr_setinheritsched(
    __attr : Pointer[pthread_attr_t],
    __inherit : Int) : Int;

external pthread_attr_getscope(
    __attr : Pointer[pthread_attr_t],
    __scope : Pointer[Int]) : Int;

external pthread_attr_setscope(
    __attr : Pointer[pthread_attr_t],
    __scope : Int) : Int;

external pthread_attr_getstackaddr(
    __attr : Pointer[pthread_attr_t],
    __stackaddr : Pointer[RawPointer]) : Int;

external pthread_attr_setstackaddr(
    __attr : Pointer[pthread_attr_t],
    __stackaddr : RawPointer) : Int;

external pthread_attr_getstacksize(
    __attr : Pointer[pthread_attr_t],
    __stacksize : Pointer[UInt]) : Int;

external pthread_attr_setstacksize(
    __attr : Pointer[pthread_attr_t],
    __stacksize : UInt) : Int;

external pthread_attr_getstack(
    __attr : Pointer[pthread_attr_t],
    __stackaddr : Pointer[RawPointer],
    __stacksize : Pointer[UInt]) : Int;

external pthread_attr_setstack(
    __attr : Pointer[pthread_attr_t],
    __stackaddr : RawPointer,
    __stacksize : UInt) : Int;

external pthread_setschedparam(
    __target_thread : CULong,
    __policy : Int,
    __param : Pointer[Struct_sched_param]) : Int;

external pthread_getschedparam(
    __target_thread : CULong,
    __policy : Pointer[Int],
    __param : Pointer[Struct_sched_param]) : Int;

external pthread_setschedprio(
    __target_thread : CULong,
    __prio : Int) : Int;

external pthread_once(
    __once_control : Pointer[Int],
    __init_routine : CCodePointer[Void]) : Int;

external pthread_setcancelstate(
    __state : Int,
    __oldstate : Pointer[Int]) : Int;

external pthread_setcanceltype(
    __type : Int,
    __oldtype : Pointer[Int]) : Int;

external pthread_cancel(
    __th : CULong) : Int;

external pthread_testcancel() : Void;

record UnnamedStruct4 {
    __cancel_jmp_buf : Array[UnnamedRecord,1];
    __pad : Array[RawPointer,4];
}

record UnnamedRecord {
    __cancel_jmp_buf : __jmp_buf;
    __mask_was_saved : Int;
}

static __pthread_unwind_buf_t = UnnamedStruct4;

record Struct___pthread_cleanup_frame {
    __cancel_routine : CCodePointer[RawPointer,Void];
    __cancel_arg : RawPointer;
    __do_it : Int;
    __cancel_type : Int;
}

external __pthread_register_cancel(
    __buf : Pointer[__pthread_unwind_buf_t]) : Void;

external __pthread_unregister_cancel(
    __buf : Pointer[__pthread_unwind_buf_t]) : Void;

external __pthread_unwind_next(
    __buf : Pointer[__pthread_unwind_buf_t]) : Void;

external __sigsetjmp(
    __env : OpaquePointer,
    __savemask : Int) : Int;

external pthread_mutex_init(
    __mutex : Pointer[pthread_mutex_t],
    __mutexattr : Pointer[pthread_mutexattr_t]) : Int;

external pthread_mutex_destroy(
    __mutex : Pointer[pthread_mutex_t]) : Int;

external pthread_mutex_trylock(
    __mutex : Pointer[pthread_mutex_t]) : Int;

external pthread_mutex_lock(
    __mutex : Pointer[pthread_mutex_t]) : Int;

external pthread_mutex_timedlock(
    __mutex : Pointer[pthread_mutex_t],
    __abstime : Pointer[Struct_timespec]) : Int;

external pthread_mutex_unlock(
    __mutex : Pointer[pthread_mutex_t]) : Int;

external pthread_mutex_consistent_np(
    __mutex : Pointer[pthread_mutex_t]) : Int;

external pthread_mutexattr_init(
    __attr : Pointer[pthread_mutexattr_t]) : Int;

external pthread_mutexattr_destroy(
    __attr : Pointer[pthread_mutexattr_t]) : Int;

external pthread_mutexattr_getpshared(
    __attr : Pointer[pthread_mutexattr_t],
    __pshared : Pointer[Int]) : Int;

external pthread_mutexattr_setpshared(
    __attr : Pointer[pthread_mutexattr_t],
    __pshared : Int) : Int;

external pthread_mutexattr_getrobust(
    __attr : Pointer[pthread_mutexattr_t],
    __robustness : Pointer[Int]) : Int;

external pthread_mutexattr_setrobust(
    __attr : Pointer[pthread_mutexattr_t],
    __robustness : Int) : Int;

external pthread_rwlock_init(
    __rwlock : Pointer[pthread_rwlock_t],
    __attr : Pointer[pthread_rwlockattr_t]) : Int;

external pthread_rwlock_destroy(
    __rwlock : Pointer[pthread_rwlock_t]) : Int;

external pthread_rwlock_rdlock(
    __rwlock : Pointer[pthread_rwlock_t]) : Int;

external pthread_rwlock_tryrdlock(
    __rwlock : Pointer[pthread_rwlock_t]) : Int;

external pthread_rwlock_timedrdlock(
    __rwlock : Pointer[pthread_rwlock_t],
    __abstime : Pointer[Struct_timespec]) : Int;

external pthread_rwlock_wrlock(
    __rwlock : Pointer[pthread_rwlock_t]) : Int;

external pthread_rwlock_trywrlock(
    __rwlock : Pointer[pthread_rwlock_t]) : Int;

external pthread_rwlock_timedwrlock(
    __rwlock : Pointer[pthread_rwlock_t],
    __abstime : Pointer[Struct_timespec]) : Int;

external pthread_rwlock_unlock(
    __rwlock : Pointer[pthread_rwlock_t]) : Int;

external pthread_rwlockattr_init(
    __attr : Pointer[pthread_rwlockattr_t]) : Int;

external pthread_rwlockattr_destroy(
    __attr : Pointer[pthread_rwlockattr_t]) : Int;

external pthread_rwlockattr_getpshared(
    __attr : Pointer[pthread_rwlockattr_t],
    __pshared : Pointer[Int]) : Int;

external pthread_rwlockattr_setpshared(
    __attr : Pointer[pthread_rwlockattr_t],
    __pshared : Int) : Int;

external pthread_rwlockattr_getkind_np(
    __attr : Pointer[pthread_rwlockattr_t],
    __pref : Pointer[Int]) : Int;

external pthread_rwlockattr_setkind_np(
    __attr : Pointer[pthread_rwlockattr_t],
    __pref : Int) : Int;

external pthread_cond_init(
    __cond : Pointer[pthread_cond_t],
    __cond_attr : Pointer[pthread_condattr_t]) : Int;

external pthread_cond_destroy(
    __cond : Pointer[pthread_cond_t]) : Int;

external pthread_cond_signal(
    __cond : Pointer[pthread_cond_t]) : Int;

external pthread_cond_broadcast(
    __cond : Pointer[pthread_cond_t]) : Int;

external pthread_cond_wait(
    __cond : Pointer[pthread_cond_t],
    __mutex : Pointer[pthread_mutex_t]) : Int;

external pthread_cond_timedwait(
    __cond : Pointer[pthread_cond_t],
    __mutex : Pointer[pthread_mutex_t],
    __abstime : Pointer[Struct_timespec]) : Int;

external pthread_condattr_init(
    __attr : Pointer[pthread_condattr_t]) : Int;

external pthread_condattr_destroy(
    __attr : Pointer[pthread_condattr_t]) : Int;

external pthread_condattr_getpshared(
    __attr : Pointer[pthread_condattr_t],
    __pshared : Pointer[Int]) : Int;

external pthread_condattr_setpshared(
    __attr : Pointer[pthread_condattr_t],
    __pshared : Int) : Int;

external pthread_condattr_getclock(
    __attr : Pointer[pthread_condattr_t],
    __clock_id : Pointer[Int]) : Int;

external pthread_condattr_setclock(
    __attr : Pointer[pthread_condattr_t],
    __clock_id : Int) : Int;

external pthread_spin_init(
    __lock : Pointer[Int],
    __pshared : Int) : Int;

external pthread_spin_destroy(
    __lock : Pointer[Int]) : Int;

external pthread_spin_lock(
    __lock : Pointer[Int]) : Int;

external pthread_spin_trylock(
    __lock : Pointer[Int]) : Int;

external pthread_spin_unlock(
    __lock : Pointer[Int]) : Int;

external pthread_barrier_init(
    __barrier : Pointer[pthread_barrier_t],
    __attr : Pointer[pthread_barrierattr_t],
    __count : UInt) : Int;

external pthread_barrier_destroy(
    __barrier : Pointer[pthread_barrier_t]) : Int;

external pthread_barrier_wait(
    __barrier : Pointer[pthread_barrier_t]) : Int;

external pthread_barrierattr_init(
    __attr : Pointer[pthread_barrierattr_t]) : Int;

external pthread_barrierattr_destroy(
    __attr : Pointer[pthread_barrierattr_t]) : Int;

external pthread_barrierattr_getpshared(
    __attr : Pointer[pthread_barrierattr_t],
    __pshared : Pointer[Int]) : Int;

external pthread_barrierattr_setpshared(
    __attr : Pointer[pthread_barrierattr_t],
    __pshared : Int) : Int;

external pthread_key_create(
    __key : Pointer[UInt],
    __destr_function : CCodePointer[RawPointer,Void]) : Int;

external pthread_key_delete(
    __key : UInt) : Int;

external pthread_getspecific(
    __key : UInt) : RawPointer;

external pthread_setspecific(
    __key : UInt,
    __pointer : RawPointer) : Int;

external pthread_getcpuclockid(
    __thread_id : CULong,
    __clock_id : Pointer[Int]) : Int;

external pthread_atfork(
    __prepare : CCodePointer[Void],
    __parent : CCodePointer[Void],
    __child : CCodePointer[Void]) : Int;

static u_char = CUChar;

static u_short = UShort;

static u_int = UInt;

static u_long = CULong;

static quad_t = Int64;

static u_quad_t = UInt64;

static fsid_t = __fsid_t;

static loff_t = Int64;

static ino_t = UInt64;

static dev_t = UInt64;

static mode_t = UInt;

static nlink_t = UInt;

static id_t = UInt;

static daddr_t = Int;

static caddr_t = __caddr_t;

static key_t = Int;

static ulong = CULong;

static ushort = UShort;

static uint = UInt;

static int8_t = CChar;

static int16_t = Short;

static int32_t = Int;

static int64_t = Int64;

static u_int8_t = CUChar;

static u_int16_t = UShort;

static u_int32_t = UInt;

static u_int64_t = UInt64;

static register_t = Int;

record Struct_timeval {
    tv_sec : CLong;
    tv_usec : CLong;
}

static suseconds_t = CLong;

static __fd_mask = CLong;

record UnnamedStruct5 {
    __fds_bits : Array[CLong,32];
}

static fd_set = UnnamedStruct5;

static fd_mask = CLong;

external select(
    __nfds : Int,
    __readfds : Pointer[fd_set],
    __writefds : Pointer[fd_set],
    __exceptfds : Pointer[fd_set],
    __timeout : Pointer[Struct_timeval]) : Int;

external pselect(
    __nfds : Int,
    __readfds : Pointer[fd_set],
    __writefds : Pointer[fd_set],
    __exceptfds : Pointer[fd_set],
    __timeout : Pointer[Struct_timespec],
    __sigmask : Pointer[__sigset_t]) : Int;

external gnu_dev_major(
    __dev : UInt64) : UInt;

external gnu_dev_minor(
    __dev : UInt64) : UInt;

external gnu_dev_makedev(
    __major : UInt,
    __minor : UInt) : UInt64;

static blkcnt_t = Int64;

static fsblkcnt_t = UInt64;

static fsfilcnt_t = UInt64;

record Struct_flock {
    l_type : Short;
    l_whence : Short;
    l_start : Int64;
    l_len : Int64;
    l_pid : Int;
}

external fcntl(
    __fd : Int,
    __cmd : Int,
    ...) : Int;

external ("open64") open(
    __file : Pointer[CChar],
    __oflag : Int,
    ...) : Int;

external ("openat64") openat(
    __fd : Int,
    __file : Pointer[CChar],
    __oflag : Int,
    ...) : Int;

external openat64(
    __fd : Int,
    __file : Pointer[CChar],
    __oflag : Int,
    ...) : Int;

external ("creat64") creat(
    __file : Pointer[CChar],
    __mode : UInt) : Int;

external ("posix_fadvise64") posix_fadvise(
    __fd : Int,
    __offset : Int64,
    __len : Int64,
    __advise : Int) : Int;

external ("posix_fallocate64") posix_fallocate(
    __fd : Int,
    __offset : Int64,
    __len : Int64) : Int;

record Struct_timezone {
    tz_minuteswest : Int;
    tz_dsttime : Int;
}

static __timezone_ptr_t = Pointer[Struct_timezone];

external gettimeofday(
    __tv : Pointer[Struct_timeval],
    __tz : __timezone_ptr_t) : Int;

external settimeofday(
    __tv : Pointer[Struct_timeval],
    __tz : Pointer[Struct_timezone]) : Int;

external adjtime(
    __delta : Pointer[Struct_timeval],
    __olddelta : Pointer[Struct_timeval]) : Int;

static ITIMER_REAL = 0;
static ITIMER_VIRTUAL = 1;
static ITIMER_PROF = 2;

record Struct_itimerval {
    it_interval : Struct_timeval;
    it_value : Struct_timeval;
}

static __itimer_which_t = Int;

external getitimer(
    __which : Int,
    __value : Pointer[Struct_itimerval]) : Int;

external setitimer(
    __which : Int,
    __new : Pointer[Struct_itimerval],
    __old : Pointer[Struct_itimerval]) : Int;

external utimes(
    __file : Pointer[CChar],
    __tvp : Pointer[Struct_timeval]) : Int;

external lutimes(
    __file : Pointer[CChar],
    __tvp : Pointer[Struct_timeval]) : Int;

external futimes(
    __fd : Int,
    __tvp : Pointer[Struct_timeval]) : Int;

record Struct_stat {
    st_dev : UInt64;
    __pad1 : UShort;
    __st_ino : CULong;
    st_mode : UInt;
    st_nlink : UInt;
    st_uid : UInt;
    st_gid : UInt;
    st_rdev : UInt64;
    __pad2 : UShort;
    st_size : Int64;
    st_blksize : CLong;
    st_blocks : Int64;
    st_atim : Struct_timespec;
    st_mtim : Struct_timespec;
    st_ctim : Struct_timespec;
    st_ino : UInt64;
}

external ("stat64") stat(
    __file : Pointer[CChar],
    __buf : Pointer[Struct_stat]) : Int;

external ("fstat64") fstat(
    __fd : Int,
    __buf : Pointer[Struct_stat]) : Int;

external ("fstatat64") fstatat(
    __fd : Int,
    __file : Pointer[CChar],
    __buf : Pointer[Struct_stat],
    __flag : Int) : Int;

external ("lstat64") lstat(
    __file : Pointer[CChar],
    __buf : Pointer[Struct_stat]) : Int;

external chmod(
    __file : Pointer[CChar],
    __mode : UInt) : Int;

external lchmod(
    __file : Pointer[CChar],
    __mode : UInt) : Int;

external fchmod(
    __fd : Int,
    __mode : UInt) : Int;

external fchmodat(
    __fd : Int,
    __file : Pointer[CChar],
    __mode : UInt,
    __flag : Int) : Int;

external umask(
    __mask : UInt) : UInt;

external mkdir(
    __path : Pointer[CChar],
    __mode : UInt) : Int;

external mkdirat(
    __fd : Int,
    __path : Pointer[CChar],
    __mode : UInt) : Int;

external mknod(
    __path : Pointer[CChar],
    __mode : UInt,
    __dev : UInt64) : Int;

external mknodat(
    __fd : Int,
    __path : Pointer[CChar],
    __mode : UInt,
    __dev : UInt64) : Int;

external mkfifo(
    __path : Pointer[CChar],
    __mode : UInt) : Int;

external mkfifoat(
    __fd : Int,
    __path : Pointer[CChar],
    __mode : UInt) : Int;

external utimensat(
    __fd : Int,
    __path : Pointer[CChar],
    __times : Pointer[Struct_timespec],
    __flags : Int) : Int;

external futimens(
    __fd : Int,
    __times : Pointer[Struct_timespec]) : Int;

external ("__fxstat64") __fxstat(
    __ver : Int,
    __fildes : Int,
    __stat_buf : Pointer[Struct_stat]) : Int;

external ("__xstat64") __xstat(
    __ver : Int,
    __filename : Pointer[CChar],
    __stat_buf : Pointer[Struct_stat]) : Int;

external ("__lxstat64") __lxstat(
    __ver : Int,
    __filename : Pointer[CChar],
    __stat_buf : Pointer[Struct_stat]) : Int;

external ("__fxstatat64") __fxstatat(
    __ver : Int,
    __fildes : Int,
    __filename : Pointer[CChar],
    __stat_buf : Pointer[Struct_stat],
    __flag : Int) : Int;

external __xmknod(
    __ver : Int,
    __path : Pointer[CChar],
    __mode : UInt,
    __dev : Pointer[UInt64]) : Int;

external __xmknodat(
    __ver : Int,
    __fd : Int,
    __path : Pointer[CChar],
    __mode : UInt,
    __dev : Pointer[UInt64]) : Int;

external ("mmap64") mmap(
    __addr : RawPointer,
    __len : UInt,
    __prot : Int,
    __flags : Int,
    __fd : Int,
    __offset : Int64) : RawPointer;

external munmap(
    __addr : RawPointer,
    __len : UInt) : Int;

external mprotect(
    __addr : RawPointer,
    __len : UInt,
    __prot : Int) : Int;

external msync(
    __addr : RawPointer,
    __len : UInt,
    __flags : Int) : Int;

external madvise(
    __addr : RawPointer,
    __len : UInt,
    __advice : Int) : Int;

external posix_madvise(
    __addr : RawPointer,
    __len : UInt,
    __advice : Int) : Int;

external mlock(
    __addr : RawPointer,
    __len : UInt) : Int;

external munlock(
    __addr : RawPointer,
    __len : UInt) : Int;

external mlockall(
    __flags : Int) : Int;

external munlockall() : Int;

external mincore(
    __start : RawPointer,
    __len : UInt,
    __vec : Pointer[CUChar]) : Int;

external shm_open(
    __name : Pointer[CChar],
    __oflag : Int,
    __mode : UInt) : Int;

external shm_unlink(
    __name : Pointer[CChar]) : Int;

record Struct_iovec {
    iov_base : RawPointer;
    iov_len : UInt;
}

external readv(
    __fd : Int,
    __iovec : Pointer[Struct_iovec],
    __count : Int) : Int;

external writev(
    __fd : Int,
    __iovec : Pointer[Struct_iovec],
    __count : Int) : Int;

external ("preadv64") preadv(
    __fd : Int,
    __iovec : Pointer[Struct_iovec],
    __count : Int,
    __offset : CLong) : Int;

external ("pwritev64") pwritev(
    __fd : Int,
    __iovec : Pointer[Struct_iovec],
    __count : Int,
    __offset : CLong) : Int;

static SOCK_STREAM = 1;
static SOCK_DGRAM = 2;
static SOCK_RAW = 3;
static SOCK_RDM = 4;
static SOCK_SEQPACKET = 5;
static SOCK_DCCP = 6;
static SOCK_PACKET = 10;
static SOCK_CLOEXEC = 524288;
static SOCK_NONBLOCK = 2048;

static sa_family_t = UShort;

record Struct_sockaddr {
    sa_family : UShort;
    sa_data : Array[CChar,14];
}

record Struct_sockaddr_storage {
    ss_family : UShort;
    __ss_align : CULong;
    __ss_padding : Array[CChar,120];
}

static MSG_OOB = 1;
static MSG_PEEK = 2;
static MSG_DONTROUTE = 4;
static MSG_CTRUNC = 8;
static MSG_PROXY = 16;
static MSG_TRUNC = 32;
static MSG_DONTWAIT = 64;
static MSG_EOR = 128;
static MSG_WAITALL = 256;
static MSG_FIN = 512;
static MSG_SYN = 1024;
static MSG_CONFIRM = 2048;
static MSG_RST = 4096;
static MSG_ERRQUEUE = 8192;
static MSG_NOSIGNAL = 16384;
static MSG_MORE = 32768;
static MSG_CMSG_CLOEXEC = 1073741824;

record Struct_msghdr {
    msg_name : RawPointer;
    msg_namelen : UInt;
    msg_iov : Pointer[Struct_iovec];
    msg_iovlen : UInt;
    msg_control : RawPointer;
    msg_controllen : UInt;
    msg_flags : Int;
}

record Struct_cmsghdr {
    cmsg_len : UInt;
    cmsg_level : Int;
    cmsg_type : Int;
    __cmsg_data : Array[CUChar,0];
}

external __cmsg_nxthdr(
    __mhdr : Pointer[Struct_msghdr],
    __cmsg : Pointer[Struct_cmsghdr]) : Pointer[Struct_cmsghdr];

static SCM_RIGHTS = 1;

record Struct_linger {
    l_onoff : Int;
    l_linger : Int;
}

record Struct_osockaddr {
    sa_family : UShort;
    sa_data : Array[CUChar,14];
}

static SHUT_RD = 0;
static SHUT_WR = 1;
static SHUT_RDWR = 2;

external socket(
    __domain : Int,
    __type : Int,
    __protocol : Int) : Int;

external socketpair(
    __domain : Int,
    __type : Int,
    __protocol : Int,
    __fds : Pointer[Int]) : Int;

external bind(
    __fd : Int,
    __addr : Pointer[Struct_sockaddr],
    __len : UInt) : Int;

external getsockname(
    __fd : Int,
    __addr : Pointer[Struct_sockaddr],
    __len : Pointer[UInt]) : Int;

external connect(
    __fd : Int,
    __addr : Pointer[Struct_sockaddr],
    __len : UInt) : Int;

external getpeername(
    __fd : Int,
    __addr : Pointer[Struct_sockaddr],
    __len : Pointer[UInt]) : Int;

external send(
    __fd : Int,
    __buf : RawPointer,
    __n : UInt,
    __flags : Int) : Int;

external recv(
    __fd : Int,
    __buf : RawPointer,
    __n : UInt,
    __flags : Int) : Int;

external sendto(
    __fd : Int,
    __buf : RawPointer,
    __n : UInt,
    __flags : Int,
    __addr : Pointer[Struct_sockaddr],
    __addr_len : UInt) : Int;

external recvfrom(
    __fd : Int,
    __buf : RawPointer,
    __n : UInt,
    __flags : Int,
    __addr : Pointer[Struct_sockaddr],
    __addr_len : Pointer[UInt]) : Int;

external sendmsg(
    __fd : Int,
    __message : Pointer[Struct_msghdr],
    __flags : Int) : Int;

external recvmsg(
    __fd : Int,
    __message : Pointer[Struct_msghdr],
    __flags : Int) : Int;

external getsockopt(
    __fd : Int,
    __level : Int,
    __optname : Int,
    __optval : RawPointer,
    __optlen : Pointer[UInt]) : Int;

external setsockopt(
    __fd : Int,
    __level : Int,
    __optname : Int,
    __optval : RawPointer,
    __optlen : UInt) : Int;

external listen(
    __fd : Int,
    __n : Int) : Int;

external accept(
    __fd : Int,
    __addr : Pointer[Struct_sockaddr],
    __addr_len : Pointer[UInt]) : Int;

external shutdown(
    __fd : Int,
    __how : Int) : Int;

external sockatmark(
    __fd : Int) : Int;

external isfdtype(
    __fd : Int,
    __fdtype : Int) : Int;

static uint8_t = CUChar;

static uint16_t = UShort;

static uint32_t = UInt;

static uint64_t = UInt64;

static int_least8_t = CChar;

static int_least16_t = Short;

static int_least32_t = Int;

static int_least64_t = Int64;

static uint_least8_t = CUChar;

static uint_least16_t = UShort;

static uint_least32_t = UInt;

static uint_least64_t = UInt64;

static int_fast8_t = CChar;

static int_fast16_t = Int;

static int_fast32_t = Int;

static int_fast64_t = Int64;

static uint_fast8_t = CUChar;

static uint_fast16_t = UInt;

static uint_fast32_t = UInt;

static uint_fast64_t = UInt64;

static uintptr_t = UInt;

static intmax_t = Int64;

static uintmax_t = UInt64;

static EPOLL_CLOEXEC = 524288;
static EPOLL_NONBLOCK = 2048;

static EPOLLIN = 1;
static EPOLLPRI = 2;
static EPOLLOUT = 4;
static EPOLLRDNORM = 64;
static EPOLLRDBAND = 128;
static EPOLLWRNORM = 256;
static EPOLLWRBAND = 512;
static EPOLLMSG = 1024;
static EPOLLERR = 8;
static EPOLLHUP = 16;
static EPOLLRDHUP = 8192;
static EPOLLONESHOT = 1073741824;
static EPOLLET = 2147483648;

static epoll_data_t = AUnionType;

record Struct_epoll_event {
    events : UInt;
    data : epoll_data_t;
}

external epoll_create(
    __size : Int) : Int;

external epoll_create1(
    __flags : Int) : Int;

external epoll_ctl(
    __epfd : Int,
    __op : Int,
    __fd : Int,
    __event : Pointer[Struct_epoll_event]) : Int;

external epoll_wait(
    __epfd : Int,
    __events : Pointer[Struct_epoll_event],
    __maxevents : Int,
    __timeout : Int) : Int;

external epoll_pwait(
    __epfd : Int,
    __events : Pointer[Struct_epoll_event],
    __maxevents : Int,
    __timeout : Int,
    __ss : Pointer[__sigset_t]) : Int;
