// Auto-Generated by BindingsGenerator

import types.*;
import operators.*;
import numbers.*;
import pointers.*;

private static OpaquePointer = RawPointer;
private static UnknownType = Int;
private static AUnionType = Int;


static __int8_t = CChar;

static __uint8_t = CUChar;

static __int16_t = Short;

static __uint16_t = UShort;

static __int32_t = Int;

static __uint32_t = UInt;

static __int64_t = Int64;

static __uint64_t = UInt64;

static __darwin_intptr_t = CLong;

static __darwin_natural_t = UInt;

static __darwin_ct_rune_t = Int;

static __mbstate_t = AUnionType;

static __darwin_mbstate_t = __mbstate_t;

static __darwin_ptrdiff_t = CLong;

static __darwin_size_t = CULong;

static __darwin_va_list = Int;

static __darwin_wchar_t = Int;

static __darwin_rune_t = Int;

static __darwin_wint_t = Int;

static __darwin_clock_t = CULong;

static __darwin_socklen_t = UInt;

static __darwin_ssize_t = CLong;

static __darwin_time_t = CLong;

record Struct___darwin_pthread_handler_rec {
    __routine : CCodePointer[RawPointer,Void];
    __arg : RawPointer;
    __next : Pointer[Struct___darwin_pthread_handler_rec];
}

record Struct__opaque_pthread_attr_t {
    __sig : CLong;
    __opaque : Array[CChar,56];
}

record Struct__opaque_pthread_cond_t {
    __sig : CLong;
    __opaque : Array[CChar,40];
}

record Struct__opaque_pthread_condattr_t {
    __sig : CLong;
    __opaque : Array[CChar,8];
}

record Struct__opaque_pthread_mutex_t {
    __sig : CLong;
    __opaque : Array[CChar,56];
}

record Struct__opaque_pthread_mutexattr_t {
    __sig : CLong;
    __opaque : Array[CChar,8];
}

record Struct__opaque_pthread_once_t {
    __sig : CLong;
    __opaque : Array[CChar,8];
}

record Struct__opaque_pthread_rwlock_t {
    __sig : CLong;
    __opaque : Array[CChar,192];
}

record Struct__opaque_pthread_rwlockattr_t {
    __sig : CLong;
    __opaque : Array[CChar,16];
}

record Struct__opaque_pthread_t {
    __sig : CLong;
    __cleanup_stack : Pointer[Struct___darwin_pthread_handler_rec];
    __opaque : Array[CChar,1168];
}

static __darwin_blkcnt_t = Int64;

static __darwin_blksize_t = Int;

static __darwin_dev_t = Int;

static __darwin_fsblkcnt_t = UInt;

static __darwin_fsfilcnt_t = UInt;

static __darwin_gid_t = UInt;

static __darwin_id_t = UInt;

static __darwin_ino64_t = UInt64;

static __darwin_ino_t = UInt64;

static __darwin_mach_port_name_t = UInt;

static __darwin_mach_port_t = UInt;

static __darwin_mode_t = UShort;

static __darwin_off_t = Int64;

static __darwin_pid_t = Int;

static __darwin_pthread_attr_t = Struct__opaque_pthread_attr_t;

static __darwin_pthread_cond_t = Struct__opaque_pthread_cond_t;

static __darwin_pthread_condattr_t = Struct__opaque_pthread_condattr_t;

static __darwin_pthread_key_t = CULong;

static __darwin_pthread_mutex_t = Struct__opaque_pthread_mutex_t;

static __darwin_pthread_mutexattr_t = Struct__opaque_pthread_mutexattr_t;

static __darwin_pthread_once_t = Struct__opaque_pthread_once_t;

static __darwin_pthread_rwlock_t = Struct__opaque_pthread_rwlock_t;

static __darwin_pthread_rwlockattr_t = Struct__opaque_pthread_rwlockattr_t;

static __darwin_pthread_t = Pointer[Struct__opaque_pthread_t];

static __darwin_sigset_t = UInt;

static __darwin_suseconds_t = Int;

static __darwin_uid_t = UInt;

static __darwin_useconds_t = UInt;

static __darwin_uuid_t = Array[CUChar,16];

static __darwin_uuid_string_t = Array[CChar,37];

static __darwin_nl_item = Int;

static __darwin_wctrans_t = Int;

static __darwin_wctype_t = UInt;

record Struct_accessx_descriptor {
    ad_name_offset : UInt;
    ad_flags : Int;
    ad_pad : Array[Int,2];
}

static dev_t = Int;

static gid_t = UInt;

static intptr_t = CLong;

static mode_t = UShort;

static off_t = Int64;

static pid_t = Int;

static size_t = CULong;

static ssize_t = CLong;

static uid_t = UInt;

static useconds_t = UInt;

static uuid_t = __darwin_uuid_t;

external _exit(
    argument0 : Int) : Void;

external access(
    argument0 : Pointer[CChar],
    argument1 : Int) : Int;

external alarm(
    argument0 : UInt) : UInt;

external chdir(
    argument0 : Pointer[CChar]) : Int;

external chown(
    argument0 : Pointer[CChar],
    argument1 : UInt,
    argument2 : UInt) : Int;

external ("_close") close(
    argument0 : Int) : Int;

external ("_confstr") confstr(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : CULong) : CULong;

external crypt(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) : Pointer[CChar];

external ctermid(
    argument0 : Pointer[CChar]) : Pointer[CChar];

external dup(
    argument0 : Int) : Int;

external dup2(
    argument0 : Int,
    argument1 : Int) : Int;

external ("_encrypt") encrypt(
    argument0 : Pointer[CChar],
    argument1 : Int) : Void;

external execl(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    ...) : Int;

external execle(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    ...) : Int;

external execlp(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    ...) : Int;

external execv(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]]) : Int;

external execve(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[Pointer[CChar]]) : Int;

external execvp(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]]) : Int;

external fchown(
    argument0 : Int,
    argument1 : UInt,
    argument2 : UInt) : Int;

external fchdir(
    argument0 : Int) : Int;

external fork() : Int;

external fpathconf(
    argument0 : Int,
    argument1 : Int) : CLong;

external ("_fsync") fsync(
    argument0 : Int) : Int;

external ftruncate(
    argument0 : Int,
    argument1 : Int64) : Int;

external getcwd(
    argument0 : Pointer[CChar],
    argument1 : CULong) : Pointer[CChar];

external getegid() : UInt;

external geteuid() : UInt;

external getgid() : UInt;

external getgroups(
    argument0 : Int,
    argument1 : Pointer[UInt]) : Int;

external gethostid() : CLong;

external gethostname(
    argument0 : Pointer[CChar],
    argument1 : CULong) : Int;

external getlogin() : Pointer[CChar];

external getlogin_r(
    argument0 : Pointer[CChar],
    argument1 : CULong) : Int;

external ("_getopt") getopt(
    argument0 : Int,
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[CChar]) : Int;

external getpgid(
    argument0 : Int) : Int;

external getpgrp() : Int;

external getpid() : Int;

external getppid() : Int;

external getsid(
    argument0 : Int) : Int;

external getuid() : UInt;

external getwd(
    argument0 : Pointer[CChar]) : Pointer[CChar];

external isatty(
    argument0 : Int) : Int;

external ("_lchown") lchown(
    argument0 : Pointer[CChar],
    argument1 : UInt,
    argument2 : UInt) : Int;

external link(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) : Int;

external ("_lockf") lockf(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int64) : Int;

external lseek(
    argument0 : Int,
    argument1 : Int64,
    argument2 : Int) : Int64;

external ("_nice") nice(
    argument0 : Int) : Int;

external pathconf(
    argument0 : Pointer[CChar],
    argument1 : Int) : CLong;

external ("_pause") pause() : Int;

external pipe(
    argument0 : Pointer[Int]) : Int;

external ("_pread") pread(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int64) : CLong;

external ("_pwrite") pwrite(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int64) : CLong;

external ("_read") read(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong) : CLong;

external readlink(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) : CLong;

external rmdir(
    argument0 : Pointer[CChar]) : Int;

external setegid(
    argument0 : UInt) : Int;

external seteuid(
    argument0 : UInt) : Int;

external setgid(
    argument0 : UInt) : Int;

external setpgid(
    argument0 : Int,
    argument1 : Int) : Int;

external ("_setpgrp") setpgrp() : Int;

external ("_setregid") setregid(
    argument0 : UInt,
    argument1 : UInt) : Int;

external ("_setreuid") setreuid(
    argument0 : UInt,
    argument1 : UInt) : Int;

external setsid() : Int;

external setuid(
    argument0 : UInt) : Int;

external ("_sleep") sleep(
    argument0 : UInt) : UInt;

external swab(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CLong) : Void;

external symlink(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) : Int;

external sync() : Void;

external sysconf(
    argument0 : Int) : CLong;

external tcgetpgrp(
    argument0 : Int) : Int;

external tcsetpgrp(
    argument0 : Int,
    argument1 : Int) : Int;

external truncate(
    argument0 : Pointer[CChar],
    argument1 : Int64) : Int;

external ttyname(
    argument0 : Int) : Pointer[CChar];

external ("_ttyname_r") ttyname_r(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : CULong) : Int;

external ualarm(
    argument0 : UInt,
    argument1 : UInt) : UInt;

external unlink(
    argument0 : Pointer[CChar]) : Int;

external ("_usleep") usleep(
    argument0 : UInt) : Int;

external vfork() : Int;

external ("_write") write(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong) : CLong;

external optarg : Pointer[CChar];

external optind : Int;

external opterr : Int;

external optopt : Int;

record Struct_timespec {
    tv_sec : CLong;
    tv_nsec : CLong;
}

record Struct_timeval {
    tv_sec : CLong;
    tv_usec : Int;
}

record Struct_fd_set {
    fds_bits : Array[Int,32];
}

static fd_set = Struct_fd_set;

static time_t = CLong;

static suseconds_t = Int;

static sigset_t = UInt;

external ("_pselect$1050") pselect(
    argument0 : Int,
    argument1 : Pointer[fd_set],
    argument2 : Pointer[fd_set],
    argument3 : Pointer[fd_set],
    argument4 : Pointer[Struct_timespec],
    argument5 : Pointer[UInt]) : Int;

external ("_select$1050") select(
    argument0 : Int,
    argument1 : Pointer[fd_set],
    argument2 : Pointer[fd_set],
    argument3 : Pointer[fd_set],
    argument4 : Pointer[Struct_timeval]) : Int;

external _Exit(
    argument0 : Int) : Void;

external accessx_np(
    argument0 : Pointer[Struct_accessx_descriptor],
    argument1 : CULong,
    argument2 : Pointer[Int],
    argument3 : UInt) : Int;

external acct(
    argument0 : Pointer[CChar]) : Int;

external add_profil(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : CULong,
    argument3 : UInt) : Int;

external brk(
    argument0 : RawPointer) : RawPointer;

external chroot(
    argument0 : Pointer[CChar]) : Int;

external endusershell() : Void;

external execvP(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Pointer[CChar]]) : Int;

external fflagstostr(
    argument0 : CULong) : Pointer[CChar];

external getdtablesize() : Int;

external getdomainname(
    argument0 : Pointer[CChar],
    argument1 : Int) : Int;

external getgrouplist(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : Pointer[Int],
    argument3 : Pointer[Int]) : Int;

external gethostuuid(
    argument0 : Pointer[CUChar],
    argument1 : Pointer[Struct_timespec]) : Int;

external getmode(
    argument0 : RawPointer,
    argument1 : UShort) : UShort;

external getpagesize() : Int;

external getpass(
    argument0 : Pointer[CChar]) : Pointer[CChar];

external getpeereid(
    argument0 : Int,
    argument1 : Pointer[UInt],
    argument2 : Pointer[UInt]) : Int;

external getsgroups_np(
    argument0 : Pointer[Int],
    argument1 : Pointer[CUChar]) : Int;

external getusershell() : Pointer[CChar];

external getwgroups_np(
    argument0 : Pointer[Int],
    argument1 : Pointer[CUChar]) : Int;

external initgroups(
    argument0 : Pointer[CChar],
    argument1 : Int) : Int;

external iruserok(
    argument0 : CULong,
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar]) : Int;

external iruserok_sa(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : Int,
    argument3 : Pointer[CChar],
    argument4 : Pointer[CChar]) : Int;

external issetugid() : Int;

external mkdtemp(
    argument0 : Pointer[CChar]) : Pointer[CChar];

external mknod(
    argument0 : Pointer[CChar],
    argument1 : UShort,
    argument2 : Int) : Int;

external mkstemp(
    argument0 : Pointer[CChar]) : Int;

external mkstemps(
    argument0 : Pointer[CChar],
    argument1 : Int) : Int;

external mktemp(
    argument0 : Pointer[CChar]) : Pointer[CChar];

external nfssvc(
    argument0 : Int,
    argument1 : RawPointer) : Int;

external profil(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : CULong,
    argument3 : UInt) : Int;

external pthread_setugid_np(
    argument0 : UInt,
    argument1 : UInt) : Int;

external pthread_getugid_np(
    argument0 : Pointer[UInt],
    argument1 : Pointer[UInt]) : Int;

external rcmd(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar],
    argument4 : Pointer[CChar],
    argument5 : Pointer[Int]) : Int;

external rcmd_af(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar],
    argument4 : Pointer[CChar],
    argument5 : Pointer[Int],
    argument6 : Int) : Int;

external reboot(
    argument0 : Int) : Int;

external revoke(
    argument0 : Pointer[CChar]) : Int;

external rresvport(
    argument0 : Pointer[Int]) : Int;

external rresvport_af(
    argument0 : Pointer[Int],
    argument1 : Int) : Int;

external ruserok(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : Pointer[CChar],
    argument3 : Pointer[CChar]) : Int;

external sbrk(
    argument0 : Int) : RawPointer;

external setdomainname(
    argument0 : Pointer[CChar],
    argument1 : Int) : Int;

external setgroups(
    argument0 : Int,
    argument1 : Pointer[UInt]) : Int;

external sethostid(
    argument0 : CLong) : Void;

external sethostname(
    argument0 : Pointer[CChar],
    argument1 : Int) : Int;

external ("_setkey") setkey(
    argument0 : Pointer[CChar]) : Void;

external setlogin(
    argument0 : Pointer[CChar]) : Int;

external ("_setmode") setmode(
    argument0 : Pointer[CChar]) : RawPointer;

external setrgid(
    argument0 : UInt) : Int;

external setruid(
    argument0 : UInt) : Int;

external setsgroups_np(
    argument0 : Int,
    argument1 : Pointer[CUChar]) : Int;

external setusershell() : Void;

external setwgroups_np(
    argument0 : Int,
    argument1 : Pointer[CUChar]) : Int;

external strtofflags(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[CULong],
    argument2 : Pointer[CULong]) : Int;

external swapon(
    argument0 : Pointer[CChar]) : Int;

external syscall(
    argument0 : Int,
    ...) : Int;

external ttyslot() : Int;

external undelete(
    argument0 : Pointer[CChar]) : Int;

external unwhiteout(
    argument0 : Pointer[CChar]) : Int;

external valloc(
    argument0 : CULong) : RawPointer;

external suboptarg : Pointer[CChar];

external getsubopt(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[Pointer[CChar]]) : Int;

external fgetattrlist(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : RawPointer,
    argument3 : CULong,
    argument4 : UInt) : Int;

external fsetattrlist(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : RawPointer,
    argument3 : CULong,
    argument4 : UInt) : Int;

external ("_getattrlist") getattrlist(
    argument0 : Pointer[CChar],
    argument1 : RawPointer,
    argument2 : RawPointer,
    argument3 : CULong,
    argument4 : UInt) : Int;

external ("_setattrlist") setattrlist(
    argument0 : Pointer[CChar],
    argument1 : RawPointer,
    argument2 : RawPointer,
    argument3 : CULong,
    argument4 : UInt) : Int;

external exchangedata(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : UInt) : Int;

external getdirentriesattr(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : RawPointer,
    argument3 : CULong,
    argument4 : Pointer[UInt],
    argument5 : Pointer[UInt],
    argument6 : Pointer[UInt],
    argument7 : UInt) : Int;

external searchfs(
    argument0 : Pointer[CChar],
    argument1 : OpaquePointer,
    argument2 : Pointer[CULong],
    argument3 : UInt,
    argument4 : UInt,
    argument5 : OpaquePointer) : Int;

external fsctl(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : RawPointer,
    argument3 : UInt) : Int;

external ffsctl(
    argument0 : Int,
    argument1 : CULong,
    argument2 : RawPointer,
    argument3 : UInt) : Int;

external optreset : Int;

external __error() : Pointer[Int];

record Struct_sched_param {
    sched_priority : Int;
    __opaque : Array[CChar,4];
}

external sched_yield() : Int;

external sched_get_priority_min(
    argument0 : Int) : Int;

external sched_get_priority_max(
    argument0 : Int) : Int;

static clock_t = CULong;

record Struct_tm {
    tm_sec : Int;
    tm_min : Int;
    tm_hour : Int;
    tm_mday : Int;
    tm_mon : Int;
    tm_year : Int;
    tm_wday : Int;
    tm_yday : Int;
    tm_isdst : Int;
    tm_gmtoff : CLong;
    tm_zone : Pointer[CChar];
}

external tzname : Array[Pointer[CChar],0];

external getdate_err : Int;

external timezone : CLong;

external daylight : Int;

external asctime(
    argument0 : Pointer[Struct_tm]) : Pointer[CChar];

external ("_clock") clock() : CULong;

external ctime(
    argument0 : Pointer[CLong]) : Pointer[CChar];

external difftime(
    argument0 : CLong,
    argument1 : CLong) : Double;

external getdate(
    argument0 : Pointer[CChar]) : Pointer[Struct_tm];

external gmtime(
    argument0 : Pointer[CLong]) : Pointer[Struct_tm];

external localtime(
    argument0 : Pointer[CLong]) : Pointer[Struct_tm];

external ("_mktime") mktime(
    argument0 : Pointer[Struct_tm]) : CLong;

external ("_strftime") strftime(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : Pointer[CChar],
    argument3 : Pointer[Struct_tm]) : CULong;

external ("_strptime") strptime(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Struct_tm]) : Pointer[CChar];

external time(
    argument0 : Pointer[CLong]) : CLong;

external tzset() : Void;

external asctime_r(
    argument0 : Pointer[Struct_tm],
    argument1 : Pointer[CChar]) : Pointer[CChar];

external ctime_r(
    argument0 : Pointer[CLong],
    argument1 : Pointer[CChar]) : Pointer[CChar];

external gmtime_r(
    argument0 : Pointer[CLong],
    argument1 : Pointer[Struct_tm]) : Pointer[Struct_tm];

external localtime_r(
    argument0 : Pointer[CLong],
    argument1 : Pointer[Struct_tm]) : Pointer[Struct_tm];

external posix2time(
    argument0 : CLong) : CLong;

external tzsetwall() : Void;

external time2posix(
    argument0 : CLong) : CLong;

external timelocal(
    argument0 : Pointer[Struct_tm]) : CLong;

external timegm(
    argument0 : Pointer[Struct_tm]) : CLong;

external ("_nanosleep") nanosleep(
    argument0 : Pointer[Struct_timespec],
    argument1 : Pointer[Struct_timespec]) : Int;

static pthread_attr_t = __darwin_pthread_attr_t;

static pthread_cond_t = __darwin_pthread_cond_t;

static pthread_condattr_t = __darwin_pthread_condattr_t;

static pthread_key_t = CULong;

static pthread_mutex_t = __darwin_pthread_mutex_t;

static pthread_mutexattr_t = __darwin_pthread_mutexattr_t;

static pthread_once_t = __darwin_pthread_once_t;

static pthread_rwlock_t = __darwin_pthread_rwlock_t;

static pthread_rwlockattr_t = __darwin_pthread_rwlockattr_t;

static pthread_t = __darwin_pthread_t;

static mach_port_t = UInt;

external pthread_atfork(
    argument0 : CCodePointer[Void],
    argument1 : CCodePointer[Void],
    argument2 : CCodePointer[Void]) : Int;

external pthread_attr_destroy(
    argument0 : Pointer[pthread_attr_t]) : Int;

external pthread_attr_getdetachstate(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_attr_getguardsize(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[CULong]) : Int;

external pthread_attr_getinheritsched(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_attr_getschedparam(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Struct_sched_param]) : Int;

external pthread_attr_getschedpolicy(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_attr_getscope(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_attr_getstack(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[RawPointer],
    argument2 : Pointer[CULong]) : Int;

external pthread_attr_getstackaddr(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[RawPointer]) : Int;

external pthread_attr_getstacksize(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[CULong]) : Int;

external pthread_attr_init(
    argument0 : Pointer[pthread_attr_t]) : Int;

external pthread_attr_setdetachstate(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Int) : Int;

external pthread_attr_setguardsize(
    argument0 : Pointer[pthread_attr_t],
    argument1 : CULong) : Int;

external pthread_attr_setinheritsched(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Int) : Int;

external pthread_attr_setschedparam(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Pointer[Struct_sched_param]) : Int;

external pthread_attr_setschedpolicy(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Int) : Int;

external pthread_attr_setscope(
    argument0 : Pointer[pthread_attr_t],
    argument1 : Int) : Int;

external pthread_attr_setstack(
    argument0 : Pointer[pthread_attr_t],
    argument1 : RawPointer,
    argument2 : CULong) : Int;

external pthread_attr_setstackaddr(
    argument0 : Pointer[pthread_attr_t],
    argument1 : RawPointer) : Int;

external pthread_attr_setstacksize(
    argument0 : Pointer[pthread_attr_t],
    argument1 : CULong) : Int;

external ("_pthread_cancel") pthread_cancel(
    argument0 : pthread_t) : Int;

external pthread_cond_broadcast(
    argument0 : Pointer[pthread_cond_t]) : Int;

external pthread_cond_destroy(
    argument0 : Pointer[pthread_cond_t]) : Int;

external ("_pthread_cond_init") pthread_cond_init(
    argument0 : Pointer[pthread_cond_t],
    argument1 : Pointer[pthread_condattr_t]) : Int;

external pthread_cond_signal(
    argument0 : Pointer[pthread_cond_t]) : Int;

external ("_pthread_cond_timedwait") pthread_cond_timedwait(
    argument0 : Pointer[pthread_cond_t],
    argument1 : Pointer[pthread_mutex_t],
    argument2 : Pointer[Struct_timespec]) : Int;

external ("_pthread_cond_wait") pthread_cond_wait(
    argument0 : Pointer[pthread_cond_t],
    argument1 : Pointer[pthread_mutex_t]) : Int;

external pthread_condattr_destroy(
    argument0 : Pointer[pthread_condattr_t]) : Int;

external pthread_condattr_init(
    argument0 : Pointer[pthread_condattr_t]) : Int;

external pthread_condattr_getpshared(
    argument0 : Pointer[pthread_condattr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_condattr_setpshared(
    argument0 : Pointer[pthread_condattr_t],
    argument1 : Int) : Int;

external pthread_create(
    argument0 : Pointer[pthread_t],
    argument1 : Pointer[pthread_attr_t],
    argument2 : CCodePointer[RawPointer,RawPointer],
    argument3 : RawPointer) : Int;

external pthread_detach(
    argument0 : pthread_t) : Int;

external pthread_equal(
    argument0 : pthread_t,
    argument1 : pthread_t) : Int;

external pthread_exit(
    argument0 : RawPointer) : Void;

external pthread_getconcurrency() : Int;

external pthread_getschedparam(
    argument0 : pthread_t,
    argument1 : Pointer[Int],
    argument2 : Pointer[Struct_sched_param]) : Int;

external pthread_getspecific(
    argument0 : CULong) : RawPointer;

external ("_pthread_join") pthread_join(
    argument0 : pthread_t,
    argument1 : Pointer[RawPointer]) : Int;

external pthread_key_create(
    argument0 : Pointer[CULong],
    argument1 : CCodePointer[RawPointer,Void]) : Int;

external pthread_key_delete(
    argument0 : CULong) : Int;

external pthread_mutex_destroy(
    argument0 : Pointer[pthread_mutex_t]) : Int;

external pthread_mutex_getprioceiling(
    argument0 : Pointer[pthread_mutex_t],
    argument1 : Pointer[Int]) : Int;

external pthread_mutex_init(
    argument0 : Pointer[pthread_mutex_t],
    argument1 : Pointer[pthread_mutexattr_t]) : Int;

external pthread_mutex_lock(
    argument0 : Pointer[pthread_mutex_t]) : Int;

external pthread_mutex_setprioceiling(
    argument0 : Pointer[pthread_mutex_t],
    argument1 : Int,
    argument2 : Pointer[Int]) : Int;

external pthread_mutex_trylock(
    argument0 : Pointer[pthread_mutex_t]) : Int;

external pthread_mutex_unlock(
    argument0 : Pointer[pthread_mutex_t]) : Int;

external ("_pthread_mutexattr_destroy") pthread_mutexattr_destroy(
    argument0 : Pointer[pthread_mutexattr_t]) : Int;

external pthread_mutexattr_getprioceiling(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_mutexattr_getprotocol(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_mutexattr_getpshared(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_mutexattr_gettype(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_mutexattr_init(
    argument0 : Pointer[pthread_mutexattr_t]) : Int;

external pthread_mutexattr_setprioceiling(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Int) : Int;

external pthread_mutexattr_setprotocol(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Int) : Int;

external pthread_mutexattr_setpshared(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Int) : Int;

external pthread_mutexattr_settype(
    argument0 : Pointer[pthread_mutexattr_t],
    argument1 : Int) : Int;

external pthread_once(
    argument0 : Pointer[pthread_once_t],
    argument1 : CCodePointer[Void]) : Int;

external ("_pthread_rwlock_destroy") pthread_rwlock_destroy(
    argument0 : Pointer[pthread_rwlock_t]) : Int;

external ("_pthread_rwlock_init") pthread_rwlock_init(
    argument0 : Pointer[pthread_rwlock_t],
    argument1 : Pointer[pthread_rwlockattr_t]) : Int;

external ("_pthread_rwlock_rdlock") pthread_rwlock_rdlock(
    argument0 : Pointer[pthread_rwlock_t]) : Int;

external ("_pthread_rwlock_tryrdlock") pthread_rwlock_tryrdlock(
    argument0 : Pointer[pthread_rwlock_t]) : Int;

external ("_pthread_rwlock_trywrlock") pthread_rwlock_trywrlock(
    argument0 : Pointer[pthread_rwlock_t]) : Int;

external ("_pthread_rwlock_wrlock") pthread_rwlock_wrlock(
    argument0 : Pointer[pthread_rwlock_t]) : Int;

external ("_pthread_rwlock_unlock") pthread_rwlock_unlock(
    argument0 : Pointer[pthread_rwlock_t]) : Int;

external pthread_rwlockattr_destroy(
    argument0 : Pointer[pthread_rwlockattr_t]) : Int;

external pthread_rwlockattr_getpshared(
    argument0 : Pointer[pthread_rwlockattr_t],
    argument1 : Pointer[Int]) : Int;

external pthread_rwlockattr_init(
    argument0 : Pointer[pthread_rwlockattr_t]) : Int;

external pthread_rwlockattr_setpshared(
    argument0 : Pointer[pthread_rwlockattr_t],
    argument1 : Int) : Int;

external pthread_self() : pthread_t;

external ("_pthread_setcancelstate") pthread_setcancelstate(
    argument0 : Int,
    argument1 : Pointer[Int]) : Int;

external ("_pthread_setcanceltype") pthread_setcanceltype(
    argument0 : Int,
    argument1 : Pointer[Int]) : Int;

external pthread_setconcurrency(
    argument0 : Int) : Int;

external pthread_setschedparam(
    argument0 : pthread_t,
    argument1 : Int,
    argument2 : Pointer[Struct_sched_param]) : Int;

external pthread_setspecific(
    argument0 : CULong,
    argument1 : RawPointer) : Int;

external ("_pthread_testcancel") pthread_testcancel() : Void;

external pthread_is_threaded_np() : Int;

external pthread_threadid_np(
    argument0 : pthread_t,
    argument1 : Pointer[UInt64]) : Int;

external pthread_getname_np(
    argument0 : pthread_t,
    argument1 : Pointer[CChar],
    argument2 : CULong) : Int;

external pthread_setname_np(
    argument0 : Pointer[CChar]) : Int;

external pthread_main_np() : Int;

external pthread_mach_thread_np(
    argument0 : pthread_t) : UInt;

external pthread_get_stacksize_np(
    argument0 : pthread_t) : CULong;

external pthread_get_stackaddr_np(
    argument0 : pthread_t) : RawPointer;

external pthread_cond_signal_thread_np(
    argument0 : Pointer[pthread_cond_t],
    argument1 : pthread_t) : Int;

external pthread_cond_timedwait_relative_np(
    argument0 : Pointer[pthread_cond_t],
    argument1 : Pointer[pthread_mutex_t],
    argument2 : Pointer[Struct_timespec]) : Int;

external pthread_create_suspended_np(
    argument0 : Pointer[pthread_t],
    argument1 : Pointer[pthread_attr_t],
    argument2 : CCodePointer[RawPointer,RawPointer],
    argument3 : RawPointer) : Int;

external pthread_kill(
    argument0 : pthread_t,
    argument1 : Int) : Int;

external pthread_from_mach_thread_np(
    argument0 : UInt) : pthread_t;

external ("_pthread_sigmask") pthread_sigmask(
    argument0 : Int,
    argument1 : Pointer[UInt],
    argument2 : Pointer[UInt]) : Int;

external pthread_yield_np() : Void;

record Struct_flock {
    l_start : Int64;
    l_len : Int64;
    l_pid : Int;
    l_type : Short;
    l_whence : Short;
}

record Struct_radvisory {
    ra_offset : Int64;
    ra_count : Int;
}

record Struct_fsignatures {
    fs_file_start : Int64;
    fs_blob_start : RawPointer;
    fs_blob_size : CULong;
}

static fsignatures_t = Struct_fsignatures;

record Struct_fstore {
    fst_flags : UInt;
    fst_posmode : Int;
    fst_offset : Int64;
    fst_length : Int64;
    fst_bytesalloc : Int64;
}

static fstore_t = Struct_fstore;

record Struct_fbootstraptransfer {
    fbt_offset : Int64;
    fbt_length : CULong;
    fbt_buffer : RawPointer;
}

static fbootstraptransfer_t = Struct_fbootstraptransfer;

record Struct_log2phys {
    l2p_flags : UInt;
    l2p_contigbytes : Int64;
    l2p_devoffset : Int64;
}

static filesec_t = OpaquePointer;

static FILESEC_OWNER = 1;
static FILESEC_GROUP = 2;
static FILESEC_UUID = 3;
static FILESEC_MODE = 4;
static FILESEC_ACL = 5;
static FILESEC_GRPUUID = 6;
static FILESEC_ACL_RAW = 100;
static FILESEC_ACL_ALLOCSIZE = 101;

static filesec_property_t = Int;

external ("_open") open(
    argument0 : Pointer[CChar],
    argument1 : Int,
    ...) : Int;

external ("_creat") creat(
    argument0 : Pointer[CChar],
    argument1 : UShort) : Int;

external ("_fcntl") fcntl(
    argument0 : Int,
    argument1 : Int,
    ...) : Int;

external openx_np(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : filesec_t) : Int;

external flock(
    argument0 : Int,
    argument1 : Int) : Int;

external filesec_init() : filesec_t;

external filesec_dup(
    argument0 : filesec_t) : filesec_t;

external filesec_free(
    argument0 : filesec_t) : Void;

external filesec_get_property(
    argument0 : filesec_t,
    argument1 : filesec_property_t,
    argument2 : RawPointer) : Int;

external filesec_query_property(
    argument0 : filesec_t,
    argument1 : filesec_property_t,
    argument2 : Pointer[Int]) : Int;

external filesec_set_property(
    argument0 : filesec_t,
    argument1 : filesec_property_t,
    argument2 : RawPointer) : Int;

external filesec_unset_property(
    argument0 : filesec_t,
    argument1 : filesec_property_t) : Int;

static int8_t = CChar;

static u_int8_t = CUChar;

static int16_t = Short;

static u_int16_t = UShort;

static int32_t = Int;

static u_int32_t = UInt;

static int64_t = Int64;

static u_int64_t = UInt64;

static register_t = Int64;

static uintptr_t = CULong;

static user_addr_t = UInt64;

static user_size_t = UInt64;

static user_ssize_t = Int64;

static user_long_t = Int64;

static user_ulong_t = UInt64;

static user_time_t = Int64;

static user_off_t = Int64;

static syscall_arg_t = UInt64;

static u_char = CUChar;

static u_short = UShort;

static u_int = UInt;

static u_long = CULong;

static ushort = UShort;

static uint = UInt;

static u_quad_t = UInt64;

static quad_t = Int64;

static qaddr_t = Pointer[Int64];

static caddr_t = Pointer[CChar];

static daddr_t = Int;

static fixpt_t = UInt;

static blkcnt_t = Int64;

static blksize_t = Int;

static in_addr_t = UInt;

static in_port_t = UShort;

static ino_t = UInt64;

static ino64_t = UInt64;

static key_t = Int;

static nlink_t = UShort;

static id_t = UInt;

static segsz_t = Int;

static swblk_t = Int;

static fd_mask = Int;

static fsblkcnt_t = UInt;

static fsfilcnt_t = UInt;

record Struct_itimerval {
    it_interval : Struct_timeval;
    it_value : Struct_timeval;
}

record Struct_timezone {
    tz_minuteswest : Int;
    tz_dsttime : Int;
}

record Struct_clockinfo {
    hz : Int;
    tick : Int;
    tickadj : Int;
    stathz : Int;
    profhz : Int;
}

external adjtime(
    argument0 : Pointer[Struct_timeval],
    argument1 : Pointer[Struct_timeval]) : Int;

external futimes(
    argument0 : Int,
    argument1 : Pointer[Struct_timeval]) : Int;

external lutimes(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_timeval]) : Int;

external settimeofday(
    argument0 : Pointer[Struct_timeval],
    argument1 : Pointer[Struct_timezone]) : Int;

external getitimer(
    argument0 : Int,
    argument1 : Pointer[Struct_itimerval]) : Int;

external gettimeofday(
    argument0 : Pointer[Struct_timeval],
    argument1 : RawPointer) : Int;

external setitimer(
    argument0 : Int,
    argument1 : Pointer[Struct_itimerval],
    argument2 : Pointer[Struct_itimerval]) : Int;

external utimes(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_timeval]) : Int;

record Struct_ostat {
    st_dev : UShort;
    st_ino : UInt64;
    st_mode : UShort;
    st_nlink : UShort;
    st_uid : UShort;
    st_gid : UShort;
    st_rdev : UShort;
    st_size : Int;
    st_atimespec : Struct_timespec;
    st_mtimespec : Struct_timespec;
    st_ctimespec : Struct_timespec;
    st_blksize : Int;
    st_blocks : Int;
    st_flags : UInt;
    st_gen : UInt;
}

record Struct_stat {
    st_dev : Int;
    st_mode : UShort;
    st_nlink : UShort;
    st_ino : UInt64;
    st_uid : UInt;
    st_gid : UInt;
    st_rdev : Int;
    st_atimespec : Struct_timespec;
    st_mtimespec : Struct_timespec;
    st_ctimespec : Struct_timespec;
    st_birthtimespec : Struct_timespec;
    st_size : Int64;
    st_blocks : Int64;
    st_blksize : Int;
    st_flags : UInt;
    st_gen : UInt;
    st_lspare : Int;
    st_qspare : Array[Int64,2];
}

record Struct_stat64 {
    st_dev : Int;
    st_mode : UShort;
    st_nlink : UShort;
    st_ino : UInt64;
    st_uid : UInt;
    st_gid : UInt;
    st_rdev : Int;
    st_atimespec : Struct_timespec;
    st_mtimespec : Struct_timespec;
    st_ctimespec : Struct_timespec;
    st_birthtimespec : Struct_timespec;
    st_size : Int64;
    st_blocks : Int64;
    st_blksize : Int;
    st_flags : UInt;
    st_gen : UInt;
    st_lspare : Int;
    st_qspare : Array[Int64,2];
}

external ("_chmod") chmod(
    argument0 : Pointer[CChar],
    argument1 : UShort) : Int;

external ("_fchmod") fchmod(
    argument0 : Int,
    argument1 : UShort) : Int;

external ("_fstat$INODE64") fstat(
    argument0 : Int,
    argument1 : Pointer[Struct_stat]) : Int;

external ("_lstat$INODE64") lstat(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat]) : Int;

external mkdir(
    argument0 : Pointer[CChar],
    argument1 : UShort) : Int;

external mkfifo(
    argument0 : Pointer[CChar],
    argument1 : UShort) : Int;

external ("_stat$INODE64") stat(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat]) : Int;

external umask(
    argument0 : UShort) : UShort;

external chflags(
    argument0 : Pointer[CChar],
    argument1 : UInt) : Int;

external chmodx_np(
    argument0 : Pointer[CChar],
    argument1 : filesec_t) : Int;

external fchflags(
    argument0 : Int,
    argument1 : UInt) : Int;

external fchmodx_np(
    argument0 : Int,
    argument1 : filesec_t) : Int;

external ("_fstatx_np$INODE64") fstatx_np(
    argument0 : Int,
    argument1 : Pointer[Struct_stat],
    argument2 : filesec_t) : Int;

external lchflags(
    argument0 : Pointer[CChar],
    argument1 : UInt) : Int;

external lchmod(
    argument0 : Pointer[CChar],
    argument1 : UShort) : Int;

external ("_lstatx_np$INODE64") lstatx_np(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat],
    argument2 : filesec_t) : Int;

external mkdirx_np(
    argument0 : Pointer[CChar],
    argument1 : filesec_t) : Int;

external mkfifox_np(
    argument0 : Pointer[CChar],
    argument1 : filesec_t) : Int;

external ("_statx_np$INODE64") statx_np(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat],
    argument2 : filesec_t) : Int;

external umaskx_np(
    argument0 : filesec_t) : Int;

external fstatx64_np(
    argument0 : Int,
    argument1 : Pointer[Struct_stat64],
    argument2 : filesec_t) : Int;

external lstatx64_np(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat64],
    argument2 : filesec_t) : Int;

external statx64_np(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat64],
    argument2 : filesec_t) : Int;

external fstat64(
    argument0 : Int,
    argument1 : Pointer[Struct_stat64]) : Int;

external lstat64(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat64]) : Int;

external stat64(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Struct_stat64]) : Int;

external mlockall(
    argument0 : Int) : Int;

external munlockall() : Int;

external mlock(
    argument0 : RawPointer,
    argument1 : CULong) : Int;

external ("_mmap") mmap(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int,
    argument3 : Int,
    argument4 : Int,
    argument5 : Int64) : RawPointer;

external ("_mprotect") mprotect(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) : Int;

external ("_msync") msync(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) : Int;

external munlock(
    argument0 : RawPointer,
    argument1 : CULong) : Int;

external ("_munmap") munmap(
    argument0 : RawPointer,
    argument1 : CULong) : Int;

external shm_open(
    argument0 : Pointer[CChar],
    argument1 : Int,
    ...) : Int;

external shm_unlink(
    argument0 : Pointer[CChar]) : Int;

external posix_madvise(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) : Int;

external madvise(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) : Int;

external mincore(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Pointer[CChar]) : Int;

external minherit(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : Int) : Int;

static sa_family_t = CUChar;

static socklen_t = UInt;

record Struct_iovec {
    iov_base : RawPointer;
    iov_len : CULong;
}

record Struct_linger {
    l_onoff : Int;
    l_linger : Int;
}

record Struct_so_np_extensions {
    npx_flags : UInt;
    npx_mask : UInt;
}

record Struct_sockaddr {
    sa_len : CUChar;
    sa_family : CUChar;
    sa_data : Array[CChar,14];
}

record Struct_sockproto {
    sp_family : UShort;
    sp_protocol : UShort;
}

record Struct_sockaddr_storage {
    ss_len : CUChar;
    ss_family : CUChar;
    __ss_pad1 : Array[CChar,6];
    __ss_align : Int64;
    __ss_pad2 : Array[CChar,112];
}

record Struct_msghdr {
    msg_name : RawPointer;
    msg_namelen : UInt;
    msg_iov : Pointer[Struct_iovec];
    msg_iovlen : Int;
    msg_control : RawPointer;
    msg_controllen : UInt;
    msg_flags : Int;
}

record Struct_cmsghdr {
    cmsg_len : UInt;
    cmsg_level : Int;
    cmsg_type : Int;
}

record Struct_sf_hdtr {
    headers : Pointer[Struct_iovec];
    hdr_cnt : Int;
    trailers : Pointer[Struct_iovec];
    trl_cnt : Int;
}

external ("_accept") accept(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : Pointer[UInt]) : Int;

external ("_bind") bind(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : UInt) : Int;

external ("_connect") connect(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : UInt) : Int;

external ("_getpeername") getpeername(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : Pointer[UInt]) : Int;

external ("_getsockname") getsockname(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr],
    argument2 : Pointer[UInt]) : Int;

external getsockopt(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int,
    argument3 : RawPointer,
    argument4 : Pointer[UInt]) : Int;

external ("_listen") listen(
    argument0 : Int,
    argument1 : Int) : Int;

external ("_recv") recv(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int) : CLong;

external ("_recvfrom") recvfrom(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int,
    argument4 : Pointer[Struct_sockaddr],
    argument5 : Pointer[UInt]) : CLong;

external ("_recvmsg") recvmsg(
    argument0 : Int,
    argument1 : Pointer[Struct_msghdr],
    argument2 : Int) : CLong;

external ("_send") send(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int) : CLong;

external ("_sendmsg") sendmsg(
    argument0 : Int,
    argument1 : Pointer[Struct_msghdr],
    argument2 : Int) : CLong;

external ("_sendto") sendto(
    argument0 : Int,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : Int,
    argument4 : Pointer[Struct_sockaddr],
    argument5 : UInt) : CLong;

external setsockopt(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int,
    argument3 : RawPointer,
    argument4 : UInt) : Int;

external shutdown(
    argument0 : Int,
    argument1 : Int) : Int;

external sockatmark(
    argument0 : Int) : Int;

external socket(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int) : Int;

external ("_socketpair") socketpair(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int,
    argument3 : Pointer[Int]) : Int;

external sendfile(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int64,
    argument3 : Pointer[Int64],
    argument4 : Pointer[Struct_sf_hdtr],
    argument5 : Int) : Int;

external pfctlinput(
    argument0 : Int,
    argument1 : Pointer[Struct_sockaddr]) : Void;

static uint8_t = CUChar;

static uint16_t = UShort;

static uint32_t = UInt;

static uint64_t = UInt64;

static int_least8_t = CChar;

static int_least16_t = Short;

static int_least32_t = Int;

static int_least64_t = Int64;

static uint_least8_t = CUChar;

static uint_least16_t = UShort;

static uint_least32_t = UInt;

static uint_least64_t = UInt64;

static int_fast8_t = CChar;

static int_fast16_t = Short;

static int_fast32_t = Int;

static int_fast64_t = Int64;

static uint_fast8_t = CUChar;

static uint_fast16_t = UShort;

static uint_fast32_t = UInt;

static uint_fast64_t = UInt64;

static intmax_t = CLong;

static uintmax_t = CULong;

record Struct_kevent {
    ident : CULong;
    filter : Short;
    flags : UShort;
    fflags : UInt;
    data : CLong;
    udata : RawPointer;
}

record Struct_kevent64_s {
    ident : UInt64;
    filter : Short;
    flags : UShort;
    fflags : UInt;
    data : Int64;
    udata : UInt64;
    ext : Array[UInt64,2];
}

record Struct_klist {
    slh_first : OpaquePointer;
}

external kqueue() : Int;

external kevent(
    kq : Int,
    changelist : Pointer[Struct_kevent],
    nchanges : Int,
    eventlist : Pointer[Struct_kevent],
    nevents : Int,
    timeout : Pointer[Struct_timespec]) : Int;

external kevent64(
    kq : Int,
    changelist : Pointer[Struct_kevent64_s],
    nchanges : Int,
    eventlist : Pointer[Struct_kevent64_s],
    nevents : Int,
    flags : UInt,
    timeout : Pointer[Struct_timespec]) : Int;
