

//
// Union?
//

Union?(x) = false;
[...T] overload Union?(static Union[...T]) = true;



//
// UnionMembers
//

[...T] UnionMembers(static Union[...T]) = ...T;



//
// constructors, destroy
//

[...T]
overload Union[...T]() returned:Union[...T] {
}

[...T]
overload destroy(x:Union[...T]) {
}



//
// staticIndex
//

[...T, i]
overload staticIndex(x:Union[...T], static i) {
    alias T = nthValue(static SizeT(i), ...UnionMembers(Union[...T]));
    return ref Pointer[T](&x)^;
}


private procedure nthValue;

[i]
overload nthValue(static i, first, ...rest) =
    nthValue(static i-1, ...rest);

[i | i == 0]
overload nthValue(static i, first, ...rest) = first;
