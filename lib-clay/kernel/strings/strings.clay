import kernel.operators.*;
import kernel.characters.*;
import kernel.vectors.*;
import kernel.sequences.*;
import kernel.ranges.*;


//
// String
//

record String {
    data:Vector[Char];
}


//
// create string
//

overload init(a:String) {
    init(a.data);
    push(a.data, char(0));
}

[n]
string(a:Array[Char,n]) {
    var s = String(makeVector(a));
    push(s.data, char(0));
    return s;
}


//
// size, at
//

overload size(a:String) = size(a.data) - 1;

overload item(a:String, i) = ref item(a.data, i);


//
// begin, end, iterator
//

overload begin(a:String) = begin(a.data);
overload end(a:String) = end(a.data) - 1;
overload iterator(a:String) = CoordinateRange(begin(a), end(a));

//
// c-string compatibility
//

cstring(s:String) = &item(s, 0).code;
