import __primitives__.*;

overloadable destroy;
overloadable assign;

overloadable equals?;
overloadable lesser?;
overloadable lesserEquals?;
overloadable greater?;
overloadable greaterEquals?;

overloadable plus;
overloadable minus;
overloadable add;
overloadable subtract;
overloadable multiply;
overloadable divide;
overloadable remainder;

overloadable inc;
overloadable dec;

overloadable deref;

overloadable hash;

overloadable iterator;
overloadable hasNext?;
overloadable next;


//
// defaults
//

[T]
overload T() : T {
}

initialize(a) {
    a <== TypeOf(a)();
}

[T]
overload destroy(a:T) {
}

[T]
overload assign(dest:T, src:T) {
    if (equals?(&dest, &src)) return;
    destroy(dest);
    dest <== src;
}

[T]
notEquals?(a:T, b:T) = not equals?(a, b);

[T]
overload lesserEquals?(a:T, b:T) = equals?(a, b) or lesser?(a, b);

[T]
overload greater?(a:T, b:T) = not lesserEquals?(a, b);

[T]
overload greaterEquals?(a:T, b:T) = not lesser?(a, b);


//
// swap
//

swap(a, b) {
    var temp = a;
    a = b;
    b = temp;
}
