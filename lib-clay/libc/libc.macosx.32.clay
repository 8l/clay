// Auto-Generated by BindingsGenerator

import types.*;
import operators.*;
import numbers.*;
import pointers.*;

private static OpaquePointer = RawPointer;
private static UnknownType = Int;
private static AUnionType = Int;


static __int8_t = Int8;

static __uint8_t = UInt8;

static __int16_t = Int16;

static __uint16_t = UInt16;

static __int32_t = Int;

static __uint32_t = UInt;

static __int64_t = Int64;

static __uint64_t = UInt64;

static __darwin_intptr_t = Int;

static __darwin_natural_t = UInt;

static __darwin_ct_rune_t = Int;

static __mbstate_t = AUnionType;

static __darwin_mbstate_t = __mbstate_t;

static __darwin_ptrdiff_t = Int;

static __darwin_size_t = UInt;

static __darwin_va_list = Int;

static __darwin_wchar_t = Int;

static __darwin_rune_t = Int;

static __darwin_wint_t = Int;

static __darwin_clock_t = UInt;

static __darwin_socklen_t = UInt;

static __darwin_ssize_t = Int;

static __darwin_time_t = Int;

record __darwin_pthread_handler_rec {
    __routine : CCodePointer[RawPointer,Void];
    __arg : RawPointer;
    __next : Pointer[__darwin_pthread_handler_rec];
}

record _opaque_pthread_attr_t {
    __sig : Int;
    __opaque : Array[Int8,36];
}

record _opaque_pthread_cond_t {
    __sig : Int;
    __opaque : Array[Int8,24];
}

record _opaque_pthread_condattr_t {
    __sig : Int;
    __opaque : Array[Int8,4];
}

record _opaque_pthread_mutex_t {
    __sig : Int;
    __opaque : Array[Int8,40];
}

record _opaque_pthread_mutexattr_t {
    __sig : Int;
    __opaque : Array[Int8,8];
}

record _opaque_pthread_once_t {
    __sig : Int;
    __opaque : Array[Int8,4];
}

record _opaque_pthread_rwlock_t {
    __sig : Int;
    __opaque : Array[Int8,124];
}

record _opaque_pthread_rwlockattr_t {
    __sig : Int;
    __opaque : Array[Int8,12];
}

record _opaque_pthread_t {
    __sig : Int;
    __cleanup_stack : Pointer[__darwin_pthread_handler_rec];
    __opaque : Array[Int8,596];
}

static __darwin_blkcnt_t = Int64;

static __darwin_blksize_t = Int;

static __darwin_dev_t = Int;

static __darwin_fsblkcnt_t = UInt;

static __darwin_fsfilcnt_t = UInt;

static __darwin_gid_t = UInt;

static __darwin_id_t = UInt;

static __darwin_ino64_t = UInt64;

static __darwin_ino_t = UInt64;

static __darwin_mach_port_name_t = UInt;

static __darwin_mach_port_t = UInt;

static __darwin_mode_t = UInt16;

static __darwin_off_t = Int64;

static __darwin_pid_t = Int;

static __darwin_pthread_attr_t = _opaque_pthread_attr_t;

static __darwin_pthread_cond_t = _opaque_pthread_cond_t;

static __darwin_pthread_condattr_t = _opaque_pthread_condattr_t;

static __darwin_pthread_key_t = UInt;

static __darwin_pthread_mutex_t = _opaque_pthread_mutex_t;

static __darwin_pthread_mutexattr_t = _opaque_pthread_mutexattr_t;

static __darwin_pthread_once_t = _opaque_pthread_once_t;

static __darwin_pthread_rwlock_t = _opaque_pthread_rwlock_t;

static __darwin_pthread_rwlockattr_t = _opaque_pthread_rwlockattr_t;

static __darwin_pthread_t = Pointer[_opaque_pthread_t];

static __darwin_sigset_t = UInt;

static __darwin_suseconds_t = Int;

static __darwin_uid_t = UInt;

static __darwin_useconds_t = UInt;

static __darwin_uuid_t = Array[UInt8,16];

static __darwin_uuid_string_t = Array[Int8,37];

static __darwin_nl_item = Int;

static __darwin_wctrans_t = Int;

static __darwin_wctype_t = UInt;

static va_list = Int;

static off_t = Int64;

static size_t = UInt;

static fpos_t = Int64;

record __sbuf {
    _base : Pointer[UInt8];
    _size : Int;
}

record __sFILE {
    _p : Pointer[UInt8];
    _r : Int;
    _w : Int;
    _flags : Int16;
    _file : Int16;
    _bf : __sbuf;
    _lbfsize : Int;
    _cookie : RawPointer;
    _close : CCodePointer[RawPointer,Int];
    _read : CCodePointer[RawPointer,Pointer[Int8],Int,Int];
    _seek : CCodePointer[RawPointer,Int64,Int,Int64];
    _write : CCodePointer[RawPointer,Pointer[Int8],Int,Int];
    _ub : __sbuf;
    _extra : OpaquePointer;
    _ur : Int;
    _ubuf : Array[UInt8,3];
    _nbuf : Array[UInt8,1];
    _lb : __sbuf;
    _blksize : Int;
    _offset : Int64;
}

static FILE = __sFILE;

external __stdinp : Pointer[FILE];

external __stdoutp : Pointer[FILE];

external __stderrp : Pointer[FILE];

external clearerr(
    argument0 : Pointer[FILE]) : Void;

external fclose(
    argument0 : Pointer[FILE]) : Int;

external feof(
    argument0 : Pointer[FILE]) : Int;

external ferror(
    argument0 : Pointer[FILE]) : Int;

external fflush(
    argument0 : Pointer[FILE]) : Int;

external fgetc(
    argument0 : Pointer[FILE]) : Int;

external fgetpos(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int64]) : Int;

external fgets(
    argument0 : Pointer[Int8],
    argument1 : Int,
    argument2 : Pointer[FILE]) : Pointer[Int8];

external fopen(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[FILE];

external fprintf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int8],
    ...) : Int;

external fputc(
    argument0 : Int,
    argument1 : Pointer[FILE]) : Int;

external fputs(
    argument0 : Pointer[Int8],
    argument1 : Pointer[FILE]) : Int;

external fread(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : Pointer[FILE]) : UInt;

external freopen(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Pointer[FILE]) : Pointer[FILE];

external fscanf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int8],
    ...) : Int;

external fseek(
    argument0 : Pointer[FILE],
    argument1 : Int,
    argument2 : Int) : Int;

external fsetpos(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int64]) : Int;

external ftell(
    argument0 : Pointer[FILE]) : Int;

external fwrite(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : Pointer[FILE]) : UInt;

external getc(
    argument0 : Pointer[FILE]) : Int;

external getchar() : Int;

external gets(
    argument0 : Pointer[Int8]) : Pointer[Int8];

external sys_nerr : Int;

external sys_errlist : Pointer[Pointer[Int8]];

external perror(
    argument0 : Pointer[Int8]) : Void;

external printf(
    argument0 : Pointer[Int8],
    ...) : Int;

external putc(
    argument0 : Int,
    argument1 : Pointer[FILE]) : Int;

external putchar(
    argument0 : Int) : Int;

external puts(
    argument0 : Pointer[Int8]) : Int;

external remove(
    argument0 : Pointer[Int8]) : Int;

external rename(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Int;

external rewind(
    argument0 : Pointer[FILE]) : Void;

external scanf(
    argument0 : Pointer[Int8],
    ...) : Int;

external setbuf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int8]) : Void;

external setvbuf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int8],
    argument2 : Int,
    argument3 : UInt) : Int;

external sprintf(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    ...) : Int;

external sscanf(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    ...) : Int;

external tmpfile() : Pointer[FILE];

external tmpnam(
    argument0 : Pointer[Int8]) : Pointer[Int8];

external ungetc(
    argument0 : Int,
    argument1 : Pointer[FILE]) : Int;

external vfprintf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int8],
    argument2 : Int) : Int;

external vprintf(
    argument0 : Pointer[Int8],
    argument1 : Int) : Int;

external vsprintf(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Int) : Int;

external asprintf(
    argument0 : Pointer[Pointer[Int8]],
    argument1 : Pointer[Int8],
    ...) : Int;

external vasprintf(
    argument0 : Pointer[Pointer[Int8]],
    argument1 : Pointer[Int8],
    argument2 : Int) : Int;

external ctermid(
    argument0 : Pointer[Int8]) : Pointer[Int8];

external ctermid_r(
    argument0 : Pointer[Int8]) : Pointer[Int8];

external fdopen(
    argument0 : Int,
    argument1 : Pointer[Int8]) : Pointer[FILE];

external fgetln(
    argument0 : Pointer[FILE],
    argument1 : Pointer[UInt]) : Pointer[Int8];

external fileno(
    argument0 : Pointer[FILE]) : Int;

external flockfile(
    argument0 : Pointer[FILE]) : Void;

external fmtcheck(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external fpurge(
    argument0 : Pointer[FILE]) : Int;

external fseeko(
    argument0 : Pointer[FILE],
    argument1 : Int64,
    argument2 : Int) : Int;

external ftello(
    argument0 : Pointer[FILE]) : Int64;

external ftrylockfile(
    argument0 : Pointer[FILE]) : Int;

external funlockfile(
    argument0 : Pointer[FILE]) : Void;

external getc_unlocked(
    argument0 : Pointer[FILE]) : Int;

external getchar_unlocked() : Int;

external getw(
    argument0 : Pointer[FILE]) : Int;

external pclose(
    argument0 : Pointer[FILE]) : Int;

external popen(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[FILE];

external putc_unlocked(
    argument0 : Int,
    argument1 : Pointer[FILE]) : Int;

external putchar_unlocked(
    argument0 : Int) : Int;

external putw(
    argument0 : Int,
    argument1 : Pointer[FILE]) : Int;

external setbuffer(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int8],
    argument2 : Int) : Void;

external setlinebuf(
    argument0 : Pointer[FILE]) : Int;

external snprintf(
    argument0 : Pointer[Int8],
    argument1 : UInt,
    argument2 : Pointer[Int8],
    ...) : Int;

external tempnam(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external vfscanf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int8],
    argument2 : Int) : Int;

external vscanf(
    argument0 : Pointer[Int8],
    argument1 : Int) : Int;

external vsnprintf(
    argument0 : Pointer[Int8],
    argument1 : UInt,
    argument2 : Pointer[Int8],
    argument3 : Int) : Int;

external vsscanf(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Int) : Int;

external zopen(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Int) : Pointer[FILE];

external funopen(
    argument0 : RawPointer,
    argument1 : CCodePointer[RawPointer,Pointer[Int8],Int,Int],
    argument2 : CCodePointer[RawPointer,Pointer[Int8],Int,Int],
    argument3 : CCodePointer[RawPointer,Int64,Int,Int64],
    argument4 : CCodePointer[RawPointer,Int]) : Pointer[FILE];

external __srget(
    argument0 : Pointer[FILE]) : Int;

external __svfscanf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int8],
    argument2 : Int) : Int;

external __swbuf(
    argument0 : Int,
    argument1 : Pointer[FILE]) : Int;

external __sprintf_chk(
    argument0 : Pointer[Int8],
    argument1 : Int,
    argument2 : UInt,
    argument3 : Pointer[Int8],
    ...) : Int;

external __snprintf_chk(
    argument0 : Pointer[Int8],
    argument1 : UInt,
    argument2 : Int,
    argument3 : UInt,
    argument4 : Pointer[Int8],
    ...) : Int;

external __vsprintf_chk(
    argument0 : Pointer[Int8],
    argument1 : Int,
    argument2 : UInt,
    argument3 : Pointer[Int8],
    argument4 : Int) : Int;

external __vsnprintf_chk(
    argument0 : Pointer[Int8],
    argument1 : UInt,
    argument2 : Int,
    argument3 : UInt,
    argument4 : Pointer[Int8],
    argument5 : Int) : Int;

static P_ALL = 0;
static P_PID = 1;
static P_PGID = 2;

static idtype_t = Int;

static pid_t = Int;

static id_t = UInt;

static sig_atomic_t = Int;

record __darwin_i386_thread_state {
    __eax : UInt;
    __ebx : UInt;
    __ecx : UInt;
    __edx : UInt;
    __edi : UInt;
    __esi : UInt;
    __ebp : UInt;
    __esp : UInt;
    __ss : UInt;
    __eflags : UInt;
    __eip : UInt;
    __cs : UInt;
    __ds : UInt;
    __es : UInt;
    __fs : UInt;
    __gs : UInt;
}

record __darwin_fp_control {
    __invalid : UInt16;
    __denorm : UInt16;
    __zdiv : UInt16;
    __ovrfl : UInt16;
    __undfl : UInt16;
    __precis : UInt16;
    unnamed_field6 : UInt16;
    __pc : UInt16;
    __rc : UInt16;
    unnamed_field9 : UInt16;
    unnamed_field10 : UInt16;
}

static __darwin_fp_control_t = __darwin_fp_control;

record __darwin_fp_status {
    __invalid : UInt16;
    __denorm : UInt16;
    __zdiv : UInt16;
    __ovrfl : UInt16;
    __undfl : UInt16;
    __precis : UInt16;
    __stkflt : UInt16;
    __errsumm : UInt16;
    __c0 : UInt16;
    __c1 : UInt16;
    __c2 : UInt16;
    __tos : UInt16;
    __c3 : UInt16;
    __busy : UInt16;
}

static __darwin_fp_status_t = __darwin_fp_status;

record __darwin_mmst_reg {
    __mmst_reg : Array[Int8,10];
    __mmst_rsrv : Array[Int8,6];
}

record __darwin_xmm_reg {
    __xmm_reg : Array[Int8,16];
}

record __darwin_i386_float_state {
    __fpu_reserved : Array[Int,2];
    __fpu_fcw : __darwin_fp_control;
    __fpu_fsw : __darwin_fp_status;
    __fpu_ftw : UInt8;
    __fpu_rsrv1 : UInt8;
    __fpu_fop : UInt16;
    __fpu_ip : UInt;
    __fpu_cs : UInt16;
    __fpu_rsrv2 : UInt16;
    __fpu_dp : UInt;
    __fpu_ds : UInt16;
    __fpu_rsrv3 : UInt16;
    __fpu_mxcsr : UInt;
    __fpu_mxcsrmask : UInt;
    __fpu_stmm0 : __darwin_mmst_reg;
    __fpu_stmm1 : __darwin_mmst_reg;
    __fpu_stmm2 : __darwin_mmst_reg;
    __fpu_stmm3 : __darwin_mmst_reg;
    __fpu_stmm4 : __darwin_mmst_reg;
    __fpu_stmm5 : __darwin_mmst_reg;
    __fpu_stmm6 : __darwin_mmst_reg;
    __fpu_stmm7 : __darwin_mmst_reg;
    __fpu_xmm0 : __darwin_xmm_reg;
    __fpu_xmm1 : __darwin_xmm_reg;
    __fpu_xmm2 : __darwin_xmm_reg;
    __fpu_xmm3 : __darwin_xmm_reg;
    __fpu_xmm4 : __darwin_xmm_reg;
    __fpu_xmm5 : __darwin_xmm_reg;
    __fpu_xmm6 : __darwin_xmm_reg;
    __fpu_xmm7 : __darwin_xmm_reg;
    __fpu_rsrv4 : Array[Int8,224];
    __fpu_reserved1 : Int;
}

record __darwin_i386_exception_state {
    __trapno : UInt;
    __err : UInt;
    __faultvaddr : UInt;
}

record __darwin_x86_debug_state32 {
    __dr0 : UInt;
    __dr1 : UInt;
    __dr2 : UInt;
    __dr3 : UInt;
    __dr4 : UInt;
    __dr5 : UInt;
    __dr6 : UInt;
    __dr7 : UInt;
}

record __darwin_x86_thread_state64 {
    __rax : UInt64;
    __rbx : UInt64;
    __rcx : UInt64;
    __rdx : UInt64;
    __rdi : UInt64;
    __rsi : UInt64;
    __rbp : UInt64;
    __rsp : UInt64;
    __r8 : UInt64;
    __r9 : UInt64;
    __r10 : UInt64;
    __r11 : UInt64;
    __r12 : UInt64;
    __r13 : UInt64;
    __r14 : UInt64;
    __r15 : UInt64;
    __rip : UInt64;
    __rflags : UInt64;
    __cs : UInt64;
    __fs : UInt64;
    __gs : UInt64;
}

record __darwin_x86_float_state64 {
    __fpu_reserved : Array[Int,2];
    __fpu_fcw : __darwin_fp_control;
    __fpu_fsw : __darwin_fp_status;
    __fpu_ftw : UInt8;
    __fpu_rsrv1 : UInt8;
    __fpu_fop : UInt16;
    __fpu_ip : UInt;
    __fpu_cs : UInt16;
    __fpu_rsrv2 : UInt16;
    __fpu_dp : UInt;
    __fpu_ds : UInt16;
    __fpu_rsrv3 : UInt16;
    __fpu_mxcsr : UInt;
    __fpu_mxcsrmask : UInt;
    __fpu_stmm0 : __darwin_mmst_reg;
    __fpu_stmm1 : __darwin_mmst_reg;
    __fpu_stmm2 : __darwin_mmst_reg;
    __fpu_stmm3 : __darwin_mmst_reg;
    __fpu_stmm4 : __darwin_mmst_reg;
    __fpu_stmm5 : __darwin_mmst_reg;
    __fpu_stmm6 : __darwin_mmst_reg;
    __fpu_stmm7 : __darwin_mmst_reg;
    __fpu_xmm0 : __darwin_xmm_reg;
    __fpu_xmm1 : __darwin_xmm_reg;
    __fpu_xmm2 : __darwin_xmm_reg;
    __fpu_xmm3 : __darwin_xmm_reg;
    __fpu_xmm4 : __darwin_xmm_reg;
    __fpu_xmm5 : __darwin_xmm_reg;
    __fpu_xmm6 : __darwin_xmm_reg;
    __fpu_xmm7 : __darwin_xmm_reg;
    __fpu_xmm8 : __darwin_xmm_reg;
    __fpu_xmm9 : __darwin_xmm_reg;
    __fpu_xmm10 : __darwin_xmm_reg;
    __fpu_xmm11 : __darwin_xmm_reg;
    __fpu_xmm12 : __darwin_xmm_reg;
    __fpu_xmm13 : __darwin_xmm_reg;
    __fpu_xmm14 : __darwin_xmm_reg;
    __fpu_xmm15 : __darwin_xmm_reg;
    __fpu_rsrv4 : Array[Int8,96];
    __fpu_reserved1 : Int;
}

record __darwin_x86_exception_state64 {
    __trapno : UInt;
    __err : UInt;
    __faultvaddr : UInt64;
}

record __darwin_x86_debug_state64 {
    __dr0 : UInt64;
    __dr1 : UInt64;
    __dr2 : UInt64;
    __dr3 : UInt64;
    __dr4 : UInt64;
    __dr5 : UInt64;
    __dr6 : UInt64;
    __dr7 : UInt64;
}

record __darwin_mcontext32 {
    __es : __darwin_i386_exception_state;
    __ss : __darwin_i386_thread_state;
    __fs : __darwin_i386_float_state;
}

record __darwin_mcontext64 {
    __es : __darwin_x86_exception_state64;
    __ss : __darwin_x86_thread_state64;
    __fs : __darwin_x86_float_state64;
}

static mcontext_t = Pointer[__darwin_mcontext32];

record __darwin_sigaltstack {
    ss_sp : RawPointer;
    ss_size : UInt;
    ss_flags : Int;
}

record __darwin_ucontext {
    uc_onstack : Int;
    uc_sigmask : UInt;
    uc_stack : __darwin_sigaltstack;
    uc_link : Pointer[__darwin_ucontext];
    uc_mcsize : UInt;
    uc_mcontext : Pointer[__darwin_mcontext32];
}

static stack_t = __darwin_sigaltstack;

static ucontext_t = __darwin_ucontext;

static pthread_attr_t = __darwin_pthread_attr_t;

static sigset_t = UInt;

static uid_t = UInt;

record sigevent {
    sigev_notify : Int;
    sigev_signo : Int;
    sigev_value : AUnionType;
    sigev_notify_function : CCodePointer[AUnionType,Void];
    sigev_notify_attributes : Pointer[pthread_attr_t];
}

record __siginfo {
    si_signo : Int;
    si_errno : Int;
    si_code : Int;
    si_pid : Int;
    si_uid : UInt;
    si_status : Int;
    si_addr : RawPointer;
    si_value : AUnionType;
    si_band : Int;
    __pad : Array[UInt,7];
}

static siginfo_t = __siginfo;

record __sigaction {
    __sigaction_u : AUnionType;
    sa_tramp : CCodePointer[RawPointer,Int,Int,Pointer[siginfo_t],RawPointer,Void];
    sa_mask : UInt;
    sa_flags : Int;
}

record sigaction {
    __sigaction_u : AUnionType;
    sa_mask : UInt;
    sa_flags : Int;
}

static sig_t = CCodePointer[Int,Void];

record sigvec {
    sv_handler : CCodePointer[Int,Void];
    sv_mask : Int;
    sv_flags : Int;
}

record sigstack {
    ss_sp : Pointer[Int8];
    ss_onstack : Int;
}

external signal(
    argument0 : Int,
    argument1 : CCodePointer[Int,Void]) : CCodePointer[Int,Void];

record timeval {
    tv_sec : Int;
    tv_usec : Int;
}

static rlim_t = UInt64;

record rusage {
    ru_utime : timeval;
    ru_stime : timeval;
    ru_maxrss : Int;
    ru_ixrss : Int;
    ru_idrss : Int;
    ru_isrss : Int;
    ru_minflt : Int;
    ru_majflt : Int;
    ru_nswap : Int;
    ru_inblock : Int;
    ru_oublock : Int;
    ru_msgsnd : Int;
    ru_msgrcv : Int;
    ru_nsignals : Int;
    ru_nvcsw : Int;
    ru_nivcsw : Int;
}

record rlimit {
    rlim_cur : UInt64;
    rlim_max : UInt64;
}

external getpriority(
    argument0 : Int,
    argument1 : UInt) : Int;

external getiopolicy_np(
    argument0 : Int,
    argument1 : Int) : Int;

external getrlimit(
    argument0 : Int,
    argument1 : Pointer[rlimit]) : Int;

external getrusage(
    argument0 : Int,
    argument1 : Pointer[rusage]) : Int;

external setpriority(
    argument0 : Int,
    argument1 : UInt,
    argument2 : Int) : Int;

external setiopolicy_np(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int) : Int;

external setrlimit(
    argument0 : Int,
    argument1 : Pointer[rlimit]) : Int;

external wait(
    argument0 : Pointer[Int]) : Int;

external waitpid(
    argument0 : Int,
    argument1 : Pointer[Int],
    argument2 : Int) : Int;

external waitid(
    argument0 : idtype_t,
    argument1 : UInt,
    argument2 : Pointer[siginfo_t],
    argument3 : Int) : Int;

external wait3(
    argument0 : Pointer[Int],
    argument1 : Int,
    argument2 : Pointer[rusage]) : Int;

external wait4(
    argument0 : Int,
    argument1 : Pointer[Int],
    argument2 : Int,
    argument3 : Pointer[rusage]) : Int;

external alloca(
    argument0 : UInt) : RawPointer;

static ct_rune_t = Int;

static rune_t = Int;

static wchar_t = Int;

record UnnamedRecord {
    quot : Int;
    rem : Int;
}

static div_t = UnnamedRecord;

record UnnamedRecord0 {
    quot : Int;
    rem : Int;
}

static ldiv_t = UnnamedRecord0;

record UnnamedRecord1 {
    quot : Int64;
    rem : Int64;
}

static lldiv_t = UnnamedRecord1;

external __mb_cur_max : Int;

external abort() : Void;

external abs(
    argument0 : Int) : Int;

external atexit(
    argument0 : CCodePointer[Void]) : Int;

external atof(
    argument0 : Pointer[Int8]) : Double;

external atoi(
    argument0 : Pointer[Int8]) : Int;

external atol(
    argument0 : Pointer[Int8]) : Int;

external atoll(
    argument0 : Pointer[Int8]) : Int64;

external bsearch(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt,
    argument3 : UInt,
    argument4 : CCodePointer[RawPointer,RawPointer,Int]) : RawPointer;

external calloc(
    argument0 : UInt,
    argument1 : UInt) : RawPointer;

external div(
    argument0 : Int,
    argument1 : Int) : div_t;

external exit(
    argument0 : Int) : Void;

external free(
    argument0 : RawPointer) : Void;

external getenv(
    argument0 : Pointer[Int8]) : Pointer[Int8];

external labs(
    argument0 : Int) : Int;

external ldiv(
    argument0 : Int,
    argument1 : Int) : ldiv_t;

external llabs(
    argument0 : Int64) : Int64;

external lldiv(
    argument0 : Int64,
    argument1 : Int64) : lldiv_t;

external malloc(
    argument0 : UInt) : RawPointer;

external mblen(
    argument0 : Pointer[Int8],
    argument1 : UInt) : Int;

external mbstowcs(
    argument0 : Pointer[Int],
    argument1 : Pointer[Int8],
    argument2 : UInt) : UInt;

external mbtowc(
    argument0 : Pointer[Int],
    argument1 : Pointer[Int8],
    argument2 : UInt) : Int;

external posix_memalign(
    argument0 : Pointer[RawPointer],
    argument1 : UInt,
    argument2 : UInt) : Int;

external qsort(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : CCodePointer[RawPointer,RawPointer,Int]) : Void;

external rand() : Int;

external realloc(
    argument0 : RawPointer,
    argument1 : UInt) : RawPointer;

external srand(
    argument0 : UInt) : Void;

external strtod(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]]) : Double;

external strtof(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]]) : Float;

external strtol(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]],
    argument2 : Int) : Int;

external strtold(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]]) : UnsupportedCBuiltinType21;

external strtoll(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]],
    argument2 : Int) : Int64;

external strtoul(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]],
    argument2 : Int) : UInt;

external strtoull(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]],
    argument2 : Int) : UInt64;

external system(
    argument0 : Pointer[Int8]) : Int;

external wcstombs(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int],
    argument2 : UInt) : UInt;

external wctomb(
    argument0 : Pointer[Int8],
    argument1 : Int) : Int;

external _Exit(
    argument0 : Int) : Void;

external a64l(
    argument0 : Pointer[Int8]) : Int;

external drand48() : Double;

external ecvt(
    argument0 : Double,
    argument1 : Int,
    argument2 : Pointer[Int],
    argument3 : Pointer[Int]) : Pointer[Int8];

external erand48(
    argument0 : Pointer[UInt16]) : Double;

external fcvt(
    argument0 : Double,
    argument1 : Int,
    argument2 : Pointer[Int],
    argument3 : Pointer[Int]) : Pointer[Int8];

external gcvt(
    argument0 : Double,
    argument1 : Int,
    argument2 : Pointer[Int8]) : Pointer[Int8];

external getsubopt(
    argument0 : Pointer[Pointer[Int8]],
    argument1 : Pointer[Pointer[Int8]],
    argument2 : Pointer[Pointer[Int8]]) : Int;

external grantpt(
    argument0 : Int) : Int;

external initstate(
    argument0 : UInt,
    argument1 : Pointer[Int8],
    argument2 : UInt) : Pointer[Int8];

external jrand48(
    argument0 : Pointer[UInt16]) : Int;

external l64a(
    argument0 : Int) : Pointer[Int8];

external lcong48(
    argument0 : Pointer[UInt16]) : Void;

external lrand48() : Int;

external mktemp(
    argument0 : Pointer[Int8]) : Pointer[Int8];

external mkstemp(
    argument0 : Pointer[Int8]) : Int;

external mrand48() : Int;

external nrand48(
    argument0 : Pointer[UInt16]) : Int;

external posix_openpt(
    argument0 : Int) : Int;

external ptsname(
    argument0 : Int) : Pointer[Int8];

external putenv(
    argument0 : Pointer[Int8]) : Int;

external random() : Int;

external rand_r(
    argument0 : Pointer[UInt]) : Int;

external realpath(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external seed48(
    argument0 : Pointer[UInt16]) : Pointer[UInt16];

external setenv(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Int) : Int;

external setkey(
    argument0 : Pointer[Int8]) : Void;

external setstate(
    argument0 : Pointer[Int8]) : Pointer[Int8];

external srand48(
    argument0 : Int) : Void;

external srandom(
    argument0 : UInt) : Void;

external unlockpt(
    argument0 : Int) : Int;

external unsetenv(
    argument0 : Pointer[Int8]) : Int;

static int8_t = Int8;

static u_int8_t = UInt8;

static int16_t = Int16;

static u_int16_t = UInt16;

static int32_t = Int;

static u_int32_t = UInt;

static int64_t = Int64;

static u_int64_t = UInt64;

static register_t = Int;

static intptr_t = Int;

static uintptr_t = UInt;

static user_addr_t = UInt64;

static user_size_t = UInt64;

static user_ssize_t = Int64;

static user_long_t = Int64;

static user_ulong_t = UInt64;

static user_time_t = Int64;

static user_off_t = Int64;

static syscall_arg_t = UInt64;

static dev_t = Int;

static mode_t = UInt16;

external arc4random() : UInt;

external arc4random_addrandom(
    dat : Pointer[UInt8],
    datlen : Int) : Void;

external arc4random_stir() : Void;

external atexit_b(
    argument0 : UnknownType) : Int;

external bsearch_b(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt,
    argument3 : UInt,
    argument4 : UnknownType) : RawPointer;

external cgetcap(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Int) : Pointer[Int8];

external cgetclose() : Int;

external cgetent(
    argument0 : Pointer[Pointer[Int8]],
    argument1 : Pointer[Pointer[Int8]],
    argument2 : Pointer[Int8]) : Int;

external cgetfirst(
    argument0 : Pointer[Pointer[Int8]],
    argument1 : Pointer[Pointer[Int8]]) : Int;

external cgetmatch(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Int;

external cgetnext(
    argument0 : Pointer[Pointer[Int8]],
    argument1 : Pointer[Pointer[Int8]]) : Int;

external cgetnum(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Pointer[Int]) : Int;

external cgetset(
    argument0 : Pointer[Int8]) : Int;

external cgetstr(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Pointer[Pointer[Int8]]) : Int;

external cgetustr(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Pointer[Pointer[Int8]]) : Int;

external daemon(
    argument0 : Int,
    argument1 : Int) : Int;

external devname(
    argument0 : Int,
    argument1 : UInt16) : Pointer[Int8];

external devname_r(
    argument0 : Int,
    argument1 : UInt16,
    buf : Pointer[Int8],
    len : Int) : Pointer[Int8];

external getbsize(
    argument0 : Pointer[Int],
    argument1 : Pointer[Int]) : Pointer[Int8];

external getloadavg(
    argument0 : Pointer[Double],
    argument1 : Int) : Int;

external getprogname() : Pointer[Int8];

external heapsort(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : CCodePointer[RawPointer,RawPointer,Int]) : Int;

external heapsort_b(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : UnknownType) : Int;

external mergesort(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : CCodePointer[RawPointer,RawPointer,Int]) : Int;

external mergesort_b(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : UnknownType) : Int;

external psort(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : CCodePointer[RawPointer,RawPointer,Int]) : Void;

external psort_b(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : UnknownType) : Void;

external psort_r(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : RawPointer,
    argument4 : CCodePointer[RawPointer,RawPointer,RawPointer,Int]) : Void;

external qsort_b(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : UnknownType) : Void;

external qsort_r(
    argument0 : RawPointer,
    argument1 : UInt,
    argument2 : UInt,
    argument3 : RawPointer,
    argument4 : CCodePointer[RawPointer,RawPointer,RawPointer,Int]) : Void;

external radixsort(
    argument0 : Pointer[Pointer[UInt8]],
    argument1 : Int,
    argument2 : Pointer[UInt8],
    argument3 : UInt) : Int;

external setprogname(
    argument0 : Pointer[Int8]) : Void;

external sradixsort(
    argument0 : Pointer[Pointer[UInt8]],
    argument1 : Int,
    argument2 : Pointer[UInt8],
    argument3 : UInt) : Int;

external sranddev() : Void;

external srandomdev() : Void;

external reallocf(
    argument0 : RawPointer,
    argument1 : UInt) : RawPointer;

external strtoq(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]],
    argument2 : Int) : Int64;

external strtouq(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Pointer[Int8]],
    argument2 : Int) : UInt64;

external suboptarg : Pointer[Int8];

external valloc(
    argument0 : UInt) : RawPointer;

static ssize_t = Int;

external memchr(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : UInt) : RawPointer;

external memcmp(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt) : Int;

external memcpy(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt) : RawPointer;

external memmove(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt) : RawPointer;

external memset(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : UInt) : RawPointer;

external stpcpy(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external strcasestr(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external strcat(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external strchr(
    argument0 : Pointer[Int8],
    argument1 : Int) : Pointer[Int8];

external strcmp(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Int;

external strcoll(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Int;

external strcpy(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external strcspn(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : UInt;

external strerror(
    argument0 : Int) : Pointer[Int8];

external strerror_r(
    argument0 : Int,
    argument1 : Pointer[Int8],
    argument2 : UInt) : Int;

external strlen(
    argument0 : Pointer[Int8]) : UInt;

external strncat(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : UInt) : Pointer[Int8];

external strncmp(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : UInt) : Int;

external strncpy(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : UInt) : Pointer[Int8];

external strnstr(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : UInt) : Pointer[Int8];

external strpbrk(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external strrchr(
    argument0 : Pointer[Int8],
    argument1 : Int) : Pointer[Int8];

external strspn(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : UInt;

external strstr(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external strtok(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external strxfrm(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : UInt) : UInt;

external memccpy(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : Int,
    argument3 : UInt) : RawPointer;

external strtok_r(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : Pointer[Pointer[Int8]]) : Pointer[Int8];

external strdup(
    argument0 : Pointer[Int8]) : Pointer[Int8];

external bcmp(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt) : Int;

external bcopy(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt) : Void;

external bzero(
    argument0 : RawPointer,
    argument1 : UInt) : Void;

external ffs(
    argument0 : Int) : Int;

external ffsl(
    argument0 : Int) : Int;

external fls(
    argument0 : Int) : Int;

external flsl(
    argument0 : Int) : Int;

external index(
    argument0 : Pointer[Int8],
    argument1 : Int) : Pointer[Int8];

external memset_pattern4(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt) : Void;

external memset_pattern8(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt) : Void;

external memset_pattern16(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : UInt) : Void;

external rindex(
    argument0 : Pointer[Int8],
    argument1 : Int) : Pointer[Int8];

external strcasecmp(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8]) : Int;

external strlcat(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : UInt) : UInt;

external strlcpy(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : UInt) : UInt;

external strmode(
    argument0 : Int,
    argument1 : Pointer[Int8]) : Void;

external strncasecmp(
    argument0 : Pointer[Int8],
    argument1 : Pointer[Int8],
    argument2 : UInt) : Int;

external strsep(
    argument0 : Pointer[Pointer[Int8]],
    argument1 : Pointer[Int8]) : Pointer[Int8];

external strsignal(
    sig : Int) : Pointer[Int8];

external swab(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : Int) : Void;

static float_t = Float;

static double_t = Double;

external __math_errhandling() : UInt;

external __fpclassifyf(
    argument0 : Float) : Int;

external __fpclassifyd(
    argument0 : Double) : Int;

external __fpclassify(
    argument0 : UnsupportedCBuiltinType21) : Int;

external acos(
    argument0 : Double) : Double;

external acosf(
    argument0 : Float) : Float;

external asin(
    argument0 : Double) : Double;

external asinf(
    argument0 : Float) : Float;

external atan(
    argument0 : Double) : Double;

external atanf(
    argument0 : Float) : Float;

external atan2(
    argument0 : Double,
    argument1 : Double) : Double;

external atan2f(
    argument0 : Float,
    argument1 : Float) : Float;

external cos(
    argument0 : Double) : Double;

external cosf(
    argument0 : Float) : Float;

external sin(
    argument0 : Double) : Double;

external sinf(
    argument0 : Float) : Float;

external tan(
    argument0 : Double) : Double;

external tanf(
    argument0 : Float) : Float;

external acosh(
    argument0 : Double) : Double;

external acoshf(
    argument0 : Float) : Float;

external asinh(
    argument0 : Double) : Double;

external asinhf(
    argument0 : Float) : Float;

external atanh(
    argument0 : Double) : Double;

external atanhf(
    argument0 : Float) : Float;

external cosh(
    argument0 : Double) : Double;

external coshf(
    argument0 : Float) : Float;

external sinh(
    argument0 : Double) : Double;

external sinhf(
    argument0 : Float) : Float;

external tanh(
    argument0 : Double) : Double;

external tanhf(
    argument0 : Float) : Float;

external exp(
    argument0 : Double) : Double;

external expf(
    argument0 : Float) : Float;

external exp2(
    argument0 : Double) : Double;

external exp2f(
    argument0 : Float) : Float;

external expm1(
    argument0 : Double) : Double;

external expm1f(
    argument0 : Float) : Float;

external log(
    argument0 : Double) : Double;

external logf(
    argument0 : Float) : Float;

external log10(
    argument0 : Double) : Double;

external log10f(
    argument0 : Float) : Float;

external log2(
    argument0 : Double) : Double;

external log2f(
    argument0 : Float) : Float;

external log1p(
    argument0 : Double) : Double;

external log1pf(
    argument0 : Float) : Float;

external logb(
    argument0 : Double) : Double;

external logbf(
    argument0 : Float) : Float;

external modf(
    argument0 : Double,
    argument1 : Pointer[Double]) : Double;

external modff(
    argument0 : Float,
    argument1 : Pointer[Float]) : Float;

external ldexp(
    argument0 : Double,
    argument1 : Int) : Double;

external ldexpf(
    argument0 : Float,
    argument1 : Int) : Float;

external frexp(
    argument0 : Double,
    argument1 : Pointer[Int]) : Double;

external frexpf(
    argument0 : Float,
    argument1 : Pointer[Int]) : Float;

external ilogb(
    argument0 : Double) : Int;

external ilogbf(
    argument0 : Float) : Int;

external scalbn(
    argument0 : Double,
    argument1 : Int) : Double;

external scalbnf(
    argument0 : Float,
    argument1 : Int) : Float;

external scalbln(
    argument0 : Double,
    argument1 : Int) : Double;

external scalblnf(
    argument0 : Float,
    argument1 : Int) : Float;

external fabs(
    argument0 : Double) : Double;

external fabsf(
    argument0 : Float) : Float;

external cbrt(
    argument0 : Double) : Double;

external cbrtf(
    argument0 : Float) : Float;

external hypot(
    argument0 : Double,
    argument1 : Double) : Double;

external hypotf(
    argument0 : Float,
    argument1 : Float) : Float;

external pow(
    argument0 : Double,
    argument1 : Double) : Double;

external powf(
    argument0 : Float,
    argument1 : Float) : Float;

external sqrt(
    argument0 : Double) : Double;

external sqrtf(
    argument0 : Float) : Float;

external erf(
    argument0 : Double) : Double;

external erff(
    argument0 : Float) : Float;

external erfc(
    argument0 : Double) : Double;

external erfcf(
    argument0 : Float) : Float;

external lgamma(
    argument0 : Double) : Double;

external lgammaf(
    argument0 : Float) : Float;

external tgamma(
    argument0 : Double) : Double;

external tgammaf(
    argument0 : Float) : Float;

external ceil(
    argument0 : Double) : Double;

external ceilf(
    argument0 : Float) : Float;

external floor(
    argument0 : Double) : Double;

external floorf(
    argument0 : Float) : Float;

external nearbyint(
    argument0 : Double) : Double;

external nearbyintf(
    argument0 : Float) : Float;

external rint(
    argument0 : Double) : Double;

external rintf(
    argument0 : Float) : Float;

external lrint(
    argument0 : Double) : Int;

external lrintf(
    argument0 : Float) : Int;

external round(
    argument0 : Double) : Double;

external roundf(
    argument0 : Float) : Float;

external lround(
    argument0 : Double) : Int;

external lroundf(
    argument0 : Float) : Int;

external llrint(
    argument0 : Double) : Int64;

external llrintf(
    argument0 : Float) : Int64;

external llround(
    argument0 : Double) : Int64;

external llroundf(
    argument0 : Float) : Int64;

external trunc(
    argument0 : Double) : Double;

external truncf(
    argument0 : Float) : Float;

external fmod(
    argument0 : Double,
    argument1 : Double) : Double;

external fmodf(
    argument0 : Float,
    argument1 : Float) : Float;

external remainder(
    argument0 : Double,
    argument1 : Double) : Double;

external remainderf(
    argument0 : Float,
    argument1 : Float) : Float;

external remquo(
    argument0 : Double,
    argument1 : Double,
    argument2 : Pointer[Int]) : Double;

external remquof(
    argument0 : Float,
    argument1 : Float,
    argument2 : Pointer[Int]) : Float;

external copysign(
    argument0 : Double,
    argument1 : Double) : Double;

external copysignf(
    argument0 : Float,
    argument1 : Float) : Float;

external nan(
    argument0 : Pointer[Int8]) : Double;

external nanf(
    argument0 : Pointer[Int8]) : Float;

external nextafter(
    argument0 : Double,
    argument1 : Double) : Double;

external nextafterf(
    argument0 : Float,
    argument1 : Float) : Float;

external fdim(
    argument0 : Double,
    argument1 : Double) : Double;

external fdimf(
    argument0 : Float,
    argument1 : Float) : Float;

external fmax(
    argument0 : Double,
    argument1 : Double) : Double;

external fmaxf(
    argument0 : Float,
    argument1 : Float) : Float;

external fmin(
    argument0 : Double,
    argument1 : Double) : Double;

external fminf(
    argument0 : Float,
    argument1 : Float) : Float;

external fma(
    argument0 : Double,
    argument1 : Double,
    argument2 : Double) : Double;

external fmaf(
    argument0 : Float,
    argument1 : Float,
    argument2 : Float) : Float;

external acosl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external asinl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external atanl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external atan2l(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external cosl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external sinl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external tanl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external acoshl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external asinhl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external atanhl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external coshl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external sinhl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external tanhl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external expl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external exp2l(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external expm1l(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external logl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external log10l(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external log2l(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external log1pl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external logbl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external modfl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Pointer[UnsupportedCBuiltinType21]) : UnsupportedCBuiltinType21;

external ldexpl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Int) : UnsupportedCBuiltinType21;

external frexpl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Pointer[Int]) : UnsupportedCBuiltinType21;

external ilogbl(
    argument0 : UnsupportedCBuiltinType21) : Int;

external scalbnl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Int) : UnsupportedCBuiltinType21;

external scalblnl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Int) : UnsupportedCBuiltinType21;

external fabsl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external cbrtl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external hypotl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external powl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external sqrtl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external erfl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external erfcl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external lgammal(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external tgammal(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external ceill(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external floorl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external nearbyintl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external rintl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external lrintl(
    argument0 : UnsupportedCBuiltinType21) : Int;

external roundl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external lroundl(
    argument0 : UnsupportedCBuiltinType21) : Int;

external llrintl(
    argument0 : UnsupportedCBuiltinType21) : Int64;

external llroundl(
    argument0 : UnsupportedCBuiltinType21) : Int64;

external truncl(
    argument0 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external fmodl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external remainderl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external remquol(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21,
    argument2 : Pointer[Int]) : UnsupportedCBuiltinType21;

external copysignl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external nanl(
    argument0 : Pointer[Int8]) : UnsupportedCBuiltinType21;

external nextafterl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external nexttoward(
    argument0 : Double,
    argument1 : UnsupportedCBuiltinType21) : Double;

external nexttowardf(
    argument0 : Float,
    argument1 : UnsupportedCBuiltinType21) : Float;

external nexttowardl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external fdiml(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external fmaxl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external fminl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external fmal(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21,
    argument2 : UnsupportedCBuiltinType21) : UnsupportedCBuiltinType21;

external __inf() : Double;

external __inff() : Float;

external __infl() : UnsupportedCBuiltinType21;

external __nan() : Float;

external j0(
    argument0 : Double) : Double;

external j1(
    argument0 : Double) : Double;

external jn(
    argument0 : Int,
    argument1 : Double) : Double;

external y0(
    argument0 : Double) : Double;

external y1(
    argument0 : Double) : Double;

external yn(
    argument0 : Int,
    argument1 : Double) : Double;

external scalb(
    argument0 : Double,
    argument1 : Double) : Double;

external signgam : Int;

external rinttol(
    argument0 : Double) : Int;

external roundtol(
    argument0 : Double) : Int;

record exception {
    type : Int;
    name : Pointer[Int8];
    arg1 : Double;
    arg2 : Double;
    retval : Double;
}

external finite(
    argument0 : Double) : Int;

external gamma(
    argument0 : Double) : Double;

external matherr(
    argument0 : Pointer[exception]) : Int;

external significand(
    argument0 : Double) : Double;

external drem(
    argument0 : Double,
    argument1 : Double) : Double;
