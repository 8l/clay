// Auto-Generated by BindingsGenerator

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


alias __int8_t = CChar;

alias __uint8_t = CUChar;

alias __int16_t = Short;

alias __uint16_t = UShort;

alias __int32_t = Int;

alias __uint32_t = UInt;

alias __int64_t = Int64;

alias __uint64_t = UInt64;

alias __darwin_intptr_t = CLong;

alias __darwin_natural_t = UInt;

alias __darwin_ct_rune_t = Int;

alias __mbstate_t = AUnionType;

alias __darwin_mbstate_t = __mbstate_t;

alias __darwin_ptrdiff_t = Int;

alias __darwin_size_t = CULong;

alias __darwin_va_list = Int;

alias __darwin_wchar_t = Int;

alias __darwin_rune_t = Int;

alias __darwin_wint_t = Int;

alias __darwin_clock_t = CULong;

alias __darwin_socklen_t = UInt;

alias __darwin_ssize_t = CLong;

alias __darwin_time_t = CLong;

record Struct___darwin_pthread_handler_rec (
    __routine : CCodePointer[(RawPointer),()],
    __arg : RawPointer,
    __next : Pointer[Struct___darwin_pthread_handler_rec],
);

record Struct__opaque_pthread_attr_t (
    __sig : CLong,
    __opaque : Array[CChar,36],
);

record Struct__opaque_pthread_cond_t (
    __sig : CLong,
    __opaque : Array[CChar,24],
);

record Struct__opaque_pthread_condattr_t (
    __sig : CLong,
    __opaque : Array[CChar,4],
);

record Struct__opaque_pthread_mutex_t (
    __sig : CLong,
    __opaque : Array[CChar,40],
);

record Struct__opaque_pthread_mutexattr_t (
    __sig : CLong,
    __opaque : Array[CChar,8],
);

record Struct__opaque_pthread_once_t (
    __sig : CLong,
    __opaque : Array[CChar,4],
);

record Struct__opaque_pthread_rwlock_t (
    __sig : CLong,
    __opaque : Array[CChar,124],
);

record Struct__opaque_pthread_rwlockattr_t (
    __sig : CLong,
    __opaque : Array[CChar,12],
);

record Struct__opaque_pthread_t (
    __sig : CLong,
    __cleanup_stack : Pointer[Struct___darwin_pthread_handler_rec],
    __opaque : Array[CChar,596],
);

alias __darwin_blkcnt_t = Int64;

alias __darwin_blksize_t = Int;

alias __darwin_dev_t = Int;

alias __darwin_fsblkcnt_t = UInt;

alias __darwin_fsfilcnt_t = UInt;

alias __darwin_gid_t = UInt;

alias __darwin_id_t = UInt;

alias __darwin_ino64_t = UInt64;

alias __darwin_ino_t = UInt64;

alias __darwin_mach_port_name_t = UInt;

alias __darwin_mach_port_t = UInt;

alias __darwin_mode_t = UShort;

alias __darwin_off_t = Int64;

alias __darwin_pid_t = Int;

alias __darwin_pthread_attr_t = Struct__opaque_pthread_attr_t;

alias __darwin_pthread_cond_t = Struct__opaque_pthread_cond_t;

alias __darwin_pthread_condattr_t = Struct__opaque_pthread_condattr_t;

alias __darwin_pthread_key_t = CULong;

alias __darwin_pthread_mutex_t = Struct__opaque_pthread_mutex_t;

alias __darwin_pthread_mutexattr_t = Struct__opaque_pthread_mutexattr_t;

alias __darwin_pthread_once_t = Struct__opaque_pthread_once_t;

alias __darwin_pthread_rwlock_t = Struct__opaque_pthread_rwlock_t;

alias __darwin_pthread_rwlockattr_t = Struct__opaque_pthread_rwlockattr_t;

alias __darwin_pthread_t = Pointer[Struct__opaque_pthread_t];

alias __darwin_sigset_t = UInt;

alias __darwin_suseconds_t = Int;

alias __darwin_uid_t = UInt;

alias __darwin_useconds_t = UInt;

alias __darwin_uuid_t = Array[CUChar,16];

alias __darwin_uuid_string_t = Array[CChar,37];

alias __darwin_nl_item = Int;

alias __darwin_wctrans_t = Int;

alias __darwin_wctype_t = CULong;

alias va_list = Int;

alias off_t = Int64;

alias size_t = CULong;

alias fpos_t = Int64;

record Struct___sbuf (
    _base : Pointer[CUChar],
    _size : Int,
);

record Struct___sFILE (
    _p : Pointer[CUChar],
    _r : Int,
    _w : Int,
    _flags : Short,
    _file : Short,
    _bf : Struct___sbuf,
    _lbfsize : Int,
    _cookie : RawPointer,
    _close : CCodePointer[(RawPointer),(Int)],
    _read : CCodePointer[(RawPointer,Pointer[CChar],Int),(Int)],
    _seek : CCodePointer[(RawPointer,Int64,Int),(Int64)],
    _write : CCodePointer[(RawPointer,Pointer[CChar],Int),(Int)],
    _ub : Struct___sbuf,
    _extra : OpaquePointer,
    _ur : Int,
    _ubuf : Array[CUChar,3],
    _nbuf : Array[CUChar,1],
    _lb : Struct___sbuf,
    _blksize : Int,
    _offset : Int64,
);

alias FILE = Struct___sFILE;

external __stdinp : Pointer[FILE];

external __stdoutp : Pointer[FILE];

external __stderrp : Pointer[FILE];

external clearerr(
    argument0 : Pointer[FILE]);

external fclose(
    argument0 : Pointer[FILE]) Int;

external feof(
    argument0 : Pointer[FILE]) Int;

external ferror(
    argument0 : Pointer[FILE]) Int;

external fflush(
    argument0 : Pointer[FILE]) Int;

external fgetc(
    argument0 : Pointer[FILE]) Int;

external fgetpos(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int64]) Int;

external fgets(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : Pointer[FILE]) Pointer[CChar];

external ("_fopen$UNIX2003") fopen(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[FILE];

external fprintf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CChar],
    ...) Int;

external fputc(
    argument0 : Int,
    argument1 : Pointer[FILE]) Int;

external ("_fputs$UNIX2003") fputs(
    argument0 : Pointer[CChar],
    argument1 : Pointer[FILE]) Int;

external fread(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : Pointer[FILE]) CULong;

external ("_freopen$UNIX2003") freopen(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[FILE]) Pointer[FILE];

external fscanf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CChar],
    ...) Int;

external fseek(
    argument0 : Pointer[FILE],
    argument1 : CLong,
    argument2 : Int) Int;

external fsetpos(
    argument0 : Pointer[FILE],
    argument1 : Pointer[Int64]) Int;

external ftell(
    argument0 : Pointer[FILE]) CLong;

external ("_fwrite$UNIX2003") fwrite(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : Pointer[FILE]) CULong;

external getc(
    argument0 : Pointer[FILE]) Int;

external getchar() Int;

external gets(
    argument0 : Pointer[CChar]) Pointer[CChar];

external sys_nerr : Int;

external sys_errlist : Array[Pointer[CChar],0];

external perror(
    argument0 : Pointer[CChar]);

external printf(
    argument0 : Pointer[CChar],
    ...) Int;

external putc(
    argument0 : Int,
    argument1 : Pointer[FILE]) Int;

external putchar(
    argument0 : Int) Int;

external puts(
    argument0 : Pointer[CChar]) Int;

external remove(
    argument0 : Pointer[CChar]) Int;

external rename(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Int;

external rewind(
    argument0 : Pointer[FILE]);

external scanf(
    argument0 : Pointer[CChar],
    ...) Int;

external setbuf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CChar]);

external setvbuf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CChar],
    argument2 : Int,
    argument3 : CULong) Int;

external sprintf(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    ...) Int;

external sscanf(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    ...) Int;

external tmpfile() Pointer[FILE];

external tmpnam(
    argument0 : Pointer[CChar]) Pointer[CChar];

external ungetc(
    argument0 : Int,
    argument1 : Pointer[FILE]) Int;

external vfprintf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external vprintf(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external vsprintf(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external asprintf(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[CChar],
    ...) Int;

external vasprintf(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external ctermid(
    argument0 : Pointer[CChar]) Pointer[CChar];

external ctermid_r(
    argument0 : Pointer[CChar]) Pointer[CChar];

external ("_fdopen$UNIX2003") fdopen(
    argument0 : Int,
    argument1 : Pointer[CChar]) Pointer[FILE];

external fgetln(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CULong]) Pointer[CChar];

external fileno(
    argument0 : Pointer[FILE]) Int;

external flockfile(
    argument0 : Pointer[FILE]);

external fmtcheck(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external fpurge(
    argument0 : Pointer[FILE]) Int;

external fseeko(
    argument0 : Pointer[FILE],
    argument1 : Int64,
    argument2 : Int) Int;

external ftello(
    argument0 : Pointer[FILE]) Int64;

external ftrylockfile(
    argument0 : Pointer[FILE]) Int;

external funlockfile(
    argument0 : Pointer[FILE]);

external getc_unlocked(
    argument0 : Pointer[FILE]) Int;

external getchar_unlocked() Int;

external getw(
    argument0 : Pointer[FILE]) Int;

external pclose(
    argument0 : Pointer[FILE]) Int;

external ("_popen$UNIX2003") popen(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[FILE];

external putc_unlocked(
    argument0 : Int,
    argument1 : Pointer[FILE]) Int;

external putchar_unlocked(
    argument0 : Int) Int;

external putw(
    argument0 : Int,
    argument1 : Pointer[FILE]) Int;

external setbuffer(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CChar],
    argument2 : Int);

external setlinebuf(
    argument0 : Pointer[FILE]) Int;

external snprintf(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : Pointer[CChar],
    ...) Int;

external ("_tempnam$UNIX2003") tempnam(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external vfscanf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external vscanf(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external vsnprintf(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : Pointer[CChar],
    argument3 : Int) Int;

external vsscanf(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external zopen(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Int) Pointer[FILE];

external funopen(
    argument0 : RawPointer,
    argument1 : CCodePointer[(RawPointer,Pointer[CChar],Int),(Int)],
    argument2 : CCodePointer[(RawPointer,Pointer[CChar],Int),(Int)],
    argument3 : CCodePointer[(RawPointer,Int64,Int),(Int64)],
    argument4 : CCodePointer[(RawPointer),(Int)]) Pointer[FILE];

external __srget(
    argument0 : Pointer[FILE]) Int;

external __svfscanf(
    argument0 : Pointer[FILE],
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external __swbuf(
    argument0 : Int,
    argument1 : Pointer[FILE]) Int;

external __sprintf_chk(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : CULong,
    argument3 : Pointer[CChar],
    ...) Int;

external __snprintf_chk(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : Int,
    argument3 : CULong,
    argument4 : Pointer[CChar],
    ...) Int;

external __vsprintf_chk(
    argument0 : Pointer[CChar],
    argument1 : Int,
    argument2 : CULong,
    argument3 : Pointer[CChar],
    argument4 : Int) Int;

external __vsnprintf_chk(
    argument0 : Pointer[CChar],
    argument1 : CULong,
    argument2 : Int,
    argument3 : CULong,
    argument4 : Pointer[CChar],
    argument5 : Int) Int;

alias P_ALL = 0;
alias P_PID = 1;
alias P_PGID = 2;

alias idtype_t = Int;

alias pid_t = Int;

alias id_t = UInt;

alias sig_atomic_t = Int;

record Struct___darwin_i386_thread_state (
    __eax : UInt,
    __ebx : UInt,
    __ecx : UInt,
    __edx : UInt,
    __edi : UInt,
    __esi : UInt,
    __ebp : UInt,
    __esp : UInt,
    __ss : UInt,
    __eflags : UInt,
    __eip : UInt,
    __cs : UInt,
    __ds : UInt,
    __es : UInt,
    __fs : UInt,
    __gs : UInt,
);

record Struct___darwin_fp_control (
    __invalid : UShort,
    __denorm : UShort,
    __zdiv : UShort,
    __ovrfl : UShort,
    __undfl : UShort,
    __precis : UShort,
    unnamed_field6 : UShort,
    __pc : UShort,
    __rc : UShort,
    unnamed_field9 : UShort,
    unnamed_field10 : UShort,
);

alias __darwin_fp_control_t = Struct___darwin_fp_control;

record Struct___darwin_fp_status (
    __invalid : UShort,
    __denorm : UShort,
    __zdiv : UShort,
    __ovrfl : UShort,
    __undfl : UShort,
    __precis : UShort,
    __stkflt : UShort,
    __errsumm : UShort,
    __c0 : UShort,
    __c1 : UShort,
    __c2 : UShort,
    __tos : UShort,
    __c3 : UShort,
    __busy : UShort,
);

alias __darwin_fp_status_t = Struct___darwin_fp_status;

record Struct___darwin_mmst_reg (
    __mmst_reg : Array[CChar,10],
    __mmst_rsrv : Array[CChar,6],
);

record Struct___darwin_xmm_reg (
    __xmm_reg : Array[CChar,16],
);

record Struct___darwin_i386_float_state (
    __fpu_reserved : Array[Int,2],
    __fpu_fcw : Struct___darwin_fp_control,
    __fpu_fsw : Struct___darwin_fp_status,
    __fpu_ftw : CUChar,
    __fpu_rsrv1 : CUChar,
    __fpu_fop : UShort,
    __fpu_ip : UInt,
    __fpu_cs : UShort,
    __fpu_rsrv2 : UShort,
    __fpu_dp : UInt,
    __fpu_ds : UShort,
    __fpu_rsrv3 : UShort,
    __fpu_mxcsr : UInt,
    __fpu_mxcsrmask : UInt,
    __fpu_stmm0 : Struct___darwin_mmst_reg,
    __fpu_stmm1 : Struct___darwin_mmst_reg,
    __fpu_stmm2 : Struct___darwin_mmst_reg,
    __fpu_stmm3 : Struct___darwin_mmst_reg,
    __fpu_stmm4 : Struct___darwin_mmst_reg,
    __fpu_stmm5 : Struct___darwin_mmst_reg,
    __fpu_stmm6 : Struct___darwin_mmst_reg,
    __fpu_stmm7 : Struct___darwin_mmst_reg,
    __fpu_xmm0 : Struct___darwin_xmm_reg,
    __fpu_xmm1 : Struct___darwin_xmm_reg,
    __fpu_xmm2 : Struct___darwin_xmm_reg,
    __fpu_xmm3 : Struct___darwin_xmm_reg,
    __fpu_xmm4 : Struct___darwin_xmm_reg,
    __fpu_xmm5 : Struct___darwin_xmm_reg,
    __fpu_xmm6 : Struct___darwin_xmm_reg,
    __fpu_xmm7 : Struct___darwin_xmm_reg,
    __fpu_rsrv4 : Array[CChar,224],
    __fpu_reserved1 : Int,
);

record Struct___darwin_i386_exception_state (
    __trapno : UInt,
    __err : UInt,
    __faultvaddr : UInt,
);

record Struct___darwin_x86_debug_state32 (
    __dr0 : UInt,
    __dr1 : UInt,
    __dr2 : UInt,
    __dr3 : UInt,
    __dr4 : UInt,
    __dr5 : UInt,
    __dr6 : UInt,
    __dr7 : UInt,
);

record Struct___darwin_x86_thread_state64 (
    __rax : UInt64,
    __rbx : UInt64,
    __rcx : UInt64,
    __rdx : UInt64,
    __rdi : UInt64,
    __rsi : UInt64,
    __rbp : UInt64,
    __rsp : UInt64,
    __r8 : UInt64,
    __r9 : UInt64,
    __r10 : UInt64,
    __r11 : UInt64,
    __r12 : UInt64,
    __r13 : UInt64,
    __r14 : UInt64,
    __r15 : UInt64,
    __rip : UInt64,
    __rflags : UInt64,
    __cs : UInt64,
    __fs : UInt64,
    __gs : UInt64,
);

record Struct___darwin_x86_float_state64 (
    __fpu_reserved : Array[Int,2],
    __fpu_fcw : Struct___darwin_fp_control,
    __fpu_fsw : Struct___darwin_fp_status,
    __fpu_ftw : CUChar,
    __fpu_rsrv1 : CUChar,
    __fpu_fop : UShort,
    __fpu_ip : UInt,
    __fpu_cs : UShort,
    __fpu_rsrv2 : UShort,
    __fpu_dp : UInt,
    __fpu_ds : UShort,
    __fpu_rsrv3 : UShort,
    __fpu_mxcsr : UInt,
    __fpu_mxcsrmask : UInt,
    __fpu_stmm0 : Struct___darwin_mmst_reg,
    __fpu_stmm1 : Struct___darwin_mmst_reg,
    __fpu_stmm2 : Struct___darwin_mmst_reg,
    __fpu_stmm3 : Struct___darwin_mmst_reg,
    __fpu_stmm4 : Struct___darwin_mmst_reg,
    __fpu_stmm5 : Struct___darwin_mmst_reg,
    __fpu_stmm6 : Struct___darwin_mmst_reg,
    __fpu_stmm7 : Struct___darwin_mmst_reg,
    __fpu_xmm0 : Struct___darwin_xmm_reg,
    __fpu_xmm1 : Struct___darwin_xmm_reg,
    __fpu_xmm2 : Struct___darwin_xmm_reg,
    __fpu_xmm3 : Struct___darwin_xmm_reg,
    __fpu_xmm4 : Struct___darwin_xmm_reg,
    __fpu_xmm5 : Struct___darwin_xmm_reg,
    __fpu_xmm6 : Struct___darwin_xmm_reg,
    __fpu_xmm7 : Struct___darwin_xmm_reg,
    __fpu_xmm8 : Struct___darwin_xmm_reg,
    __fpu_xmm9 : Struct___darwin_xmm_reg,
    __fpu_xmm10 : Struct___darwin_xmm_reg,
    __fpu_xmm11 : Struct___darwin_xmm_reg,
    __fpu_xmm12 : Struct___darwin_xmm_reg,
    __fpu_xmm13 : Struct___darwin_xmm_reg,
    __fpu_xmm14 : Struct___darwin_xmm_reg,
    __fpu_xmm15 : Struct___darwin_xmm_reg,
    __fpu_rsrv4 : Array[CChar,96],
    __fpu_reserved1 : Int,
);

record Struct___darwin_x86_exception_state64 (
    __trapno : UInt,
    __err : UInt,
    __faultvaddr : UInt64,
);

record Struct___darwin_x86_debug_state64 (
    __dr0 : UInt64,
    __dr1 : UInt64,
    __dr2 : UInt64,
    __dr3 : UInt64,
    __dr4 : UInt64,
    __dr5 : UInt64,
    __dr6 : UInt64,
    __dr7 : UInt64,
);

record Struct___darwin_mcontext32 (
    __es : Struct___darwin_i386_exception_state,
    __ss : Struct___darwin_i386_thread_state,
    __fs : Struct___darwin_i386_float_state,
);

record Struct___darwin_mcontext64 (
    __es : Struct___darwin_x86_exception_state64,
    __ss : Struct___darwin_x86_thread_state64,
    __fs : Struct___darwin_x86_float_state64,
);

alias mcontext_t = Pointer[Struct___darwin_mcontext32];

record Struct___darwin_sigaltstack (
    ss_sp : RawPointer,
    ss_size : CULong,
    ss_flags : Int,
);

record Struct___darwin_ucontext (
    uc_onstack : Int,
    uc_sigmask : UInt,
    uc_stack : Struct___darwin_sigaltstack,
    uc_link : Pointer[Struct___darwin_ucontext],
    uc_mcsize : CULong,
    uc_mcontext : Pointer[Struct___darwin_mcontext32],
);

alias stack_t = Struct___darwin_sigaltstack;

alias ucontext_t = Struct___darwin_ucontext;

alias pthread_attr_t = __darwin_pthread_attr_t;

alias sigset_t = UInt;

alias uid_t = UInt;

record Struct_sigevent (
    sigev_notify : Int,
    sigev_signo : Int,
    sigev_value : AUnionType,
    sigev_notify_function : CCodePointer[(AUnionType),()],
    sigev_notify_attributes : Pointer[pthread_attr_t],
);

record Struct___siginfo (
    si_signo : Int,
    si_errno : Int,
    si_code : Int,
    si_pid : Int,
    si_uid : UInt,
    si_status : Int,
    si_addr : RawPointer,
    si_value : AUnionType,
    si_band : CLong,
    __pad : Array[CULong,7],
);

alias siginfo_t = Struct___siginfo;

record Struct___sigaction (
    __sigaction_u : AUnionType,
    sa_tramp : CCodePointer[(RawPointer,Int,Int,Pointer[Struct___siginfo],RawPointer),()],
    sa_mask : UInt,
    sa_flags : Int,
);

record Struct_sigaction (
    __sigaction_u : AUnionType,
    sa_mask : UInt,
    sa_flags : Int,
);

alias sig_t = CCodePointer[(Int),()];

record Struct_sigvec (
    sv_handler : CCodePointer[(Int),()],
    sv_mask : Int,
    sv_flags : Int,
);

record Struct_sigstack (
    ss_sp : Pointer[CChar],
    ss_onstack : Int,
);

external signal(
    argument0 : Int,
    argument1 : CCodePointer[(Int),()]) CCodePointer[(Int),()];

record Struct_timeval (
    tv_sec : CLong,
    tv_usec : Int,
);

alias rlim_t = UInt64;

record Struct_rusage (
    ru_utime : Struct_timeval,
    ru_stime : Struct_timeval,
    ru_maxrss : CLong,
    ru_ixrss : CLong,
    ru_idrss : CLong,
    ru_isrss : CLong,
    ru_minflt : CLong,
    ru_majflt : CLong,
    ru_nswap : CLong,
    ru_inblock : CLong,
    ru_oublock : CLong,
    ru_msgsnd : CLong,
    ru_msgrcv : CLong,
    ru_nsignals : CLong,
    ru_nvcsw : CLong,
    ru_nivcsw : CLong,
);

record Struct_rlimit (
    rlim_cur : UInt64,
    rlim_max : UInt64,
);

external getpriority(
    argument0 : Int,
    argument1 : UInt) Int;

external getiopolicy_np(
    argument0 : Int,
    argument1 : Int) Int;

external ("_getrlimit$UNIX2003") getrlimit(
    argument0 : Int,
    argument1 : Pointer[Struct_rlimit]) Int;

external getrusage(
    argument0 : Int,
    argument1 : Pointer[Struct_rusage]) Int;

external setpriority(
    argument0 : Int,
    argument1 : UInt,
    argument2 : Int) Int;

external setiopolicy_np(
    argument0 : Int,
    argument1 : Int,
    argument2 : Int) Int;

external ("_setrlimit$UNIX2003") setrlimit(
    argument0 : Int,
    argument1 : Pointer[Struct_rlimit]) Int;

external ("_wait$UNIX2003") wait(
    argument0 : Pointer[Int]) Int;

external ("_waitpid$UNIX2003") waitpid(
    argument0 : Int,
    argument1 : Pointer[Int],
    argument2 : Int) Int;

external ("_waitid$UNIX2003") waitid(
    argument0 : idtype_t,
    argument1 : UInt,
    argument2 : Pointer[siginfo_t],
    argument3 : Int) Int;

external wait3(
    argument0 : Pointer[Int],
    argument1 : Int,
    argument2 : Pointer[Struct_rusage]) Int;

external wait4(
    argument0 : Int,
    argument1 : Pointer[Int],
    argument2 : Int,
    argument3 : Pointer[Struct_rusage]) Int;

external alloca(
    argument0 : CULong) RawPointer;

alias ct_rune_t = Int;

alias rune_t = Int;

alias wchar_t = Int;

record UnnamedStruct (
    quot : Int,
    rem : Int,
);

alias div_t = UnnamedStruct;

record UnnamedStruct2 (
    quot : CLong,
    rem : CLong,
);

alias ldiv_t = UnnamedStruct2;

record UnnamedStruct3 (
    quot : Int64,
    rem : Int64,
);

alias lldiv_t = UnnamedStruct3;

external __mb_cur_max : Int;

external abort();

external abs(
    argument0 : Int) Int;

external atexit(
    argument0 : CCodePointer[(),()]) Int;

external atof(
    argument0 : Pointer[CChar]) Double;

external atoi(
    argument0 : Pointer[CChar]) Int;

external atol(
    argument0 : Pointer[CChar]) CLong;

external atoll(
    argument0 : Pointer[CChar]) Int64;

external bsearch(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : CULong,
    argument4 : CCodePointer[(RawPointer,RawPointer),(Int)]) RawPointer;

external calloc(
    argument0 : CULong,
    argument1 : CULong) RawPointer;

external div(
    argument0 : Int,
    argument1 : Int) div_t;

external exit(
    argument0 : Int);

external free(
    argument0 : RawPointer);

external getenv(
    argument0 : Pointer[CChar]) Pointer[CChar];

external labs(
    argument0 : CLong) CLong;

external ldiv(
    argument0 : CLong,
    argument1 : CLong) ldiv_t;

external llabs(
    argument0 : Int64) Int64;

external lldiv(
    argument0 : Int64,
    argument1 : Int64) lldiv_t;

external malloc(
    argument0 : CULong) RawPointer;

external mblen(
    argument0 : Pointer[CChar],
    argument1 : CULong) Int;

external mbstowcs(
    argument0 : Pointer[Int],
    argument1 : Pointer[CChar],
    argument2 : CULong) CULong;

external mbtowc(
    argument0 : Pointer[Int],
    argument1 : Pointer[CChar],
    argument2 : CULong) Int;

external posix_memalign(
    argument0 : Pointer[RawPointer],
    argument1 : CULong,
    argument2 : CULong) Int;

external qsort(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : CCodePointer[(RawPointer,RawPointer),(Int)]);

external rand() Int;

external realloc(
    argument0 : RawPointer,
    argument1 : CULong) RawPointer;

external srand(
    argument0 : UInt);

external ("_strtod$UNIX2003") strtod(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]]) Double;

external ("_strtof$UNIX2003") strtof(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]]) Float;

external strtol(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Int) CLong;

external strtold(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]]) UnsupportedCBuiltinType21;

external strtoll(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Int) Int64;

external strtoul(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Int) CULong;

external strtoull(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Int) UInt64;

external ("_system$UNIX2003") system(
    argument0 : Pointer[CChar]) Int;

external wcstombs(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Int],
    argument2 : CULong) CULong;

external wctomb(
    argument0 : Pointer[CChar],
    argument1 : Int) Int;

external _Exit(
    argument0 : Int);

external a64l(
    argument0 : Pointer[CChar]) CLong;

external drand48() Double;

external ecvt(
    argument0 : Double,
    argument1 : Int,
    argument2 : Pointer[Int],
    argument3 : Pointer[Int]) Pointer[CChar];

external erand48(
    argument0 : Pointer[UShort]) Double;

external fcvt(
    argument0 : Double,
    argument1 : Int,
    argument2 : Pointer[Int],
    argument3 : Pointer[Int]) Pointer[CChar];

external gcvt(
    argument0 : Double,
    argument1 : Int,
    argument2 : Pointer[CChar]) Pointer[CChar];

external getsubopt(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[Pointer[CChar]]) Int;

external grantpt(
    argument0 : Int) Int;

external initstate(
    argument0 : UInt,
    argument1 : Pointer[CChar],
    argument2 : CULong) Pointer[CChar];

external jrand48(
    argument0 : Pointer[UShort]) CLong;

external l64a(
    argument0 : CLong) Pointer[CChar];

external lcong48(
    argument0 : Pointer[UShort]);

external lrand48() CLong;

external mktemp(
    argument0 : Pointer[CChar]) Pointer[CChar];

external mkstemp(
    argument0 : Pointer[CChar]) Int;

external mrand48() CLong;

external nrand48(
    argument0 : Pointer[UShort]) CLong;

external posix_openpt(
    argument0 : Int) Int;

external ptsname(
    argument0 : Int) Pointer[CChar];

external ("_putenv$UNIX2003") putenv(
    argument0 : Pointer[CChar]) Int;

external random() CLong;

external rand_r(
    argument0 : Pointer[UInt]) Int;

external ("_realpath$DARWIN_EXTSN") realpath(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external seed48(
    argument0 : Pointer[UShort]) Pointer[UShort];

external ("_setenv$UNIX2003") setenv(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Int) Int;

external ("_setkey$UNIX2003") setkey(
    argument0 : Pointer[CChar]);

external setstate(
    argument0 : Pointer[CChar]) Pointer[CChar];

external srand48(
    argument0 : CLong);

external srandom(
    argument0 : UInt);

external unlockpt(
    argument0 : Int) Int;

external ("_unsetenv$UNIX2003") unsetenv(
    argument0 : Pointer[CChar]) Int;

alias int8_t = CChar;

alias u_int8_t = CUChar;

alias int16_t = Short;

alias u_int16_t = UShort;

alias int32_t = Int;

alias u_int32_t = UInt;

alias int64_t = Int64;

alias u_int64_t = UInt64;

alias register_t = Int;

alias intptr_t = CLong;

alias uintptr_t = CULong;

alias user_addr_t = UInt64;

alias user_size_t = UInt64;

alias user_ssize_t = Int64;

alias user_long_t = Int64;

alias user_ulong_t = UInt64;

alias user_time_t = Int64;

alias user_off_t = Int64;

alias syscall_arg_t = UInt64;

alias dev_t = Int;

alias mode_t = UShort;

external arc4random() UInt;

external arc4random_addrandom(
    dat : Pointer[CUChar],
    datlen : Int);

external arc4random_stir();

external atexit_b(
    argument0 : UnknownType) Int;

external bsearch_b(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong,
    argument3 : CULong,
    argument4 : UnknownType) RawPointer;

external cgetcap(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Int) Pointer[CChar];

external cgetclose() Int;

external cgetent(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Pointer[CChar]) Int;

external cgetfirst(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[Pointer[CChar]]) Int;

external cgetmatch(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Int;

external cgetnext(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[Pointer[CChar]]) Int;

external cgetnum(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[CLong]) Int;

external cgetset(
    argument0 : Pointer[CChar]) Int;

external cgetstr(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Pointer[CChar]]) Int;

external cgetustr(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Pointer[CChar]]) Int;

external ("_daemon$1050") daemon(
    argument0 : Int,
    argument1 : Int) Int;

external devname(
    argument0 : Int,
    argument1 : UShort) Pointer[CChar];

external devname_r(
    argument0 : Int,
    argument1 : UShort,
    buf : Pointer[CChar],
    len : Int) Pointer[CChar];

external getbsize(
    argument0 : Pointer[Int],
    argument1 : Pointer[CLong]) Pointer[CChar];

external getloadavg(
    argument0 : Pointer[Double],
    argument1 : Int) Int;

external getprogname() Pointer[CChar];

external heapsort(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : CCodePointer[(RawPointer,RawPointer),(Int)]) Int;

external heapsort_b(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : UnknownType) Int;

external mergesort(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : CCodePointer[(RawPointer,RawPointer),(Int)]) Int;

external mergesort_b(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : UnknownType) Int;

external psort(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : CCodePointer[(RawPointer,RawPointer),(Int)]);

external psort_b(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : UnknownType);

external psort_r(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : RawPointer,
    argument4 : CCodePointer[(RawPointer,RawPointer,RawPointer),(Int)]);

external qsort_b(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : UnknownType);

external qsort_r(
    argument0 : RawPointer,
    argument1 : CULong,
    argument2 : CULong,
    argument3 : RawPointer,
    argument4 : CCodePointer[(RawPointer,RawPointer,RawPointer),(Int)]);

external radixsort(
    argument0 : Pointer[Pointer[CUChar]],
    argument1 : Int,
    argument2 : Pointer[CUChar],
    argument3 : UInt) Int;

external setprogname(
    argument0 : Pointer[CChar]);

external sradixsort(
    argument0 : Pointer[Pointer[CUChar]],
    argument1 : Int,
    argument2 : Pointer[CUChar],
    argument3 : UInt) Int;

external sranddev();

external srandomdev();

external reallocf(
    argument0 : RawPointer,
    argument1 : CULong) RawPointer;

external strtoq(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Int) Int64;

external strtouq(
    argument0 : Pointer[CChar],
    argument1 : Pointer[Pointer[CChar]],
    argument2 : Int) UInt64;

external suboptarg : Pointer[CChar];

external valloc(
    argument0 : CULong) RawPointer;

alias ssize_t = CLong;

external memchr(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : CULong) RawPointer;

external memcmp(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong) Int;

external memcpy(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong) RawPointer;

external memmove(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong) RawPointer;

external memset(
    argument0 : RawPointer,
    argument1 : Int,
    argument2 : CULong) RawPointer;

external stpcpy(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external strcasestr(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external strcat(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external strchr(
    argument0 : Pointer[CChar],
    argument1 : Int) Pointer[CChar];

external strcmp(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Int;

external strcoll(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Int;

external strcpy(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external strcspn(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) CULong;

external ("_strerror$UNIX2003") strerror(
    argument0 : Int) Pointer[CChar];

external strerror_r(
    argument0 : Int,
    argument1 : Pointer[CChar],
    argument2 : CULong) Int;

external strlen(
    argument0 : Pointer[CChar]) CULong;

external strncat(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) Pointer[CChar];

external strncmp(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) Int;

external strncpy(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) Pointer[CChar];

external strnstr(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) Pointer[CChar];

external strpbrk(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external strrchr(
    argument0 : Pointer[CChar],
    argument1 : Int) Pointer[CChar];

external strspn(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) CULong;

external strstr(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external strtok(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Pointer[CChar];

external strxfrm(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) CULong;

external memccpy(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : Int,
    argument3 : CULong) RawPointer;

external strtok_r(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : Pointer[Pointer[CChar]]) Pointer[CChar];

external strdup(
    argument0 : Pointer[CChar]) Pointer[CChar];

external bcmp(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong) Int;

external bcopy(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong);

external bzero(
    argument0 : RawPointer,
    argument1 : CULong);

external ffs(
    argument0 : Int) Int;

external ffsl(
    argument0 : CLong) Int;

external fls(
    argument0 : Int) Int;

external flsl(
    argument0 : CLong) Int;

external index(
    argument0 : Pointer[CChar],
    argument1 : Int) Pointer[CChar];

external memset_pattern4(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong);

external memset_pattern8(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong);

external memset_pattern16(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CULong);

external rindex(
    argument0 : Pointer[CChar],
    argument1 : Int) Pointer[CChar];

external strcasecmp(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar]) Int;

external strlcat(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) CULong;

external strlcpy(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) CULong;

external strmode(
    argument0 : Int,
    argument1 : Pointer[CChar]);

external strncasecmp(
    argument0 : Pointer[CChar],
    argument1 : Pointer[CChar],
    argument2 : CULong) Int;

external strsep(
    argument0 : Pointer[Pointer[CChar]],
    argument1 : Pointer[CChar]) Pointer[CChar];

external strsignal(
    sig : Int) Pointer[CChar];

external swab(
    argument0 : RawPointer,
    argument1 : RawPointer,
    argument2 : CLong);

alias float_t = Float;

alias double_t = Double;

external __math_errhandling() UInt;

external __fpclassifyf(
    argument0 : Float) Int;

external __fpclassifyd(
    argument0 : Double) Int;

external __fpclassify(
    argument0 : UnsupportedCBuiltinType21) Int;

external acos(
    argument0 : Double) Double;

external acosf(
    argument0 : Float) Float;

external asin(
    argument0 : Double) Double;

external asinf(
    argument0 : Float) Float;

external atan(
    argument0 : Double) Double;

external atanf(
    argument0 : Float) Float;

external atan2(
    argument0 : Double,
    argument1 : Double) Double;

external atan2f(
    argument0 : Float,
    argument1 : Float) Float;

external cos(
    argument0 : Double) Double;

external cosf(
    argument0 : Float) Float;

external sin(
    argument0 : Double) Double;

external sinf(
    argument0 : Float) Float;

external tan(
    argument0 : Double) Double;

external tanf(
    argument0 : Float) Float;

external acosh(
    argument0 : Double) Double;

external acoshf(
    argument0 : Float) Float;

external asinh(
    argument0 : Double) Double;

external asinhf(
    argument0 : Float) Float;

external atanh(
    argument0 : Double) Double;

external atanhf(
    argument0 : Float) Float;

external cosh(
    argument0 : Double) Double;

external coshf(
    argument0 : Float) Float;

external sinh(
    argument0 : Double) Double;

external sinhf(
    argument0 : Float) Float;

external tanh(
    argument0 : Double) Double;

external tanhf(
    argument0 : Float) Float;

external exp(
    argument0 : Double) Double;

external expf(
    argument0 : Float) Float;

external exp2(
    argument0 : Double) Double;

external exp2f(
    argument0 : Float) Float;

external expm1(
    argument0 : Double) Double;

external expm1f(
    argument0 : Float) Float;

external log(
    argument0 : Double) Double;

external logf(
    argument0 : Float) Float;

external log10(
    argument0 : Double) Double;

external log10f(
    argument0 : Float) Float;

external log2(
    argument0 : Double) Double;

external log2f(
    argument0 : Float) Float;

external log1p(
    argument0 : Double) Double;

external log1pf(
    argument0 : Float) Float;

external logb(
    argument0 : Double) Double;

external logbf(
    argument0 : Float) Float;

external modf(
    argument0 : Double,
    argument1 : Pointer[Double]) Double;

external modff(
    argument0 : Float,
    argument1 : Pointer[Float]) Float;

external ldexp(
    argument0 : Double,
    argument1 : Int) Double;

external ldexpf(
    argument0 : Float,
    argument1 : Int) Float;

external frexp(
    argument0 : Double,
    argument1 : Pointer[Int]) Double;

external frexpf(
    argument0 : Float,
    argument1 : Pointer[Int]) Float;

external ilogb(
    argument0 : Double) Int;

external ilogbf(
    argument0 : Float) Int;

external scalbn(
    argument0 : Double,
    argument1 : Int) Double;

external scalbnf(
    argument0 : Float,
    argument1 : Int) Float;

external scalbln(
    argument0 : Double,
    argument1 : CLong) Double;

external scalblnf(
    argument0 : Float,
    argument1 : CLong) Float;

external fabs(
    argument0 : Double) Double;

external fabsf(
    argument0 : Float) Float;

external cbrt(
    argument0 : Double) Double;

external cbrtf(
    argument0 : Float) Float;

external hypot(
    argument0 : Double,
    argument1 : Double) Double;

external hypotf(
    argument0 : Float,
    argument1 : Float) Float;

external pow(
    argument0 : Double,
    argument1 : Double) Double;

external powf(
    argument0 : Float,
    argument1 : Float) Float;

external sqrt(
    argument0 : Double) Double;

external sqrtf(
    argument0 : Float) Float;

external erf(
    argument0 : Double) Double;

external erff(
    argument0 : Float) Float;

external erfc(
    argument0 : Double) Double;

external erfcf(
    argument0 : Float) Float;

external lgamma(
    argument0 : Double) Double;

external lgammaf(
    argument0 : Float) Float;

external tgamma(
    argument0 : Double) Double;

external tgammaf(
    argument0 : Float) Float;

external ceil(
    argument0 : Double) Double;

external ceilf(
    argument0 : Float) Float;

external floor(
    argument0 : Double) Double;

external floorf(
    argument0 : Float) Float;

external nearbyint(
    argument0 : Double) Double;

external nearbyintf(
    argument0 : Float) Float;

external rint(
    argument0 : Double) Double;

external rintf(
    argument0 : Float) Float;

external lrint(
    argument0 : Double) CLong;

external lrintf(
    argument0 : Float) CLong;

external round(
    argument0 : Double) Double;

external roundf(
    argument0 : Float) Float;

external lround(
    argument0 : Double) CLong;

external lroundf(
    argument0 : Float) CLong;

external llrint(
    argument0 : Double) Int64;

external llrintf(
    argument0 : Float) Int64;

external llround(
    argument0 : Double) Int64;

external llroundf(
    argument0 : Float) Int64;

external trunc(
    argument0 : Double) Double;

external truncf(
    argument0 : Float) Float;

external fmod(
    argument0 : Double,
    argument1 : Double) Double;

external fmodf(
    argument0 : Float,
    argument1 : Float) Float;

external remainder(
    argument0 : Double,
    argument1 : Double) Double;

external remainderf(
    argument0 : Float,
    argument1 : Float) Float;

external remquo(
    argument0 : Double,
    argument1 : Double,
    argument2 : Pointer[Int]) Double;

external remquof(
    argument0 : Float,
    argument1 : Float,
    argument2 : Pointer[Int]) Float;

external copysign(
    argument0 : Double,
    argument1 : Double) Double;

external copysignf(
    argument0 : Float,
    argument1 : Float) Float;

external nan(
    argument0 : Pointer[CChar]) Double;

external nanf(
    argument0 : Pointer[CChar]) Float;

external nextafter(
    argument0 : Double,
    argument1 : Double) Double;

external nextafterf(
    argument0 : Float,
    argument1 : Float) Float;

external fdim(
    argument0 : Double,
    argument1 : Double) Double;

external fdimf(
    argument0 : Float,
    argument1 : Float) Float;

external fmax(
    argument0 : Double,
    argument1 : Double) Double;

external fmaxf(
    argument0 : Float,
    argument1 : Float) Float;

external fmin(
    argument0 : Double,
    argument1 : Double) Double;

external fminf(
    argument0 : Float,
    argument1 : Float) Float;

external fma(
    argument0 : Double,
    argument1 : Double,
    argument2 : Double) Double;

external fmaf(
    argument0 : Float,
    argument1 : Float,
    argument2 : Float) Float;

external acosl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external asinl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external atanl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external atan2l(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external cosl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external sinl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external tanl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external acoshl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external asinhl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external atanhl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external coshl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external sinhl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external tanhl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external expl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external exp2l(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external expm1l(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external logl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external log10l(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external log2l(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external log1pl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external logbl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external modfl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Pointer[UnsupportedCBuiltinType21]) UnsupportedCBuiltinType21;

external ldexpl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Int) UnsupportedCBuiltinType21;

external frexpl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Pointer[Int]) UnsupportedCBuiltinType21;

external ilogbl(
    argument0 : UnsupportedCBuiltinType21) Int;

external scalbnl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : Int) UnsupportedCBuiltinType21;

external scalblnl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : CLong) UnsupportedCBuiltinType21;

external fabsl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external cbrtl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external hypotl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external powl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external sqrtl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external erfl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external erfcl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external lgammal(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external tgammal(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external ceill(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external floorl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external nearbyintl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external rintl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external lrintl(
    argument0 : UnsupportedCBuiltinType21) CLong;

external roundl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external lroundl(
    argument0 : UnsupportedCBuiltinType21) CLong;

external llrintl(
    argument0 : UnsupportedCBuiltinType21) Int64;

external llroundl(
    argument0 : UnsupportedCBuiltinType21) Int64;

external truncl(
    argument0 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external fmodl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external remainderl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external remquol(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21,
    argument2 : Pointer[Int]) UnsupportedCBuiltinType21;

external copysignl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external nanl(
    argument0 : Pointer[CChar]) UnsupportedCBuiltinType21;

external nextafterl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external nexttoward(
    argument0 : Double,
    argument1 : UnsupportedCBuiltinType21) Double;

external nexttowardf(
    argument0 : Float,
    argument1 : UnsupportedCBuiltinType21) Float;

external nexttowardl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external fdiml(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external fmaxl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external fminl(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external fmal(
    argument0 : UnsupportedCBuiltinType21,
    argument1 : UnsupportedCBuiltinType21,
    argument2 : UnsupportedCBuiltinType21) UnsupportedCBuiltinType21;

external __inf() Double;

external __inff() Float;

external __infl() UnsupportedCBuiltinType21;

external __nan() Float;

external j0(
    argument0 : Double) Double;

external j1(
    argument0 : Double) Double;

external jn(
    argument0 : Int,
    argument1 : Double) Double;

external y0(
    argument0 : Double) Double;

external y1(
    argument0 : Double) Double;

external yn(
    argument0 : Int,
    argument1 : Double) Double;

external scalb(
    argument0 : Double,
    argument1 : Double) Double;

external signgam : Int;

external rinttol(
    argument0 : Double) CLong;

external roundtol(
    argument0 : Double) CLong;

record Struct_exception (
    type : Int,
    name : Pointer[CChar],
    arg1 : Double,
    arg2 : Double,
    retval : Double,
);

external finite(
    argument0 : Double) Int;

external gamma(
    argument0 : Double) Double;

external matherr(
    argument0 : Pointer[Struct_exception]) Int;

external significand(
    argument0 : Double) Double;

external drem(
    argument0 : Double,
    argument1 : Double) Double;
