

//
// lines
//

lines(lvalue f:File) = LineSequenceRef(&f);

inlined overload lines(rvalue f:File) = LineSequenceVal(f);



//
// LineSequenceRef, LineSequenceVal
//

private record LineSequenceRef {
    f : Pointer[File];
}

overload Sequence?(static LineSequenceRef) = true;
overload SequenceElementType(static LineSequenceRef) = String;

overload iterator(x:LineSequenceRef) = LineIterator(x.f, false, String());


private record LineSequenceVal {
    f : File;
}

overload Sequence?(static LineSequenceVal) = true;
overload SequenceElementType(static LineSequenceVal) = String;

overload iterator(x:LineSequenceVal) = LineIterator(&x.f, false, String());



//
// LineIterator
//

private record LineIterator {
    file : Pointer[File];
    queued? : Bool;
    string : String;
}

overload hasNext?(x:LineIterator) {
    if (not x.queued?) {
        x.queued? = true;
        x.string = readLine(x.file^);
    }
    return size(x.string) > 0;
}

overload next(x:LineIterator) {
    assert(x.queued?, "next(LineIterator)");
    x.queued? = false;
    return move(x.string);
}
