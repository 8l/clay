

//
// lines
//

lines(f:File) = LineSequence(f);



//
// LineSequence
//

private record LineSequence {
    f : File;
}

overload iterator(x:LineSequence) = LineIterator(&x.f, false, String());



//
// LineIterator
//

private record LineIterator {
    file : Pointer[File];
    queued? : Bool;
    string : String;
}

overload hasNext?(x:LineIterator) {
    if (not x.queued?) {
        x.queued? = true;
        x.string = readLine(x.file^);
    }
    return size(x.string) > 0;
}

overload next(x:LineIterator) {
    assert(x.queued?, "next(LineIterator)");
    x.queued? = false;
    return move(x.string);
}
