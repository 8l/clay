import __primitives__;
export __primitives__;

overloadable to;

overloadable zero;
overloadable one;

overloadable inc;
overloadable dec;

overloadable size;
overloadable at;
overloadable begin;
overloadable end;

overloadable front;
overloadable back;
overloadable pushBack;
overloadable popBack;
overloadable clear;
overloadable insert;
overloadable remove;


//
// defaults
//

overload init[T](a:T) {
}

overload destroy[T](a:T) {
}

overload assign[T](dest:T, src:T) {
    if (equals(&dest, &src)) return;
    destroy(dest);
    copy(dest, src);
}

overload notEquals[T](a:T, b:T) = not equals(a, b);
overload lesserEquals[T](a:T, b:T) = equals(a, b) or lesser(a, b);
overload greater[T](a:T, b:T) = not lesserEquals(a, b);
overload greaterEquals[T](a:T, b:T) = not lesser(a, b);


//
// swap
//

swap(a, b) {
    var temp = a;
    a = b;
    b = temp;
}
