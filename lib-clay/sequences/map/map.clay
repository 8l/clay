

//
// map
//

[F,A | Sequence?(A)]
map(mapper:F, rvalue seq:A) = Mapped(mapper, move(seq));

[F,A | Sequence?(A)]
overload map(mapper:F, lvalue seq:A)
    = Mapped(mapper, sequenceHandle(seq));



//
// Mapped
//

private record Mapped[F,A] {
    mapper : F;
    innerSequence : A;
}



//
// sequence operations
//

[F,A]
overload iterator(a:Mapped[F,A]) =
    MappedIterator(a.mapper, iterator(a.innerSequence));

[F, A, ...ARGS | CallDefined?(size, A, ...ARGS)]
overload size(a:Mapped[F,A], forward ...args:ARGS)
    = forward ...size(a.innerSequence, ...args);

[F,A | RandomAccessSequence?(A)]
overload index(a:Mapped[F,A], i) =
    forward a.mapper(index(a.innerSequence, i));


//
// MappedIterator
//

private record MappedIterator[F,ITER] {
    mapper:F;
    innerIterator : ITER;
}

[F,ITER]
overload hasNext?(iter:MappedIterator[F,ITER]) =
    hasNext?(iter.innerIterator);

[F,ITER]
overload next(iter:MappedIterator[F,ITER]) =
    forward ...iter.mapper(next(iter.innerIterator));
