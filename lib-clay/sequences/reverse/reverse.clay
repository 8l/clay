
import sequences.handle.*;


//
// reverse
//

procedure reverse;
overload reverse(lvalue seq) = Reversed(sequenceHandle(seq));
overload reverse(rvalue seq) = Reversed(move(seq));

private record Reversed[A] {
    seq : A;
}


[A]
overload iterator(a:Reversed[A]) = reverseIterator(a.seq);

[A]
overload reverseIterator(a:Reversed[A]) = iterator(a.seq);



//
// size, index
//

[A | CallDefined?(size, A)]
overload size(a:Reversed[A]) = size(a.seq);

[A, I | CallDefined?(index, A, I) and CallDefined?(size, A)]
overload index(a:Reversed[A], i:I) =
    forward ...index(a.seq, size(a.seq) - i - 1);
