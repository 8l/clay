import base.*;

static overloadable Sequence?;
static overloadable SequenceElementType;

static overloadable SizedSequence?;
static overloadable RandomAccessSequence?;
static overloadable LValueSequence?;


// basic sequence protocol
overloadable iterator;
overloadable hasNext?;
overloadable next;

overloadable size; // requires SizedSequence?
overloadable index; // requires RandomAccessSequence?

overloadable begin; 
overloadable end;

overloadable front;
overloadable back;

overloadable push;
overloadable pop;
overloadable clear;
overloadable insert;
overloadable remove;


// defaults

[T] static overload Sequence?(T) = false;

[T] static overload SizedSequence?(T) = false;
[T] static overload RandomAccessSequence?(T) = false;
[T] static overload LValueSequence?(T) = false;


[T | SizedSequence?(T)]
static overload Sequence?(T) = true;

[T | RandomAccessSequence?(T)]
static overload Sequence?(T) = true;

[T | LValueSequence?(T)]
static overload Sequence?(T) = true;


[T | SizedSequence?(T)]
empty?(a:T) = (size(a) == 0);
