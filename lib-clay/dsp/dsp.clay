import libc.(cos,sin);
import complex.(complex,arg);
import physicalconstants.(PI);


[T,n | Numeric?(T)]
rgoertzel(xarr:Array[T,n], k:T) {
    var zero,two,half = T(0),T(2),T(0.5);
    var w = two*PI*k/n;
    var zr,zi = two*cos(w), sin(w);
    var d1,d2 = zero, zero;
    for(i,x in enumerated(xarr)){
        var y  = x + zr*d1 - d2;
        d2 = d1;
        d1 = y;
    }
    zr = half*zr*d1 - d2;
    zi = zi*d1;
    return complex(zr, zi);
}


main(){
    var x = Array[Double,1000]();
    var f = 1.0;
    for(i in range(size(x)))
        x[i] = sin(2.0*PI*f*i*3.0/(1000.0*f)+0.01);
    var z = rgoertzel(x, 3.0);
    println(z," ",arg(z)+PI/2.0);
}
