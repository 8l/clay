import paged.*;
import paged.misc.*;

import strings;
import files.mapping.*;



//
// NamedScalar[T]
//

record NamedScalar[T] {
    fileName : strings.String;
    file : File;
    mapping : FileMapping;
}



//
// constructor
//

[T]
overload NamedScalar[T](fileName : strings.String, initial:T) returned:NamedScalar[T] {
    ref x = returned;
    x.fileName <-- fileName;
    if (fileExists?(fileName)) {
        x.file <-- File(fileName, READ_WRITE);
        x.mapping <-- FileMapping(x.file, MAP_READ_WRITE);
    }
    else {
        x.file <-- File(fileName, CREATE);
        resizeFile(x.file, TypeSize(T));
        x.mapping <-- FileMapping(x.file, MAP_READ_WRITE);
        x^ <-- initial;
    }
}



//
// dereference
//

[T]
overload dereference(x:NamedScalar[T]) = ref Pointer[T](x.mapping.address)^;
