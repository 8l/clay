// Automatically generated by clay-bindgen
// language: objective-c

import cocoa.objc.*;

import libc.*;
import cocoa.corefoundation.*;
import cocoa.applicationservices.*;
import cocoa.foundation.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


overload selector(static "AMSymbol") = NSString;
overload selector(static "API") = UInt;
overload selector(static "CATransform3DValue") = CATransform3D;
overload selector(static "HTTPBody") = NSData;
overload selector(static "HTTPBodyStream") = NSInputStream;
overload selector(static "HTTPMethod") = NSString;
overload selector(static "HTTPShouldHandleCookies") = Bool;
overload selector(static "HTTPShouldUsePipelining") = Bool;
overload selector(static "ISOCountryCodes") = NSArray;
overload selector(static "ISOCurrencyCodes") = NSArray;
overload selector(static "ISOLanguageCodes") = NSArray;
overload selector(static "MIMEType") = NSString;
overload selector(static "PMSymbol") = NSString;
overload selector(static "TXTRecordData") = NSData;
overload selector(static "URL") = NSURL;
overload selector(static "URLByAppendingPathComponent:") = NSURL, NSString;
overload selector(static "URLByAppendingPathExtension:") = NSURL, NSString;
overload selector(static "URLByDeletingLastPathComponent") = NSURL;
overload selector(static "URLByDeletingPathExtension") = NSURL;
overload selector(static "URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, UInt, NSURL, Pointer[Bool], Pointer[NSError];
overload selector(static "URLByResolvingSymlinksInPath") = NSURL;
overload selector(static "URLByStandardizingPath") = NSURL;
overload selector(static "URLForAuxiliaryExecutable:") = NSURL, NSString;
overload selector(static "URLForDirectory:inDomain:appropriateForURL:create:error:") = NSURL, UInt, UInt, NSURL, Bool, Pointer[NSError];
overload selector(static "URLForKey:") = NSURL, NSString;
overload selector(static "URLForResource:withExtension:") = NSURL, NSString, NSString;
overload selector(static "URLForResource:withExtension:subdirectory:") = NSURL, NSString, NSString, NSString;
overload selector(static "URLForResource:withExtension:subdirectory:inBundleWithURL:") = NSURL, NSString, NSString, NSString, NSURL;
overload selector(static "URLForResource:withExtension:subdirectory:localization:") = NSURL, NSString, NSString, NSString, NSString;
overload selector(static "URLProtocol:cachedResponseIsValid:") = Void, NSURLProtocol, NSCachedURLResponse;
overload selector(static "URLProtocol:didCancelAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
overload selector(static "URLProtocol:didFailWithError:") = Void, NSURLProtocol, NSError;
overload selector(static "URLProtocol:didLoadData:") = Void, NSURLProtocol, NSData;
overload selector(static "URLProtocol:didReceiveAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
overload selector(static "URLProtocol:didReceiveResponse:cacheStoragePolicy:") = Void, NSURLProtocol, NSURLResponse, UInt;
overload selector(static "URLProtocol:wasRedirectedToRequest:redirectResponse:") = Void, NSURLProtocol, NSURLRequest, NSURLResponse;
overload selector(static "URLProtocolDidFinishLoading:") = Void, NSURLProtocol;
overload selector(static "URLWithString:") = Id, NSString;
overload selector(static "URLWithString:relativeToURL:") = Id, NSString, NSURL;
overload selector(static "URLsForDirectory:inDomains:") = NSArray, UInt, UInt;
overload selector(static "URLsForResourcesWithExtension:subdirectory:") = NSArray, NSString, NSString;
overload selector(static "URLsForResourcesWithExtension:subdirectory:inBundleWithURL:") = NSArray, NSString, NSString, NSURL;
overload selector(static "URLsForResourcesWithExtension:subdirectory:localization:") = NSArray, NSString, NSString, NSString;
overload selector(static "UTF8String") = Pointer[CChar];
overload selector(static "abbreviation") = NSString;
overload selector(static "abbreviationDictionary") = NSDictionary;
overload selector(static "abbreviationForDate:") = NSString, NSDate;
overload selector(static "abortParsing") = Void;
overload selector(static "absoluteString") = NSString;
overload selector(static "absoluteURL") = NSURL;
overload selector(static "acceptConnectionInBackgroundAndNotify") = Void;
overload selector(static "acceptConnectionInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector(static "acceptInputForMode:beforeDate:") = Void, NSString, NSDate;
overload selector(static "accessInstanceVariablesDirectly") = Bool;
overload selector(static "actionForKey:") = Id, NSString;
overload selector(static "actionForLayer:forKey:") = Id, CALayer, NSString;
overload selector(static "actions") = NSDictionary;
overload selector(static "activeProcessorCount") = UInt;
overload selector(static "addAnimation:forKey:") = Void, CAAnimation, NSString;
overload selector(static "addAttribute:value:range:") = Void, NSString, Id, NSRange;
overload selector(static "addAttributes:range:") = Void, NSDictionary, NSRange;
overload selector(static "addCharactersInRange:") = Void, NSRange;
overload selector(static "addCharactersInString:") = Void, NSString;
overload selector(static "addDependency:") = Void, NSOperation;
overload selector(static "addEntriesFromDictionary:") = Void, NSDictionary;
overload selector(static "addExecutionBlock:") = Void, UnknownType;
overload selector(static "addFileWithPath:") = NSString, NSString;
overload selector(static "addFileWrapper:") = NSString, NSFileWrapper;
overload selector(static "addIndex:") = Void, UInt;
overload selector(static "addIndexes:") = Void, NSIndexSet;
overload selector(static "addIndexesInRange:") = Void, NSRange;
overload selector(static "addObject:") = Void, Id;
overload selector(static "addObjectsFromArray:") = Void, NSArray;
overload selector(static "addObserver:forKeyPath:options:context:") = Void, NSObject, NSString, UInt, RawPointer;
overload selector(static "addObserver:selector:name:object:") = Void, Id, SelectorHandle, NSString, Id;
overload selector(static "addObserver:toObjectsAtIndexes:forKeyPath:options:context:") = Void, NSObject, NSIndexSet, NSString, UInt, RawPointer;
overload selector(static "addObserverForName:object:queue:usingBlock:") = Id, NSString, Id, NSOperationQueue, UnknownType;
overload selector(static "addOperation:") = Void, NSOperation;
overload selector(static "addOperationWithBlock:") = Void, UnknownType;
overload selector(static "addOperations:waitUntilFinished:") = Void, NSArray, Bool;
overload selector(static "addPort:forMode:") = Void, NSPort, NSString;
overload selector(static "addRegularFileWithContents:preferredFilename:") = NSString, NSData, NSString;
overload selector(static "addSublayer:") = Void, CALayer;
overload selector(static "addSuiteNamed:") = Void, NSString;
overload selector(static "addSymbolicLinkWithDestination:preferredFilename:") = NSString, NSString, NSString;
overload selector(static "addTimeInterval:") = Id, Double;
overload selector(static "addTimer:forMode:") = Void, NSTimer, NSString;
overload selector(static "addToRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector(static "addValue:forHTTPHeaderField:") = Void, NSString, NSString;
overload selector(static "addressCheckingResultWithRange:components:") = NSTextCheckingResult, NSRange, NSDictionary;
overload selector(static "addressComponents") = NSDictionary;
overload selector(static "addresses") = NSArray;
overload selector(static "affineTransform") = CGAffineTransform;
overload selector(static "alignmentMode") = NSString;
overload selector(static "allBundles") = NSArray;
overload selector(static "allCredentials") = NSDictionary;
overload selector(static "allFrameworks") = NSArray;
overload selector(static "allHTTPHeaderFields") = NSDictionary;
overload selector(static "allHeaderFields") = NSDictionary;
overload selector(static "allKeys") = NSArray;
overload selector(static "allKeysForObject:") = NSArray, Id;
overload selector(static "allLanguages") = NSArray;
overload selector(static "allObjects") = NSArray;
overload selector(static "allScripts") = NSArray;
overload selector(static "allValues") = NSArray;
overload selector(static "alloc") = Id;
overload selector(static "allocWithZone:") = Id, Pointer[NSZone];
overload selector(static "allowsFloats") = Bool;
overload selector(static "allowsKeyedCoding") = Bool;
overload selector(static "allowsReverseTransformation") = Bool;
overload selector(static "alphanumericCharacterSet") = Id;
overload selector(static "alwaysShowsDecimalSeparator") = Bool;
overload selector(static "anchorPoint") = CGPoint;
overload selector(static "anchorPointZ") = Float;
overload selector(static "andPredicateWithSubpredicates:") = NSPredicate, NSArray;
overload selector(static "animation") = Id;
overload selector(static "animationDidStart:") = Void, CAAnimation;
overload selector(static "animationDidStop:finished:") = Void, CAAnimation, Bool;
overload selector(static "animationDuration") = Double;
overload selector(static "animationForKey:") = CAAnimation, NSString;
overload selector(static "animationKeys") = NSArray;
overload selector(static "animationTimingFunction") = CAMediaTimingFunction;
overload selector(static "animationWithKeyPath:") = Id, NSString;
overload selector(static "animations") = NSArray;
overload selector(static "anyObject") = Id;
overload selector(static "appendAttributedString:") = Void, NSAttributedString;
overload selector(static "appendBytes:length:") = Void, RawPointer, UInt;
overload selector(static "appendData:") = Void, NSData;
overload varargSelector(static "appendFormat:") = Void, NSString;
overload selector(static "appendString:") = Void, NSString;
overload selector(static "archiveRootObject:toFile:") = Bool, Id, NSString;
overload selector(static "archivedDataWithRootObject:") = NSData, Id;
overload selector(static "archiver:didEncodeObject:") = Void, NSKeyedArchiver, Id;
overload selector(static "archiver:willEncodeObject:") = Id, NSKeyedArchiver, Id;
overload selector(static "archiver:willReplaceObject:withObject:") = Void, NSKeyedArchiver, Id, Id;
overload selector(static "archiverDidFinish:") = Void, NSKeyedArchiver;
overload selector(static "archiverWillFinish:") = Void, NSKeyedArchiver;
overload selector(static "arguments") = NSArray;
overload selector(static "argumentsRetained") = Bool;
overload selector(static "array") = Id;
overload selector(static "arrayByAddingObject:") = NSArray, Id;
overload selector(static "arrayByAddingObjectsFromArray:") = NSArray, NSArray;
overload selector(static "arrayForKey:") = NSArray, NSString;
overload selector(static "arrayWithArray:") = Id, NSArray;
overload selector(static "arrayWithCapacity:") = Id, UInt;
overload selector(static "arrayWithContentsOfFile:") = Id, NSString;
overload selector(static "arrayWithContentsOfURL:") = Id, NSURL;
overload selector(static "arrayWithObject:") = Id, Id;
overload varargSelector(static "arrayWithObjects:") = Id, Id;
overload selector(static "arrayWithObjects:count:") = Id, Pointer[Id], UInt;
overload selector(static "ascending") = Bool;
overload selector(static "attemptRecoveryFromError:optionIndex:") = Bool, NSError, UInt;
overload selector(static "attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:") = Void, NSError, UInt, Id, SelectorHandle, RawPointer;
overload selector(static "attribute:atIndex:effectiveRange:") = Id, NSString, UInt, NSRangePointer;
overload selector(static "attribute:atIndex:longestEffectiveRange:inRange:") = Id, NSString, UInt, NSRangePointer, NSRange;
overload selector(static "attributedStringForObjectValue:withDefaultAttributes:") = NSAttributedString, Id, NSDictionary;
overload selector(static "attributedSubstringFromRange:") = NSAttributedString, NSRange;
overload selector(static "attributesAtIndex:effectiveRange:") = NSDictionary, UInt, NSRangePointer;
overload selector(static "attributesAtIndex:longestEffectiveRange:inRange:") = NSDictionary, UInt, NSRangePointer, NSRange;
overload selector(static "attributesOfFileSystemForPath:error:") = NSDictionary, NSString, Pointer[NSError];
overload selector(static "attributesOfItemAtPath:error:") = NSDictionary, NSString, Pointer[NSError];
overload selector(static "authenticationMethod") = NSString;
overload selector(static "autoContentAccessingProxy") = Id;
overload selector(static "automaticallyNotifiesObserversForKey:") = Bool, NSString;
overload selector(static "autorelease") = Id;
overload selector(static "autoreverses") = Bool;
overload selector(static "autoupdatingCurrentCalendar") = Id;
overload selector(static "autoupdatingCurrentLocale") = Id;
overload selector(static "availableData") = NSData;
overload selector(static "availableLocaleIdentifiers") = NSArray;
overload selector(static "availableStringEncodings") = Pointer[UInt];
overload selector(static "awakeAfterUsingCoder:") = Id, NSCoder;
overload selector(static "backgroundColor") = CGColorRef;
overload selector(static "backgroundFilters") = NSArray;
overload selector(static "baseURL") = NSURL;
overload selector(static "begin") = Void;
overload selector(static "beginContentAccess") = Bool;
overload selector(static "beginEditing") = Void;
overload selector(static "beginTime") = Double;
overload selector(static "beginUndoGrouping") = Void;
overload selector(static "biasValues") = NSArray;
overload selector(static "bitmapRepresentation") = NSData;
overload selector(static "blockOperationWithBlock:") = Id, UnknownType;
overload selector(static "bookmarkDataWithContentsOfURL:error:") = NSData, NSURL, Pointer[NSError];
overload selector(static "bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:") = NSData, UInt, NSArray, NSURL, Pointer[NSError];
overload selector(static "boolForKey:") = Bool, NSString;
overload selector(static "boolValue") = Bool;
overload selector(static "borderColor") = CGColorRef;
overload selector(static "borderWidth") = Float;
overload selector(static "bounds") = CGRect;
overload selector(static "broadcast") = Void;
overload selector(static "builtInPlugInsPath") = NSString;
overload selector(static "builtInPlugInsURL") = NSURL;
overload selector(static "bundleForClass:") = NSBundle, Id;
overload selector(static "bundleIdentifier") = NSString;
overload selector(static "bundlePath") = NSString;
overload selector(static "bundleURL") = NSURL;
overload selector(static "bundleWithIdentifier:") = NSBundle, NSString;
overload selector(static "bundleWithPath:") = NSBundle, NSString;
overload selector(static "bundleWithURL:") = NSBundle, NSURL;
overload selector(static "byValue") = Id;
overload selector(static "bytes") = RawPointer;
overload selector(static "cString") = Pointer[CChar];
overload selector(static "cStringLength") = UInt;
overload selector(static "cStringUsingEncoding:") = Pointer[CChar], UInt;
overload selector(static "cache:willEvictObject:") = Void, NSCache, Id;
overload selector(static "cachePolicy") = UInt;
overload selector(static "cachedResponse") = NSCachedURLResponse;
overload selector(static "cachedResponseForRequest:") = NSCachedURLResponse, NSURLRequest;
overload selector(static "calculationMode") = NSString;
overload selector(static "calendar") = NSCalendar;
overload selector(static "calendarIdentifier") = NSString;
overload selector(static "callStackReturnAddresses") = NSArray;
overload selector(static "callStackSymbols") = NSArray;
overload selector(static "canBeConvertedToEncoding:") = Bool, UInt;
overload selector(static "canHandleRequest:") = Bool, NSURLRequest;
overload selector(static "canInitWithRequest:") = Bool, NSURLRequest;
overload selector(static "canRedo") = Bool;
overload selector(static "canUndo") = Bool;
overload selector(static "cancel") = Void;
overload selector(static "cancelAllOperations") = Void;
overload selector(static "cancelAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
overload selector(static "cancelPerformSelector:target:argument:") = Void, SelectorHandle, Id, Id;
overload selector(static "cancelPerformSelectorsWithTarget:") = Void, Id;
overload selector(static "cancelPreviousPerformRequestsWithTarget:") = Void, Id;
overload selector(static "cancelPreviousPerformRequestsWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
overload selector(static "canonicalLanguageIdentifierFromString:") = NSString, NSString;
overload selector(static "canonicalLocaleIdentifierFromString:") = NSString, NSString;
overload selector(static "canonicalRequestForRequest:") = NSURLRequest, NSURLRequest;
overload selector(static "capitalizedLetterCharacterSet") = Id;
overload selector(static "capitalizedString") = NSString;
overload selector(static "caseInsensitiveCompare:") = Int, NSString;
overload selector(static "caseSensitive") = Bool;
overload selector(static "certificates") = NSArray;
overload selector(static "changeCurrentDirectoryPath:") = Bool, NSString;
overload selector(static "changeFileAttributes:atPath:") = Bool, NSDictionary, NSString;
overload selector(static "charValue") = CChar;
overload selector(static "characterAtIndex:") = UShort, UInt;
overload selector(static "characterDirectionForLanguage:") = UInt, NSString;
overload selector(static "characterIsMember:") = Bool, UShort;
overload selector(static "characterSetWithBitmapRepresentation:") = Id, NSData;
overload selector(static "characterSetWithCharactersInString:") = Id, NSString;
overload selector(static "characterSetWithContentsOfFile:") = Id, NSString;
overload selector(static "characterSetWithRange:") = Id, NSRange;
overload selector(static "charactersToBeSkipped") = NSCharacterSet;
overload selector(static "checkResourceIsReachableAndReturnError:") = Bool, Pointer[NSError];
overload selector(static "checkingTypes") = UInt64;
overload selector(static "class") = Id;
overload selector(static "classFallbacksForKeyedArchiver") = NSArray;
overload selector(static "classForClassName:") = Id, NSString;
overload selector(static "classForCoder") = Id;
overload selector(static "classForKeyedArchiver") = Id;
overload selector(static "classForKeyedUnarchiver") = Id;
overload selector(static "classNameForClass:") = NSString, Id;
overload selector(static "classNamed:") = Id, NSString;
overload selector(static "client") = Id;
overload selector(static "close") = Void;
overload selector(static "closeFile") = Void;
overload selector(static "code") = Int;
overload selector(static "collection") = Id;
overload selector(static "colors") = NSArray;
overload selector(static "columnNumber") = Int;
overload selector(static "comment") = NSString;
overload selector(static "commentURL") = NSURL;
overload selector(static "commit") = Void;
overload selector(static "commonISOCurrencyCodes") = NSArray;
overload selector(static "commonPrefixWithString:options:") = NSString, NSString, UInt;
overload selector(static "comparator") = NSComparator;
overload selector(static "compare:") = Int, NSNumber;
overload selector(static "compare:options:") = Int, NSString, UInt;
overload selector(static "compare:options:range:") = Int, NSString, UInt, NSRange;
overload selector(static "compare:options:range:locale:") = Int, NSString, UInt, NSRange, Id;
overload selector(static "compareObject:toObject:") = Int, Id, Id;
overload selector(static "comparisonPredicateModifier") = UInt;
overload selector(static "completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:") = UInt, Pointer[NSString], Bool, Pointer[NSArray], NSArray;
overload selector(static "completionBlock") = UnknownType;
overload selector(static "components") = NSDictionary;
overload selector(static "components:fromDate:") = NSDateComponents, UInt, NSDate;
overload selector(static "components:fromDate:toDate:options:") = NSDateComponents, UInt, NSDate, NSDate, UInt;
overload selector(static "componentsFromLocaleIdentifier:") = NSDictionary, NSString;
overload selector(static "componentsJoinedByString:") = NSString, NSString;
overload selector(static "componentsSeparatedByCharactersInSet:") = NSArray, NSCharacterSet;
overload selector(static "componentsSeparatedByString:") = NSArray, NSString;
overload selector(static "componentsToDisplayForPath:") = NSArray, NSString;
overload selector(static "compositingFilter") = Id;
overload selector(static "compoundPredicateType") = UInt;
overload selector(static "condition") = Int;
overload selector(static "conformsToProtocol:") = Bool, Id;
overload selector(static "connection:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLConnection, NSURLProtectionSpace;
overload selector(static "connection:didCancelAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
overload selector(static "connection:didFailWithError:") = Void, NSURLConnection, NSError;
overload selector(static "connection:didReceiveAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
overload selector(static "connection:didReceiveData:") = Void, NSURLConnection, NSData;
overload selector(static "connection:didReceiveResponse:") = Void, NSURLConnection, NSURLResponse;
overload selector(static "connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:") = Void, NSURLConnection, Int, Int, Int;
overload selector(static "connection:needNewBodyStream:") = NSInputStream, NSURLConnection, NSURLRequest;
overload selector(static "connection:willCacheResponse:") = NSCachedURLResponse, NSURLConnection, NSCachedURLResponse;
overload selector(static "connection:willSendRequest:redirectResponse:") = NSURLRequest, NSURLConnection, NSURLRequest, NSURLResponse;
overload selector(static "connectionDidFinishLoading:") = Void, NSURLConnection;
overload selector(static "connectionShouldUseCredentialStorage:") = Bool, NSURLConnection;
overload selector(static "connectionWithRequest:delegate:") = NSURLConnection, NSURLRequest, Id;
overload selector(static "constantValue") = Id;
overload selector(static "containsIndex:") = Bool, UInt;
overload selector(static "containsIndexes:") = Bool, NSIndexSet;
overload selector(static "containsIndexesInRange:") = Bool, NSRange;
overload selector(static "containsObject:") = Bool, Id;
overload selector(static "containsPoint:") = Bool, CGPoint;
overload selector(static "containsValueForKey:") = Bool, NSString;
overload selector(static "contents") = Id;
overload selector(static "contentsAreFlipped") = Bool;
overload selector(static "contentsAtPath:") = NSData, NSString;
overload selector(static "contentsCenter") = CGRect;
overload selector(static "contentsEqualAtPath:andPath:") = Bool, NSString, NSString;
overload selector(static "contentsGravity") = NSString;
overload selector(static "contentsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
overload selector(static "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:") = NSArray, NSURL, NSArray, UInt, Pointer[NSError];
overload selector(static "contentsRect") = CGRect;
overload selector(static "contentsScale") = Float;
overload selector(static "continueWithoutCredentialForAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
overload selector(static "continuityValues") = NSArray;
overload selector(static "controlCharacterSet") = Id;
overload selector(static "convertPoint:fromLayer:") = CGPoint, CGPoint, CALayer;
overload selector(static "convertPoint:toLayer:") = CGPoint, CGPoint, CALayer;
overload selector(static "convertRect:fromLayer:") = CGRect, CGRect, CALayer;
overload selector(static "convertRect:toLayer:") = CGRect, CGRect, CALayer;
overload selector(static "convertTime:fromLayer:") = Double, Double, CALayer;
overload selector(static "convertTime:toLayer:") = Double, Double, CALayer;
overload selector(static "cookieAcceptPolicy") = UInt;
overload selector(static "cookieWithProperties:") = Id, NSDictionary;
overload selector(static "cookies") = NSArray;
overload selector(static "cookiesForURL:") = NSArray, NSURL;
overload selector(static "cookiesWithResponseHeaderFields:forURL:") = NSArray, NSDictionary, NSURL;
overload selector(static "copy") = Id;
overload selector(static "copyItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector(static "copyItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector(static "copyWithZone:") = Id, Pointer[NSZone];
overload selector(static "cornerRadius") = Float;
overload selector(static "correctionCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "count") = UInt;
overload selector(static "countByEnumeratingWithState:objects:count:") = UInt, Pointer[NSFastEnumerationState], Pointer[Id], UInt;
overload selector(static "countForObject:") = UInt, Id;
overload selector(static "countLimit") = UInt;
overload selector(static "countOfIndexesInRange:") = UInt, NSRange;
overload selector(static "createDirectoryAtPath:attributes:") = Bool, NSString, NSDictionary;
overload selector(static "createDirectoryAtPath:withIntermediateDirectories:attributes:error:") = Bool, NSString, Bool, NSDictionary, Pointer[NSError];
overload selector(static "createFileAtPath:contents:attributes:") = Bool, NSString, NSData, NSDictionary;
overload selector(static "createSymbolicLinkAtPath:pathContent:") = Bool, NSString, NSString;
overload selector(static "createSymbolicLinkAtPath:withDestinationPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector(static "credentialForTrust:") = NSURLCredential, SecTrustRef;
overload selector(static "credentialWithIdentity:certificates:persistence:") = NSURLCredential, SecIdentityRef, NSArray, UInt;
overload selector(static "credentialWithUser:password:persistence:") = NSURLCredential, NSString, NSString, UInt;
overload selector(static "credentialsForProtectionSpace:") = NSDictionary, NSURLProtectionSpace;
overload selector(static "currencyCode") = NSString;
overload selector(static "currencyDecimalSeparator") = NSString;
overload selector(static "currencyGroupingSeparator") = NSString;
overload selector(static "currencySymbol") = NSString;
overload selector(static "currentCalendar") = Id;
overload selector(static "currentContext") = EAGLContext;
overload selector(static "currentDirectoryPath") = NSString;
overload selector(static "currentDiskUsage") = UInt;
overload selector(static "currentHandler") = NSAssertionHandler;
overload selector(static "currentLocale") = Id;
overload selector(static "currentMemoryUsage") = UInt;
overload selector(static "currentMode") = NSString;
overload selector(static "currentQueue") = Id;
overload selector(static "currentRunLoop") = NSRunLoop;
overload selector(static "currentThread") = NSThread;
overload selector(static "customSelector") = SelectorHandle;
overload selector(static "dashCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "data") = Id;
overload selector(static "dataDetectorWithTypes:error:") = NSDataDetector, UInt64, Pointer[NSError];
overload selector(static "dataForKey:") = NSData, NSString;
overload selector(static "dataFromPropertyList:format:errorDescription:") = NSData, Id, UInt, Pointer[NSString];
overload selector(static "dataFromTXTRecordDictionary:") = NSData, NSDictionary;
overload selector(static "dataUsingEncoding:") = NSData, UInt;
overload selector(static "dataUsingEncoding:allowLossyConversion:") = NSData, UInt, Bool;
overload selector(static "dataWithBytes:length:") = Id, RawPointer, UInt;
overload selector(static "dataWithBytesNoCopy:length:") = Id, RawPointer, UInt;
overload selector(static "dataWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, UInt, Bool;
overload selector(static "dataWithCapacity:") = Id, UInt;
overload selector(static "dataWithContentsOfFile:") = Id, NSString;
overload selector(static "dataWithContentsOfFile:options:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "dataWithContentsOfMappedFile:") = Id, NSString;
overload selector(static "dataWithContentsOfURL:") = Id, NSURL;
overload selector(static "dataWithContentsOfURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "dataWithData:") = Id, NSData;
overload selector(static "dataWithLength:") = Id, UInt;
overload selector(static "dataWithPropertyList:format:options:error:") = NSData, Id, UInt, UInt, Pointer[NSError];
overload selector(static "date") = Id;
overload selector(static "dateByAddingComponents:toDate:options:") = NSDate, NSDateComponents, NSDate, UInt;
overload selector(static "dateByAddingTimeInterval:") = Id, Double;
overload selector(static "dateCheckingResultWithRange:date:") = NSTextCheckingResult, NSRange, NSDate;
overload selector(static "dateCheckingResultWithRange:date:timeZone:duration:") = NSTextCheckingResult, NSRange, NSDate, NSTimeZone, Double;
overload selector(static "dateFormat") = NSString;
overload selector(static "dateFormatFromTemplate:options:locale:") = NSString, NSString, UInt, NSLocale;
overload selector(static "dateFromComponents:") = NSDate, NSDateComponents;
overload selector(static "dateFromString:") = NSDate, NSString;
overload selector(static "dateStyle") = UInt;
overload selector(static "dateWithTimeInterval:sinceDate:") = Id, Double, NSDate;
overload selector(static "dateWithTimeIntervalSince1970:") = Id, Double;
overload selector(static "dateWithTimeIntervalSinceNow:") = Id, Double;
overload selector(static "dateWithTimeIntervalSinceReferenceDate:") = Id, Double;
overload selector(static "day") = Int;
overload selector(static "daylightSavingTimeOffset") = Double;
overload selector(static "daylightSavingTimeOffsetForDate:") = Double, NSDate;
overload selector(static "dealloc") = Void;
overload selector(static "decimalDigitCharacterSet") = Id;
overload selector(static "decimalNumberByAdding:") = NSDecimalNumber, NSDecimalNumber;
overload selector(static "decimalNumberByAdding:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector(static "decimalNumberByDividingBy:") = NSDecimalNumber, NSDecimalNumber;
overload selector(static "decimalNumberByDividingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector(static "decimalNumberByMultiplyingBy:") = NSDecimalNumber, NSDecimalNumber;
overload selector(static "decimalNumberByMultiplyingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector(static "decimalNumberByMultiplyingByPowerOf10:") = NSDecimalNumber, Short;
overload selector(static "decimalNumberByMultiplyingByPowerOf10:withBehavior:") = NSDecimalNumber, Short, Id;
overload selector(static "decimalNumberByRaisingToPower:") = NSDecimalNumber, UInt;
overload selector(static "decimalNumberByRaisingToPower:withBehavior:") = NSDecimalNumber, UInt, Id;
overload selector(static "decimalNumberByRoundingAccordingToBehavior:") = NSDecimalNumber, Id;
overload selector(static "decimalNumberBySubtracting:") = NSDecimalNumber, NSDecimalNumber;
overload selector(static "decimalNumberBySubtracting:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector(static "decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, UInt, Short, Bool, Bool, Bool, Bool;
overload selector(static "decimalNumberWithDecimal:") = NSDecimalNumber, NSDecimal;
overload selector(static "decimalNumberWithMantissa:exponent:isNegative:") = NSDecimalNumber, UInt64, Short, Bool;
overload selector(static "decimalNumberWithString:") = NSDecimalNumber, NSString;
overload selector(static "decimalNumberWithString:locale:") = NSDecimalNumber, NSString, Id;
overload selector(static "decimalSeparator") = NSString;
overload selector(static "decimalValue") = NSDecimal;
overload selector(static "decodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], UInt, RawPointer;
overload selector(static "decodeBoolForKey:") = Bool, NSString;
overload selector(static "decodeBytesForKey:returnedLength:") = Pointer[CUChar], NSString, Pointer[UInt];
overload selector(static "decodeBytesWithReturnedLength:") = RawPointer, Pointer[UInt];
overload selector(static "decodeDataObject") = NSData;
overload selector(static "decodeDoubleForKey:") = Double, NSString;
overload selector(static "decodeFloatForKey:") = Float, NSString;
overload selector(static "decodeInt32ForKey:") = Int, NSString;
overload selector(static "decodeInt64ForKey:") = Int64, NSString;
overload selector(static "decodeIntForKey:") = Int, NSString;
overload selector(static "decodeIntegerForKey:") = Int, NSString;
overload selector(static "decodeObject") = Id;
overload selector(static "decodeObjectForKey:") = Id, NSString;
overload selector(static "decodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
overload varargSelector(static "decodeValuesOfObjCTypes:") = Void, Pointer[CChar];
overload selector(static "decomposableCharacterSet") = Id;
overload selector(static "decomposedStringWithCanonicalMapping") = NSString;
overload selector(static "decomposedStringWithCompatibilityMapping") = NSString;
overload selector(static "defaultActionForKey:") = Id, NSString;
overload selector(static "defaultBehavior") = Id;
overload selector(static "defaultCStringEncoding") = UInt;
overload selector(static "defaultCenter") = Id;
overload selector(static "defaultCredentialForProtectionSpace:") = NSURLCredential, NSURLProtectionSpace;
overload selector(static "defaultDate") = NSDate;
overload selector(static "defaultDecimalNumberHandler") = Id;
overload selector(static "defaultFormatterBehavior") = UInt;
overload selector(static "defaultManager") = NSFileManager;
overload selector(static "defaultQueue") = Id;
overload selector(static "defaultTimeZone") = NSTimeZone;
overload selector(static "defaultValueForKey:") = Id, NSString;
overload selector(static "delegate") = Id;
overload selector(static "deleteCharactersInRange:") = Void, NSRange;
overload selector(static "deleteCookie:") = Void, NSHTTPCookie;
overload selector(static "dependencies") = NSArray;
overload selector(static "dequeueNotificationsMatching:coalesceMask:") = Void, NSNotification, UInt;
overload selector(static "description") = NSString;
overload selector(static "descriptionInStringsFileFormat") = NSString;
overload selector(static "descriptionWithLocale:") = NSString, Id;
overload selector(static "descriptionWithLocale:indent:") = NSString, Id, UInt;
overload selector(static "destinationOfSymbolicLinkAtPath:error:") = NSString, NSString, Pointer[NSError];
overload selector(static "detachNewThreadSelector:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
overload selector(static "developmentLocalization") = NSString;
overload selector(static "dictionary") = Id;
overload selector(static "dictionaryForKey:") = NSDictionary, NSString;
overload selector(static "dictionaryFromTXTRecordData:") = NSDictionary, NSData;
overload selector(static "dictionaryRepresentation") = NSDictionary;
overload selector(static "dictionaryWithCapacity:") = Id, UInt;
overload selector(static "dictionaryWithContentsOfFile:") = Id, NSString;
overload selector(static "dictionaryWithContentsOfURL:") = Id, NSURL;
overload selector(static "dictionaryWithDictionary:") = Id, NSDictionary;
overload selector(static "dictionaryWithObject:forKey:") = Id, Id, Id;
overload selector(static "dictionaryWithObjects:forKeys:") = Id, NSArray, NSArray;
overload selector(static "dictionaryWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], UInt;
overload varargSelector(static "dictionaryWithObjectsAndKeys:") = Id, Id;
overload selector(static "dictionaryWithValuesForKeys:") = NSDictionary, NSArray;
overload selector(static "didChange:valuesAtIndexes:forKey:") = Void, UInt, NSIndexSet, NSString;
overload selector(static "didChangeValueForKey:") = Void, NSString;
overload selector(static "didChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, UInt, NSSet;
overload selector(static "directoryAttributes") = NSDictionary;
overload selector(static "directoryContentsAtPath:") = NSArray, NSString;
overload selector(static "disableActions") = Bool;
overload selector(static "disableUndoRegistration") = Void;
overload selector(static "discardContentIfPossible") = Void;
overload selector(static "diskCapacity") = UInt;
overload selector(static "display") = Void;
overload selector(static "displayIfNeeded") = Void;
overload selector(static "displayLayer:") = Void, CALayer;
overload selector(static "displayLinkWithTarget:selector:") = CADisplayLink, Id, SelectorHandle;
overload selector(static "displayNameAtPath:") = NSString, NSString;
overload selector(static "displayNameForKey:value:") = NSString, Id, Id;
overload selector(static "distantFuture") = Id;
overload selector(static "distantPast") = Id;
overload selector(static "distinguishedNames") = NSArray;
overload selector(static "doesNotRecognizeSelector:") = Void, SelectorHandle;
overload selector(static "doesRelativeDateFormatting") = Bool;
overload selector(static "domain") = NSString;
overload selector(static "dominantLanguage") = NSString;
overload selector(static "dominantLanguageForScript:") = NSString, NSString;
overload selector(static "dominantScript") = NSString;
overload selector(static "doubleForKey:") = Double, NSString;
overload selector(static "doubleValue") = Double;
overload selector(static "drain") = Void;
overload selector(static "drawInContext:") = Void, CGContextRef;
overload selector(static "drawLayer:inContext:") = Void, CALayer, CGContextRef;
overload selector(static "drawableProperties") = NSDictionary;
overload selector(static "duration") = Double;
overload selector(static "earlierDate:") = NSDate, NSDate;
overload selector(static "edgeAntialiasingMask") = UInt;
overload selector(static "editingStringForObjectValue:") = NSString, Id;
overload selector(static "enableUndoRegistration") = Void;
overload selector(static "encodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], UInt, RawPointer;
overload selector(static "encodeBool:forKey:") = Void, Bool, NSString;
overload selector(static "encodeBycopyObject:") = Void, Id;
overload selector(static "encodeByrefObject:") = Void, Id;
overload selector(static "encodeBytes:length:") = Void, RawPointer, UInt;
overload selector(static "encodeBytes:length:forKey:") = Void, Pointer[CUChar], UInt, NSString;
overload selector(static "encodeConditionalObject:") = Void, Id;
overload selector(static "encodeConditionalObject:forKey:") = Void, Id, NSString;
overload selector(static "encodeDataObject:") = Void, NSData;
overload selector(static "encodeDouble:forKey:") = Void, Double, NSString;
overload selector(static "encodeFloat:forKey:") = Void, Float, NSString;
overload selector(static "encodeInt32:forKey:") = Void, Int, NSString;
overload selector(static "encodeInt64:forKey:") = Void, Int64, NSString;
overload selector(static "encodeInt:forKey:") = Void, Int, NSString;
overload selector(static "encodeInteger:forKey:") = Void, Int, NSString;
overload selector(static "encodeObject:") = Void, Id;
overload selector(static "encodeObject:forKey:") = Void, Id, NSString;
overload selector(static "encodeRootObject:") = Void, Id;
overload selector(static "encodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
overload varargSelector(static "encodeValuesOfObjCTypes:") = Void, Pointer[CChar];
overload selector(static "encodeWithCoder:") = Void, NSCoder;
overload selector(static "endContentAccess") = Void;
overload selector(static "endEditing") = Void;
overload selector(static "endPoint") = CGPoint;
overload selector(static "endProgress") = Float;
overload selector(static "endUndoGrouping") = Void;
overload selector(static "enqueueNotification:postingStyle:") = Void, NSNotification, UInt;
overload selector(static "enqueueNotification:postingStyle:coalesceMask:forModes:") = Void, NSNotification, UInt, UInt, NSArray;
overload selector(static "enumerateAttribute:inRange:options:usingBlock:") = Void, NSString, NSRange, UInt, UnknownType;
overload selector(static "enumerateAttributesInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
overload selector(static "enumerateIndexesInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
overload selector(static "enumerateIndexesUsingBlock:") = Void, UnknownType;
overload selector(static "enumerateIndexesWithOptions:usingBlock:") = Void, UInt, UnknownType;
overload selector(static "enumerateKeysAndObjectsUsingBlock:") = Void, UnknownType;
overload selector(static "enumerateKeysAndObjectsWithOptions:usingBlock:") = Void, UInt, UnknownType;
overload selector(static "enumerateLinesUsingBlock:") = Void, UnknownType;
overload selector(static "enumerateMatchesInString:options:range:usingBlock:") = Void, NSString, UInt, NSRange, UnknownType;
overload selector(static "enumerateObjectsAtIndexes:options:usingBlock:") = Void, NSIndexSet, UInt, UnknownType;
overload selector(static "enumerateObjectsUsingBlock:") = Void, UnknownType;
overload selector(static "enumerateObjectsWithOptions:usingBlock:") = Void, UInt, UnknownType;
overload selector(static "enumerateSubstringsInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
overload selector(static "enumeratorAtPath:") = NSDirectoryEnumerator, NSString;
overload selector(static "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:") = NSDirectoryEnumerator, NSURL, NSArray, UInt, UnknownType;
overload selector(static "environment") = NSDictionary;
overload selector(static "era") = Int;
overload selector(static "eraSymbols") = NSArray;
overload selector(static "error") = NSError;
overload selector(static "errorWithDomain:code:userInfo:") = Id, NSString, Int, NSDictionary;
overload selector(static "escapedPatternForString:") = NSString, NSString;
overload selector(static "escapedTemplateForString:") = NSString, NSString;
overload selector(static "evaluateWithObject:") = Bool, Id;
overload selector(static "evaluateWithObject:substitutionVariables:") = Bool, Id, NSDictionary;
overload selector(static "evictsObjectsWithDiscardedContent") = Bool;
overload selector(static "exceptionDuringOperation:error:leftOperand:rightOperand:") = NSDecimalNumber, SelectorHandle, UInt, NSDecimalNumber, NSDecimalNumber;
overload selector(static "exceptionWithName:reason:userInfo:") = NSException, NSString, NSString, NSDictionary;
overload selector(static "exchangeObjectAtIndex:withObjectAtIndex:") = Void, UInt, UInt;
overload selector(static "executableArchitectures") = NSArray;
overload selector(static "executablePath") = NSString;
overload selector(static "executableURL") = NSURL;
overload selector(static "executionBlocks") = NSArray;
overload selector(static "exit") = Void;
overload selector(static "expectedContentLength") = Int64;
overload selector(static "expiresDate") = NSDate;
overload selector(static "exponentSymbol") = NSString;
overload selector(static "expressionBlock") = UnknownType;
overload selector(static "expressionForAggregate:") = NSExpression, NSArray;
overload selector(static "expressionForBlock:arguments:") = NSExpression, UnknownType, NSArray;
overload selector(static "expressionForConstantValue:") = NSExpression, Id;
overload selector(static "expressionForEvaluatedObject") = NSExpression;
overload selector(static "expressionForFunction:arguments:") = NSExpression, NSString, NSArray;
overload selector(static "expressionForFunction:selectorName:arguments:") = NSExpression, NSExpression, NSString, NSArray;
overload selector(static "expressionForIntersectSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector(static "expressionForKeyPath:") = NSExpression, NSString;
overload selector(static "expressionForMinusSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector(static "expressionForSubquery:usingIteratorVariable:predicate:") = NSExpression, NSExpression, NSString, Id;
overload selector(static "expressionForUnionSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector(static "expressionForVariable:") = NSExpression, NSString;
overload selector(static "expressionType") = UInt;
overload selector(static "expressionValueWithObject:context:") = Id, Id, NSMutableDictionary;
overload selector(static "fadeDuration") = Double;
overload selector(static "failureResponse") = NSURLResponse;
overload selector(static "fastestEncoding") = UInt;
overload selector(static "fileAttributes") = NSDictionary;
overload selector(static "fileAttributesAtPath:traverseLink:") = NSDictionary, NSString, Bool;
overload selector(static "fileCreationDate") = NSDate;
overload selector(static "fileDescriptor") = Int;
overload selector(static "fileExistsAtPath:") = Bool, NSString;
overload selector(static "fileExistsAtPath:isDirectory:") = Bool, NSString, Pointer[Bool];
overload selector(static "fileExtensionHidden") = Bool;
overload selector(static "fileGroupOwnerAccountID") = NSNumber;
overload selector(static "fileGroupOwnerAccountName") = NSString;
overload selector(static "fileHFSCreatorCode") = CULong;
overload selector(static "fileHFSTypeCode") = CULong;
overload selector(static "fileHandleForReading") = NSFileHandle;
overload selector(static "fileHandleForReadingAtPath:") = Id, NSString;
overload selector(static "fileHandleForReadingFromURL:error:") = Id, NSURL, Pointer[NSError];
overload selector(static "fileHandleForUpdatingAtPath:") = Id, NSString;
overload selector(static "fileHandleForUpdatingURL:error:") = Id, NSURL, Pointer[NSError];
overload selector(static "fileHandleForWriting") = NSFileHandle;
overload selector(static "fileHandleForWritingAtPath:") = Id, NSString;
overload selector(static "fileHandleForWritingToURL:error:") = Id, NSURL, Pointer[NSError];
overload selector(static "fileHandleWithNullDevice") = Id;
overload selector(static "fileHandleWithStandardError") = Id;
overload selector(static "fileHandleWithStandardInput") = Id;
overload selector(static "fileHandleWithStandardOutput") = Id;
overload selector(static "fileIsAppendOnly") = Bool;
overload selector(static "fileIsImmutable") = Bool;
overload selector(static "fileManager:shouldCopyItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector(static "fileManager:shouldCopyItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector(static "fileManager:shouldLinkItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector(static "fileManager:shouldLinkItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector(static "fileManager:shouldMoveItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector(static "fileManager:shouldMoveItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector(static "fileManager:shouldProceedAfterError:") = Bool, NSFileManager, NSDictionary;
overload selector(static "fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector(static "fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector(static "fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector(static "fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector(static "fileManager:shouldProceedAfterError:movingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector(static "fileManager:shouldProceedAfterError:movingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector(static "fileManager:shouldProceedAfterError:removingItemAtPath:") = Bool, NSFileManager, NSError, NSString;
overload selector(static "fileManager:shouldProceedAfterError:removingItemAtURL:") = Bool, NSFileManager, NSError, NSURL;
overload selector(static "fileManager:shouldRemoveItemAtPath:") = Bool, NSFileManager, NSString;
overload selector(static "fileManager:shouldRemoveItemAtURL:") = Bool, NSFileManager, NSURL;
overload selector(static "fileManager:willProcessPath:") = Void, NSFileManager, NSString;
overload selector(static "fileModificationDate") = NSDate;
overload selector(static "fileOwnerAccountID") = NSNumber;
overload selector(static "fileOwnerAccountName") = NSString;
overload selector(static "filePathURL") = NSURL;
overload selector(static "filePosixPermissions") = UInt;
overload selector(static "fileReferenceURL") = NSURL;
overload selector(static "fileSize") = UInt64;
overload selector(static "fileSystemAttributesAtPath:") = NSDictionary, NSString;
overload selector(static "fileSystemFileNumber") = UInt;
overload selector(static "fileSystemNumber") = Int;
overload selector(static "fileSystemRepresentation") = Pointer[CChar];
overload selector(static "fileSystemRepresentationWithPath:") = Pointer[CChar], NSString;
overload selector(static "fileType") = NSString;
overload selector(static "fileURLWithPath:") = Id, NSString;
overload selector(static "fileURLWithPath:isDirectory:") = Id, NSString, Bool;
overload selector(static "fileURLWithPathComponents:") = NSURL, NSArray;
overload selector(static "fileWrappers") = NSDictionary;
overload selector(static "filename") = NSString;
overload selector(static "fillColor") = CGColorRef;
overload selector(static "fillMode") = NSString;
overload selector(static "fillRule") = NSString;
overload selector(static "filter") = Id;
overload selector(static "filterUsingPredicate:") = Void, NSPredicate;
overload selector(static "filteredArrayUsingPredicate:") = NSArray, NSPredicate;
overload selector(static "filteredSetUsingPredicate:") = NSSet, NSPredicate;
overload selector(static "filters") = NSArray;
overload selector(static "finalize") = Void;
overload selector(static "finishDecoding") = Void;
overload selector(static "finishEncoding") = Void;
overload selector(static "fire") = Void;
overload selector(static "fireDate") = NSDate;
overload selector(static "firstIndex") = UInt;
overload selector(static "firstMatchInString:options:range:") = NSTextCheckingResult, NSString, UInt, NSRange;
overload selector(static "firstObjectCommonWithArray:") = Id, NSArray;
overload selector(static "firstWeekday") = UInt;
overload selector(static "floatForKey:") = Float, NSString;
overload selector(static "floatValue") = Float;
overload selector(static "flush") = Void;
overload selector(static "font") = CFTypeRef;
overload selector(static "fontSize") = Float;
overload selector(static "foregroundColor") = CGColorRef;
overload selector(static "formIntersectionWithCharacterSet:") = Void, NSCharacterSet;
overload selector(static "formUnionWithCharacterSet:") = Void, NSCharacterSet;
overload selector(static "formatWidth") = UInt;
overload selector(static "formatterBehavior") = UInt;
overload selector(static "forwardInvocation:") = Void, NSInvocation;
overload selector(static "forwardingTargetForSelector:") = Id, SelectorHandle;
overload selector(static "fragment") = NSString;
overload selector(static "frame") = CGRect;
overload selector(static "frameInterval") = Int;
overload selector(static "frameLength") = UInt;
overload selector(static "fromValue") = Id;
overload selector(static "function") = NSString;
overload selector(static "functionWithControlPoints::::") = Id, Float, Float, Float, Float;
overload selector(static "functionWithName:") = Id, NSString;
overload selector(static "generatesCalendarDates") = Bool;
overload selector(static "generatesDecimalNumbers") = Bool;
overload selector(static "getArgument:atIndex:") = Void, RawPointer, Int;
overload selector(static "getArgumentTypeAtIndex:") = Pointer[CChar], UInt;
overload selector(static "getBuffer:length:") = Bool, Pointer[Pointer[CUChar]], Pointer[UInt];
overload selector(static "getBytes:") = Void, RawPointer;
overload selector(static "getBytes:length:") = Void, RawPointer, UInt;
overload selector(static "getBytes:maxLength:usedLength:encoding:options:range:remainingRange:") = Bool, RawPointer, UInt, Pointer[UInt], UInt, UInt, NSRange, NSRangePointer;
overload selector(static "getBytes:range:") = Void, RawPointer, NSRange;
overload selector(static "getCFRunLoop") = CFRunLoopRef;
overload selector(static "getCString:") = Void, Pointer[CChar];
overload selector(static "getCString:maxLength:") = Void, Pointer[CChar], UInt;
overload selector(static "getCString:maxLength:encoding:") = Bool, Pointer[CChar], UInt, UInt;
overload selector(static "getCString:maxLength:range:remainingRange:") = Void, Pointer[CChar], UInt, NSRange, NSRangePointer;
overload selector(static "getCharacters:") = Void, Pointer[UShort];
overload selector(static "getCharacters:range:") = Void, Pointer[UShort], NSRange;
overload selector(static "getControlPointAtIndex:values:") = Void, UInt, Pointer[Float];
overload selector(static "getFileSystemRepresentation:maxLength:") = Bool, Pointer[CChar], UInt;
overload selector(static "getIndexes:") = Void, Pointer[UInt];
overload selector(static "getIndexes:maxCount:inIndexRange:") = UInt, Pointer[UInt], UInt, NSRangePointer;
overload selector(static "getInputStream:outputStream:") = Bool, Pointer[NSInputStream], Pointer[NSOutputStream];
overload selector(static "getLineStart:end:contentsEnd:forRange:") = Void, Pointer[UInt], Pointer[UInt], Pointer[UInt], NSRange;
overload selector(static "getObjectValue:forString:errorDescription:") = Bool, Pointer[Id], NSString, Pointer[NSString];
overload selector(static "getObjectValue:forString:range:error:") = Bool, Pointer[Id], NSString, Pointer[NSRange], Pointer[NSError];
overload selector(static "getObjects:") = Void, Pointer[Id];
overload selector(static "getObjects:andKeys:") = Void, Pointer[Id], Pointer[Id];
overload selector(static "getObjects:range:") = Void, Pointer[Id], NSRange;
overload selector(static "getParagraphStart:end:contentsEnd:forRange:") = Void, Pointer[UInt], Pointer[UInt], Pointer[UInt], NSRange;
overload selector(static "getResourceValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector(static "getReturnValue:") = Void, RawPointer;
overload selector(static "getValue:") = Void, RawPointer;
overload selector(static "globallyUniqueString") = NSString;
overload selector(static "grammarCheckingResultWithRange:details:") = NSTextCheckingResult, NSRange, NSArray;
overload selector(static "grammarDetails") = NSArray;
overload selector(static "gregorianStartDate") = NSDate;
overload selector(static "groupingLevel") = Int;
overload selector(static "groupingSeparator") = NSString;
overload selector(static "groupingSize") = UInt;
overload selector(static "groupsByEvent") = Bool;
overload varargSelector(static "handleFailureInFunction:file:lineNumber:description:") = Void, NSString, NSString, Int, NSString;
overload varargSelector(static "handleFailureInMethod:object:file:lineNumber:description:") = Void, SelectorHandle, Id, NSString, Int, NSString;
overload selector(static "handleMachMessage:") = Void, RawPointer;
overload selector(static "handlePortMessage:") = Void, NSPortMessage;
overload selector(static "hasBytesAvailable") = Bool;
overload selector(static "hasMemberInPlane:") = Bool, CUChar;
overload selector(static "hasPassword") = Bool;
overload selector(static "hasPrefix:") = Bool, NSString;
overload selector(static "hasSpaceAvailable") = Bool;
overload selector(static "hasSuffix:") = Bool, NSString;
overload selector(static "hash") = UInt;
overload selector(static "helpAnchor") = NSString;
overload selector(static "hitTest:") = CALayer, CGPoint;
overload selector(static "host") = NSString;
overload selector(static "hostName") = NSString;
overload selector(static "hour") = Int;
overload selector(static "identity") = SecIdentityRef;
overload selector(static "illegalCharacterSet") = Id;
overload selector(static "increaseLengthBy:") = Void, UInt;
overload selector(static "indexAtPosition:") = UInt, UInt;
overload selector(static "indexGreaterThanIndex:") = UInt, UInt;
overload selector(static "indexGreaterThanOrEqualToIndex:") = UInt, UInt;
overload selector(static "indexInRange:options:passingTest:") = UInt, NSRange, UInt, UnknownType;
overload selector(static "indexLessThanIndex:") = UInt, UInt;
overload selector(static "indexLessThanOrEqualToIndex:") = UInt, UInt;
overload selector(static "indexOfObject:") = UInt, Id;
overload selector(static "indexOfObject:inRange:") = UInt, Id, NSRange;
overload selector(static "indexOfObject:inSortedRange:options:usingComparator:") = UInt, Id, NSRange, UInt, NSComparator;
overload selector(static "indexOfObjectAtIndexes:options:passingTest:") = UInt, NSIndexSet, UInt, UnknownType;
overload selector(static "indexOfObjectIdenticalTo:") = UInt, Id;
overload selector(static "indexOfObjectIdenticalTo:inRange:") = UInt, Id, NSRange;
overload selector(static "indexOfObjectPassingTest:") = UInt, UnknownType;
overload selector(static "indexOfObjectWithOptions:passingTest:") = UInt, UInt, UnknownType;
overload selector(static "indexPassingTest:") = UInt, UnknownType;
overload selector(static "indexPathByAddingIndex:") = NSIndexPath, UInt;
overload selector(static "indexPathByRemovingLastIndex") = NSIndexPath;
overload selector(static "indexPathWithIndex:") = Id, UInt;
overload selector(static "indexPathWithIndexes:length:") = Id, Pointer[UInt], UInt;
overload selector(static "indexSet") = Id;
overload selector(static "indexSetWithIndex:") = Id, UInt;
overload selector(static "indexSetWithIndexesInRange:") = Id, NSRange;
overload selector(static "indexWithOptions:passingTest:") = UInt, UInt, UnknownType;
overload selector(static "indexesInRange:options:passingTest:") = NSIndexSet, NSRange, UInt, UnknownType;
overload selector(static "indexesOfObjectsAtIndexes:options:passingTest:") = NSIndexSet, NSIndexSet, UInt, UnknownType;
overload selector(static "indexesOfObjectsPassingTest:") = NSIndexSet, UnknownType;
overload selector(static "indexesOfObjectsWithOptions:passingTest:") = NSIndexSet, UInt, UnknownType;
overload selector(static "indexesPassingTest:") = NSIndexSet, UnknownType;
overload selector(static "indexesWithOptions:passingTest:") = NSIndexSet, UInt, UnknownType;
overload selector(static "infoDictionary") = NSDictionary;
overload selector(static "init") = Id;
overload selector(static "initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, UInt, NSURL, Pointer[Bool], Pointer[NSError];
overload selector(static "initDirectoryWithFileWrappers:") = Id, NSDictionary;
overload selector(static "initFileURLWithPath:") = Id, NSString;
overload selector(static "initFileURLWithPath:isDirectory:") = Id, NSString, Bool;
overload selector(static "initForReadingWithData:") = Id, NSData;
overload selector(static "initForWritingWithMutableData:") = Id, NSMutableData;
overload selector(static "initRegularFileWithContents:") = Id, NSData;
overload selector(static "initSymbolicLinkWithDestination:") = Id, NSString;
overload selector(static "initSymbolicLinkWithDestinationURL:") = Id, NSURL;
overload selector(static "initToBuffer:capacity:") = Id, Pointer[CUChar], UInt;
overload selector(static "initToFileAtPath:append:") = Id, NSString, Bool;
overload selector(static "initToMemory") = Id;
overload selector(static "initWithAPI:") = Id, UInt;
overload selector(static "initWithAPI:sharegroup:") = Id, UInt, EAGLSharegroup;
overload selector(static "initWithArray:") = Id, NSArray;
overload selector(static "initWithArray:copyItems:") = Id, NSArray, Bool;
overload selector(static "initWithAttributedString:") = Id, NSAttributedString;
overload selector(static "initWithAuthenticationChallenge:sender:") = Id, NSURLAuthenticationChallenge, Id;
overload selector(static "initWithBool:") = Id, Bool;
overload selector(static "initWithBytes:length:") = Id, RawPointer, UInt;
overload selector(static "initWithBytes:length:encoding:") = Id, RawPointer, UInt, UInt;
overload selector(static "initWithBytes:objCType:") = Id, RawPointer, Pointer[CChar];
overload selector(static "initWithBytesNoCopy:length:") = Id, RawPointer, UInt;
overload selector(static "initWithBytesNoCopy:length:encoding:freeWhenDone:") = Id, RawPointer, UInt, UInt, Bool;
overload selector(static "initWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, UInt, Bool;
overload selector(static "initWithCString:") = Id, Pointer[CChar];
overload selector(static "initWithCString:encoding:") = Id, Pointer[CChar], UInt;
overload selector(static "initWithCString:length:") = Id, Pointer[CChar], UInt;
overload selector(static "initWithCStringNoCopy:length:freeWhenDone:") = Id, Pointer[CChar], UInt, Bool;
overload selector(static "initWithCalendarIdentifier:") = Id, NSString;
overload selector(static "initWithCapacity:") = Id, UInt;
overload selector(static "initWithChar:") = Id, CChar;
overload selector(static "initWithCharacters:length:") = Id, Pointer[UShort], UInt;
overload selector(static "initWithCharactersNoCopy:length:freeWhenDone:") = Id, Pointer[UShort], UInt, Bool;
overload selector(static "initWithCoder:") = Id, NSCoder;
overload selector(static "initWithCondition:") = Id, Int;
overload selector(static "initWithContentsOfFile:") = Id, NSString;
overload selector(static "initWithContentsOfFile:encoding:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "initWithContentsOfFile:options:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "initWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[UInt], Pointer[NSError];
overload selector(static "initWithContentsOfMappedFile:") = Id, NSString;
overload selector(static "initWithContentsOfURL:") = Id, NSURL;
overload selector(static "initWithContentsOfURL:encoding:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "initWithContentsOfURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "initWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[UInt], Pointer[NSError];
overload selector(static "initWithControlPoints::::") = Id, Float, Float, Float, Float;
overload selector(static "initWithData:") = Id, NSData;
overload selector(static "initWithData:encoding:") = Id, NSData, UInt;
overload selector(static "initWithDecimal:") = Id, NSDecimal;
overload selector(static "initWithDictionary:") = Id, NSDictionary;
overload selector(static "initWithDictionary:copyItems:") = Id, NSDictionary, Bool;
overload selector(static "initWithDomain:code:userInfo:") = Id, NSString, Int, NSDictionary;
overload selector(static "initWithDomain:type:name:") = Id, NSString, NSString, NSString;
overload selector(static "initWithDomain:type:name:port:") = Id, NSString, NSString, NSString, Int;
overload selector(static "initWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
overload selector(static "initWithDouble:") = Id, Double;
overload selector(static "initWithExpressionType:") = Id, UInt;
overload selector(static "initWithFileAtPath:") = Id, NSString;
overload selector(static "initWithFileDescriptor:") = Id, Int;
overload selector(static "initWithFileDescriptor:closeOnDealloc:") = Id, Int, Bool;
overload selector(static "initWithFireDate:interval:target:selector:userInfo:repeats:") = Id, NSDate, Double, Id, SelectorHandle, Id, Bool;
overload selector(static "initWithFloat:") = Id, Float;
overload varargSelector(static "initWithFormat:") = Id, NSString;
overload selector(static "initWithFormat:arguments:") = Id, NSString, va_list;
overload varargSelector(static "initWithFormat:locale:") = Id, NSString, Id;
overload selector(static "initWithFormat:locale:arguments:") = Id, NSString, Id, va_list;
overload selector(static "initWithHost:port:protocol:realm:authenticationMethod:") = Id, NSString, Int, NSString, NSString, NSString;
overload selector(static "initWithIdentity:certificates:persistence:") = Id, SecIdentityRef, NSArray, UInt;
overload selector(static "initWithIndex:") = Id, UInt;
overload selector(static "initWithIndexSet:") = Id, NSIndexSet;
overload selector(static "initWithIndexes:length:") = Id, Pointer[UInt], UInt;
overload selector(static "initWithIndexesInRange:") = Id, NSRange;
overload selector(static "initWithInt:") = Id, Int;
overload selector(static "initWithInteger:") = Id, Int;
overload selector(static "initWithInvocation:") = Id, NSInvocation;
overload selector(static "initWithKey:ascending:") = Id, NSString, Bool;
overload selector(static "initWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
overload selector(static "initWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
overload selector(static "initWithLayer:") = Id, Id;
overload selector(static "initWithLeftExpression:rightExpression:customSelector:") = Id, NSExpression, NSExpression, SelectorHandle;
overload selector(static "initWithLeftExpression:rightExpression:modifier:type:options:") = Id, NSExpression, NSExpression, UInt, UInt, UInt;
overload selector(static "initWithLength:") = Id, UInt;
overload selector(static "initWithLocaleIdentifier:") = Id, NSString;
overload selector(static "initWithLong:") = Id, CLong;
overload selector(static "initWithLongLong:") = Id, Int64;
overload selector(static "initWithMachPort:") = Id, UInt;
overload selector(static "initWithMachPort:options:") = Id, UInt, UInt;
overload selector(static "initWithMantissa:exponent:isNegative:") = Id, UInt64, Short, Bool;
overload selector(static "initWithMemoryCapacity:diskCapacity:diskPath:") = Id, UInt, UInt, NSString;
overload selector(static "initWithName:") = Id, NSString;
overload selector(static "initWithName:data:") = Id, NSString, NSData;
overload selector(static "initWithName:reason:userInfo:") = Id, NSString, NSString, NSDictionary;
overload selector(static "initWithNotificationCenter:") = Id, NSNotificationCenter;
overload varargSelector(static "initWithObjects:") = Id, Id;
overload selector(static "initWithObjects:count:") = Id, Pointer[Id], UInt;
overload selector(static "initWithObjects:forKeys:") = Id, NSArray, NSArray;
overload selector(static "initWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], UInt;
overload varargSelector(static "initWithObjectsAndKeys:") = Id, Id;
overload selector(static "initWithPath:") = Id, NSString;
overload selector(static "initWithPattern:options:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "initWithProperties:") = Id, NSDictionary;
overload selector(static "initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:") = Id, NSURLProtectionSpace, NSURLCredential, Int, NSURLResponse, NSError, Id;
overload selector(static "initWithProxyHost:port:type:realm:authenticationMethod:") = Id, NSString, Int, NSString, NSString, NSString;
overload selector(static "initWithRequest:cachedResponse:client:") = Id, NSURLRequest, NSCachedURLResponse, Id;
overload selector(static "initWithRequest:delegate:") = Id, NSURLRequest, Id;
overload selector(static "initWithRequest:delegate:startImmediately:") = Id, NSURLRequest, Id, Bool;
overload selector(static "initWithResponse:data:") = Id, NSURLResponse, NSData;
overload selector(static "initWithResponse:data:userInfo:storagePolicy:") = Id, NSURLResponse, NSData, NSDictionary, UInt;
overload selector(static "initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, UInt, Short, Bool, Bool, Bool, Bool;
overload selector(static "initWithScheme:host:path:") = Id, NSString, NSString, NSString;
overload selector(static "initWithSerializedRepresentation:") = Id, NSData;
overload selector(static "initWithSet:") = Id, NSSet;
overload selector(static "initWithSet:copyItems:") = Id, NSSet, Bool;
overload selector(static "initWithShort:") = Id, Short;
overload selector(static "initWithStorageLocation:") = Id, NSURL;
overload selector(static "initWithString:") = Id, NSString;
overload selector(static "initWithString:attributes:") = Id, NSString, NSDictionary;
overload selector(static "initWithString:locale:") = Id, NSString, Id;
overload selector(static "initWithString:relativeToURL:") = Id, NSString, NSURL;
overload selector(static "initWithTarget:selector:object:") = Id, Id, SelectorHandle, Id;
overload selector(static "initWithTimeInterval:sinceDate:") = Id, Double, NSDate;
overload selector(static "initWithTimeIntervalSince1970:") = Id, Double;
overload selector(static "initWithTimeIntervalSinceNow:") = Id, Double;
overload selector(static "initWithTimeIntervalSinceReferenceDate:") = Id, Double;
overload selector(static "initWithTrust:") = Id, SecTrustRef;
overload selector(static "initWithType:subpredicates:") = Id, UInt, NSArray;
overload selector(static "initWithTypes:error:") = Id, UInt64, Pointer[NSError];
overload selector(static "initWithURL:") = Id, NSURL;
overload selector(static "initWithURL:MIMEType:expectedContentLength:textEncodingName:") = Id, NSURL, NSString, Int, NSString;
overload selector(static "initWithURL:append:") = Id, NSURL, Bool;
overload selector(static "initWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, UInt, Double;
overload selector(static "initWithURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "initWithUTF8String:") = Id, Pointer[CChar];
overload selector(static "initWithUnsignedChar:") = Id, CUChar;
overload selector(static "initWithUnsignedInt:") = Id, UInt;
overload selector(static "initWithUnsignedInteger:") = Id, UInt;
overload selector(static "initWithUnsignedLong:") = Id, CULong;
overload selector(static "initWithUnsignedLongLong:") = Id, UInt64;
overload selector(static "initWithUnsignedShort:") = Id, UShort;
overload selector(static "initWithUser:") = Id, NSString;
overload selector(static "initWithUser:password:persistence:") = Id, NSString, NSString, UInt;
overload selector(static "initialize") = Void;
overload selector(static "inputStreamWithData:") = Id, NSData;
overload selector(static "inputStreamWithFileAtPath:") = Id, NSString;
overload selector(static "inputStreamWithURL:") = Id, NSURL;
overload selector(static "insertAttributedString:atIndex:") = Void, NSAttributedString, UInt;
overload selector(static "insertObject:atIndex:") = Void, Id, UInt;
overload selector(static "insertObjects:atIndexes:") = Void, NSArray, NSIndexSet;
overload selector(static "insertString:atIndex:") = Void, NSString, UInt;
overload selector(static "insertSublayer:above:") = Void, CALayer, CALayer;
overload selector(static "insertSublayer:atIndex:") = Void, CALayer, UInt;
overload selector(static "insertSublayer:below:") = Void, CALayer, CALayer;
overload selector(static "instanceAlphaOffset") = Float;
overload selector(static "instanceBlueOffset") = Float;
overload selector(static "instanceColor") = CGColorRef;
overload selector(static "instanceCount") = Int;
overload selector(static "instanceDelay") = Double;
overload selector(static "instanceGreenOffset") = Float;
overload selector(static "instanceMethodForSelector:") = IMP, SelectorHandle;
overload selector(static "instanceMethodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
overload selector(static "instanceRedOffset") = Float;
overload selector(static "instanceTransform") = CATransform3D;
overload selector(static "instancesRespondToSelector:") = Bool, SelectorHandle;
overload selector(static "intValue") = Int;
overload selector(static "integerForKey:") = Int, NSString;
overload selector(static "integerValue") = Int;
overload selector(static "internationalCurrencySymbol") = NSString;
overload selector(static "intersectSet:") = Void, NSSet;
overload selector(static "intersectsIndexesInRange:") = Bool, NSRange;
overload selector(static "intersectsSet:") = Bool, NSSet;
overload selector(static "invalidate") = Void;
overload selector(static "invert") = Void;
overload selector(static "invertedSet") = NSCharacterSet;
overload selector(static "invocation") = NSInvocation;
overload selector(static "invocationWithMethodSignature:") = NSInvocation, NSMethodSignature;
overload selector(static "invoke") = Void;
overload selector(static "invokeWithTarget:") = Void, Id;
overload selector(static "isAbsolutePath") = Bool;
overload selector(static "isAdditive") = Bool;
overload selector(static "isAtEnd") = Bool;
overload selector(static "isCancelled") = Bool;
overload selector(static "isConcurrent") = Bool;
overload selector(static "isContentDiscarded") = Bool;
overload selector(static "isCumulative") = Bool;
overload selector(static "isDaylightSavingTime") = Bool;
overload selector(static "isDaylightSavingTimeForDate:") = Bool, NSDate;
overload selector(static "isDeletableFileAtPath:") = Bool, NSString;
overload selector(static "isDirectory") = Bool;
overload selector(static "isDoubleSided") = Bool;
overload selector(static "isEqual:") = Bool, Id;
overload selector(static "isEqualToArray:") = Bool, NSArray;
overload selector(static "isEqualToAttributedString:") = Bool, NSAttributedString;
overload selector(static "isEqualToData:") = Bool, NSData;
overload selector(static "isEqualToDate:") = Bool, NSDate;
overload selector(static "isEqualToDictionary:") = Bool, NSDictionary;
overload selector(static "isEqualToIndexSet:") = Bool, NSIndexSet;
overload selector(static "isEqualToNumber:") = Bool, NSNumber;
overload selector(static "isEqualToSet:") = Bool, NSSet;
overload selector(static "isEqualToString:") = Bool, NSString;
overload selector(static "isEqualToTimeZone:") = Bool, NSTimeZone;
overload selector(static "isEqualToValue:") = Bool, NSValue;
overload selector(static "isExecutableFileAtPath:") = Bool, NSString;
overload selector(static "isExecuting") = Bool;
overload selector(static "isFileReferenceURL") = Bool;
overload selector(static "isFileURL") = Bool;
overload selector(static "isFinished") = Bool;
overload selector(static "isGeometryFlipped") = Bool;
overload selector(static "isHTTPOnly") = Bool;
overload selector(static "isHidden") = Bool;
overload selector(static "isKindOfClass:") = Bool, Id;
overload selector(static "isLenient") = Bool;
overload selector(static "isLoaded") = Bool;
overload selector(static "isMainThread") = Bool;
overload selector(static "isMemberOfClass:") = Bool, Id;
overload selector(static "isMultiThreaded") = Bool;
overload selector(static "isOneway") = Bool;
overload selector(static "isOpaque") = Bool;
overload selector(static "isPartialStringValid:newEditingString:errorDescription:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
overload selector(static "isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:") = Bool, Pointer[NSString], NSRangePointer, NSString, NSRange, Pointer[NSString];
overload selector(static "isPartialStringValidationEnabled") = Bool;
overload selector(static "isPaused") = Bool;
overload selector(static "isProxy") = Bool;
overload selector(static "isReadableFileAtPath:") = Bool, NSString;
overload selector(static "isReady") = Bool;
overload selector(static "isRedoing") = Bool;
overload selector(static "isRegularFile") = Bool;
overload selector(static "isRemovedOnCompletion") = Bool;
overload selector(static "isSecure") = Bool;
overload selector(static "isSessionOnly") = Bool;
overload selector(static "isSubclassOfClass:") = Bool, Id;
overload selector(static "isSubsetOfSet:") = Bool, NSSet;
overload selector(static "isSupersetOfSet:") = Bool, NSCharacterSet;
overload selector(static "isSuspended") = Bool;
overload selector(static "isSymbolicLink") = Bool;
overload selector(static "isUndoRegistrationEnabled") = Bool;
overload selector(static "isUndoing") = Bool;
overload selector(static "isValid") = Bool;
overload selector(static "isWrapped") = Bool;
overload selector(static "isWritableFileAtPath:") = Bool, NSString;
overload selector(static "key") = NSString;
overload selector(static "keyEnumerator") = NSEnumerator;
overload selector(static "keyForFileWrapper:") = NSString, NSFileWrapper;
overload selector(static "keyPath") = NSString;
overload selector(static "keyPathsForValuesAffectingValueForKey:") = NSSet, NSString;
overload selector(static "keyTimes") = NSArray;
overload selector(static "keysOfEntriesPassingTest:") = NSSet, UnknownType;
overload selector(static "keysOfEntriesWithOptions:passingTest:") = NSSet, UInt, UnknownType;
overload selector(static "keysSortedByValueUsingComparator:") = NSArray, NSComparator;
overload selector(static "keysSortedByValueUsingSelector:") = NSArray, SelectorHandle;
overload selector(static "keysSortedByValueWithOptions:usingComparator:") = NSArray, UInt, NSComparator;
overload selector(static "knownTimeZoneNames") = NSArray;
overload selector(static "languageMap") = NSDictionary;
overload selector(static "languagesForScript:") = NSArray, NSString;
overload selector(static "lastIndex") = UInt;
overload selector(static "lastObject") = Id;
overload selector(static "lastPathComponent") = NSString;
overload selector(static "laterDate:") = NSDate, NSDate;
overload selector(static "layer") = Id;
overload selector(static "layoutIfNeeded") = Void;
overload selector(static "layoutSublayers") = Void;
overload selector(static "layoutSublayersOfLayer:") = Void, CALayer;
overload selector(static "leftExpression") = NSExpression;
overload selector(static "length") = UInt;
overload selector(static "lengthOfBytesUsingEncoding:") = UInt, UInt;
overload selector(static "letterCharacterSet") = Id;
overload selector(static "level") = UInt;
overload selector(static "levelsOfDetail") = UInt;
overload selector(static "levelsOfDetailBias") = UInt;
overload selector(static "levelsOfUndo") = UInt;
overload selector(static "limitDateForMode:") = NSDate, NSString;
overload selector(static "lineCap") = NSString;
overload selector(static "lineDashPattern") = NSArray;
overload selector(static "lineDashPhase") = Float;
overload selector(static "lineDirectionForLanguage:") = UInt, NSString;
overload selector(static "lineJoin") = NSString;
overload selector(static "lineNumber") = Int;
overload selector(static "lineRangeForRange:") = NSRange, NSRange;
overload selector(static "lineWidth") = Float;
overload selector(static "linkCheckingResultWithRange:URL:") = NSTextCheckingResult, NSRange, NSURL;
overload selector(static "linkItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector(static "linkItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector(static "load") = Bool;
overload selector(static "loadAndReturnError:") = Bool, Pointer[NSError];
overload selector(static "localTimeZone") = NSTimeZone;
overload selector(static "locale") = Id;
overload selector(static "localeIdentifier") = NSString;
overload selector(static "localeIdentifierFromComponents:") = NSString, NSDictionary;
overload selector(static "localeIdentifierFromWindowsLocaleCode:") = NSString, UInt;
overload selector(static "localizations") = NSArray;
overload selector(static "localizedCaseInsensitiveCompare:") = Int, NSString;
overload selector(static "localizedCompare:") = Int, NSString;
overload selector(static "localizedDescription") = NSString;
overload selector(static "localizedFailureReason") = NSString;
overload selector(static "localizedInfoDictionary") = NSDictionary;
overload selector(static "localizedName:locale:") = NSString, Int, NSLocale;
overload selector(static "localizedNameOfStringEncoding:") = NSString, UInt;
overload selector(static "localizedRecoveryOptions") = NSArray;
overload selector(static "localizedRecoverySuggestion") = NSString;
overload selector(static "localizedScannerWithString:") = Id, NSString;
overload selector(static "localizedStandardCompare:") = Int, NSString;
overload selector(static "localizedStringForKey:value:table:") = NSString, NSString, NSString, NSString;
overload selector(static "localizedStringForStatusCode:") = NSString, Int;
overload selector(static "localizedStringFromDate:dateStyle:timeStyle:") = NSString, NSDate, UInt, UInt;
overload selector(static "localizedStringFromNumber:numberStyle:") = NSString, NSNumber, UInt;
overload varargSelector(static "localizedStringWithFormat:") = Id, NSString;
overload selector(static "locations") = NSArray;
overload selector(static "lock") = Void;
overload selector(static "lockBeforeDate:") = Bool, NSDate;
overload selector(static "lockWhenCondition:") = Void, Int;
overload selector(static "lockWhenCondition:beforeDate:") = Bool, Int, NSDate;
overload selector(static "longCharacterIsMember:") = Bool, CULong;
overload selector(static "longEraSymbols") = NSArray;
overload selector(static "longLongValue") = Int64;
overload selector(static "longValue") = CLong;
overload selector(static "lossyCString") = Pointer[CChar];
overload selector(static "lowercaseLetterCharacterSet") = Id;
overload selector(static "lowercaseString") = NSString;
overload selector(static "machPort") = UInt;
overload selector(static "magnificationFilter") = NSString;
overload selector(static "main") = Void;
overload selector(static "mainBundle") = NSBundle;
overload selector(static "mainDocumentURL") = NSURL;
overload selector(static "mainQueue") = Id;
overload selector(static "mainRunLoop") = NSRunLoop;
overload selector(static "mainThread") = NSThread;
overload selector(static "makeObjectsPerformSelector:") = Void, SelectorHandle;
overload selector(static "makeObjectsPerformSelector:withObject:") = Void, SelectorHandle, Id;
overload selector(static "mask") = CALayer;
overload selector(static "masksToBounds") = Bool;
overload selector(static "matchesContentsOfURL:") = Bool, NSURL;
overload selector(static "matchesInString:options:range:") = NSArray, NSString, UInt, NSRange;
overload selector(static "maxConcurrentOperationCount") = Int;
overload selector(static "maximum") = NSNumber;
overload selector(static "maximumDecimalNumber") = NSDecimalNumber;
overload selector(static "maximumFractionDigits") = UInt;
overload selector(static "maximumIntegerDigits") = UInt;
overload selector(static "maximumLengthOfBytesUsingEncoding:") = UInt, UInt;
overload selector(static "maximumRangeOfUnit:") = NSRange, UInt;
overload selector(static "maximumSignificantDigits") = UInt;
overload selector(static "member:") = Id, Id;
overload selector(static "memoryCapacity") = UInt;
overload selector(static "methodForSelector:") = IMP, SelectorHandle;
overload selector(static "methodReturnLength") = UInt;
overload selector(static "methodReturnType") = Pointer[CChar];
overload selector(static "methodSignature") = NSMethodSignature;
overload selector(static "methodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
overload selector(static "minificationFilter") = NSString;
overload selector(static "minificationFilterBias") = Float;
overload selector(static "minimum") = NSNumber;
overload selector(static "minimumDaysInFirstWeek") = UInt;
overload selector(static "minimumDecimalNumber") = NSDecimalNumber;
overload selector(static "minimumFractionDigits") = UInt;
overload selector(static "minimumIntegerDigits") = UInt;
overload selector(static "minimumRangeOfUnit:") = NSRange, UInt;
overload selector(static "minimumSignificantDigits") = UInt;
overload selector(static "minusSet:") = Void, NSSet;
overload selector(static "minusSign") = NSString;
overload selector(static "minute") = Int;
overload selector(static "miterLimit") = Float;
overload selector(static "modelLayer") = Id;
overload selector(static "month") = Int;
overload selector(static "monthSymbols") = NSArray;
overload selector(static "mountedVolumeURLsIncludingResourceValuesForKeys:options:") = NSArray, NSArray, UInt;
overload selector(static "moveItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector(static "moveItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector(static "multiplier") = NSNumber;
overload selector(static "mutableArrayValueForKey:") = NSMutableArray, NSString;
overload selector(static "mutableArrayValueForKeyPath:") = NSMutableArray, NSString;
overload selector(static "mutableBytes") = RawPointer;
overload selector(static "mutableCopy") = Id;
overload selector(static "mutableCopyWithZone:") = Id, Pointer[NSZone];
overload selector(static "mutableSetValueForKey:") = NSMutableSet, NSString;
overload selector(static "mutableSetValueForKeyPath:") = NSMutableSet, NSString;
overload selector(static "mutableString") = NSMutableString;
overload selector(static "name") = NSString;
overload selector(static "needsDisplay") = Bool;
overload selector(static "needsDisplayForKey:") = Bool, NSString;
overload selector(static "needsDisplayOnBoundsChange") = Bool;
overload selector(static "needsLayout") = Bool;
overload selector(static "needsToBeUpdatedFromPath:") = Bool, NSString;
overload selector(static "negativeFormat") = NSString;
overload selector(static "negativeInfinitySymbol") = NSString;
overload selector(static "negativePrefix") = NSString;
overload selector(static "negativeSuffix") = NSString;
overload selector(static "netService:didNotPublish:") = Void, NSNetService, NSDictionary;
overload selector(static "netService:didNotResolve:") = Void, NSNetService, NSDictionary;
overload selector(static "netService:didUpdateTXTRecordData:") = Void, NSNetService, NSData;
overload selector(static "netServiceBrowser:didFindDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
overload selector(static "netServiceBrowser:didFindService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
overload selector(static "netServiceBrowser:didNotSearch:") = Void, NSNetServiceBrowser, NSDictionary;
overload selector(static "netServiceBrowser:didRemoveDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
overload selector(static "netServiceBrowser:didRemoveService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
overload selector(static "netServiceBrowserDidStopSearch:") = Void, NSNetServiceBrowser;
overload selector(static "netServiceBrowserWillSearch:") = Void, NSNetServiceBrowser;
overload selector(static "netServiceDidPublish:") = Void, NSNetService;
overload selector(static "netServiceDidResolveAddress:") = Void, NSNetService;
overload selector(static "netServiceDidStop:") = Void, NSNetService;
overload selector(static "netServiceWillPublish:") = Void, NSNetService;
overload selector(static "netServiceWillResolve:") = Void, NSNetService;
overload selector(static "networkServiceType") = UInt;
overload selector(static "new") = Id;
overload selector(static "newlineCharacterSet") = Id;
overload selector(static "nextDaylightSavingTimeTransition") = NSDate;
overload selector(static "nextDaylightSavingTimeTransitionAfterDate:") = NSDate, NSDate;
overload selector(static "nextObject") = Id;
overload selector(static "nilSymbol") = NSString;
overload selector(static "nonBaseCharacterSet") = Id;
overload selector(static "nonretainedObjectValue") = Id;
overload selector(static "notANumber") = NSDecimalNumber;
overload selector(static "notANumberSymbol") = NSString;
overload selector(static "notPredicateWithSubpredicate:") = NSPredicate, NSPredicate;
overload selector(static "notificationWithName:object:") = Id, NSString, Id;
overload selector(static "notificationWithName:object:userInfo:") = Id, NSString, Id, NSDictionary;
overload selector(static "null") = NSNull;
overload selector(static "numberFromString:") = NSNumber, NSString;
overload selector(static "numberOfArguments") = UInt;
overload selector(static "numberOfCaptureGroups") = UInt;
overload selector(static "numberOfMatchesInString:options:range:") = UInt, NSString, UInt, NSRange;
overload selector(static "numberOfRanges") = UInt;
overload selector(static "numberStyle") = UInt;
overload selector(static "numberWithBool:") = NSNumber, Bool;
overload selector(static "numberWithChar:") = NSNumber, CChar;
overload selector(static "numberWithDouble:") = NSNumber, Double;
overload selector(static "numberWithFloat:") = NSNumber, Float;
overload selector(static "numberWithInt:") = NSNumber, Int;
overload selector(static "numberWithInteger:") = NSNumber, Int;
overload selector(static "numberWithLong:") = NSNumber, CLong;
overload selector(static "numberWithLongLong:") = NSNumber, Int64;
overload selector(static "numberWithShort:") = NSNumber, Short;
overload selector(static "numberWithUnsignedChar:") = NSNumber, CUChar;
overload selector(static "numberWithUnsignedInt:") = NSNumber, UInt;
overload selector(static "numberWithUnsignedInteger:") = NSNumber, UInt;
overload selector(static "numberWithUnsignedLong:") = NSNumber, CULong;
overload selector(static "numberWithUnsignedLongLong:") = NSNumber, UInt64;
overload selector(static "numberWithUnsignedShort:") = NSNumber, UShort;
overload selector(static "objCType") = Pointer[CChar];
overload selector(static "object") = Id;
overload selector(static "objectAtIndex:") = Id, UInt;
overload selector(static "objectEnumerator") = NSEnumerator;
overload selector(static "objectForInfoDictionaryKey:") = Id, NSString;
overload selector(static "objectForKey:") = Id, Id;
overload selector(static "objectIsForcedForKey:") = Bool, NSString;
overload selector(static "objectIsForcedForKey:inDomain:") = Bool, NSString, NSString;
overload selector(static "objectZone") = Pointer[NSZone];
overload selector(static "objectsAtIndexes:") = NSArray, NSIndexSet;
overload selector(static "objectsForKeys:notFoundMarker:") = NSArray, NSArray, Id;
overload selector(static "objectsPassingTest:") = NSSet, UnknownType;
overload selector(static "objectsWithOptions:passingTest:") = NSSet, UInt, UnknownType;
overload selector(static "observationInfo") = RawPointer;
overload selector(static "observeValueForKeyPath:ofObject:change:context:") = Void, NSString, Id, NSDictionary, RawPointer;
overload selector(static "offsetInFile") = UInt64;
overload selector(static "one") = NSDecimalNumber;
overload selector(static "opacity") = Float;
overload selector(static "open") = Void;
overload selector(static "operand") = NSExpression;
overload selector(static "operatingSystem") = UInt;
overload selector(static "operatingSystemName") = NSString;
overload selector(static "operatingSystemVersionString") = NSString;
overload selector(static "operationCount") = UInt;
overload selector(static "operations") = NSArray;
overload selector(static "options") = UInt;
overload selector(static "orPredicateWithSubpredicates:") = NSPredicate, NSArray;
overload selector(static "ordinalityOfUnit:inUnit:forDate:") = UInt, UInt, UInt, NSDate;
overload selector(static "orthography") = NSOrthography;
overload selector(static "orthographyCheckingResultWithRange:orthography:") = NSTextCheckingResult, NSRange, NSOrthography;
overload selector(static "orthographyWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
overload selector(static "outputFormat") = UInt;
overload selector(static "outputStreamToBuffer:capacity:") = Id, Pointer[CUChar], UInt;
overload selector(static "outputStreamToFileAtPath:append:") = Id, NSString, Bool;
overload selector(static "outputStreamToMemory") = Id;
overload selector(static "outputStreamWithURL:append:") = Id, NSURL, Bool;
overload selector(static "paddingCharacter") = NSString;
overload selector(static "paddingPosition") = UInt;
overload selector(static "paragraphRangeForRange:") = NSRange, NSRange;
overload selector(static "parameterString") = NSString;
overload selector(static "parse") = Bool;
overload selector(static "parser:didEndElement:namespaceURI:qualifiedName:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector(static "parser:didEndMappingPrefix:") = Void, NSXMLParser, NSString;
overload selector(static "parser:didStartElement:namespaceURI:qualifiedName:attributes:") = Void, NSXMLParser, NSString, NSString, NSString, NSDictionary;
overload selector(static "parser:didStartMappingPrefix:toURI:") = Void, NSXMLParser, NSString, NSString;
overload selector(static "parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
overload selector(static "parser:foundCDATA:") = Void, NSXMLParser, NSData;
overload selector(static "parser:foundCharacters:") = Void, NSXMLParser, NSString;
overload selector(static "parser:foundComment:") = Void, NSXMLParser, NSString;
overload selector(static "parser:foundElementDeclarationWithName:model:") = Void, NSXMLParser, NSString, NSString;
overload selector(static "parser:foundExternalEntityDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector(static "parser:foundIgnorableWhitespace:") = Void, NSXMLParser, NSString;
overload selector(static "parser:foundInternalEntityDeclarationWithName:value:") = Void, NSXMLParser, NSString, NSString;
overload selector(static "parser:foundNotationDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector(static "parser:foundProcessingInstructionWithTarget:data:") = Void, NSXMLParser, NSString, NSString;
overload selector(static "parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
overload selector(static "parser:parseErrorOccurred:") = Void, NSXMLParser, NSError;
overload selector(static "parser:resolveExternalEntityName:systemID:") = NSData, NSXMLParser, NSString, NSString;
overload selector(static "parser:validationErrorOccurred:") = Void, NSXMLParser, NSError;
overload selector(static "parserDidEndDocument:") = Void, NSXMLParser;
overload selector(static "parserDidStartDocument:") = Void, NSXMLParser;
overload selector(static "parserError") = NSError;
overload selector(static "password") = NSString;
overload selector(static "path") = NSString;
overload selector(static "pathComponents") = NSArray;
overload selector(static "pathContentOfSymbolicLinkAtPath:") = NSString, NSString;
overload selector(static "pathExtension") = NSString;
overload selector(static "pathForAuxiliaryExecutable:") = NSString, NSString;
overload selector(static "pathForResource:ofType:") = NSString, NSString, NSString;
overload selector(static "pathForResource:ofType:inDirectory:") = NSString, NSString, NSString, NSString;
overload selector(static "pathForResource:ofType:inDirectory:forLocalization:") = NSString, NSString, NSString, NSString, NSString;
overload selector(static "pathWithComponents:") = NSString, NSArray;
overload selector(static "pathsForResourcesOfType:inDirectory:") = NSArray, NSString, NSString;
overload selector(static "pathsForResourcesOfType:inDirectory:forLocalization:") = NSArray, NSString, NSString, NSString;
overload selector(static "pathsMatchingExtensions:") = NSArray, NSArray;
overload selector(static "pattern") = NSString;
overload selector(static "perMillSymbol") = NSString;
overload selector(static "percentSymbol") = NSString;
overload selector(static "performSelector:") = Id, SelectorHandle;
overload selector(static "performSelector:onThread:withObject:waitUntilDone:") = Void, SelectorHandle, NSThread, Id, Bool;
overload selector(static "performSelector:onThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, NSThread, Id, Bool, NSArray;
overload selector(static "performSelector:target:argument:order:modes:") = Void, SelectorHandle, Id, Id, UInt, NSArray;
overload selector(static "performSelector:withObject:") = Id, SelectorHandle, Id;
overload selector(static "performSelector:withObject:afterDelay:") = Void, SelectorHandle, Id, Double;
overload selector(static "performSelector:withObject:afterDelay:inModes:") = Void, SelectorHandle, Id, Double, NSArray;
overload selector(static "performSelector:withObject:withObject:") = Id, SelectorHandle, Id, Id;
overload selector(static "performSelectorInBackground:withObject:") = Void, SelectorHandle, Id;
overload selector(static "performSelectorOnMainThread:withObject:waitUntilDone:") = Void, SelectorHandle, Id, Bool;
overload selector(static "performSelectorOnMainThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, Id, Bool, NSArray;
overload selector(static "persistence") = UInt;
overload selector(static "persistentDomainForName:") = NSDictionary, NSString;
overload selector(static "persistentDomainNames") = NSArray;
overload selector(static "phoneNumber") = NSString;
overload selector(static "phoneNumberCheckingResultWithRange:phoneNumber:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "physicalMemory") = UInt64;
overload selector(static "pipe") = Id;
overload selector(static "plusSign") = NSString;
overload selector(static "pointerValue") = RawPointer;
overload selector(static "port") = Id;
overload selector(static "portList") = NSArray;
overload selector(static "portWithMachPort:") = NSPort, UInt;
overload selector(static "portWithMachPort:options:") = NSPort, UInt, UInt;
overload selector(static "position") = CGPoint;
overload selector(static "positiveFormat") = NSString;
overload selector(static "positiveInfinitySymbol") = NSString;
overload selector(static "positivePrefix") = NSString;
overload selector(static "positiveSuffix") = NSString;
overload selector(static "postNotification:") = Void, NSNotification;
overload selector(static "postNotificationName:object:") = Void, NSString, Id;
overload selector(static "postNotificationName:object:userInfo:") = Void, NSString, Id, NSDictionary;
overload selector(static "precomposedStringWithCanonicalMapping") = NSString;
overload selector(static "precomposedStringWithCompatibilityMapping") = NSString;
overload selector(static "predicate") = NSPredicate;
overload selector(static "predicateFormat") = NSString;
overload selector(static "predicateOperatorType") = UInt;
overload selector(static "predicateWithBlock:") = NSPredicate, UnknownType;
overload varargSelector(static "predicateWithFormat:") = NSPredicate, NSString;
overload selector(static "predicateWithFormat:argumentArray:") = NSPredicate, NSString, NSArray;
overload selector(static "predicateWithFormat:arguments:") = NSPredicate, NSString, va_list;
overload selector(static "predicateWithLeftExpression:rightExpression:customSelector:") = NSPredicate, NSExpression, NSExpression, SelectorHandle;
overload selector(static "predicateWithLeftExpression:rightExpression:modifier:type:options:") = NSPredicate, NSExpression, NSExpression, UInt, UInt, UInt;
overload selector(static "predicateWithSubstitutionVariables:") = NSPredicate, NSDictionary;
overload selector(static "predicateWithValue:") = NSPredicate, Bool;
overload selector(static "preferredFilename") = NSString;
overload selector(static "preferredFrameSize") = CGSize;
overload selector(static "preferredLanguages") = NSArray;
overload selector(static "preferredLocalizations") = NSArray;
overload selector(static "preferredLocalizationsFromArray:") = NSArray, NSArray;
overload selector(static "preferredLocalizationsFromArray:forPreferences:") = NSArray, NSArray, NSArray;
overload selector(static "preflightAndReturnError:") = Bool, Pointer[NSError];
overload selector(static "prepareWithInvocationTarget:") = Id, Id;
overload selector(static "presentRenderbuffer:") = Bool, UInt;
overload selector(static "presentationLayer") = Id;
overload selector(static "preservesDepth") = Bool;
overload selector(static "previousFailureCount") = Int;
overload selector(static "principalClass") = Id;
overload selector(static "privateFrameworksPath") = NSString;
overload selector(static "privateFrameworksURL") = NSURL;
overload selector(static "processIdentifier") = Int;
overload selector(static "processInfo") = NSProcessInfo;
overload selector(static "processName") = NSString;
overload selector(static "processorCount") = UInt;
overload selector(static "properties") = NSDictionary;
overload selector(static "propertyForKey:") = Id, NSString;
overload selector(static "propertyForKey:inRequest:") = Id, NSString, NSURLRequest;
overload selector(static "propertyList") = Id;
overload selector(static "propertyList:isValidForFormat:") = Bool, Id, UInt;
overload selector(static "propertyListFromData:mutabilityOption:format:errorDescription:") = Id, NSData, UInt, Pointer[UInt], Pointer[NSString];
overload selector(static "propertyListFromStringsFileFormat") = NSDictionary;
overload selector(static "propertyListWithData:options:format:error:") = Id, NSData, UInt, Pointer[UInt], Pointer[NSError];
overload selector(static "propertyListWithStream:options:format:error:") = Id, NSInputStream, UInt, Pointer[UInt], Pointer[NSError];
overload selector(static "proposedCredential") = NSURLCredential;
overload selector(static "protectionSpace") = NSURLProtectionSpace;
overload selector(static "protocol") = NSString;
overload selector(static "proxyType") = NSString;
overload selector(static "publicID") = NSString;
overload selector(static "publish") = Void;
overload selector(static "publishWithOptions:") = Void, UInt;
overload selector(static "punctuationCharacterSet") = Id;
overload selector(static "quarter") = Int;
overload selector(static "quarterSymbols") = NSArray;
overload selector(static "query") = NSString;
overload selector(static "queuePriority") = Int;
overload selector(static "quoteCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "raise") = Void;
overload varargSelector(static "raise:format:") = Void, NSString, NSString;
overload selector(static "raise:format:arguments:") = Void, NSString, NSString, va_list;
overload selector(static "range") = NSRange;
overload selector(static "rangeAtIndex:") = NSRange, UInt;
overload selector(static "rangeOfCharacterFromSet:") = NSRange, NSCharacterSet;
overload selector(static "rangeOfCharacterFromSet:options:") = NSRange, NSCharacterSet, UInt;
overload selector(static "rangeOfCharacterFromSet:options:range:") = NSRange, NSCharacterSet, UInt, NSRange;
overload selector(static "rangeOfComposedCharacterSequenceAtIndex:") = NSRange, UInt;
overload selector(static "rangeOfComposedCharacterSequencesForRange:") = NSRange, NSRange;
overload selector(static "rangeOfData:options:range:") = NSRange, NSData, UInt, NSRange;
overload selector(static "rangeOfFirstMatchInString:options:range:") = NSRange, NSString, UInt, NSRange;
overload selector(static "rangeOfString:") = NSRange, NSString;
overload selector(static "rangeOfString:options:") = NSRange, NSString, UInt;
overload selector(static "rangeOfString:options:range:") = NSRange, NSString, UInt, NSRange;
overload selector(static "rangeOfString:options:range:locale:") = NSRange, NSString, UInt, NSRange, NSLocale;
overload selector(static "rangeOfUnit:inUnit:forDate:") = NSRange, UInt, UInt, NSDate;
overload selector(static "rangeOfUnit:startDate:interval:forDate:") = Bool, UInt, Pointer[NSDate], Pointer[Double], NSDate;
overload selector(static "rangeValue") = NSRange;
overload selector(static "rasterizationScale") = Float;
overload selector(static "read:maxLength:") = Int, Pointer[CUChar], UInt;
overload selector(static "readDataOfLength:") = NSData, UInt;
overload selector(static "readDataToEndOfFile") = NSData;
overload selector(static "readFromURL:options:error:") = Bool, NSURL, UInt, Pointer[NSError];
overload selector(static "readInBackgroundAndNotify") = Void;
overload selector(static "readInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector(static "readToEndOfFileInBackgroundAndNotify") = Void;
overload selector(static "readToEndOfFileInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector(static "realm") = NSString;
overload selector(static "reason") = NSString;
overload selector(static "receivesCredentialSecurely") = Bool;
overload selector(static "recoveryAttempter") = Id;
overload selector(static "redo") = Void;
overload selector(static "redoActionName") = NSString;
overload selector(static "redoMenuItemTitle") = NSString;
overload selector(static "redoMenuTitleForUndoActionName:") = NSString, NSString;
overload selector(static "registerClass:") = Bool, Id;
overload selector(static "registerDefaults:") = Void, NSDictionary;
overload selector(static "registerUndoWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
overload selector(static "regularExpression") = NSRegularExpression;
overload selector(static "regularExpressionCheckingResultWithRanges:count:regularExpression:") = NSTextCheckingResult, NSRangePointer, UInt, NSRegularExpression;
overload selector(static "regularExpressionWithPattern:options:error:") = NSRegularExpression, NSString, UInt, Pointer[NSError];
overload selector(static "regularFileContents") = NSData;
overload selector(static "relativePath") = NSString;
overload selector(static "relativeString") = NSString;
overload selector(static "release") = Void;
overload selector(static "removeAllActions") = Void;
overload selector(static "removeAllActionsWithTarget:") = Void, Id;
overload selector(static "removeAllAnimations") = Void;
overload selector(static "removeAllCachedResponses") = Void;
overload selector(static "removeAllIndexes") = Void;
overload selector(static "removeAllObjects") = Void;
overload selector(static "removeAnimationForKey:") = Void, NSString;
overload selector(static "removeAttribute:range:") = Void, NSString, NSRange;
overload selector(static "removeCachedResponseForRequest:") = Void, NSURLRequest;
overload selector(static "removeCharactersInRange:") = Void, NSRange;
overload selector(static "removeCharactersInString:") = Void, NSString;
overload selector(static "removeCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector(static "removeDependency:") = Void, NSOperation;
overload selector(static "removeFileWrapper:") = Void, NSFileWrapper;
overload selector(static "removeFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector(static "removeFromSuperlayer") = Void;
overload selector(static "removeIndex:") = Void, UInt;
overload selector(static "removeIndexes:") = Void, NSIndexSet;
overload selector(static "removeIndexesInRange:") = Void, NSRange;
overload selector(static "removeItemAtPath:error:") = Bool, NSString, Pointer[NSError];
overload selector(static "removeItemAtURL:error:") = Bool, NSURL, Pointer[NSError];
overload selector(static "removeLastObject") = Void;
overload selector(static "removeObject:") = Void, Id;
overload selector(static "removeObject:inRange:") = Void, Id, NSRange;
overload selector(static "removeObjectAtIndex:") = Void, UInt;
overload selector(static "removeObjectForKey:") = Void, Id;
overload selector(static "removeObjectIdenticalTo:") = Void, Id;
overload selector(static "removeObjectIdenticalTo:inRange:") = Void, Id, NSRange;
overload selector(static "removeObjectsAtIndexes:") = Void, NSIndexSet;
overload selector(static "removeObjectsForKeys:") = Void, NSArray;
overload selector(static "removeObjectsFromIndices:numIndices:") = Void, Pointer[UInt], UInt;
overload selector(static "removeObjectsInArray:") = Void, NSArray;
overload selector(static "removeObjectsInRange:") = Void, NSRange;
overload selector(static "removeObserver:") = Void, Id;
overload selector(static "removeObserver:forKeyPath:") = Void, NSObject, NSString;
overload selector(static "removeObserver:fromObjectsAtIndexes:forKeyPath:") = Void, NSObject, NSIndexSet, NSString;
overload selector(static "removeObserver:name:object:") = Void, Id, NSString, Id;
overload selector(static "removePersistentDomainForName:") = Void, NSString;
overload selector(static "removePort:forMode:") = Void, NSPort, NSString;
overload selector(static "removePropertyForKey:inRequest:") = Void, NSString, NSMutableURLRequest;
overload selector(static "removeSuiteNamed:") = Void, NSString;
overload selector(static "removeVolatileDomainForName:") = Void, NSString;
overload selector(static "renderInContext:") = Void, CGContextRef;
overload selector(static "renderbufferStorage:fromDrawable:") = Bool, UInt, Id;
overload selector(static "repeatCount") = Float;
overload selector(static "repeatDuration") = Double;
overload selector(static "replaceBytesInRange:withBytes:") = Void, NSRange, RawPointer;
overload selector(static "replaceBytesInRange:withBytes:length:") = Void, NSRange, RawPointer, UInt;
overload selector(static "replaceCharactersInRange:withAttributedString:") = Void, NSRange, NSAttributedString;
overload selector(static "replaceCharactersInRange:withString:") = Void, NSRange, NSString;
overload selector(static "replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:") = Bool, NSURL, NSURL, NSString, UInt, Pointer[NSURL], Pointer[NSError];
overload selector(static "replaceMatchesInString:options:range:withTemplate:") = UInt, NSMutableString, UInt, NSRange, NSString;
overload selector(static "replaceObjectAtIndex:withObject:") = Void, UInt, Id;
overload selector(static "replaceObjectsAtIndexes:withObjects:") = Void, NSIndexSet, NSArray;
overload selector(static "replaceObjectsInRange:withObjectsFromArray:") = Void, NSRange, NSArray;
overload selector(static "replaceObjectsInRange:withObjectsFromArray:range:") = Void, NSRange, NSArray, NSRange;
overload selector(static "replaceOccurrencesOfString:withString:options:range:") = UInt, NSString, NSString, UInt, NSRange;
overload selector(static "replaceSublayer:with:") = Void, CALayer, CALayer;
overload selector(static "replacementCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "replacementObjectForCoder:") = Id, NSCoder;
overload selector(static "replacementObjectForKeyedArchiver:") = Id, NSKeyedArchiver;
overload selector(static "replacementString") = NSString;
overload selector(static "replacementStringForResult:inString:offset:template:") = NSString, NSTextCheckingResult, NSString, Int, NSString;
overload selector(static "request") = NSURLRequest;
overload selector(static "requestHeaderFieldsWithCookies:") = NSDictionary, NSArray;
overload selector(static "requestIsCacheEquivalent:toRequest:") = Bool, NSURLRequest, NSURLRequest;
overload selector(static "requestWithURL:") = Id, NSURL;
overload selector(static "requestWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, UInt, Double;
overload selector(static "reservedSpaceLength") = UInt;
overload selector(static "resetBytesInRange:") = Void, NSRange;
overload selector(static "resetStandardUserDefaults") = Void;
overload selector(static "resetSystemTimeZone") = Void;
overload selector(static "resolve") = Void;
overload selector(static "resolveClassMethod:") = Bool, SelectorHandle;
overload selector(static "resolveInstanceMethod:") = Bool, SelectorHandle;
overload selector(static "resolveWithTimeout:") = Void, Double;
overload selector(static "resourcePath") = NSString;
overload selector(static "resourceSpecifier") = NSString;
overload selector(static "resourceURL") = NSURL;
overload selector(static "resourceValuesForKeys:error:") = NSDictionary, NSArray, Pointer[NSError];
overload selector(static "resourceValuesForKeys:fromBookmarkData:") = NSDictionary, NSArray, NSData;
overload selector(static "respondsToSelector:") = Bool, SelectorHandle;
overload selector(static "response") = NSURLResponse;
overload selector(static "result") = Id;
overload selector(static "resultType") = UInt64;
overload selector(static "retain") = Id;
overload selector(static "retainArguments") = Void;
overload selector(static "retainCount") = UInt;
overload selector(static "reverseObjectEnumerator") = NSEnumerator;
overload selector(static "reverseTransformedValue:") = Id, Id;
overload selector(static "reversedSortDescriptor") = Id;
overload selector(static "rightExpression") = NSExpression;
overload selector(static "rotationMode") = NSString;
overload selector(static "roundingIncrement") = NSNumber;
overload selector(static "roundingMode") = UInt;
overload selector(static "run") = Void;
overload selector(static "runActionForKey:object:arguments:") = Void, NSString, Id, NSDictionary;
overload selector(static "runLoopModes") = NSArray;
overload selector(static "runMode:beforeDate:") = Bool, NSString, NSDate;
overload selector(static "runUntilDate:") = Void, NSDate;
overload selector(static "scale") = Short;
overload selector(static "scanCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
overload selector(static "scanDecimal:") = Bool, Pointer[NSDecimal];
overload selector(static "scanDouble:") = Bool, Pointer[Double];
overload selector(static "scanFloat:") = Bool, Pointer[Float];
overload selector(static "scanHexDouble:") = Bool, Pointer[Double];
overload selector(static "scanHexFloat:") = Bool, Pointer[Float];
overload selector(static "scanHexInt:") = Bool, Pointer[UInt];
overload selector(static "scanHexLongLong:") = Bool, Pointer[UInt64];
overload selector(static "scanInt:") = Bool, Pointer[Int];
overload selector(static "scanInteger:") = Bool, Pointer[Int];
overload selector(static "scanLocation") = UInt;
overload selector(static "scanLongLong:") = Bool, Pointer[Int64];
overload selector(static "scanString:intoString:") = Bool, NSString, Pointer[NSString];
overload selector(static "scanUpToCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
overload selector(static "scanUpToString:intoString:") = Bool, NSString, Pointer[NSString];
overload selector(static "scannerWithString:") = Id, NSString;
overload selector(static "scheduleInRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector(static "scheduledTimerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
overload selector(static "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
overload selector(static "scheme") = NSString;
overload selector(static "scrollMode") = NSString;
overload selector(static "scrollPoint:") = Void, CGPoint;
overload selector(static "scrollRectToVisible:") = Void, CGRect;
overload selector(static "scrollToPoint:") = Void, CGPoint;
overload selector(static "scrollToRect:") = Void, CGRect;
overload selector(static "searchForBrowsableDomains") = Void;
overload selector(static "searchForRegistrationDomains") = Void;
overload selector(static "searchForServicesOfType:inDomain:") = Void, NSString, NSString;
overload selector(static "second") = Int;
overload selector(static "secondaryGroupingSize") = UInt;
overload selector(static "secondsFromGMT") = Int;
overload selector(static "secondsFromGMTForDate:") = Int, NSDate;
overload selector(static "seekToEndOfFile") = UInt64;
overload selector(static "seekToFileOffset:") = Void, UInt64;
overload selector(static "selector") = SelectorHandle;
overload selector(static "self") = Id;
overload selector(static "sendBeforeDate:components:from:reserved:") = Bool, NSDate, NSMutableArray, NSPort, UInt;
overload selector(static "sendBeforeDate:msgid:components:from:reserved:") = Bool, NSDate, UInt, NSMutableArray, NSPort, UInt;
overload selector(static "sendSynchronousRequest:returningResponse:error:") = NSData, NSURLRequest, Pointer[NSURLResponse], Pointer[NSError];
overload selector(static "sender") = Id;
overload selector(static "serializedRepresentation") = NSData;
overload selector(static "serverTrust") = SecTrustRef;
overload selector(static "set") = Id;
overload selector(static "setAMSymbol:") = Void, NSString;
overload selector(static "setAbbreviationDictionary:") = Void, NSDictionary;
overload selector(static "setActionName:") = Void, NSString;
overload selector(static "setActions:") = Void, NSDictionary;
overload selector(static "setAdditive:") = Void, Bool;
overload selector(static "setAffineTransform:") = Void, CGAffineTransform;
overload selector(static "setAlignmentMode:") = Void, NSString;
overload selector(static "setAllHTTPHeaderFields:") = Void, NSDictionary;
overload selector(static "setAllowsFloats:") = Void, Bool;
overload selector(static "setAlwaysShowsDecimalSeparator:") = Void, Bool;
overload selector(static "setAnchorPoint:") = Void, CGPoint;
overload selector(static "setAnchorPointZ:") = Void, Float;
overload selector(static "setAnimationDuration:") = Void, Double;
overload selector(static "setAnimationTimingFunction:") = Void, CAMediaTimingFunction;
overload selector(static "setAnimations:") = Void, NSArray;
overload selector(static "setArgument:atIndex:") = Void, RawPointer, Int;
overload selector(static "setArray:") = Void, NSArray;
overload selector(static "setAttributedString:") = Void, NSAttributedString;
overload selector(static "setAttributes:ofItemAtPath:error:") = Bool, NSDictionary, NSString, Pointer[NSError];
overload selector(static "setAttributes:range:") = Void, NSDictionary, NSRange;
overload selector(static "setAutoreverses:") = Void, Bool;
overload selector(static "setBackgroundColor:") = Void, CGColorRef;
overload selector(static "setBackgroundFilters:") = Void, NSArray;
overload selector(static "setBeginTime:") = Void, Double;
overload selector(static "setBiasValues:") = Void, NSArray;
overload selector(static "setBool:forKey:") = Void, Bool, NSString;
overload selector(static "setBorderColor:") = Void, CGColorRef;
overload selector(static "setBorderWidth:") = Void, Float;
overload selector(static "setBounds:") = Void, CGRect;
overload selector(static "setByAddingObject:") = NSSet, Id;
overload selector(static "setByAddingObjectsFromArray:") = NSSet, NSArray;
overload selector(static "setByAddingObjectsFromSet:") = NSSet, NSSet;
overload selector(static "setByValue:") = Void, Id;
overload selector(static "setCachePolicy:") = Void, UInt;
overload selector(static "setCalculationMode:") = Void, NSString;
overload selector(static "setCalendar:") = Void, NSCalendar;
overload selector(static "setCaseSensitive:") = Void, Bool;
overload selector(static "setCharactersToBeSkipped:") = Void, NSCharacterSet;
overload selector(static "setClass:forClassName:") = Void, Id, NSString;
overload selector(static "setClassName:forClass:") = Void, NSString, Id;
overload selector(static "setColors:") = Void, NSArray;
overload selector(static "setCompletionBlock:") = Void, UnknownType;
overload selector(static "setCompositingFilter:") = Void, Id;
overload selector(static "setContents:") = Void, Id;
overload selector(static "setContentsCenter:") = Void, CGRect;
overload selector(static "setContentsGravity:") = Void, NSString;
overload selector(static "setContentsRect:") = Void, CGRect;
overload selector(static "setContentsScale:") = Void, Float;
overload selector(static "setContinuityValues:") = Void, NSArray;
overload selector(static "setCookie:") = Void, NSHTTPCookie;
overload selector(static "setCookieAcceptPolicy:") = Void, UInt;
overload selector(static "setCookies:forURL:mainDocumentURL:") = Void, NSArray, NSURL, NSURL;
overload selector(static "setCornerRadius:") = Void, Float;
overload selector(static "setCountLimit:") = Void, UInt;
overload selector(static "setCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector(static "setCumulative:") = Void, Bool;
overload selector(static "setCurrencyCode:") = Void, NSString;
overload selector(static "setCurrencyDecimalSeparator:") = Void, NSString;
overload selector(static "setCurrencyGroupingSeparator:") = Void, NSString;
overload selector(static "setCurrencySymbol:") = Void, NSString;
overload selector(static "setCurrentContext:") = Bool, EAGLContext;
overload selector(static "setData:") = Void, NSData;
overload selector(static "setDateFormat:") = Void, NSString;
overload selector(static "setDateStyle:") = Void, UInt;
overload selector(static "setDay:") = Void, Int;
overload selector(static "setDecimalSeparator:") = Void, NSString;
overload selector(static "setDefaultBehavior:") = Void, Id;
overload selector(static "setDefaultCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector(static "setDefaultDate:") = Void, NSDate;
overload selector(static "setDefaultFormatterBehavior:") = Void, UInt;
overload selector(static "setDefaultTimeZone:") = Void, NSTimeZone;
overload selector(static "setDelegate:") = Void, Id;
overload selector(static "setDictionary:") = Void, NSDictionary;
overload selector(static "setDisableActions:") = Void, Bool;
overload selector(static "setDiskCapacity:") = Void, UInt;
overload selector(static "setDoesRelativeDateFormatting:") = Void, Bool;
overload selector(static "setDouble:forKey:") = Void, Double, NSString;
overload selector(static "setDoubleSided:") = Void, Bool;
overload selector(static "setDrawableProperties:") = Void, NSDictionary;
overload selector(static "setDuration:") = Void, Double;
overload selector(static "setEdgeAntialiasingMask:") = Void, UInt;
overload selector(static "setEndPoint:") = Void, CGPoint;
overload selector(static "setEndProgress:") = Void, Float;
overload selector(static "setEra:") = Void, Int;
overload selector(static "setEraSymbols:") = Void, NSArray;
overload selector(static "setEvictsObjectsWithDiscardedContent:") = Void, Bool;
overload selector(static "setExponentSymbol:") = Void, NSString;
overload selector(static "setFileAttributes:") = Void, NSDictionary;
overload selector(static "setFilename:") = Void, NSString;
overload selector(static "setFillColor:") = Void, CGColorRef;
overload selector(static "setFillMode:") = Void, NSString;
overload selector(static "setFillRule:") = Void, NSString;
overload selector(static "setFilter:") = Void, Id;
overload selector(static "setFilters:") = Void, NSArray;
overload selector(static "setFireDate:") = Void, NSDate;
overload selector(static "setFirstWeekday:") = Void, UInt;
overload selector(static "setFloat:forKey:") = Void, Float, NSString;
overload selector(static "setFont:") = Void, CFTypeRef;
overload selector(static "setFontSize:") = Void, Float;
overload selector(static "setForegroundColor:") = Void, CGColorRef;
overload selector(static "setFormatWidth:") = Void, UInt;
overload selector(static "setFormatterBehavior:") = Void, UInt;
overload selector(static "setFrame:") = Void, CGRect;
overload selector(static "setFrameInterval:") = Void, Int;
overload selector(static "setFromValue:") = Void, Id;
overload selector(static "setGeneratesCalendarDates:") = Void, Bool;
overload selector(static "setGeneratesDecimalNumbers:") = Void, Bool;
overload selector(static "setGeometryFlipped:") = Void, Bool;
overload selector(static "setGregorianStartDate:") = Void, NSDate;
overload selector(static "setGroupingSeparator:") = Void, NSString;
overload selector(static "setGroupingSize:") = Void, UInt;
overload selector(static "setGroupsByEvent:") = Void, Bool;
overload selector(static "setHTTPBody:") = Void, NSData;
overload selector(static "setHTTPBodyStream:") = Void, NSInputStream;
overload selector(static "setHTTPMethod:") = Void, NSString;
overload selector(static "setHTTPShouldHandleCookies:") = Void, Bool;
overload selector(static "setHTTPShouldUsePipelining:") = Void, Bool;
overload selector(static "setHidden:") = Void, Bool;
overload selector(static "setHour:") = Void, Int;
overload selector(static "setInstanceAlphaOffset:") = Void, Float;
overload selector(static "setInstanceBlueOffset:") = Void, Float;
overload selector(static "setInstanceColor:") = Void, CGColorRef;
overload selector(static "setInstanceCount:") = Void, Int;
overload selector(static "setInstanceDelay:") = Void, Double;
overload selector(static "setInstanceGreenOffset:") = Void, Float;
overload selector(static "setInstanceRedOffset:") = Void, Float;
overload selector(static "setInstanceTransform:") = Void, CATransform3D;
overload selector(static "setInteger:forKey:") = Void, Int, NSString;
overload selector(static "setInternationalCurrencySymbol:") = Void, NSString;
overload selector(static "setKeyPath:") = Void, NSString;
overload selector(static "setKeyTimes:") = Void, NSArray;
overload selector(static "setLength:") = Void, UInt;
overload selector(static "setLenient:") = Void, Bool;
overload selector(static "setLevelsOfDetail:") = Void, UInt;
overload selector(static "setLevelsOfDetailBias:") = Void, UInt;
overload selector(static "setLevelsOfUndo:") = Void, UInt;
overload selector(static "setLineCap:") = Void, NSString;
overload selector(static "setLineDashPattern:") = Void, NSArray;
overload selector(static "setLineDashPhase:") = Void, Float;
overload selector(static "setLineJoin:") = Void, NSString;
overload selector(static "setLineWidth:") = Void, Float;
overload selector(static "setLocale:") = Void, NSLocale;
overload selector(static "setLocations:") = Void, NSArray;
overload selector(static "setLongEraSymbols:") = Void, NSArray;
overload selector(static "setMagnificationFilter:") = Void, NSString;
overload selector(static "setMainDocumentURL:") = Void, NSURL;
overload selector(static "setMask:") = Void, CALayer;
overload selector(static "setMasksToBounds:") = Void, Bool;
overload selector(static "setMaxConcurrentOperationCount:") = Void, Int;
overload selector(static "setMaximum:") = Void, NSNumber;
overload selector(static "setMaximumFractionDigits:") = Void, UInt;
overload selector(static "setMaximumIntegerDigits:") = Void, UInt;
overload selector(static "setMaximumSignificantDigits:") = Void, UInt;
overload selector(static "setMemoryCapacity:") = Void, UInt;
overload selector(static "setMinificationFilter:") = Void, NSString;
overload selector(static "setMinificationFilterBias:") = Void, Float;
overload selector(static "setMinimum:") = Void, NSNumber;
overload selector(static "setMinimumDaysInFirstWeek:") = Void, UInt;
overload selector(static "setMinimumFractionDigits:") = Void, UInt;
overload selector(static "setMinimumIntegerDigits:") = Void, UInt;
overload selector(static "setMinimumSignificantDigits:") = Void, UInt;
overload selector(static "setMinusSign:") = Void, NSString;
overload selector(static "setMinute:") = Void, Int;
overload selector(static "setMiterLimit:") = Void, Float;
overload selector(static "setMonth:") = Void, Int;
overload selector(static "setMonthSymbols:") = Void, NSArray;
overload selector(static "setMultiplier:") = Void, NSNumber;
overload selector(static "setName:") = Void, NSString;
overload selector(static "setNeedsDisplay") = Void;
overload selector(static "setNeedsDisplayInRect:") = Void, CGRect;
overload selector(static "setNeedsDisplayOnBoundsChange:") = Void, Bool;
overload selector(static "setNeedsLayout") = Void;
overload selector(static "setNegativeFormat:") = Void, NSString;
overload selector(static "setNegativeInfinitySymbol:") = Void, NSString;
overload selector(static "setNegativePrefix:") = Void, NSString;
overload selector(static "setNegativeSuffix:") = Void, NSString;
overload selector(static "setNetworkServiceType:") = Void, UInt;
overload selector(static "setNilSymbol:") = Void, NSString;
overload selector(static "setNilValueForKey:") = Void, NSString;
overload selector(static "setNotANumberSymbol:") = Void, NSString;
overload selector(static "setNumberStyle:") = Void, UInt;
overload selector(static "setObject:forKey:") = Void, Id, Id;
overload selector(static "setObject:forKey:cost:") = Void, Id, Id, UInt;
overload selector(static "setObjectZone:") = Void, Pointer[NSZone];
overload selector(static "setObservationInfo:") = Void, RawPointer;
overload selector(static "setOpacity:") = Void, Float;
overload selector(static "setOpaque:") = Void, Bool;
overload selector(static "setOutputFormat:") = Void, UInt;
overload selector(static "setPMSymbol:") = Void, NSString;
overload selector(static "setPaddingCharacter:") = Void, NSString;
overload selector(static "setPaddingPosition:") = Void, UInt;
overload selector(static "setPartialStringValidationEnabled:") = Void, Bool;
overload selector(static "setPath:") = Void, CGPathRef;
overload selector(static "setPaused:") = Void, Bool;
overload selector(static "setPerMillSymbol:") = Void, NSString;
overload selector(static "setPercentSymbol:") = Void, NSString;
overload selector(static "setPersistentDomain:forName:") = Void, NSDictionary, NSString;
overload selector(static "setPlusSign:") = Void, NSString;
overload selector(static "setPosition:") = Void, CGPoint;
overload selector(static "setPositiveFormat:") = Void, NSString;
overload selector(static "setPositiveInfinitySymbol:") = Void, NSString;
overload selector(static "setPositivePrefix:") = Void, NSString;
overload selector(static "setPositiveSuffix:") = Void, NSString;
overload selector(static "setPreferredFilename:") = Void, NSString;
overload selector(static "setPreservesDepth:") = Void, Bool;
overload selector(static "setProcessName:") = Void, NSString;
overload selector(static "setProperty:forKey:") = Bool, Id, NSString;
overload selector(static "setProperty:forKey:inRequest:") = Void, Id, NSString, NSMutableURLRequest;
overload selector(static "setQuarter:") = Void, Int;
overload selector(static "setQuarterSymbols:") = Void, NSArray;
overload selector(static "setQueuePriority:") = Void, Int;
overload selector(static "setRasterizationScale:") = Void, Float;
overload selector(static "setRemovedOnCompletion:") = Void, Bool;
overload selector(static "setRepeatCount:") = Void, Float;
overload selector(static "setRepeatDuration:") = Void, Double;
overload selector(static "setResourceValue:forKey:error:") = Bool, Id, NSString, Pointer[NSError];
overload selector(static "setResourceValues:error:") = Bool, NSDictionary, Pointer[NSError];
overload selector(static "setReturnValue:") = Void, RawPointer;
overload selector(static "setRotationMode:") = Void, NSString;
overload selector(static "setRoundingIncrement:") = Void, NSNumber;
overload selector(static "setRoundingMode:") = Void, UInt;
overload selector(static "setRunLoopModes:") = Void, NSArray;
overload selector(static "setScanLocation:") = Void, UInt;
overload selector(static "setScrollMode:") = Void, NSString;
overload selector(static "setSecond:") = Void, Int;
overload selector(static "setSecondaryGroupingSize:") = Void, UInt;
overload selector(static "setSelector:") = Void, SelectorHandle;
overload selector(static "setSet:") = Void, NSSet;
overload selector(static "setShadowColor:") = Void, CGColorRef;
overload selector(static "setShadowOffset:") = Void, CGSize;
overload selector(static "setShadowOpacity:") = Void, Float;
overload selector(static "setShadowPath:") = Void, CGPathRef;
overload selector(static "setShadowRadius:") = Void, Float;
overload selector(static "setSharedURLCache:") = Void, NSURLCache;
overload selector(static "setShortMonthSymbols:") = Void, NSArray;
overload selector(static "setShortQuarterSymbols:") = Void, NSArray;
overload selector(static "setShortStandaloneMonthSymbols:") = Void, NSArray;
overload selector(static "setShortStandaloneQuarterSymbols:") = Void, NSArray;
overload selector(static "setShortStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector(static "setShortWeekdaySymbols:") = Void, NSArray;
overload selector(static "setShouldProcessNamespaces:") = Void, Bool;
overload selector(static "setShouldRasterize:") = Void, Bool;
overload selector(static "setShouldReportNamespacePrefixes:") = Void, Bool;
overload selector(static "setShouldResolveExternalEntities:") = Void, Bool;
overload selector(static "setSpeed:") = Void, Float;
overload selector(static "setStackSize:") = Void, UInt;
overload selector(static "setStandaloneMonthSymbols:") = Void, NSArray;
overload selector(static "setStandaloneQuarterSymbols:") = Void, NSArray;
overload selector(static "setStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector(static "setStartPoint:") = Void, CGPoint;
overload selector(static "setStartProgress:") = Void, Float;
overload selector(static "setString:") = Void, NSString;
overload selector(static "setStrokeColor:") = Void, CGColorRef;
overload selector(static "setStyle:") = Void, NSDictionary;
overload selector(static "setSublayerTransform:") = Void, CATransform3D;
overload selector(static "setSublayers:") = Void, NSArray;
overload selector(static "setSubtype:") = Void, NSString;
overload selector(static "setSuspended:") = Void, Bool;
overload selector(static "setTXTRecordData:") = Bool, NSData;
overload selector(static "setTarget:") = Void, Id;
overload selector(static "setTensionValues:") = Void, NSArray;
overload selector(static "setTextAttributesForNegativeInfinity:") = Void, NSDictionary;
overload selector(static "setTextAttributesForNegativeValues:") = Void, NSDictionary;
overload selector(static "setTextAttributesForNil:") = Void, NSDictionary;
overload selector(static "setTextAttributesForNotANumber:") = Void, NSDictionary;
overload selector(static "setTextAttributesForPositiveInfinity:") = Void, NSDictionary;
overload selector(static "setTextAttributesForPositiveValues:") = Void, NSDictionary;
overload selector(static "setTextAttributesForZero:") = Void, NSDictionary;
overload selector(static "setThreadPriority:") = Bool, Double;
overload selector(static "setTileSize:") = Void, CGSize;
overload selector(static "setTimeOffset:") = Void, Double;
overload selector(static "setTimeStyle:") = Void, UInt;
overload selector(static "setTimeZone:") = Void, NSTimeZone;
overload selector(static "setTimeoutInterval:") = Void, Double;
overload selector(static "setTimingFunction:") = Void, CAMediaTimingFunction;
overload selector(static "setTimingFunctions:") = Void, NSArray;
overload selector(static "setToValue:") = Void, Id;
overload selector(static "setTotalCostLimit:") = Void, UInt;
overload selector(static "setTransform:") = Void, CATransform3D;
overload selector(static "setTruncationMode:") = Void, NSString;
overload selector(static "setTwoDigitStartDate:") = Void, NSDate;
overload selector(static "setType:") = Void, NSString;
overload selector(static "setURL:") = Void, NSURL;
overload selector(static "setURL:forKey:") = Void, NSURL, NSString;
overload selector(static "setUsesGroupingSeparator:") = Void, Bool;
overload selector(static "setUsesSignificantDigits:") = Void, Bool;
overload selector(static "setValue:forHTTPHeaderField:") = Void, NSString, NSString;
overload selector(static "setValue:forKey:") = Void, Id, NSString;
overload selector(static "setValue:forKeyPath:") = Void, Id, NSString;
overload selector(static "setValue:forUndefinedKey:") = Void, Id, NSString;
overload selector(static "setValueFunction:") = Void, CAValueFunction;
overload selector(static "setValueTransformer:forName:") = Void, NSValueTransformer, NSString;
overload selector(static "setValues:") = Void, NSArray;
overload selector(static "setValuesForKeysWithDictionary:") = Void, NSDictionary;
overload selector(static "setVersion:") = Void, Int;
overload selector(static "setVeryShortMonthSymbols:") = Void, NSArray;
overload selector(static "setVeryShortStandaloneMonthSymbols:") = Void, NSArray;
overload selector(static "setVeryShortStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector(static "setVeryShortWeekdaySymbols:") = Void, NSArray;
overload selector(static "setVolatileDomain:forName:") = Void, NSDictionary, NSString;
overload selector(static "setWeek:") = Void, Int;
overload selector(static "setWeekday:") = Void, Int;
overload selector(static "setWeekdayOrdinal:") = Void, Int;
overload selector(static "setWeekdaySymbols:") = Void, NSArray;
overload selector(static "setWithArray:") = Id, NSArray;
overload selector(static "setWithCapacity:") = Id, UInt;
overload selector(static "setWithObject:") = Id, Id;
overload varargSelector(static "setWithObjects:") = Id, Id;
overload selector(static "setWithObjects:count:") = Id, Pointer[Id], UInt;
overload selector(static "setWithSet:") = Id, NSSet;
overload selector(static "setWrapped:") = Void, Bool;
overload selector(static "setYear:") = Void, Int;
overload selector(static "setZPosition:") = Void, Float;
overload selector(static "setZeroSymbol:") = Void, NSString;
overload selector(static "shadowColor") = CGColorRef;
overload selector(static "shadowOffset") = CGSize;
overload selector(static "shadowOpacity") = Float;
overload selector(static "shadowPath") = CGPathRef;
overload selector(static "shadowRadius") = Float;
overload selector(static "sharedCredentialStorage") = NSURLCredentialStorage;
overload selector(static "sharedFrameworksPath") = NSString;
overload selector(static "sharedFrameworksURL") = NSURL;
overload selector(static "sharedHTTPCookieStorage") = NSHTTPCookieStorage;
overload selector(static "sharedSupportPath") = NSString;
overload selector(static "sharedSupportURL") = NSURL;
overload selector(static "sharedURLCache") = NSURLCache;
overload selector(static "sharegroup") = EAGLSharegroup;
overload selector(static "shiftIndexesStartingAtIndex:by:") = Void, UInt, Int;
overload selector(static "shortMonthSymbols") = NSArray;
overload selector(static "shortQuarterSymbols") = NSArray;
overload selector(static "shortStandaloneMonthSymbols") = NSArray;
overload selector(static "shortStandaloneQuarterSymbols") = NSArray;
overload selector(static "shortStandaloneWeekdaySymbols") = NSArray;
overload selector(static "shortValue") = Short;
overload selector(static "shortWeekdaySymbols") = NSArray;
overload selector(static "shouldArchiveValueForKey:") = Bool, NSString;
overload selector(static "shouldProcessNamespaces") = Bool;
overload selector(static "shouldRasterize") = Bool;
overload selector(static "shouldReportNamespacePrefixes") = Bool;
overload selector(static "shouldResolveExternalEntities") = Bool;
overload selector(static "signal") = Void;
overload selector(static "signatureWithObjCTypes:") = NSMethodSignature, Pointer[CChar];
overload selector(static "skipDescendants") = Void;
overload selector(static "skipDescendents") = Void;
overload selector(static "sleepForTimeInterval:") = Void, Double;
overload selector(static "sleepUntilDate:") = Void, NSDate;
overload selector(static "smallestEncoding") = UInt;
overload selector(static "sortDescriptorWithKey:ascending:") = Id, NSString, Bool;
overload selector(static "sortDescriptorWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
overload selector(static "sortDescriptorWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
overload selector(static "sortUsingComparator:") = Void, NSComparator;
overload selector(static "sortUsingDescriptors:") = Void, NSArray;
overload selector(static "sortUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer;
overload selector(static "sortUsingSelector:") = Void, SelectorHandle;
overload selector(static "sortWithOptions:usingComparator:") = Void, UInt, NSComparator;
overload selector(static "sortedArrayHint") = NSData;
overload selector(static "sortedArrayUsingComparator:") = NSArray, NSComparator;
overload selector(static "sortedArrayUsingDescriptors:") = NSArray, NSArray;
overload selector(static "sortedArrayUsingFunction:context:") = NSArray, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer;
overload selector(static "sortedArrayUsingFunction:context:hint:") = NSArray, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer, NSData;
overload selector(static "sortedArrayUsingSelector:") = NSArray, SelectorHandle;
overload selector(static "sortedArrayWithOptions:usingComparator:") = NSArray, UInt, NSComparator;
overload selector(static "speed") = Float;
overload selector(static "spellCheckingResultWithRange:") = NSTextCheckingResult, NSRange;
overload selector(static "stackSize") = UInt;
overload selector(static "standaloneMonthSymbols") = NSArray;
overload selector(static "standaloneQuarterSymbols") = NSArray;
overload selector(static "standaloneWeekdaySymbols") = NSArray;
overload selector(static "standardUserDefaults") = NSUserDefaults;
overload selector(static "standardizedURL") = NSURL;
overload selector(static "start") = Void;
overload selector(static "startLoading") = Void;
overload selector(static "startMonitoring") = Void;
overload selector(static "startPoint") = CGPoint;
overload selector(static "startProgress") = Float;
overload selector(static "statusCode") = Int;
overload selector(static "stop") = Void;
overload selector(static "stopLoading") = Void;
overload selector(static "stopMonitoring") = Void;
overload selector(static "storagePolicy") = UInt;
overload selector(static "storeCachedResponse:forRequest:") = Void, NSCachedURLResponse, NSURLRequest;
overload selector(static "stream:handleEvent:") = Void, NSStream, UInt;
overload selector(static "streamError") = NSError;
overload selector(static "streamStatus") = UInt;
overload selector(static "string") = Id;
overload selector(static "stringArrayForKey:") = NSArray, NSString;
overload selector(static "stringByAbbreviatingWithTildeInPath") = NSString;
overload selector(static "stringByAddingPercentEscapesUsingEncoding:") = NSString, UInt;
overload varargSelector(static "stringByAppendingFormat:") = NSString, NSString;
overload selector(static "stringByAppendingPathComponent:") = NSString, NSString;
overload selector(static "stringByAppendingPathExtension:") = NSString, NSString;
overload selector(static "stringByAppendingString:") = NSString, NSString;
overload selector(static "stringByDeletingLastPathComponent") = NSString;
overload selector(static "stringByDeletingPathExtension") = NSString;
overload selector(static "stringByExpandingTildeInPath") = NSString;
overload selector(static "stringByFoldingWithOptions:locale:") = NSString, UInt, NSLocale;
overload selector(static "stringByPaddingToLength:withString:startingAtIndex:") = NSString, UInt, NSString, UInt;
overload selector(static "stringByReplacingCharactersInRange:withString:") = NSString, NSRange, NSString;
overload selector(static "stringByReplacingMatchesInString:options:range:withTemplate:") = NSString, NSString, UInt, NSRange, NSString;
overload selector(static "stringByReplacingOccurrencesOfString:withString:") = NSString, NSString, NSString;
overload selector(static "stringByReplacingOccurrencesOfString:withString:options:range:") = NSString, NSString, NSString, UInt, NSRange;
overload selector(static "stringByReplacingPercentEscapesUsingEncoding:") = NSString, UInt;
overload selector(static "stringByResolvingSymlinksInPath") = NSString;
overload selector(static "stringByStandardizingPath") = NSString;
overload selector(static "stringByTrimmingCharactersInSet:") = NSString, NSCharacterSet;
overload selector(static "stringForKey:") = NSString, NSString;
overload selector(static "stringForObjectValue:") = NSString, Id;
overload selector(static "stringFromDate:") = NSString, NSDate;
overload selector(static "stringFromNumber:") = NSString, NSNumber;
overload selector(static "stringValue") = NSString;
overload selector(static "stringWithCString:") = Id, Pointer[CChar];
overload selector(static "stringWithCString:encoding:") = Id, Pointer[CChar], UInt;
overload selector(static "stringWithCString:length:") = Id, Pointer[CChar], UInt;
overload selector(static "stringWithCapacity:") = Id, UInt;
overload selector(static "stringWithCharacters:length:") = Id, Pointer[UShort], UInt;
overload selector(static "stringWithContentsOfFile:") = Id, NSString;
overload selector(static "stringWithContentsOfFile:encoding:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "stringWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[UInt], Pointer[NSError];
overload selector(static "stringWithContentsOfURL:") = Id, NSURL;
overload selector(static "stringWithContentsOfURL:encoding:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "stringWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[UInt], Pointer[NSError];
overload selector(static "stringWithFileSystemRepresentation:length:") = NSString, Pointer[CChar], UInt;
overload varargSelector(static "stringWithFormat:") = Id, NSString;
overload selector(static "stringWithString:") = Id, NSString;
overload selector(static "stringWithUTF8String:") = Id, Pointer[CChar];
overload selector(static "stringsByAppendingPaths:") = NSArray, NSArray;
overload selector(static "strokeColor") = CGColorRef;
overload selector(static "style") = NSDictionary;
overload selector(static "subarrayWithRange:") = NSArray, NSRange;
overload selector(static "subdataWithRange:") = NSData, NSRange;
overload selector(static "sublayerTransform") = CATransform3D;
overload selector(static "sublayers") = NSArray;
overload selector(static "subpathsAtPath:") = NSArray, NSString;
overload selector(static "subpathsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
overload selector(static "subpredicates") = NSArray;
overload selector(static "substringFromIndex:") = NSString, UInt;
overload selector(static "substringToIndex:") = NSString, UInt;
overload selector(static "substringWithRange:") = NSString, NSRange;
overload selector(static "subtype") = NSString;
overload selector(static "suggestedFilename") = NSString;
overload selector(static "superclass") = Id;
overload selector(static "superlayer") = CALayer;
overload selector(static "symbolCharacterSet") = Id;
overload selector(static "symbolicLinkDestination") = NSString;
overload selector(static "symbolicLinkDestinationURL") = NSURL;
overload selector(static "synchronize") = Bool;
overload selector(static "synchronizeFile") = Void;
overload selector(static "systemID") = NSString;
overload selector(static "systemLocale") = Id;
overload selector(static "systemTimeZone") = NSTimeZone;
overload selector(static "systemUptime") = Double;
overload selector(static "systemVersion") = UInt;
overload selector(static "target") = Id;
overload selector(static "tensionValues") = NSArray;
overload selector(static "textAttributesForNegativeInfinity") = NSDictionary;
overload selector(static "textAttributesForNegativeValues") = NSDictionary;
overload selector(static "textAttributesForNil") = NSDictionary;
overload selector(static "textAttributesForNotANumber") = NSDictionary;
overload selector(static "textAttributesForPositiveInfinity") = NSDictionary;
overload selector(static "textAttributesForPositiveValues") = NSDictionary;
overload selector(static "textAttributesForZero") = NSDictionary;
overload selector(static "textEncodingName") = NSString;
overload selector(static "threadDictionary") = NSMutableDictionary;
overload selector(static "threadPriority") = Double;
overload selector(static "tileSize") = CGSize;
overload selector(static "timeInterval") = Double;
overload selector(static "timeIntervalSince1970") = Double;
overload selector(static "timeIntervalSinceDate:") = Double, NSDate;
overload selector(static "timeIntervalSinceNow") = Double;
overload selector(static "timeIntervalSinceReferenceDate") = Double;
overload selector(static "timeOffset") = Double;
overload selector(static "timeStyle") = UInt;
overload selector(static "timeZone") = NSTimeZone;
overload selector(static "timeZoneDataVersion") = NSString;
overload selector(static "timeZoneForSecondsFromGMT:") = Id, Int;
overload selector(static "timeZoneWithAbbreviation:") = Id, NSString;
overload selector(static "timeZoneWithName:") = Id, NSString;
overload selector(static "timeZoneWithName:data:") = Id, NSString, NSData;
overload selector(static "timeoutInterval") = Double;
overload selector(static "timerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
overload selector(static "timerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
overload selector(static "timestamp") = Double;
overload selector(static "timingFunction") = CAMediaTimingFunction;
overload selector(static "timingFunctions") = NSArray;
overload selector(static "toValue") = Id;
overload selector(static "totalCostLimit") = UInt;
overload selector(static "transform") = CATransform3D;
overload selector(static "transformedValue:") = Id, Id;
overload selector(static "transformedValueClass") = Id;
overload selector(static "transitInformationCheckingResultWithRange:components:") = NSTextCheckingResult, NSRange, NSDictionary;
overload selector(static "truncateFileAtOffset:") = Void, UInt64;
overload selector(static "truncationMode") = NSString;
overload selector(static "tryLock") = Bool;
overload selector(static "tryLockWhenCondition:") = Bool, Int;
overload selector(static "twoDigitStartDate") = NSDate;
overload selector(static "type") = NSString;
overload selector(static "unarchiveObjectWithData:") = Id, NSData;
overload selector(static "unarchiveObjectWithFile:") = Id, NSString;
overload selector(static "unarchiver:cannotDecodeObjectOfClassName:originalClasses:") = Id, NSKeyedUnarchiver, NSString, NSArray;
overload selector(static "unarchiver:didDecodeObject:") = Id, NSKeyedUnarchiver, Id;
overload selector(static "unarchiver:willReplaceObject:withObject:") = Void, NSKeyedUnarchiver, Id, Id;
overload selector(static "unarchiverDidFinish:") = Void, NSKeyedUnarchiver;
overload selector(static "unarchiverWillFinish:") = Void, NSKeyedUnarchiver;
overload selector(static "undo") = Void;
overload selector(static "undoActionName") = NSString;
overload selector(static "undoMenuItemTitle") = NSString;
overload selector(static "undoMenuTitleForUndoActionName:") = NSString, NSString;
overload selector(static "undoNestedGroup") = Void;
overload selector(static "unionSet:") = Void, NSSet;
overload selector(static "unload") = Bool;
overload selector(static "unlock") = Void;
overload selector(static "unlockWithCondition:") = Void, Int;
overload selector(static "unregisterClass:") = Void, Id;
overload selector(static "unscheduleFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector(static "unsignedCharValue") = CUChar;
overload selector(static "unsignedIntValue") = UInt;
overload selector(static "unsignedIntegerValue") = UInt;
overload selector(static "unsignedLongLongValue") = UInt64;
overload selector(static "unsignedLongValue") = CULong;
overload selector(static "unsignedShortValue") = UShort;
overload selector(static "updateFromPath:") = Bool, NSString;
overload selector(static "uppercaseLetterCharacterSet") = Id;
overload selector(static "uppercaseString") = NSString;
overload selector(static "useCredential:forAuthenticationChallenge:") = Void, NSURLCredential, NSURLAuthenticationChallenge;
overload selector(static "user") = NSString;
overload selector(static "userInfo") = Id;
overload selector(static "usesGroupingSeparator") = Bool;
overload selector(static "usesSignificantDigits") = Bool;
overload selector(static "validateValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector(static "validateValue:forKeyPath:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector(static "value") = NSString;
overload selector(static "value:withObjCType:") = NSValue, RawPointer, Pointer[CChar];
overload selector(static "valueForHTTPHeaderField:") = NSString, NSString;
overload selector(static "valueForKey:") = Id, NSString;
overload selector(static "valueForKeyPath:") = Id, NSString;
overload selector(static "valueForUndefinedKey:") = Id, NSString;
overload selector(static "valueFunction") = CAValueFunction;
overload selector(static "valueTransformerForName:") = NSValueTransformer, NSString;
overload selector(static "valueTransformerNames") = NSArray;
overload selector(static "valueWithBytes:objCType:") = NSValue, RawPointer, Pointer[CChar];
overload selector(static "valueWithCATransform3D:") = NSValue, CATransform3D;
overload selector(static "valueWithNonretainedObject:") = NSValue, Id;
overload selector(static "valueWithPointer:") = NSValue, RawPointer;
overload selector(static "valueWithRange:") = NSValue, NSRange;
overload selector(static "values") = NSArray;
overload selector(static "variable") = NSString;
overload selector(static "version") = Int;
overload selector(static "versionForClassName:") = Int, NSString;
overload selector(static "veryShortMonthSymbols") = NSArray;
overload selector(static "veryShortStandaloneMonthSymbols") = NSArray;
overload selector(static "veryShortStandaloneWeekdaySymbols") = NSArray;
overload selector(static "veryShortWeekdaySymbols") = NSArray;
overload selector(static "visibleRect") = CGRect;
overload selector(static "volatileDomainForName:") = NSDictionary, NSString;
overload selector(static "volatileDomainNames") = NSArray;
overload selector(static "wait") = Void;
overload selector(static "waitForDataInBackgroundAndNotify") = Void;
overload selector(static "waitForDataInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector(static "waitUntilAllOperationsAreFinished") = Void;
overload selector(static "waitUntilDate:") = Bool, NSDate;
overload selector(static "waitUntilFinished") = Void;
overload selector(static "week") = Int;
overload selector(static "weekday") = Int;
overload selector(static "weekdayOrdinal") = Int;
overload selector(static "weekdaySymbols") = NSArray;
overload selector(static "whitespaceAndNewlineCharacterSet") = Id;
overload selector(static "whitespaceCharacterSet") = Id;
overload selector(static "willChange:valuesAtIndexes:forKey:") = Void, UInt, NSIndexSet, NSString;
overload selector(static "willChangeValueForKey:") = Void, NSString;
overload selector(static "willChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, UInt, NSSet;
overload selector(static "windowsLocaleCodeFromLocaleIdentifier:") = UInt, NSString;
overload selector(static "write:maxLength:") = Int, Pointer[CUChar], UInt;
overload selector(static "writeBookmarkData:toURL:options:error:") = Bool, NSData, NSURL, UInt, Pointer[NSError];
overload selector(static "writeData:") = Void, NSData;
overload selector(static "writePropertyList:toStream:format:options:error:") = Int, Id, NSOutputStream, UInt, UInt, Pointer[NSError];
overload selector(static "writeToFile:atomically:") = Bool, NSString, Bool;
overload selector(static "writeToFile:atomically:encoding:error:") = Bool, NSString, Bool, UInt, Pointer[NSError];
overload selector(static "writeToFile:atomically:updateFilenames:") = Bool, NSString, Bool, Bool;
overload selector(static "writeToFile:options:error:") = Bool, NSString, UInt, Pointer[NSError];
overload selector(static "writeToURL:atomically:") = Bool, NSURL, Bool;
overload selector(static "writeToURL:atomically:encoding:error:") = Bool, NSURL, Bool, UInt, Pointer[NSError];
overload selector(static "writeToURL:options:error:") = Bool, NSURL, UInt, Pointer[NSError];
overload selector(static "writeToURL:options:originalContentsURL:error:") = Bool, NSURL, UInt, NSURL, Pointer[NSError];
overload selector(static "year") = Int;
overload selector(static "zPosition") = Float;
overload selector(static "zero") = NSDecimalNumber;
overload selector(static "zeroSymbol") = NSString;
overload selector(static "zone") = Pointer[NSZone];

record CAAnimation = externalClass(NSObject);
overload externalInstanceMethod(static CAAnimation, static "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(static CAAnimation, static "initWithCoder:") = Id, NSCoder;
overload externalInstanceMethod(static CAAnimation, static "copyWithZone:") = Id, Pointer[NSZone];
overload externalInstanceMethod(static CAAnimation, static "beginTime") = Double;
overload externalInstanceMethod(static CAAnimation, static "setBeginTime:") = Void, Double;
overload externalInstanceMethod(static CAAnimation, static "duration") = Double;
overload externalInstanceMethod(static CAAnimation, static "setDuration:") = Void, Double;
overload externalInstanceMethod(static CAAnimation, static "speed") = Float;
overload externalInstanceMethod(static CAAnimation, static "setSpeed:") = Void, Float;
overload externalInstanceMethod(static CAAnimation, static "timeOffset") = Double;
overload externalInstanceMethod(static CAAnimation, static "setTimeOffset:") = Void, Double;
overload externalInstanceMethod(static CAAnimation, static "repeatCount") = Float;
overload externalInstanceMethod(static CAAnimation, static "setRepeatCount:") = Void, Float;
overload externalInstanceMethod(static CAAnimation, static "repeatDuration") = Double;
overload externalInstanceMethod(static CAAnimation, static "setRepeatDuration:") = Void, Double;
overload externalInstanceMethod(static CAAnimation, static "autoreverses") = Bool;
overload externalInstanceMethod(static CAAnimation, static "setAutoreverses:") = Void, Bool;
overload externalInstanceMethod(static CAAnimation, static "fillMode") = NSString;
overload externalInstanceMethod(static CAAnimation, static "setFillMode:") = Void, NSString;
overload externalInstanceMethod(static CAAnimation, static "runActionForKey:object:arguments:") = Void, NSString, Id, NSDictionary;
overload externalClassMethod(static CAAnimation, static "animation") = Id;
overload externalClassMethod(static CAAnimation, static "defaultValueForKey:") = Id, NSString;
overload externalInstanceMethod(static CAAnimation, static "shouldArchiveValueForKey:") = Bool, NSString;
overload externalInstanceMethod(static CAAnimation, static "timingFunction") = CAMediaTimingFunction;
overload externalInstanceMethod(static CAAnimation, static "setTimingFunction:") = Void, CAMediaTimingFunction;
overload externalInstanceMethod(static CAAnimation, static "delegate") = Id;
overload externalInstanceMethod(static CAAnimation, static "setDelegate:") = Void, Id;
overload externalInstanceMethod(static CAAnimation, static "isRemovedOnCompletion") = Bool;
overload externalInstanceMethod(static CAAnimation, static "setRemovedOnCompletion:") = Void, Bool;

record CAAnimationGroup = externalClass(CAAnimation);
overload externalInstanceMethod(static CAAnimationGroup, static "animations") = NSArray;
overload externalInstanceMethod(static CAAnimationGroup, static "setAnimations:") = Void, NSArray;

record CABasicAnimation = externalClass(CAPropertyAnimation);
overload externalInstanceMethod(static CABasicAnimation, static "fromValue") = Id;
overload externalInstanceMethod(static CABasicAnimation, static "setFromValue:") = Void, Id;
overload externalInstanceMethod(static CABasicAnimation, static "toValue") = Id;
overload externalInstanceMethod(static CABasicAnimation, static "setToValue:") = Void, Id;
overload externalInstanceMethod(static CABasicAnimation, static "byValue") = Id;
overload externalInstanceMethod(static CABasicAnimation, static "setByValue:") = Void, Id;

record CADisplayLink = externalClass(NSObject);
overload externalClassMethod(static CADisplayLink, static "displayLinkWithTarget:selector:") = CADisplayLink, Id, SelectorHandle;
overload externalInstanceMethod(static CADisplayLink, static "addToRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload externalInstanceMethod(static CADisplayLink, static "removeFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload externalInstanceMethod(static CADisplayLink, static "invalidate") = Void;
overload externalInstanceMethod(static CADisplayLink, static "timestamp") = Double;
overload externalInstanceMethod(static CADisplayLink, static "duration") = Double;
overload externalInstanceMethod(static CADisplayLink, static "isPaused") = Bool;
overload externalInstanceMethod(static CADisplayLink, static "setPaused:") = Void, Bool;
overload externalInstanceMethod(static CADisplayLink, static "frameInterval") = Int;
overload externalInstanceMethod(static CADisplayLink, static "setFrameInterval:") = Void, Int;

record CAEAGLLayer = externalClass(CALayer);
overload externalInstanceMethod(static CAEAGLLayer, static "drawableProperties") = NSDictionary;
overload externalInstanceMethod(static CAEAGLLayer, static "setDrawableProperties:") = Void, NSDictionary;

record CAGradientLayer = externalClass(CALayer);
overload externalInstanceMethod(static CAGradientLayer, static "colors") = NSArray;
overload externalInstanceMethod(static CAGradientLayer, static "setColors:") = Void, NSArray;
overload externalInstanceMethod(static CAGradientLayer, static "locations") = NSArray;
overload externalInstanceMethod(static CAGradientLayer, static "setLocations:") = Void, NSArray;
overload externalInstanceMethod(static CAGradientLayer, static "startPoint") = CGPoint;
overload externalInstanceMethod(static CAGradientLayer, static "setStartPoint:") = Void, CGPoint;
overload externalInstanceMethod(static CAGradientLayer, static "endPoint") = CGPoint;
overload externalInstanceMethod(static CAGradientLayer, static "setEndPoint:") = Void, CGPoint;
overload externalInstanceMethod(static CAGradientLayer, static "type") = NSString;
overload externalInstanceMethod(static CAGradientLayer, static "setType:") = Void, NSString;

record CAKeyframeAnimation = externalClass(CAPropertyAnimation);
overload externalInstanceMethod(static CAKeyframeAnimation, static "values") = NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setValues:") = Void, NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "path") = CGPathRef;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setPath:") = Void, CGPathRef;
overload externalInstanceMethod(static CAKeyframeAnimation, static "keyTimes") = NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setKeyTimes:") = Void, NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "timingFunctions") = NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setTimingFunctions:") = Void, NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "calculationMode") = NSString;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setCalculationMode:") = Void, NSString;
overload externalInstanceMethod(static CAKeyframeAnimation, static "tensionValues") = NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setTensionValues:") = Void, NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "continuityValues") = NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setContinuityValues:") = Void, NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "biasValues") = NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setBiasValues:") = Void, NSArray;
overload externalInstanceMethod(static CAKeyframeAnimation, static "rotationMode") = NSString;
overload externalInstanceMethod(static CAKeyframeAnimation, static "setRotationMode:") = Void, NSString;

record CALayer = externalClass(NSObject);
overload externalInstanceMethod(static CALayer, static "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(static CALayer, static "initWithCoder:") = Id, NSCoder;
overload externalInstanceMethod(static CALayer, static "beginTime") = Double;
overload externalInstanceMethod(static CALayer, static "setBeginTime:") = Void, Double;
overload externalInstanceMethod(static CALayer, static "duration") = Double;
overload externalInstanceMethod(static CALayer, static "setDuration:") = Void, Double;
overload externalInstanceMethod(static CALayer, static "speed") = Float;
overload externalInstanceMethod(static CALayer, static "setSpeed:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "timeOffset") = Double;
overload externalInstanceMethod(static CALayer, static "setTimeOffset:") = Void, Double;
overload externalInstanceMethod(static CALayer, static "repeatCount") = Float;
overload externalInstanceMethod(static CALayer, static "setRepeatCount:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "repeatDuration") = Double;
overload externalInstanceMethod(static CALayer, static "setRepeatDuration:") = Void, Double;
overload externalInstanceMethod(static CALayer, static "autoreverses") = Bool;
overload externalInstanceMethod(static CALayer, static "setAutoreverses:") = Void, Bool;
overload externalInstanceMethod(static CALayer, static "fillMode") = NSString;
overload externalInstanceMethod(static CALayer, static "setFillMode:") = Void, NSString;
overload externalClassMethod(static CALayer, static "layer") = Id;
overload externalInstanceMethod(static CALayer, static "init") = Id;
overload externalInstanceMethod(static CALayer, static "initWithLayer:") = Id, Id;
overload externalInstanceMethod(static CALayer, static "presentationLayer") = Id;
overload externalInstanceMethod(static CALayer, static "modelLayer") = Id;
overload externalClassMethod(static CALayer, static "defaultValueForKey:") = Id, NSString;
overload externalClassMethod(static CALayer, static "needsDisplayForKey:") = Bool, NSString;
overload externalInstanceMethod(static CALayer, static "shouldArchiveValueForKey:") = Bool, NSString;
overload externalInstanceMethod(static CALayer, static "affineTransform") = CGAffineTransform;
overload externalInstanceMethod(static CALayer, static "setAffineTransform:") = Void, CGAffineTransform;
overload externalInstanceMethod(static CALayer, static "contentsAreFlipped") = Bool;
overload externalInstanceMethod(static CALayer, static "removeFromSuperlayer") = Void;
overload externalInstanceMethod(static CALayer, static "addSublayer:") = Void, CALayer;
overload externalInstanceMethod(static CALayer, static "insertSublayer:atIndex:") = Void, CALayer, UInt;
overload externalInstanceMethod(static CALayer, static "insertSublayer:below:") = Void, CALayer, CALayer;
overload externalInstanceMethod(static CALayer, static "insertSublayer:above:") = Void, CALayer, CALayer;
overload externalInstanceMethod(static CALayer, static "replaceSublayer:with:") = Void, CALayer, CALayer;
overload externalInstanceMethod(static CALayer, static "convertPoint:fromLayer:") = CGPoint, CGPoint, CALayer;
overload externalInstanceMethod(static CALayer, static "convertPoint:toLayer:") = CGPoint, CGPoint, CALayer;
overload externalInstanceMethod(static CALayer, static "convertRect:fromLayer:") = CGRect, CGRect, CALayer;
overload externalInstanceMethod(static CALayer, static "convertRect:toLayer:") = CGRect, CGRect, CALayer;
overload externalInstanceMethod(static CALayer, static "convertTime:fromLayer:") = Double, Double, CALayer;
overload externalInstanceMethod(static CALayer, static "convertTime:toLayer:") = Double, Double, CALayer;
overload externalInstanceMethod(static CALayer, static "hitTest:") = CALayer, CGPoint;
overload externalInstanceMethod(static CALayer, static "containsPoint:") = Bool, CGPoint;
overload externalInstanceMethod(static CALayer, static "display") = Void;
overload externalInstanceMethod(static CALayer, static "setNeedsDisplay") = Void;
overload externalInstanceMethod(static CALayer, static "setNeedsDisplayInRect:") = Void, CGRect;
overload externalInstanceMethod(static CALayer, static "needsDisplay") = Bool;
overload externalInstanceMethod(static CALayer, static "displayIfNeeded") = Void;
overload externalInstanceMethod(static CALayer, static "drawInContext:") = Void, CGContextRef;
overload externalInstanceMethod(static CALayer, static "renderInContext:") = Void, CGContextRef;
overload externalInstanceMethod(static CALayer, static "preferredFrameSize") = CGSize;
overload externalInstanceMethod(static CALayer, static "setNeedsLayout") = Void;
overload externalInstanceMethod(static CALayer, static "needsLayout") = Bool;
overload externalInstanceMethod(static CALayer, static "layoutIfNeeded") = Void;
overload externalInstanceMethod(static CALayer, static "layoutSublayers") = Void;
overload externalClassMethod(static CALayer, static "defaultActionForKey:") = Id, NSString;
overload externalInstanceMethod(static CALayer, static "actionForKey:") = Id, NSString;
overload externalInstanceMethod(static CALayer, static "addAnimation:forKey:") = Void, CAAnimation, NSString;
overload externalInstanceMethod(static CALayer, static "removeAllAnimations") = Void;
overload externalInstanceMethod(static CALayer, static "removeAnimationForKey:") = Void, NSString;
overload externalInstanceMethod(static CALayer, static "animationKeys") = NSArray;
overload externalInstanceMethod(static CALayer, static "animationForKey:") = CAAnimation, NSString;
overload externalInstanceMethod(static CALayer, static "bounds") = CGRect;
overload externalInstanceMethod(static CALayer, static "setBounds:") = Void, CGRect;
overload externalInstanceMethod(static CALayer, static "position") = CGPoint;
overload externalInstanceMethod(static CALayer, static "setPosition:") = Void, CGPoint;
overload externalInstanceMethod(static CALayer, static "zPosition") = Float;
overload externalInstanceMethod(static CALayer, static "setZPosition:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "anchorPoint") = CGPoint;
overload externalInstanceMethod(static CALayer, static "setAnchorPoint:") = Void, CGPoint;
overload externalInstanceMethod(static CALayer, static "anchorPointZ") = Float;
overload externalInstanceMethod(static CALayer, static "setAnchorPointZ:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "transform") = CATransform3D;
overload externalInstanceMethod(static CALayer, static "setTransform:") = Void, CATransform3D;
overload externalInstanceMethod(static CALayer, static "frame") = CGRect;
overload externalInstanceMethod(static CALayer, static "setFrame:") = Void, CGRect;
overload externalInstanceMethod(static CALayer, static "isHidden") = Bool;
overload externalInstanceMethod(static CALayer, static "setHidden:") = Void, Bool;
overload externalInstanceMethod(static CALayer, static "isDoubleSided") = Bool;
overload externalInstanceMethod(static CALayer, static "setDoubleSided:") = Void, Bool;
overload externalInstanceMethod(static CALayer, static "isGeometryFlipped") = Bool;
overload externalInstanceMethod(static CALayer, static "setGeometryFlipped:") = Void, Bool;
overload externalInstanceMethod(static CALayer, static "superlayer") = CALayer;
overload externalInstanceMethod(static CALayer, static "sublayers") = NSArray;
overload externalInstanceMethod(static CALayer, static "setSublayers:") = Void, NSArray;
overload externalInstanceMethod(static CALayer, static "sublayerTransform") = CATransform3D;
overload externalInstanceMethod(static CALayer, static "setSublayerTransform:") = Void, CATransform3D;
overload externalInstanceMethod(static CALayer, static "mask") = CALayer;
overload externalInstanceMethod(static CALayer, static "setMask:") = Void, CALayer;
overload externalInstanceMethod(static CALayer, static "masksToBounds") = Bool;
overload externalInstanceMethod(static CALayer, static "setMasksToBounds:") = Void, Bool;
overload externalInstanceMethod(static CALayer, static "contents") = Id;
overload externalInstanceMethod(static CALayer, static "setContents:") = Void, Id;
overload externalInstanceMethod(static CALayer, static "contentsRect") = CGRect;
overload externalInstanceMethod(static CALayer, static "setContentsRect:") = Void, CGRect;
overload externalInstanceMethod(static CALayer, static "contentsGravity") = NSString;
overload externalInstanceMethod(static CALayer, static "setContentsGravity:") = Void, NSString;
overload externalInstanceMethod(static CALayer, static "contentsScale") = Float;
overload externalInstanceMethod(static CALayer, static "setContentsScale:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "contentsCenter") = CGRect;
overload externalInstanceMethod(static CALayer, static "setContentsCenter:") = Void, CGRect;
overload externalInstanceMethod(static CALayer, static "minificationFilter") = NSString;
overload externalInstanceMethod(static CALayer, static "setMinificationFilter:") = Void, NSString;
overload externalInstanceMethod(static CALayer, static "magnificationFilter") = NSString;
overload externalInstanceMethod(static CALayer, static "setMagnificationFilter:") = Void, NSString;
overload externalInstanceMethod(static CALayer, static "minificationFilterBias") = Float;
overload externalInstanceMethod(static CALayer, static "setMinificationFilterBias:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "isOpaque") = Bool;
overload externalInstanceMethod(static CALayer, static "setOpaque:") = Void, Bool;
overload externalInstanceMethod(static CALayer, static "needsDisplayOnBoundsChange") = Bool;
overload externalInstanceMethod(static CALayer, static "setNeedsDisplayOnBoundsChange:") = Void, Bool;
overload externalInstanceMethod(static CALayer, static "edgeAntialiasingMask") = UInt;
overload externalInstanceMethod(static CALayer, static "setEdgeAntialiasingMask:") = Void, UInt;
overload externalInstanceMethod(static CALayer, static "backgroundColor") = CGColorRef;
overload externalInstanceMethod(static CALayer, static "setBackgroundColor:") = Void, CGColorRef;
overload externalInstanceMethod(static CALayer, static "cornerRadius") = Float;
overload externalInstanceMethod(static CALayer, static "setCornerRadius:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "borderWidth") = Float;
overload externalInstanceMethod(static CALayer, static "setBorderWidth:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "borderColor") = CGColorRef;
overload externalInstanceMethod(static CALayer, static "setBorderColor:") = Void, CGColorRef;
overload externalInstanceMethod(static CALayer, static "opacity") = Float;
overload externalInstanceMethod(static CALayer, static "setOpacity:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "compositingFilter") = Id;
overload externalInstanceMethod(static CALayer, static "setCompositingFilter:") = Void, Id;
overload externalInstanceMethod(static CALayer, static "filters") = NSArray;
overload externalInstanceMethod(static CALayer, static "setFilters:") = Void, NSArray;
overload externalInstanceMethod(static CALayer, static "backgroundFilters") = NSArray;
overload externalInstanceMethod(static CALayer, static "setBackgroundFilters:") = Void, NSArray;
overload externalInstanceMethod(static CALayer, static "shouldRasterize") = Bool;
overload externalInstanceMethod(static CALayer, static "setShouldRasterize:") = Void, Bool;
overload externalInstanceMethod(static CALayer, static "rasterizationScale") = Float;
overload externalInstanceMethod(static CALayer, static "setRasterizationScale:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "shadowColor") = CGColorRef;
overload externalInstanceMethod(static CALayer, static "setShadowColor:") = Void, CGColorRef;
overload externalInstanceMethod(static CALayer, static "shadowOpacity") = Float;
overload externalInstanceMethod(static CALayer, static "setShadowOpacity:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "shadowOffset") = CGSize;
overload externalInstanceMethod(static CALayer, static "setShadowOffset:") = Void, CGSize;
overload externalInstanceMethod(static CALayer, static "shadowRadius") = Float;
overload externalInstanceMethod(static CALayer, static "setShadowRadius:") = Void, Float;
overload externalInstanceMethod(static CALayer, static "shadowPath") = CGPathRef;
overload externalInstanceMethod(static CALayer, static "setShadowPath:") = Void, CGPathRef;
overload externalInstanceMethod(static CALayer, static "actions") = NSDictionary;
overload externalInstanceMethod(static CALayer, static "setActions:") = Void, NSDictionary;
overload externalInstanceMethod(static CALayer, static "name") = NSString;
overload externalInstanceMethod(static CALayer, static "setName:") = Void, NSString;
overload externalInstanceMethod(static CALayer, static "delegate") = Id;
overload externalInstanceMethod(static CALayer, static "setDelegate:") = Void, Id;
overload externalInstanceMethod(static CALayer, static "style") = NSDictionary;
overload externalInstanceMethod(static CALayer, static "setStyle:") = Void, NSDictionary;
overload externalInstanceMethod(static CALayer, static "scrollPoint:") = Void, CGPoint;
overload externalInstanceMethod(static CALayer, static "scrollRectToVisible:") = Void, CGRect;
overload externalInstanceMethod(static CALayer, static "visibleRect") = CGRect;

record CAMediaTimingFunction = externalClass(NSObject);
overload externalInstanceMethod(static CAMediaTimingFunction, static "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(static CAMediaTimingFunction, static "initWithCoder:") = Id, NSCoder;
overload externalClassMethod(static CAMediaTimingFunction, static "functionWithName:") = Id, NSString;
overload externalClassMethod(static CAMediaTimingFunction, static "functionWithControlPoints::::") = Id, Float, Float, Float, Float;
overload externalInstanceMethod(static CAMediaTimingFunction, static "initWithControlPoints::::") = Id, Float, Float, Float, Float;
overload externalInstanceMethod(static CAMediaTimingFunction, static "getControlPointAtIndex:values:") = Void, UInt, Pointer[Float];

record CAPropertyAnimation = externalClass(CAAnimation);
overload externalClassMethod(static CAPropertyAnimation, static "animationWithKeyPath:") = Id, NSString;
overload externalInstanceMethod(static CAPropertyAnimation, static "keyPath") = NSString;
overload externalInstanceMethod(static CAPropertyAnimation, static "setKeyPath:") = Void, NSString;
overload externalInstanceMethod(static CAPropertyAnimation, static "isAdditive") = Bool;
overload externalInstanceMethod(static CAPropertyAnimation, static "setAdditive:") = Void, Bool;
overload externalInstanceMethod(static CAPropertyAnimation, static "isCumulative") = Bool;
overload externalInstanceMethod(static CAPropertyAnimation, static "setCumulative:") = Void, Bool;
overload externalInstanceMethod(static CAPropertyAnimation, static "valueFunction") = CAValueFunction;
overload externalInstanceMethod(static CAPropertyAnimation, static "setValueFunction:") = Void, CAValueFunction;

record CAReplicatorLayer = externalClass(CALayer);
overload externalInstanceMethod(static CAReplicatorLayer, static "instanceCount") = Int;
overload externalInstanceMethod(static CAReplicatorLayer, static "setInstanceCount:") = Void, Int;
overload externalInstanceMethod(static CAReplicatorLayer, static "preservesDepth") = Bool;
overload externalInstanceMethod(static CAReplicatorLayer, static "setPreservesDepth:") = Void, Bool;
overload externalInstanceMethod(static CAReplicatorLayer, static "instanceDelay") = Double;
overload externalInstanceMethod(static CAReplicatorLayer, static "setInstanceDelay:") = Void, Double;
overload externalInstanceMethod(static CAReplicatorLayer, static "instanceTransform") = CATransform3D;
overload externalInstanceMethod(static CAReplicatorLayer, static "setInstanceTransform:") = Void, CATransform3D;
overload externalInstanceMethod(static CAReplicatorLayer, static "instanceColor") = CGColorRef;
overload externalInstanceMethod(static CAReplicatorLayer, static "setInstanceColor:") = Void, CGColorRef;
overload externalInstanceMethod(static CAReplicatorLayer, static "instanceRedOffset") = Float;
overload externalInstanceMethod(static CAReplicatorLayer, static "setInstanceRedOffset:") = Void, Float;
overload externalInstanceMethod(static CAReplicatorLayer, static "instanceGreenOffset") = Float;
overload externalInstanceMethod(static CAReplicatorLayer, static "setInstanceGreenOffset:") = Void, Float;
overload externalInstanceMethod(static CAReplicatorLayer, static "instanceBlueOffset") = Float;
overload externalInstanceMethod(static CAReplicatorLayer, static "setInstanceBlueOffset:") = Void, Float;
overload externalInstanceMethod(static CAReplicatorLayer, static "instanceAlphaOffset") = Float;
overload externalInstanceMethod(static CAReplicatorLayer, static "setInstanceAlphaOffset:") = Void, Float;

record CAScrollLayer = externalClass(CALayer);
overload externalInstanceMethod(static CAScrollLayer, static "scrollToPoint:") = Void, CGPoint;
overload externalInstanceMethod(static CAScrollLayer, static "scrollToRect:") = Void, CGRect;
overload externalInstanceMethod(static CAScrollLayer, static "scrollMode") = NSString;
overload externalInstanceMethod(static CAScrollLayer, static "setScrollMode:") = Void, NSString;

record CAShapeLayer = externalClass(CALayer);
overload externalInstanceMethod(static CAShapeLayer, static "path") = CGPathRef;
overload externalInstanceMethod(static CAShapeLayer, static "setPath:") = Void, CGPathRef;
overload externalInstanceMethod(static CAShapeLayer, static "fillColor") = CGColorRef;
overload externalInstanceMethod(static CAShapeLayer, static "setFillColor:") = Void, CGColorRef;
overload externalInstanceMethod(static CAShapeLayer, static "fillRule") = NSString;
overload externalInstanceMethod(static CAShapeLayer, static "setFillRule:") = Void, NSString;
overload externalInstanceMethod(static CAShapeLayer, static "strokeColor") = CGColorRef;
overload externalInstanceMethod(static CAShapeLayer, static "setStrokeColor:") = Void, CGColorRef;
overload externalInstanceMethod(static CAShapeLayer, static "lineWidth") = Float;
overload externalInstanceMethod(static CAShapeLayer, static "setLineWidth:") = Void, Float;
overload externalInstanceMethod(static CAShapeLayer, static "miterLimit") = Float;
overload externalInstanceMethod(static CAShapeLayer, static "setMiterLimit:") = Void, Float;
overload externalInstanceMethod(static CAShapeLayer, static "lineCap") = NSString;
overload externalInstanceMethod(static CAShapeLayer, static "setLineCap:") = Void, NSString;
overload externalInstanceMethod(static CAShapeLayer, static "lineJoin") = NSString;
overload externalInstanceMethod(static CAShapeLayer, static "setLineJoin:") = Void, NSString;
overload externalInstanceMethod(static CAShapeLayer, static "lineDashPhase") = Float;
overload externalInstanceMethod(static CAShapeLayer, static "setLineDashPhase:") = Void, Float;
overload externalInstanceMethod(static CAShapeLayer, static "lineDashPattern") = NSArray;
overload externalInstanceMethod(static CAShapeLayer, static "setLineDashPattern:") = Void, NSArray;

record CATextLayer = externalClass(CALayer);
overload externalInstanceMethod(static CATextLayer, static "string") = Id;
overload externalInstanceMethod(static CATextLayer, static "setString:") = Void, Id;
overload externalInstanceMethod(static CATextLayer, static "font") = CFTypeRef;
overload externalInstanceMethod(static CATextLayer, static "setFont:") = Void, CFTypeRef;
overload externalInstanceMethod(static CATextLayer, static "fontSize") = Float;
overload externalInstanceMethod(static CATextLayer, static "setFontSize:") = Void, Float;
overload externalInstanceMethod(static CATextLayer, static "foregroundColor") = CGColorRef;
overload externalInstanceMethod(static CATextLayer, static "setForegroundColor:") = Void, CGColorRef;
overload externalInstanceMethod(static CATextLayer, static "isWrapped") = Bool;
overload externalInstanceMethod(static CATextLayer, static "setWrapped:") = Void, Bool;
overload externalInstanceMethod(static CATextLayer, static "truncationMode") = NSString;
overload externalInstanceMethod(static CATextLayer, static "setTruncationMode:") = Void, NSString;
overload externalInstanceMethod(static CATextLayer, static "alignmentMode") = NSString;
overload externalInstanceMethod(static CATextLayer, static "setAlignmentMode:") = Void, NSString;

record CATiledLayer = externalClass(CALayer);
overload externalClassMethod(static CATiledLayer, static "fadeDuration") = Double;
overload externalInstanceMethod(static CATiledLayer, static "levelsOfDetail") = UInt;
overload externalInstanceMethod(static CATiledLayer, static "setLevelsOfDetail:") = Void, UInt;
overload externalInstanceMethod(static CATiledLayer, static "levelsOfDetailBias") = UInt;
overload externalInstanceMethod(static CATiledLayer, static "setLevelsOfDetailBias:") = Void, UInt;
overload externalInstanceMethod(static CATiledLayer, static "tileSize") = CGSize;
overload externalInstanceMethod(static CATiledLayer, static "setTileSize:") = Void, CGSize;

record CATransaction = externalClass(NSObject);
overload externalClassMethod(static CATransaction, static "begin") = Void;
overload externalClassMethod(static CATransaction, static "commit") = Void;
overload externalClassMethod(static CATransaction, static "flush") = Void;
overload externalClassMethod(static CATransaction, static "lock") = Void;
overload externalClassMethod(static CATransaction, static "unlock") = Void;
overload externalClassMethod(static CATransaction, static "animationDuration") = Double;
overload externalClassMethod(static CATransaction, static "setAnimationDuration:") = Void, Double;
overload externalClassMethod(static CATransaction, static "animationTimingFunction") = CAMediaTimingFunction;
overload externalClassMethod(static CATransaction, static "setAnimationTimingFunction:") = Void, CAMediaTimingFunction;
overload externalClassMethod(static CATransaction, static "disableActions") = Bool;
overload externalClassMethod(static CATransaction, static "setDisableActions:") = Void, Bool;
overload externalClassMethod(static CATransaction, static "completionBlock") = UnknownType;
overload externalClassMethod(static CATransaction, static "setCompletionBlock:") = Void, UnknownType;
overload externalClassMethod(static CATransaction, static "valueForKey:") = Id, NSString;
overload externalClassMethod(static CATransaction, static "setValue:forKey:") = Void, Id, NSString;

record CATransformLayer = externalClass(CALayer);

record CATransition = externalClass(CAAnimation);
overload externalInstanceMethod(static CATransition, static "type") = NSString;
overload externalInstanceMethod(static CATransition, static "setType:") = Void, NSString;
overload externalInstanceMethod(static CATransition, static "subtype") = NSString;
overload externalInstanceMethod(static CATransition, static "setSubtype:") = Void, NSString;
overload externalInstanceMethod(static CATransition, static "startProgress") = Float;
overload externalInstanceMethod(static CATransition, static "setStartProgress:") = Void, Float;
overload externalInstanceMethod(static CATransition, static "endProgress") = Float;
overload externalInstanceMethod(static CATransition, static "setEndProgress:") = Void, Float;
overload externalInstanceMethod(static CATransition, static "filter") = Id;
overload externalInstanceMethod(static CATransition, static "setFilter:") = Void, Id;

record CAValueFunction = externalClass(NSObject);
overload externalInstanceMethod(static CAValueFunction, static "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(static CAValueFunction, static "initWithCoder:") = Id, NSCoder;
overload externalClassMethod(static CAValueFunction, static "functionWithName:") = Id, NSString;
overload externalInstanceMethod(static CAValueFunction, static "name") = NSString;

overload externalInstanceMethod(static NSObject, static "displayLayer:") = Void, CALayer;
overload externalInstanceMethod(static NSObject, static "drawLayer:inContext:") = Void, CALayer, CGContextRef;
overload externalInstanceMethod(static NSObject, static "layoutSublayersOfLayer:") = Void, CALayer;
overload externalInstanceMethod(static NSObject, static "actionForLayer:forKey:") = Id, CALayer, NSString;
overload externalInstanceMethod(static NSObject, static "animationDidStart:") = Void, CAAnimation;
overload externalInstanceMethod(static NSObject, static "animationDidStop:finished:") = Void, CAAnimation, Bool;

overload externalClassMethod(static NSValue, static "valueWithCATransform3D:") = NSValue, CATransform3D;
overload externalInstanceMethod(static NSValue, static "CATransform3DValue") = CATransform3D;


external CACurrentMediaTime() : Double;

record Struct_CATransform3D (
    m11 : Float,
    m12 : Float,
    m13 : Float,
    m14 : Float,
    m21 : Float,
    m22 : Float,
    m23 : Float,
    m24 : Float,
    m31 : Float,
    m32 : Float,
    m33 : Float,
    m34 : Float,
    m41 : Float,
    m42 : Float,
    m43 : Float,
    m44 : Float,
);

alias CATransform3D = Struct_CATransform3D;

external CATransform3DIdentity : CATransform3D;

external CATransform3DIsIdentity(
    t : CATransform3D) : Bool;

external CATransform3DEqualToTransform(
    a : CATransform3D,
    b : CATransform3D) : Bool;

external CATransform3DMakeTranslation(
    tx : Float,
    ty : Float,
    tz : Float) : CATransform3D;

external CATransform3DMakeScale(
    sx : Float,
    sy : Float,
    sz : Float) : CATransform3D;

external CATransform3DMakeRotation(
    angle : Float,
    x : Float,
    y : Float,
    z : Float) : CATransform3D;

external CATransform3DTranslate(
    t : CATransform3D,
    tx : Float,
    ty : Float,
    tz : Float) : CATransform3D;

external CATransform3DScale(
    t : CATransform3D,
    sx : Float,
    sy : Float,
    sz : Float) : CATransform3D;

external CATransform3DRotate(
    t : CATransform3D,
    angle : Float,
    x : Float,
    y : Float,
    z : Float) : CATransform3D;

external CATransform3DConcat(
    a : CATransform3D,
    b : CATransform3D) : CATransform3D;

external CATransform3DInvert(
    t : CATransform3D) : CATransform3D;

external CATransform3DMakeAffineTransform(
    m : CGAffineTransform) : CATransform3D;

external CATransform3DIsAffine(
    t : CATransform3D) : Bool;

external CATransform3DGetAffineTransform(
    t : CATransform3D) : CGAffineTransform;

external kCAFillModeForwards : NSString;

external kCAFillModeBackwards : NSString;

external kCAFillModeBoth : NSString;

external kCAFillModeRemoved : NSString;

external kCAFillModeFrozen : NSString;

alias kCALayerLeftEdge = 1;
alias kCALayerRightEdge = 2;
alias kCALayerBottomEdge = 4;
alias kCALayerTopEdge = 8;

external kCAGravityCenter : NSString;

external kCAGravityTop : NSString;

external kCAGravityBottom : NSString;

external kCAGravityLeft : NSString;

external kCAGravityRight : NSString;

external kCAGravityTopLeft : NSString;

external kCAGravityTopRight : NSString;

external kCAGravityBottomLeft : NSString;

external kCAGravityBottomRight : NSString;

external kCAGravityResize : NSString;

external kCAGravityResizeAspect : NSString;

external kCAGravityResizeAspectFill : NSString;

external kCAFilterNearest : NSString;

external kCAFilterLinear : NSString;

external kCAFilterTrilinear : NSString;

external kCAOnOrderIn : NSString;

external kCAOnOrderOut : NSString;

external kCATransition : NSString;

external kCAAnimationLinear : NSString;

external kCAAnimationDiscrete : NSString;

external kCAAnimationPaced : NSString;

external kCAAnimationCubic : NSString;

external kCAAnimationCubicPaced : NSString;

external kCAAnimationRotateAuto : NSString;

external kCAAnimationRotateAutoReverse : NSString;

external kCATransitionFade : NSString;

external kCATransitionMoveIn : NSString;

external kCATransitionPush : NSString;

external kCATransitionReveal : NSString;

external kCATransitionFromRight : NSString;

external kCATransitionFromLeft : NSString;

external kCATransitionFromTop : NSString;

external kCATransitionFromBottom : NSString;

external kCAGradientLayerAxial : NSString;

external kCAMediaTimingFunctionLinear : NSString;

external kCAMediaTimingFunctionEaseIn : NSString;

external kCAMediaTimingFunctionEaseOut : NSString;

external kCAMediaTimingFunctionEaseInEaseOut : NSString;

external kCAMediaTimingFunctionDefault : NSString;

external kCAScrollNone : NSString;

external kCAScrollVertically : NSString;

external kCAScrollHorizontally : NSString;

external kCAScrollBoth : NSString;

external kCAFillRuleNonZero : NSString;

external kCAFillRuleEvenOdd : NSString;

external kCALineJoinMiter : NSString;

external kCALineJoinRound : NSString;

external kCALineJoinBevel : NSString;

external kCALineCapButt : NSString;

external kCALineCapRound : NSString;

external kCALineCapSquare : NSString;

external kCATruncationNone : NSString;

external kCATruncationStart : NSString;

external kCATruncationEnd : NSString;

external kCATruncationMiddle : NSString;

external kCAAlignmentNatural : NSString;

external kCAAlignmentLeft : NSString;

external kCAAlignmentRight : NSString;

external kCAAlignmentCenter : NSString;

external kCAAlignmentJustified : NSString;

external kCATransactionAnimationDuration : NSString;

external kCATransactionDisableActions : NSString;

external kCATransactionAnimationTimingFunction : NSString;

external kCATransactionCompletionBlock : NSString;

external kCAValueFunctionRotateX : NSString;

external kCAValueFunctionRotateY : NSString;

external kCAValueFunctionRotateZ : NSString;

external kCAValueFunctionScale : NSString;

external kCAValueFunctionScaleX : NSString;

external kCAValueFunctionScaleY : NSString;

external kCAValueFunctionScaleZ : NSString;

external kCAValueFunctionTranslate : NSString;

external kCAValueFunctionTranslateX : NSString;

external kCAValueFunctionTranslateY : NSString;

external kCAValueFunctionTranslateZ : NSString;
