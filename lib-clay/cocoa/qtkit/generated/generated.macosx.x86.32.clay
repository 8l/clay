// Automatically generated by clay-bindgen
// language: objective-c

import cocoa.objc.*;

import libc.*;
import cocoa.foundation.*;
import cocoa.appkit.*;
import cocoa.applicationservices.*;
import cocoa.quartzcore.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


overload selector(static "AMSymbol") = NSString;
overload selector(static "CATransform3DValue") = CATransform3D;
overload selector(static "CGColorSpace") = CGColorSpaceRef;
overload selector(static "CGEvent") = CGEventRef;
overload selector(static "CGImage") = CGImageRef;
overload selector(static "CGImageForProposedRect:context:hints:") = CGImageRef, Pointer[NSRect], NSGraphicsContext, NSDictionary;
overload selector(static "CGLContextObj") = RawPointer;
overload selector(static "CGLPBufferObj") = RawPointer;
overload selector(static "CGLPixelFormatObj") = RawPointer;
overload selector(static "CIContext") = CIContext;
overload selector(static "CIImage") = CIImage;
overload selector(static "DTD") = NSXMLDTD;
overload selector(static "DTDKind") = UInt;
overload selector(static "DTDNodeWithXMLString:") = Id, NSString;
overload selector(static "EPSOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
overload selector(static "EPSOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
overload selector(static "EPSOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
overload selector(static "EPSRepresentation") = NSData;
overload selector(static "HTTPBody") = NSData;
overload selector(static "HTTPBodyStream") = NSInputStream;
overload selector(static "HTTPMethod") = NSString;
overload selector(static "HTTPShouldHandleCookies") = Bool;
overload selector(static "IBeamCursor") = NSCursor;
overload selector(static "ICCProfileData") = NSData;
overload selector(static "ISOCountryCodes") = NSArray;
overload selector(static "ISOCurrencyCodes") = NSArray;
overload selector(static "ISOLanguageCodes") = NSArray;
overload selector(static "MIMEType") = NSString;
overload selector(static "PDFOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
overload selector(static "PDFOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
overload selector(static "PDFOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
overload selector(static "PDFRepresentation") = NSData;
overload selector(static "PICTRepresentation") = NSData;
overload selector(static "PMPageFormat") = RawPointer;
overload selector(static "PMPrintSession") = RawPointer;
overload selector(static "PMPrintSettings") = RawPointer;
overload selector(static "PMSymbol") = NSString;
overload selector(static "QTMovie") = RawPointer;
overload selector(static "QTTimeRangeValue") = QTTimeRange;
overload selector(static "QTTimeValue") = QTTime;
overload selector(static "RTFDFileWrapperFromRange:documentAttributes:") = NSFileWrapper, NSRange, NSDictionary;
overload selector(static "RTFDFromRange:") = NSData, NSRange;
overload selector(static "RTFDFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
overload selector(static "RTFFromRange:") = NSData, NSRange;
overload selector(static "RTFFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
overload selector(static "SMPTETimeValue") = SMPTETime;
overload selector(static "TIFFRepresentation") = NSData;
overload selector(static "TIFFRepresentationOfImageRepsInArray:") = NSData, NSArray;
overload selector(static "TIFFRepresentationOfImageRepsInArray:usingCompression:factor:") = NSData, NSArray, UInt, Float;
overload selector(static "TIFFRepresentationUsingCompression:factor:") = NSData, UInt, Float;
overload selector(static "TXTRecordData") = NSData;
overload selector(static "URI") = NSString;
overload selector(static "URIRepresentation") = NSURL;
overload selector(static "URL") = NSURL;
overload selector(static "URL:resourceDataDidBecomeAvailable:") = Void, NSURL, NSData;
overload selector(static "URL:resourceDidFailLoadingWithReason:") = Void, NSURL, NSString;
overload selector(static "URLAtIndex:effectiveRange:") = NSURL, UInt, NSRangePointer;
overload selector(static "URLByAppendingPathComponent:") = NSURL, NSString;
overload selector(static "URLByAppendingPathExtension:") = NSURL, NSString;
overload selector(static "URLByDeletingLastPathComponent") = NSURL;
overload selector(static "URLByDeletingPathExtension") = NSURL;
overload selector(static "URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, UInt, NSURL, Pointer[Bool], Pointer[NSError];
overload selector(static "URLByResolvingSymlinksInPath") = NSURL;
overload selector(static "URLByStandardizingPath") = NSURL;
overload selector(static "URLForApplicationToOpenURL:") = NSURL, NSURL;
overload selector(static "URLForApplicationWithBundleIdentifier:") = NSURL, NSString;
overload selector(static "URLForAuxiliaryExecutable:") = NSURL, NSString;
overload selector(static "URLForDirectory:inDomain:appropriateForURL:create:error:") = NSURL, UInt, UInt, NSURL, Bool, Pointer[NSError];
overload selector(static "URLForImageResource:") = NSURL, NSString;
overload selector(static "URLForKey:") = NSURL, NSString;
overload selector(static "URLForPersistentStore:") = NSURL, NSPersistentStore;
overload selector(static "URLForResource:withExtension:") = NSURL, NSString, NSString;
overload selector(static "URLForResource:withExtension:subdirectory:") = NSURL, NSString, NSString, NSString;
overload selector(static "URLForResource:withExtension:subdirectory:inBundleWithURL:") = NSURL, NSString, NSString, NSString, NSURL;
overload selector(static "URLForResource:withExtension:subdirectory:localization:") = NSURL, NSString, NSString, NSString, NSString;
overload selector(static "URLFromPasteboard:") = NSURL, NSPasteboard;
overload selector(static "URLHandle:resourceDataDidBecomeAvailable:") = Void, NSURLHandle, NSData;
overload selector(static "URLHandle:resourceDidFailLoadingWithReason:") = Void, NSURLHandle, NSString;
overload selector(static "URLHandleClassForURL:") = Id, NSURL;
overload selector(static "URLHandleResourceDidBeginLoading:") = Void, NSURLHandle;
overload selector(static "URLHandleResourceDidCancelLoading:") = Void, NSURLHandle;
overload selector(static "URLHandleResourceDidFinishLoading:") = Void, NSURLHandle;
overload selector(static "URLHandleUsingCache:") = NSURLHandle, Bool;
overload selector(static "URLProtocol:cachedResponseIsValid:") = Void, NSURLProtocol, NSCachedURLResponse;
overload selector(static "URLProtocol:didCancelAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
overload selector(static "URLProtocol:didFailWithError:") = Void, NSURLProtocol, NSError;
overload selector(static "URLProtocol:didLoadData:") = Void, NSURLProtocol, NSData;
overload selector(static "URLProtocol:didReceiveAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
overload selector(static "URLProtocol:didReceiveResponse:cacheStoragePolicy:") = Void, NSURLProtocol, NSURLResponse, UInt;
overload selector(static "URLProtocol:wasRedirectedToRequest:redirectResponse:") = Void, NSURLProtocol, NSURLRequest, NSURLResponse;
overload selector(static "URLProtocolDidFinishLoading:") = Void, NSURLProtocol;
overload selector(static "URLResourceDidCancelLoading:") = Void, NSURL;
overload selector(static "URLResourceDidFinishLoading:") = Void, NSURL;
overload selector(static "URLWithString:") = Id, NSString;
overload selector(static "URLWithString:relativeToURL:") = Id, NSString, NSURL;
overload selector(static "URLs") = NSArray;
overload selector(static "URLsForDirectory:inDomains:") = NSArray, UInt, UInt;
overload selector(static "URLsForResourcesWithExtension:subdirectory:") = NSArray, NSString, NSString;
overload selector(static "URLsForResourcesWithExtension:subdirectory:inBundleWithURL:") = NSArray, NSString, NSString, NSURL;
overload selector(static "URLsForResourcesWithExtension:subdirectory:localization:") = NSArray, NSString, NSString, NSString;
overload selector(static "URLsFromRunningOpenPanel") = NSArray;
overload selector(static "UTF8String") = Pointer[CChar];
overload selector(static "W") = Float;
overload selector(static "X") = Float;
overload selector(static "XMLData") = NSData;
overload selector(static "XMLDataWithOptions:") = NSData, UInt;
overload selector(static "XMLString") = NSString;
overload selector(static "XMLStringWithOptions:") = NSString, UInt;
overload selector(static "XPath") = NSString;
overload selector(static "Y") = Float;
overload selector(static "Z") = Float;
overload selector(static "abbreviation") = NSString;
overload selector(static "abbreviationDictionary") = NSDictionary;
overload selector(static "abbreviationForDate:") = NSString, NSDate;
overload selector(static "abortEditing") = Bool;
overload selector(static "abortModal") = Void;
overload selector(static "abortParsing") = Void;
overload selector(static "absolutePathForAppBundleWithIdentifier:") = NSString, NSString;
overload selector(static "absoluteString") = NSString;
overload selector(static "absoluteURL") = NSURL;
overload selector(static "absoluteX") = Int;
overload selector(static "absoluteY") = Int;
overload selector(static "absoluteZ") = Int;
overload selector(static "acceptConnectionInBackgroundAndNotify") = Void;
overload selector(static "acceptConnectionInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector(static "acceptInputForMode:beforeDate:") = Void, NSString, NSDate;
overload selector(static "acceptableDragTypes") = NSArray;
overload selector(static "acceptsArrowKeys") = Bool;
overload selector(static "acceptsBinary") = Bool;
overload selector(static "acceptsFirstMouse:") = Bool, NSEvent;
overload selector(static "acceptsFirstResponder") = Bool;
overload selector(static "acceptsGlyphInfo") = Bool;
overload selector(static "acceptsMouseMovedEvents") = Bool;
overload selector(static "acceptsTouchEvents") = Bool;
overload selector(static "accessInstanceVariablesDirectly") = Bool;
overload selector(static "accessibilityActionDescription:") = NSString, NSString;
overload selector(static "accessibilityActionNames") = NSArray;
overload selector(static "accessibilityArrayAttributeCount:") = UInt, NSString;
overload selector(static "accessibilityArrayAttributeValues:index:maxCount:") = NSArray, NSString, UInt, UInt;
overload selector(static "accessibilityAttributeNames") = NSArray;
overload selector(static "accessibilityAttributeValue:") = Id, NSString;
overload selector(static "accessibilityAttributeValue:forParameter:") = Id, NSString, Id;
overload selector(static "accessibilityDescription") = NSString;
overload selector(static "accessibilityFocusedUIElement") = Id;
overload selector(static "accessibilityHitTest:") = Id, NSPoint;
overload selector(static "accessibilityIndexOfChild:") = UInt, Id;
overload selector(static "accessibilityIsAttributeSettable:") = Bool, NSString;
overload selector(static "accessibilityIsIgnored") = Bool;
overload selector(static "accessibilityParameterizedAttributeNames") = NSArray;
overload selector(static "accessibilityPerformAction:") = Void, NSString;
overload selector(static "accessibilitySetOverrideValue:forAttribute:") = Bool, Id, NSString;
overload selector(static "accessibilitySetValue:forAttribute:") = Void, Id, NSString;
overload selector(static "accessoryControllers") = NSArray;
overload selector(static "accessoryView") = NSView;
overload selector(static "acquireFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[UInt]],CChar],[RawPointer]];
overload selector(static "action") = SelectorHandle;
overload selector(static "actionForControlCharacterAtIndex:") = UInt, UInt;
overload selector(static "actionForKey:") = Id, NSString;
overload selector(static "actionForLayer:forKey:") = Id, CALayer, NSString;
overload selector(static "actions") = NSDictionary;
overload selector(static "activate") = Void;
overload selector(static "activate:") = Void, Bool;
overload selector(static "activateContextHelpMode:") = Void, Id;
overload selector(static "activateFileViewerSelectingURLs:") = Void, NSArray;
overload selector(static "activateIgnoringOtherApps:") = Void, Bool;
overload selector(static "activateWithOptions:") = Bool, UInt;
overload selector(static "activationPolicy") = Int;
overload selector(static "activeApplication") = NSDictionary;
overload selector(static "activeConversationChanged:toNewConversation:") = Void, Id, Int;
overload selector(static "activeConversationWillChange:fromOldConversation:") = Void, Id, Int;
overload selector(static "activeProcessorCount") = UInt;
overload selector(static "add:") = Void, Id;
overload selector(static "addAccessoryController:") = Void, NSViewController;
overload selector(static "addAnimation:forKey:") = Void, CAAnimation, NSString;
overload selector(static "addAttribute:") = Void, NSXMLNode;
overload selector(static "addAttribute:value:range:") = Void, NSString, Id, NSRange;
overload selector(static "addAttributes:range:") = Void, NSDictionary, NSRange;
overload selector(static "addButtonWithTitle:") = NSButton, NSString;
overload selector(static "addCacheNodes:") = Void, NSSet;
overload selector(static "addChapters:withAttributes:error:") = Void, NSArray, NSDictionary, Pointer[NSError];
overload selector(static "addCharactersInRange:") = Void, NSRange;
overload selector(static "addCharactersInString:") = Void, NSString;
overload selector(static "addChild:") = Void, NSXMLNode;
overload selector(static "addChildWindow:ordered:") = Void, NSWindow, Int;
overload selector(static "addClient:") = Void, Id;
overload selector(static "addClip") = Void;
overload selector(static "addCollection:options:") = Bool, NSString, Int;
overload selector(static "addColumn") = Void;
overload selector(static "addColumnWithCells:") = Void, NSArray;
overload selector(static "addConnection:toRunLoop:forMode:") = Void, NSConnection, NSRunLoop, NSString;
overload selector(static "addConstraint:") = Void, CAConstraint;
overload selector(static "addCursorRect:cursor:") = Void, NSRect, NSCursor;
overload selector(static "addDependency:") = Void, NSOperation;
overload selector(static "addDocument:") = Void, NSDocument;
overload selector(static "addEntriesFromDictionary:") = Void, NSDictionary;
overload selector(static "addEntry:") = NSFormCell, NSString;
overload selector(static "addExecutionBlock:") = Void, UnknownType;
overload selector(static "addFileWithPath:") = NSString, NSString;
overload selector(static "addFileWrapper:") = NSString, NSFileWrapper;
overload selector(static "addFontDescriptors:toCollection:") = Void, NSArray, NSString;
overload selector(static "addFontTrait:") = Void, Id;
overload selector(static "addGlobalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
overload selector(static "addImage:forDuration:withAttributes:") = Void, NSImage, QTTime, NSDictionary;
overload selector(static "addIndex:") = Void, UInt;
overload selector(static "addIndexes:") = Void, NSIndexSet;
overload selector(static "addIndexesInRange:") = Void, NSRange;
overload selector(static "addInput:error:") = Bool, QTCaptureInput, Pointer[NSError];
overload selector(static "addItem:") = Void, NSMenuItem;
overload selector(static "addItemWithObjectValue:") = Void, Id;
overload selector(static "addItemWithTitle:") = Void, NSString;
overload selector(static "addItemWithTitle:action:keyEquivalent:") = NSMenuItem, NSString, SelectorHandle, NSString;
overload selector(static "addItemsWithObjectValues:") = Void, NSArray;
overload selector(static "addItemsWithTitles:") = Void, NSArray;
overload selector(static "addLayoutManager:") = Void, NSLayoutManager;
overload selector(static "addLocalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
overload selector(static "addMarker:") = Void, NSRulerMarker;
overload selector(static "addNamespace:") = Void, NSXMLNode;
overload selector(static "addObject:") = Void, Id;
overload selector(static "addObjects:") = Void, NSArray;
overload selector(static "addObjectsFromArray:") = Void, NSArray;
overload selector(static "addObserver:forKeyPath:options:context:") = Void, NSObject, NSString, UInt, RawPointer;
overload selector(static "addObserver:selector:name:object:") = Void, Id, SelectorHandle, NSString, Id;
overload selector(static "addObserver:selector:name:object:suspensionBehavior:") = Void, Id, SelectorHandle, NSString, NSString, UInt;
overload selector(static "addObserver:toObjectsAtIndexes:forKeyPath:options:context:") = Void, NSObject, NSIndexSet, NSString, UInt, RawPointer;
overload selector(static "addObserverForName:object:queue:usingBlock:") = Id, NSString, Id, NSOperationQueue, UnknownType;
overload selector(static "addOperation:") = Void, NSOperation;
overload selector(static "addOperationWithBlock:") = Void, UnknownType;
overload selector(static "addOperations:waitUntilFinished:") = Void, NSArray, Bool;
overload selector(static "addOutput:error:") = Bool, QTCaptureOutput, Pointer[NSError];
overload selector(static "addPersistentStoreWithType:configuration:URL:options:error:") = NSPersistentStore, NSString, NSString, NSURL, NSDictionary, Pointer[NSError];
overload selector(static "addPointer:") = Void, RawPointer;
overload selector(static "addPort:forMode:") = Void, NSPort, NSString;
overload selector(static "addProgressMark:") = Void, Float;
overload selector(static "addRegularFileWithContents:preferredFilename:") = NSString, NSData, NSString;
overload selector(static "addRepresentation:") = Void, NSImageRep;
overload selector(static "addRepresentations:") = Void, NSArray;
overload selector(static "addRequestMode:") = Void, NSString;
overload selector(static "addRow") = Void;
overload selector(static "addRow:") = Void, Id;
overload selector(static "addRowWithCells:") = Void, NSArray;
overload selector(static "addRunLoop:") = Void, NSRunLoop;
overload selector(static "addScaled:") = Void, Id;
overload selector(static "addSelectedObjects:") = Bool, NSArray;
overload selector(static "addSelectionIndexPaths:") = Bool, NSArray;
overload selector(static "addSelectionIndexes:") = Bool, NSIndexSet;
overload selector(static "addSpeechDictionary:") = Void, NSDictionary;
overload selector(static "addSublayer:") = Void, CALayer;
overload selector(static "addSubview:") = Void, NSView;
overload selector(static "addSubview:positioned:relativeTo:") = Void, NSView, Int, NSView;
overload selector(static "addSuiteNamed:") = Void, NSString;
overload selector(static "addSymbolicLinkWithDestination:preferredFilename:") = NSString, NSString, NSString;
overload selector(static "addTabStop:") = Void, NSTextTab;
overload selector(static "addTabViewItem:") = Void, NSTabViewItem;
overload selector(static "addTableColumn:") = Void, NSTableColumn;
overload selector(static "addTemporaryAttribute:value:forCharacterRange:") = Void, NSString, Id, NSRange;
overload selector(static "addTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
overload selector(static "addTextContainer:") = Void, NSTextContainer;
overload selector(static "addTimeInterval:") = Id, Double;
overload selector(static "addTimer:forMode:") = Void, NSTimer, NSString;
overload selector(static "addToolTipRect:owner:userData:") = Int, NSRect, Id, RawPointer;
overload selector(static "addTrackingArea:") = Void, NSTrackingArea;
overload selector(static "addTrackingRect:owner:userData:assumeInside:") = Int, NSRect, Id, RawPointer, Bool;
overload selector(static "addTypes:owner:") = Int, NSArray, Id;
overload selector(static "addUpdateRect:") = Void, CGRect;
overload selector(static "addValue:forHTTPHeaderField:") = Void, NSString, NSString;
overload selector(static "addWindowController:") = Void, NSWindowController;
overload selector(static "addWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
overload selector(static "address") = Id;
overload selector(static "addressCheckingResultWithRange:components:") = NSTextCheckingResult, NSRange, NSDictionary;
overload selector(static "addressComponents") = NSDictionary;
overload selector(static "addresses") = NSArray;
overload selector(static "adjustPageHeightNew:top:bottom:limit:") = Void, Pointer[Float], Float, Float, Float;
overload selector(static "adjustPageWidthNew:left:right:limit:") = Void, Pointer[Float], Float, Float, Float;
overload selector(static "adjustScroll:") = NSRect, NSRect;
overload selector(static "adjustSubviews") = Void;
overload selector(static "adobeRGB1998ColorSpace") = NSColorSpace;
overload selector(static "advancementForGlyph:") = NSSize, UInt;
overload selector(static "aeDesc") = Pointer[AEDesc];
overload selector(static "aeteResource:") = NSData, NSString;
overload selector(static "affectedStores") = NSArray;
overload selector(static "affineTransform") = CGAffineTransform;
overload selector(static "afmDictionary") = NSDictionary;
overload selector(static "alertShowHelp:") = Bool, NSAlert;
overload selector(static "alertStyle") = UInt;
overload selector(static "alertWithError:") = NSAlert, NSError;
overload varargSelector(static "alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:") = NSAlert, NSString, NSString, NSString, NSString, NSString;
overload selector(static "alignCenter:") = Void, Id;
overload selector(static "alignJustified:") = Void, Id;
overload selector(static "alignLeft:") = Void, Id;
overload selector(static "alignRight:") = Void, Id;
overload selector(static "alignment") = UInt;
overload selector(static "alignmentMode") = NSString;
overload selector(static "alignmentRect") = NSRect;
overload selector(static "allBundles") = NSArray;
overload selector(static "allConnections") = NSArray;
overload selector(static "allCredentials") = NSDictionary;
overload selector(static "allFrameworks") = NSArray;
overload selector(static "allHTTPHeaderFields") = NSDictionary;
overload selector(static "allHeaderFields") = NSDictionary;
overload selector(static "allKeys") = NSArray;
overload selector(static "allKeysForObject:") = NSArray, Id;
overload selector(static "allLanguages") = NSArray;
overload selector(static "allObjects") = NSArray;
overload selector(static "allScripts") = NSArray;
overload selector(static "allValues") = NSArray;
overload selector(static "alloc") = Id;
overload selector(static "allocWithZone:") = Id, Pointer[NSZone];
overload selector(static "allocateGState") = Void;
overload selector(static "allowedFileTypes") = NSArray;
overload selector(static "allowedInputSourceLocales") = NSArray;
overload selector(static "allowedTypes") = NSArray;
overload selector(static "allowsBranchSelection") = Bool;
overload selector(static "allowsColumnReordering") = Bool;
overload selector(static "allowsColumnResizing") = Bool;
overload selector(static "allowsColumnSelection") = Bool;
overload selector(static "allowsConcurrentViewDrawing") = Bool;
overload selector(static "allowsContextMenuPlugIns") = Bool;
overload selector(static "allowsCutCopyPaste") = Bool;
overload selector(static "allowsDocumentBackgroundColorChange") = Bool;
overload selector(static "allowsDuplicatesInToolbar") = Bool;
overload selector(static "allowsEditingTextAttributes") = Bool;
overload selector(static "allowsEmptySelection") = Bool;
overload selector(static "allowsFloats") = Bool;
overload selector(static "allowsImageEditing") = Bool;
overload selector(static "allowsKeyedCoding") = Bool;
overload selector(static "allowsMixedState") = Bool;
overload selector(static "allowsMultipleSelection") = Bool;
overload selector(static "allowsNaturalLanguage") = Bool;
overload selector(static "allowsNonContiguousLayout") = Bool;
overload selector(static "allowsOtherFileTypes") = Bool;
overload selector(static "allowsReverseTransformation") = Bool;
overload selector(static "allowsTickMarkValuesOnly") = Bool;
overload selector(static "allowsToolTipsWhenApplicationIsInactive") = Bool;
overload selector(static "allowsTruncatedLabels") = Bool;
overload selector(static "allowsTypeSelect") = Bool;
overload selector(static "allowsUndo") = Bool;
overload selector(static "allowsUserCustomization") = Bool;
overload selector(static "alpha") = Float;
overload selector(static "alphaComponent") = Float;
overload selector(static "alphaControlAddedOrRemoved:") = Void, Id;
overload selector(static "alphaRange") = Float;
overload selector(static "alphaSpeed") = Float;
overload selector(static "alphaValue") = Float;
overload selector(static "alphanumericCharacterSet") = Id;
overload selector(static "altIncrementValue") = Double;
overload selector(static "alternateImage") = NSImage;
overload selector(static "alternateMnemonic") = NSString;
overload selector(static "alternateMnemonicLocation") = UInt;
overload selector(static "alternateSelectedControlColor") = NSColor;
overload selector(static "alternateSelectedControlTextColor") = NSColor;
overload selector(static "alternateTitle") = NSString;
overload selector(static "altersStateOfSelectedItem") = Bool;
overload selector(static "alwaysShowsDecimalSeparator") = Bool;
overload selector(static "alwaysUsesMultipleValuesMarker") = Bool;
overload selector(static "ancestorSharedWithView:") = NSView, NSView;
overload selector(static "anchorPoint") = CGPoint;
overload selector(static "anchorPointZ") = Float;
overload selector(static "andPredicateWithSubpredicates:") = NSPredicate, NSArray;
overload selector(static "animate:") = Void, Id;
overload selector(static "animates") = Bool;
overload selector(static "animation") = Id;
overload selector(static "animation:didReachProgressMark:") = Void, NSAnimation, Float;
overload selector(static "animation:valueForProgress:") = Float, NSAnimation, Float;
overload selector(static "animationBlockingMode") = UInt;
overload selector(static "animationCurve") = UInt;
overload selector(static "animationDelay") = Double;
overload selector(static "animationDidEnd:") = Void, NSAnimation;
overload selector(static "animationDidStart:") = Void, CAAnimation;
overload selector(static "animationDidStop:") = Void, NSAnimation;
overload selector(static "animationDidStop:finished:") = Void, CAAnimation, Bool;
overload selector(static "animationDuration") = Double;
overload selector(static "animationForKey:") = Id, NSString;
overload selector(static "animationKeys") = NSArray;
overload selector(static "animationResizeTime:") = Double, NSRect;
overload selector(static "animationShouldStart:") = Bool, NSAnimation;
overload selector(static "animationTimingFunction") = CAMediaTimingFunction;
overload selector(static "animationWithKeyPath:") = Id, NSString;
overload selector(static "animations") = Id;
overload selector(static "animator") = Id;
overload selector(static "anyObject") = Id;
overload selector(static "apertureModeDimensionsForMode:") = NSSize, NSString;
overload selector(static "appendAttributedString:") = Void, NSAttributedString;
overload selector(static "appendBezierPath:") = Void, NSBezierPath;
overload selector(static "appendBezierPathWithArcFromPoint:toPoint:radius:") = Void, NSPoint, NSPoint, Float;
overload selector(static "appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:") = Void, NSPoint, Float, Float, Float;
overload selector(static "appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:") = Void, NSPoint, Float, Float, Float, Bool;
overload selector(static "appendBezierPathWithGlyph:inFont:") = Void, UInt, NSFont;
overload selector(static "appendBezierPathWithGlyphs:count:inFont:") = Void, Pointer[UInt], Int, NSFont;
overload selector(static "appendBezierPathWithOvalInRect:") = Void, NSRect;
overload selector(static "appendBezierPathWithPackedGlyphs:") = Void, Pointer[CChar];
overload selector(static "appendBezierPathWithPoints:count:") = Void, NSPointArray, Int;
overload selector(static "appendBezierPathWithRect:") = Void, NSRect;
overload selector(static "appendBezierPathWithRoundedRect:xRadius:yRadius:") = Void, NSRect, Float, Float;
overload selector(static "appendBytes:length:") = Void, RawPointer, UInt;
overload selector(static "appendData:") = Void, NSData;
overload varargSelector(static "appendFormat:") = Void, NSString;
overload selector(static "appendSelectionFromMovie:") = Void, Id;
overload selector(static "appendString:") = Void, NSString;
overload selector(static "appendTransform:") = Void, NSAffineTransform;
overload selector(static "appleEvent") = NSAppleEventDescriptor;
overload selector(static "appleEventClassCode") = CULong;
overload selector(static "appleEventCode") = CULong;
overload selector(static "appleEventCodeForArgumentWithName:") = CULong, NSString;
overload selector(static "appleEventCodeForKey:") = CULong, NSString;
overload selector(static "appleEventCodeForReturnType") = CULong;
overload selector(static "appleEventCodeForSuite:") = CULong, NSString;
overload selector(static "appleEventForSuspensionID:") = NSAppleEventDescriptor, NSAppleEventManagerSuspensionID;
overload selector(static "appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:") = NSAppleEventDescriptor, CULong, CULong, NSAppleEventDescriptor, Short, CLong;
overload selector(static "application:delegateHandlesKey:") = Bool, NSApplication, NSString;
overload selector(static "application:openFile:") = Bool, NSApplication, NSString;
overload selector(static "application:openFileWithoutUI:") = Bool, Id, NSString;
overload selector(static "application:openFiles:") = Void, NSApplication, NSArray;
overload selector(static "application:openTempFile:") = Bool, NSApplication, NSString;
overload selector(static "application:printFile:") = Bool, NSApplication, NSString;
overload selector(static "application:printFiles:") = Void, NSApplication, NSArray;
overload selector(static "application:printFiles:withSettings:showPrintPanels:") = UInt, NSApplication, NSArray, NSDictionary, Bool;
overload selector(static "application:willPresentError:") = NSError, NSApplication, NSError;
overload selector(static "applicationDidBecomeActive:") = Void, NSNotification;
overload selector(static "applicationDidChangeScreenParameters:") = Void, NSNotification;
overload selector(static "applicationDidFinishLaunching:") = Void, NSNotification;
overload selector(static "applicationDidHide:") = Void, NSNotification;
overload selector(static "applicationDidResignActive:") = Void, NSNotification;
overload selector(static "applicationDidUnhide:") = Void, NSNotification;
overload selector(static "applicationDidUpdate:") = Void, NSNotification;
overload selector(static "applicationDockMenu:") = NSMenu, NSApplication;
overload selector(static "applicationIconImage") = NSImage;
overload selector(static "applicationOpenUntitledFile:") = Bool, NSApplication;
overload selector(static "applicationShouldHandleReopen:hasVisibleWindows:") = Bool, NSApplication, Bool;
overload selector(static "applicationShouldOpenUntitledFile:") = Bool, NSApplication;
overload selector(static "applicationShouldTerminate:") = UInt, NSApplication;
overload selector(static "applicationShouldTerminateAfterLastWindowClosed:") = Bool, NSApplication;
overload selector(static "applicationWillBecomeActive:") = Void, NSNotification;
overload selector(static "applicationWillFinishLaunching:") = Void, NSNotification;
overload selector(static "applicationWillHide:") = Void, NSNotification;
overload selector(static "applicationWillResignActive:") = Void, NSNotification;
overload selector(static "applicationWillTerminate:") = Void, NSNotification;
overload selector(static "applicationWillUnhide:") = Void, NSNotification;
overload selector(static "applicationWillUpdate:") = Void, NSNotification;
overload selector(static "appliesImmediately") = Bool;
overload varargSelector(static "apply:") = CIImage, CIKernel;
overload selector(static "apply:arguments:options:") = CIImage, CIKernel, NSArray, NSDictionary;
overload selector(static "applyFontTraits:range:") = Void, UInt, NSRange;
overload selector(static "archiveRootObject:toFile:") = Bool, Id, NSString;
overload selector(static "archivedDataWithRootObject:") = NSData, Id;
overload selector(static "archiver:didEncodeObject:") = Void, NSKeyedArchiver, Id;
overload selector(static "archiver:willEncodeObject:") = Id, NSKeyedArchiver, Id;
overload selector(static "archiver:willReplaceObject:withObject:") = Void, NSKeyedArchiver, Id, Id;
overload selector(static "archiverData") = NSMutableData;
overload selector(static "archiverDidFinish:") = Void, NSKeyedArchiver;
overload selector(static "archiverWillFinish:") = Void, NSKeyedArchiver;
overload selector(static "areCursorRectsEnabled") = Bool;
overload selector(static "areStepButtonsVisible") = Bool;
overload selector(static "areZoomButtonsVisible") = Bool;
overload selector(static "argumentNames") = NSArray;
overload selector(static "arguments") = Id;
overload selector(static "argumentsRetained") = Bool;
overload selector(static "arrangeInFront:") = Void, Id;
overload selector(static "arrangeObjects:") = NSArray, NSArray;
overload selector(static "arrangedObjects") = Id;
overload selector(static "array") = Id;
overload selector(static "arrayByAddingObject:") = NSArray, Id;
overload selector(static "arrayByAddingObjectsFromArray:") = NSArray, NSArray;
overload selector(static "arrayForKey:") = NSArray, NSString;
overload selector(static "arrayWithArray:") = Id, NSArray;
overload selector(static "arrayWithCapacity:") = Id, UInt;
overload selector(static "arrayWithContentsOfFile:") = Id, NSString;
overload selector(static "arrayWithContentsOfURL:") = Id, NSURL;
overload selector(static "arrayWithObject:") = Id, Id;
overload varargSelector(static "arrayWithObjects:") = Id, Id;
overload selector(static "arrayWithObjects:count:") = Id, Pointer[Id], UInt;
overload selector(static "arrowCursor") = NSCursor;
overload selector(static "arrowPosition") = UInt;
overload selector(static "arrowsPosition") = UInt;
overload selector(static "ascender") = Float;
overload selector(static "ascending") = Bool;
overload selector(static "aspectRatio") = NSSize;
overload selector(static "assignObject:toPersistentStore:") = Void, Id, NSPersistentStore;
overload selector(static "associateSourceInstance:withDestinationInstance:forEntityMapping:") = Void, NSManagedObject, NSManagedObject, NSEntityMapping;
overload selector(static "attachColorList:") = Void, NSColorList;
overload selector(static "attachPopUpWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "attachSubmenuForItemAtIndex:") = Void, Int;
overload selector(static "attachToCurrentThread") = Bool;
overload selector(static "attachedMenu") = NSMenu;
overload selector(static "attachedMenuView") = NSMenuView;
overload selector(static "attachedSheet") = NSWindow;
overload selector(static "attachment") = NSTextAttachment;
overload selector(static "attachmentCell") = Id;
overload selector(static "attachmentSizeForGlyphAtIndex:") = NSSize, UInt;
overload selector(static "attemptRecoveryFromError:optionIndex:") = Bool, NSError, UInt;
overload selector(static "attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:") = Void, NSError, UInt, Id, SelectorHandle, RawPointer;
overload selector(static "attribute") = NSString;
overload selector(static "attribute:atIndex:effectiveRange:") = Id, NSString, UInt, NSRangePointer;
overload selector(static "attribute:atIndex:longestEffectiveRange:inRange:") = Id, NSString, UInt, NSRangePointer, NSRange;
overload selector(static "attributeDeclarationForName:elementName:") = NSXMLDTDNode, NSString, NSString;
overload selector(static "attributeDescriptorForKeyword:") = NSAppleEventDescriptor, CULong;
overload selector(static "attributeForKey:") = Id, NSString;
overload selector(static "attributeForLocalName:URI:") = NSXMLNode, NSString, NSString;
overload selector(static "attributeForName:") = NSXMLNode, NSString;
overload selector(static "attributeIsReadOnly:") = Bool, NSString;
overload selector(static "attributeKeys") = NSArray;
overload selector(static "attributeMappings") = NSArray;
overload selector(static "attributeRuns") = NSArray;
overload selector(static "attributeType") = UInt;
overload selector(static "attributeValueClassName") = NSString;
overload selector(static "attributeWithName:URI:stringValue:") = Id, NSString, NSString, NSString;
overload selector(static "attributeWithName:stringValue:") = Id, NSString, NSString;
overload selector(static "attributedAlternateTitle") = NSAttributedString;
overload selector(static "attributedString") = NSAttributedString;
overload selector(static "attributedStringForNil") = NSAttributedString;
overload selector(static "attributedStringForNotANumber") = NSAttributedString;
overload selector(static "attributedStringForObjectValue:withDefaultAttributes:") = NSAttributedString, Id, NSDictionary;
overload selector(static "attributedStringForZero") = NSAttributedString;
overload selector(static "attributedStringValue") = NSAttributedString;
overload selector(static "attributedStringWithAttachment:") = NSAttributedString, NSTextAttachment;
overload selector(static "attributedSubstringForProposedRange:actualRange:") = NSAttributedString, NSRange, NSRangePointer;
overload selector(static "attributedSubstringFromRange:") = NSAttributedString, NSRange;
overload selector(static "attributedTitle") = NSAttributedString;
overload selector(static "attributes") = Id;
overload selector(static "attributesAtIndex:effectiveRange:") = NSDictionary, UInt, NSRangePointer;
overload selector(static "attributesAtIndex:longestEffectiveRange:inRange:") = NSDictionary, UInt, NSRangePointer, NSRange;
overload selector(static "attributesByName") = NSDictionary;
overload selector(static "attributesForCharacterIndex:lineHeightRectangle:") = NSDictionary, UInt, Pointer[NSRect];
overload selector(static "attributesForExtraLineFragment") = NSDictionary;
overload selector(static "attributesForVoice:") = NSDictionary, NSString;
overload selector(static "attributesOfFileSystemForPath:error:") = NSDictionary, NSString, Pointer[NSError];
overload selector(static "attributesOfItemAtPath:error:") = NSDictionary, NSString, Pointer[NSError];
overload selector(static "audioBufferListWithOptions:") = Pointer[AudioBufferList], UInt;
overload selector(static "authenticateComponents:withData:") = Bool, NSArray, NSData;
overload selector(static "authenticationDataForComponents:") = NSData, NSArray;
overload selector(static "authenticationMethod") = NSString;
overload selector(static "autoContentAccessingProxy") = Id;
overload selector(static "autoenablesItems") = Bool;
overload selector(static "autohidesScroller") = Bool;
overload selector(static "autohidesScrollers") = Bool;
overload selector(static "automaticRearrangementKeyPaths") = NSArray;
overload selector(static "automaticallyDropsLateVideoFrames") = Bool;
overload selector(static "automaticallyIdentifiesLanguages") = Bool;
overload selector(static "automaticallyNotifiesObserversForKey:") = Bool, NSString;
overload selector(static "automaticallyPreparesContent") = Bool;
overload selector(static "automaticallyRearrangesObjects") = Bool;
overload selector(static "autoplay") = Void;
overload selector(static "autorecalculatesContentBorderThicknessForEdge:") = Bool, NSRectEdge;
overload selector(static "autorecalculatesKeyViewLoop") = Bool;
overload selector(static "autorelease") = Id;
overload selector(static "autorepeat") = Bool;
overload selector(static "autoresizesAllColumnsToFit") = Bool;
overload selector(static "autoresizesOutlineColumn") = Bool;
overload selector(static "autoresizesSubviews") = Bool;
overload selector(static "autoresizingMask") = UInt;
overload selector(static "autoreverses") = Bool;
overload selector(static "autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector(static "autosaveExpandedItems") = Bool;
overload selector(static "autosaveName") = NSString;
overload selector(static "autosaveTableColumns") = Bool;
overload selector(static "autosavedContentsFileURL") = NSURL;
overload selector(static "autosavesConfiguration") = Bool;
overload selector(static "autosavingDelay") = Double;
overload selector(static "autosavingFileType") = NSString;
overload selector(static "autoscroll:") = Bool, NSEvent;
overload selector(static "autosizesCells") = Bool;
overload selector(static "autoupdatingCurrentCalendar") = Id;
overload selector(static "autoupdatingCurrentLocale") = Id;
overload selector(static "autovalidates") = Bool;
overload selector(static "availableColorLists") = NSArray;
overload selector(static "availableColorSpacesWithModel:") = NSArray, Int;
overload selector(static "availableData") = NSData;
overload selector(static "availableFontFamilies") = NSArray;
overload selector(static "availableFontNamesMatchingFontDescriptor:") = NSArray, NSFontDescriptor;
overload selector(static "availableFontNamesWithTraits:") = NSArray, UInt;
overload selector(static "availableFonts") = NSArray;
overload selector(static "availableLanguages") = NSArray;
overload selector(static "availableLocaleIdentifiers") = NSArray;
overload selector(static "availableMembersOfFontFamily:") = NSArray, NSString;
overload selector(static "availableResourceData") = NSData;
overload selector(static "availableStringEncodings") = Pointer[UInt];
overload selector(static "availableTypeFromArray:") = NSString, NSArray;
overload selector(static "availableVideoPreviewConnections") = NSArray;
overload selector(static "availableVoices") = NSArray;
overload selector(static "avoidsEmptySelection") = Bool;
overload selector(static "awakeAfterUsingCoder:") = Id, NSCoder;
overload selector(static "awakeFromFetch") = Void;
overload selector(static "awakeFromInsert") = Void;
overload selector(static "awakeFromNib") = Void;
overload selector(static "awakeFromSnapshotEvents:") = Void, UInt;
overload selector(static "backgroundColor") = NSColor;
overload selector(static "backgroundColors") = NSArray;
overload selector(static "backgroundFilters") = NSArray;
overload selector(static "backgroundLayoutEnabled") = Bool;
overload selector(static "backgroundLoadDidFailWithReason:") = Void, NSString;
overload selector(static "backgroundStyle") = Int;
overload selector(static "backingLocation") = UInt;
overload selector(static "backingType") = UInt;
overload selector(static "badgeLabel") = NSString;
overload selector(static "baseSpecifier") = NSScriptObjectSpecifier;
overload selector(static "baseURL") = NSURL;
overload selector(static "baseWritingDirection") = Int;
overload selector(static "baselineDeltaForCharacterAtIndex:") = Float, UInt;
overload selector(static "baselineLocation") = Float;
overload selector(static "baselineOffsetInLayoutManager:glyphIndex:") = Float, NSLayoutManager, UInt;
overload selector(static "becomeFirstResponder") = Bool;
overload selector(static "becomeKeyWindow") = Void;
overload selector(static "becomeMainWindow") = Void;
overload selector(static "becomesKeyOnlyIfNeeded") = Bool;
overload selector(static "begin") = Void;
overload selector(static "beginContentAccess") = Bool;
overload selector(static "beginDocument") = Void;
overload selector(static "beginEditing") = Void;
overload selector(static "beginEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector(static "beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, Id, SelectorHandle, RawPointer;
overload selector(static "beginFrameAtTime:timeStamp:") = Void, Double, Pointer[CVTimeStamp];
overload selector(static "beginGestureWithEvent:") = Void, NSEvent;
overload selector(static "beginGrouping") = Void;
overload selector(static "beginLineWithGlyphAtIndex:") = Void, UInt;
overload selector(static "beginLoadInBackground") = Void;
overload selector(static "beginModalSessionForWindow:") = NSModalSession, NSWindow;
overload selector(static "beginModalSessionForWindow:relativeToWindow:") = NSModalSession, NSWindow, NSWindow;
overload selector(static "beginPageInRect:atPlacement:") = Void, NSRect, NSPoint;
overload selector(static "beginParagraph") = Void;
overload selector(static "beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, NSWindow, Id, SelectorHandle, RawPointer;
overload selector(static "beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSWindow, Id, SelectorHandle, RawPointer;
overload selector(static "beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, NSWindow, Id, SelectorHandle, RawPointer;
overload selector(static "beginSheetModalForWindow:completionHandler:") = Void, NSWindow, UnknownType;
overload selector(static "beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
overload selector(static "beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:") = Void, NSPrintInfo, NSWindow, Id, SelectorHandle, RawPointer;
overload selector(static "beginTime") = Double;
overload selector(static "beginUndoGrouping") = Void;
overload selector(static "beginWithCompletionHandler:") = Void, UnknownType;
overload selector(static "bestRepresentationForDevice:") = NSImageRep, NSDictionary;
overload selector(static "bestRepresentationForRect:context:hints:") = NSImageRep, NSRect, NSGraphicsContext, NSDictionary;
overload selector(static "bezelStyle") = UInt;
overload selector(static "bezierPath") = NSBezierPath;
overload selector(static "bezierPathByFlatteningPath") = NSBezierPath;
overload selector(static "bezierPathByReversingPath") = NSBezierPath;
overload selector(static "bezierPathWithOvalInRect:") = NSBezierPath, NSRect;
overload selector(static "bezierPathWithRect:") = NSBezierPath, NSRect;
overload selector(static "bezierPathWithRoundedRect:xRadius:yRadius:") = NSBezierPath, NSRect, Float, Float;
overload selector(static "bidiProcessingEnabled") = Bool;
overload selector(static "bind:toObject:withKeyPath:options:") = Void, NSString, Id, NSString, NSDictionary;
overload selector(static "birthRate") = Float;
overload selector(static "bitmapData") = Pointer[CUChar];
overload selector(static "bitmapFormat") = UInt;
overload selector(static "bitmapImageRepByConvertingToColorSpace:renderingIntent:") = NSBitmapImageRep, NSColorSpace, Int;
overload selector(static "bitmapImageRepByRetaggingWithColorSpace:") = NSBitmapImageRep, NSColorSpace;
overload selector(static "bitmapImageRepForCachingDisplayInRect:") = NSBitmapImageRep, NSRect;
overload selector(static "bitmapRepresentation") = NSData;
overload selector(static "bitsPerPixel") = Int;
overload selector(static "bitsPerSample") = Int;
overload selector(static "blackColor") = NSColor;
overload selector(static "blackComponent") = Float;
overload selector(static "blendedColorWithFraction:ofColor:") = NSColor, Float, NSColor;
overload selector(static "blockOperationWithBlock:") = Id, UnknownType;
overload selector(static "blocksOtherRecognizers") = Bool;
overload selector(static "blue") = Float;
overload selector(static "blueColor") = NSColor;
overload selector(static "blueComponent") = Float;
overload selector(static "blueRange") = Float;
overload selector(static "blueSpeed") = Float;
overload selector(static "boldSystemFontOfSize:") = NSFont, Float;
overload selector(static "bookmarkDataWithContentsOfURL:error:") = NSData, NSURL, Pointer[NSError];
overload selector(static "bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:") = NSData, UInt, NSArray, NSURL, Pointer[NSError];
overload selector(static "boolForKey:") = Bool, NSString;
overload selector(static "boolValue") = Bool;
overload selector(static "booleanForKey:inTable:") = Bool, NSString, NSString;
overload selector(static "booleanValue") = CUChar;
overload selector(static "borderColor") = NSColor;
overload selector(static "borderColorForEdge:") = NSColor, NSRectEdge;
overload selector(static "borderRect") = NSRect;
overload selector(static "borderType") = UInt;
overload selector(static "borderWidth") = Float;
overload selector(static "bottomMargin") = Float;
overload selector(static "boundingBox") = NSRect;
overload selector(static "boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, UInt, NSTextContainer, NSRect, NSPoint, UInt;
overload selector(static "boundingRectForFont") = NSRect;
overload selector(static "boundingRectForGlyph:") = NSRect, UInt;
overload selector(static "boundingRectForGlyphRange:inTextContainer:") = NSRect, NSRange, NSTextContainer;
overload selector(static "boundingRectWithSize:options:") = NSRect, NSSize, Int;
overload selector(static "boundingRectWithSize:options:attributes:") = NSRect, NSSize, Int, NSDictionary;
overload selector(static "bounds") = NSRect;
overload selector(static "boundsRectForBlock:contentRect:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSRect, NSRect, NSTextContainer, NSRange;
overload selector(static "boundsRectForContentRect:inRect:textContainer:characterRange:") = NSRect, NSRect, NSRect, NSTextContainer, NSRange;
overload selector(static "boundsRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, UInt, NSRangePointer;
overload selector(static "boundsRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
overload selector(static "boundsRotation") = Float;
overload selector(static "boxType") = UInt;
overload selector(static "branchImage") = NSImage;
overload selector(static "breakLock") = Void;
overload selector(static "breakUndoCoalescing") = Void;
overload selector(static "brightnessComponent") = Float;
overload selector(static "broadcast") = Void;
overload selector(static "brownColor") = NSColor;
overload selector(static "browser:acceptDrop:atRow:column:dropOperation:") = Bool, NSBrowser, Id, Int, Int, UInt;
overload selector(static "browser:canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSBrowser, NSIndexSet, Int, NSEvent;
overload selector(static "browser:child:ofItem:") = Id, NSBrowser, Int, Id;
overload selector(static "browser:createRowsForColumn:inMatrix:") = Void, NSBrowser, Int, NSMatrix;
overload selector(static "browser:didChangeLastColumn:toColumn:") = Void, NSBrowser, Int, Int;
overload selector(static "browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSBrowser, NSIndexSet, Int, NSEvent, NSPointPointer;
overload selector(static "browser:headerViewControllerForItem:") = NSViewController, NSBrowser, Id;
overload selector(static "browser:heightOfRow:inColumn:") = Float, NSBrowser, Int, Int;
overload selector(static "browser:isColumnValid:") = Bool, NSBrowser, Int;
overload selector(static "browser:isLeafItem:") = Bool, NSBrowser, Id;
overload selector(static "browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:") = NSArray, NSBrowser, NSURL, NSIndexSet, Int;
overload selector(static "browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:") = Int, NSBrowser, Int, Int, Int, NSString;
overload selector(static "browser:numberOfChildrenOfItem:") = Int, NSBrowser, Id;
overload selector(static "browser:numberOfRowsInColumn:") = Int, NSBrowser, Int;
overload selector(static "browser:objectValueForItem:") = Id, NSBrowser, Id;
overload selector(static "browser:previewViewControllerForLeafItem:") = NSViewController, NSBrowser, Id;
overload selector(static "browser:selectCellWithString:inColumn:") = Bool, NSBrowser, NSString, Int;
overload selector(static "browser:selectRow:inColumn:") = Bool, NSBrowser, Int, Int;
overload selector(static "browser:selectionIndexesForProposedSelection:inColumn:") = NSIndexSet, NSBrowser, NSIndexSet, Int;
overload selector(static "browser:setObjectValue:forItem:") = Void, NSBrowser, Id, Id;
overload selector(static "browser:shouldEditItem:") = Bool, NSBrowser, Id;
overload selector(static "browser:shouldShowCellExpansionForRow:column:") = Bool, NSBrowser, Int, Int;
overload selector(static "browser:shouldSizeColumn:forUserResize:toWidth:") = Float, NSBrowser, Int, Bool, Float;
overload selector(static "browser:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSBrowser, NSEvent, NSString;
overload selector(static "browser:sizeToFitWidthOfColumn:") = Float, NSBrowser, Int;
overload selector(static "browser:titleOfColumn:") = NSString, NSBrowser, Int;
overload selector(static "browser:typeSelectStringForRow:inColumn:") = NSString, NSBrowser, Int, Int;
overload selector(static "browser:validateDrop:proposedRow:column:dropOperation:") = UInt, NSBrowser, Id, Pointer[Int], Pointer[Int], Pointer[UInt];
overload selector(static "browser:willDisplayCell:atRow:column:") = Void, NSBrowser, Id, Int, Int;
overload selector(static "browser:writeRowsWithIndexes:inColumn:toPasteboard:") = Bool, NSBrowser, NSIndexSet, Int, NSPasteboard;
overload selector(static "browserColumnConfigurationDidChange:") = Void, NSNotification;
overload selector(static "browserDidScroll:") = Void, NSBrowser;
overload selector(static "browserWillScroll:") = Void, NSBrowser;
overload selector(static "builtInPlugInsPath") = NSString;
overload selector(static "builtInPlugInsURL") = NSURL;
overload selector(static "bundleForClass:") = NSBundle, Id;
overload selector(static "bundleForSuite:") = NSBundle, NSString;
overload selector(static "bundleIdentifier") = NSString;
overload selector(static "bundlePath") = NSString;
overload selector(static "bundleURL") = NSURL;
overload selector(static "bundleWithIdentifier:") = NSBundle, NSString;
overload selector(static "bundleWithPath:") = NSBundle, NSString;
overload selector(static "bundleWithURL:") = NSBundle, NSURL;
overload selector(static "buttonMask") = UInt;
overload selector(static "buttonNumber") = Int;
overload selector(static "buttonToolTip") = NSString;
overload selector(static "buttons") = NSArray;
overload selector(static "byValue") = Id;
overload selector(static "bytes") = RawPointer;
overload selector(static "bytesForAllSamples") = RawPointer;
overload selector(static "bytesPerPlane") = Int;
overload selector(static "bytesPerRow") = Int;
overload selector(static "cString") = Pointer[CChar];
overload selector(static "cStringLength") = UInt;
overload selector(static "cStringUsingEncoding:") = Pointer[CChar], UInt;
overload selector(static "cache:willEvictObject:") = Void, NSCache, Id;
overload selector(static "cacheDepthMatchesImageDepth") = Bool;
overload selector(static "cacheDisplayInRect:toBitmapImageRep:") = Void, NSRect, NSBitmapImageRep;
overload selector(static "cacheImageInRect:") = Void, NSRect;
overload selector(static "cacheMode") = UInt;
overload selector(static "cacheNodeForObjectID:") = NSAtomicStoreCacheNode, NSManagedObjectID;
overload selector(static "cacheNodes") = NSSet;
overload selector(static "cachePolicy") = UInt;
overload selector(static "cachedHandleForURL:") = NSURLHandle, NSURL;
overload selector(static "cachedResponse") = NSCachedURLResponse;
overload selector(static "cachedResponseForRequest:") = NSCachedURLResponse, NSURLRequest;
overload selector(static "cachesBezierPath") = Bool;
overload selector(static "calcDrawInfo:") = Void, NSRect;
overload selector(static "calcSize") = Void;
overload selector(static "calculationMode") = NSString;
overload selector(static "calendar") = NSCalendar;
overload selector(static "calendarDate") = Id;
overload selector(static "calendarFormat") = NSString;
overload selector(static "calendarIdentifier") = NSString;
overload selector(static "callStackReturnAddresses") = NSArray;
overload selector(static "callStackSymbols") = NSArray;
overload selector(static "canAdd") = Bool;
overload selector(static "canAddChild") = Bool;
overload selector(static "canBeCompressedUsing:") = Bool, UInt;
overload selector(static "canBeConvertedToEncoding:") = Bool, UInt;
overload selector(static "canBeDisabled") = Bool;
overload selector(static "canBeVisibleOnAllSpaces") = Bool;
overload selector(static "canBecomeKeyView") = Bool;
overload selector(static "canBecomeKeyWindow") = Bool;
overload selector(static "canBecomeMainWindow") = Bool;
overload selector(static "canBecomeVisibleWithoutLogin") = Bool;
overload selector(static "canChooseDirectories") = Bool;
overload selector(static "canChooseFiles") = Bool;
overload selector(static "canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector(static "canConcurrentlyReadDocumentsOfType:") = Bool, NSString;
overload selector(static "canCreateDirectories") = Bool;
overload selector(static "canDragRowsWithIndexes:atPoint:") = Bool, NSIndexSet, NSPoint;
overload selector(static "canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSIndexSet, Int, NSEvent;
overload selector(static "canDraw") = Bool;
overload selector(static "canDrawConcurrently") = Bool;
overload selector(static "canDrawInCGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, CGLContextObj, CGLPixelFormatObj, Double, Pointer[CVTimeStamp];
overload selector(static "canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
overload selector(static "canHandleRequest:") = Bool, NSURLRequest;
overload selector(static "canHide") = Bool;
overload selector(static "canInitWithData:") = Bool, NSData;
overload selector(static "canInitWithDataReference:") = Bool, QTDataReference;
overload selector(static "canInitWithFile:") = Bool, NSString;
overload selector(static "canInitWithPasteboard:") = Bool, NSPasteboard;
overload selector(static "canInitWithRequest:") = Bool, NSURLRequest;
overload selector(static "canInitWithURL:") = Bool, NSURL;
overload selector(static "canInsert") = Bool;
overload selector(static "canInsertChild") = Bool;
overload selector(static "canReadItemWithDataConformingToTypes:") = Bool, NSArray;
overload selector(static "canReadObjectForClasses:options:") = Bool, NSArray, NSDictionary;
overload selector(static "canRedo") = Bool;
overload selector(static "canRemove") = Bool;
overload selector(static "canRemoveAllRows") = Bool;
overload selector(static "canResumeDownloadDecodedWithEncodingMIMEType:") = Bool, NSString;
overload selector(static "canSelectHiddenExtension") = Bool;
overload selector(static "canSelectNext") = Bool;
overload selector(static "canSelectPrevious") = Bool;
overload selector(static "canSpawnSeparateThread") = Bool;
overload selector(static "canStoreColor") = Bool;
overload selector(static "canUndo") = Bool;
overload selector(static "canUpdateMovieFile") = Bool;
overload selector(static "cancel") = Void;
overload selector(static "cancel:") = Void, Id;
overload selector(static "cancelAllOperations") = Void;
overload selector(static "cancelAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
overload selector(static "cancelButtonCell") = NSButtonCell;
overload selector(static "cancelButtonRectForBounds:") = NSRect, NSRect;
overload selector(static "cancelIncrementalLoad") = Void;
overload selector(static "cancelLoadInBackground") = Void;
overload selector(static "cancelMigrationWithError:") = Void, NSError;
overload selector(static "cancelOperation:") = Void, Id;
overload selector(static "cancelPerformSelector:target:argument:") = Void, SelectorHandle, Id, Id;
overload selector(static "cancelPerformSelectorsWithTarget:") = Void, Id;
overload selector(static "cancelPreviousPerformRequestsWithTarget:") = Void, Id;
overload selector(static "cancelPreviousPerformRequestsWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
overload selector(static "cancelTracking") = Void;
overload selector(static "cancelTrackingWithoutAnimation") = Void;
overload selector(static "cancelUserAttentionRequest:") = Void, Int;
overload selector(static "canonicalLanguageIdentifierFromString:") = NSString, NSString;
overload selector(static "canonicalLocaleIdentifierFromString:") = NSString, NSString;
overload selector(static "canonicalRequestForRequest:") = NSURLRequest, NSURLRequest;
overload selector(static "canonicalXMLStringPreservingComments:") = NSString, Bool;
overload selector(static "capHeight") = Float;
overload selector(static "capabilityMask") = UInt;
overload selector(static "capitalizeWord:") = Void, Id;
overload selector(static "capitalizedLetterCharacterSet") = Id;
overload selector(static "capitalizedString") = NSString;
overload selector(static "captureOutput:didDropVideoFrameWithSampleBuffer:fromConnection:") = Void, QTCaptureOutput, QTSampleBuffer, QTCaptureConnection;
overload selector(static "captureOutput:didFinishRecordingToOutputFileAtURL:forConnections:dueToError:") = Void, QTCaptureFileOutput, NSURL, NSArray, NSError;
overload selector(static "captureOutput:didOutputAudioSampleBuffer:fromConnection:") = Void, QTCaptureOutput, QTSampleBuffer, QTCaptureConnection;
overload selector(static "captureOutput:didOutputSampleBuffer:fromConnection:") = Void, QTCaptureFileOutput, QTSampleBuffer, QTCaptureConnection;
overload selector(static "captureOutput:didOutputVideoFrame:withSampleBuffer:fromConnection:") = Void, QTCaptureOutput, CVImageBufferRef, QTSampleBuffer, QTCaptureConnection;
overload selector(static "captureOutput:didPauseRecordingToOutputFileAtURL:forConnections:") = Void, QTCaptureFileOutput, NSURL, NSArray;
overload selector(static "captureOutput:didResumeRecordingToOutputFileAtURL:forConnections:") = Void, QTCaptureFileOutput, NSURL, NSArray;
overload selector(static "captureOutput:didStartRecordingToOutputFileAtURL:forConnections:") = Void, QTCaptureFileOutput, NSURL, NSArray;
overload selector(static "captureOutput:mustChangeOutputFileAtURL:forConnections:dueToError:") = Void, QTCaptureFileOutput, NSURL, NSArray, NSError;
overload selector(static "captureOutput:shouldChangeOutputFileAtURL:forConnections:dueToError:") = Bool, QTCaptureFileOutput, NSURL, NSArray, NSError;
overload selector(static "captureOutput:willFinishRecordingToOutputFileAtURL:forConnections:dueToError:") = Void, QTCaptureFileOutput, NSURL, NSArray, NSError;
overload selector(static "captureOutput:willStartRecordingToOutputFileAtURL:forConnections:") = Void, QTCaptureFileOutput, NSURL, NSArray;
overload selector(static "captureSession") = QTCaptureSession;
overload selector(static "cascadeTopLeftFromPoint:") = NSPoint, NSPoint;
overload selector(static "caseInsensitiveCompare:") = Int, NSString;
overload selector(static "caseSensitive") = Bool;
overload selector(static "catalogNameComponent") = NSString;
overload selector(static "cell") = Id;
overload selector(static "cellAtIndex:") = Id, Int;
overload selector(static "cellAtRow:column:") = Id, Int, Int;
overload selector(static "cellAttribute:") = Int, UInt;
overload selector(static "cellBackgroundColor") = NSColor;
overload selector(static "cellBaselineOffset") = NSPoint;
overload selector(static "cellClass") = Id;
overload selector(static "cellFrameAtRow:column:") = NSRect, Int, Int;
overload selector(static "cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, NSTextContainer, NSRect, NSPoint, UInt;
overload selector(static "cellPrototype") = Id;
overload selector(static "cellSize") = NSSize;
overload selector(static "cellSizeForBounds:") = NSSize, NSRect;
overload selector(static "cellWithTag:") = Id, Int;
overload selector(static "cells") = NSArray;
overload selector(static "center") = Void;
overload selector(static "centerScanRect:") = NSRect, NSRect;
overload selector(static "centerSelectionInVisibleArea:") = Void, Id;
overload selector(static "certificates") = NSArray;
overload selector(static "changeAttributes:") = Void, Id;
overload selector(static "changeCaseOfLetter:") = Void, Id;
overload selector(static "changeColor:") = Void, Id;
overload selector(static "changeCount") = Int;
overload selector(static "changeCurrentDirectoryPath:") = Bool, NSString;
overload selector(static "changeDocumentBackgroundColor:") = Void, Id;
overload selector(static "changeFileAttributes:atPath:") = Bool, NSDictionary, NSString;
overload selector(static "changeFont:") = Void, Id;
overload selector(static "changeInLength") = Int;
overload selector(static "changeSpelling:") = Void, Id;
overload selector(static "changeWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
overload selector(static "changedValues") = NSDictionary;
overload selector(static "channelMapping") = NSArray;
overload selector(static "chapterCount") = Int;
overload selector(static "chapterIndexForTime:") = Int, QTTime;
overload selector(static "chapters") = NSArray;
overload selector(static "charValue") = CChar;
overload selector(static "characterAtIndex:") = UShort, UInt;
overload selector(static "characterCollection") = UInt;
overload selector(static "characterDirectionForLanguage:") = UInt, NSString;
overload selector(static "characterEncoding") = NSString;
overload selector(static "characterIdentifier") = UInt;
overload selector(static "characterIndexForGlyphAtIndex:") = UInt, UInt;
overload selector(static "characterIndexForInsertionAtPoint:") = UInt, NSPoint;
overload selector(static "characterIndexForPoint:") = UInt, NSPoint;
overload selector(static "characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:") = UInt, NSPoint, NSTextContainer, Pointer[Float];
overload selector(static "characterIndexForPoint:tracking:inMarkedRange:") = Int, NSPoint, Int, Pointer[Bool];
overload selector(static "characterIsMember:") = Bool, UShort;
overload selector(static "characterRangeForGlyphRange:actualGlyphRange:") = NSRange, NSRange, NSRangePointer;
overload selector(static "characterSetWithBitmapRepresentation:") = Id, NSData;
overload selector(static "characterSetWithCharactersInString:") = Id, NSString;
overload selector(static "characterSetWithContentsOfFile:") = Id, NSString;
overload selector(static "characterSetWithRange:") = Id, NSRange;
overload selector(static "characters") = Id;
overload selector(static "charactersIgnoringModifiers") = NSString;
overload selector(static "charactersToBeSkipped") = NSCharacterSet;
overload selector(static "checkForRemovableMedia") = Void;
overload selector(static "checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:") = NSRange, NSString, Int, NSString, Bool, Int, Pointer[NSArray];
overload selector(static "checkResourceIsReachableAndReturnError:") = Bool, Pointer[NSError];
overload selector(static "checkSpaceForParts") = Void;
overload selector(static "checkSpelling:") = Void, Id;
overload selector(static "checkSpellingOfString:startingAt:") = NSRange, NSString, Int;
overload selector(static "checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:") = NSRange, NSString, Int, NSString, Bool, Int, Pointer[Int];
overload selector(static "checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:") = NSArray, NSString, NSRange, UInt64, NSDictionary, Int, Pointer[NSOrthography], Pointer[Int];
overload selector(static "checkTextInDocument:") = Void, Id;
overload selector(static "checkTextInRange:types:options:") = Void, NSRange, UInt64, NSDictionary;
overload selector(static "checkTextInSelection:") = Void, Id;
overload selector(static "childAtIndex:") = NSXMLNode, UInt;
overload selector(static "childCount") = UInt;
overload selector(static "childNodes") = NSArray;
overload selector(static "childSpecifier") = NSScriptObjectSpecifier;
overload selector(static "childWindows") = NSArray;
overload selector(static "children") = NSArray;
overload selector(static "childrenKeyPath") = NSString;
overload selector(static "childrenKeyPathForNode:") = NSString, NSTreeNode;
overload selector(static "class") = Id;
overload selector(static "classAttributes") = NSDictionary;
overload selector(static "classCode") = CULong;
overload selector(static "classDescription") = NSClassDescription;
overload selector(static "classDescriptionForClass:") = Id, Id;
overload selector(static "classDescriptionForKey:") = NSScriptClassDescription, NSString;
overload selector(static "classDescriptionWithAppleEventCode:") = NSScriptClassDescription, CULong;
overload selector(static "classDescriptionsInSuite:") = NSDictionary, NSString;
overload selector(static "classFallbacksForKeyedArchiver") = NSArray;
overload selector(static "classForArchiver") = Id;
overload selector(static "classForClassName:") = Id, NSString;
overload selector(static "classForCoder") = Id;
overload selector(static "classForKeyedArchiver") = Id;
overload selector(static "classForKeyedUnarchiver") = Id;
overload selector(static "classForPortCoder") = Id;
overload selector(static "className") = NSString;
overload selector(static "classNameDecodedForArchiveClassName:") = NSString, NSString;
overload selector(static "classNameEncodedForTrueClassName:") = NSString, NSString;
overload selector(static "classNameForClass:") = NSString, Id;
overload selector(static "classNamed:") = Id, NSString;
overload selector(static "cleanUpAfterDragOperation") = Void;
overload selector(static "cleanUpOperation") = Void;
overload selector(static "clear") = Void;
overload selector(static "clear:") = Void, Id;
overload selector(static "clearCaches") = Void;
overload selector(static "clearColor") = NSColor;
overload selector(static "clearContents") = Int;
overload selector(static "clearCurrentContext") = Void;
overload selector(static "clearDrawable") = Void;
overload selector(static "clearGLContext") = Void;
overload selector(static "clearRecentDocuments:") = Void, Id;
overload selector(static "clearStartAnimation") = Void;
overload selector(static "clearStopAnimation") = Void;
overload selector(static "clearsFilterPredicateOnInsertion") = Bool;
overload selector(static "clickCount") = Int;
overload selector(static "clickedColumn") = Int;
overload selector(static "clickedOnLink:atIndex:") = Void, Id, UInt;
overload selector(static "clickedPathComponentCell") = NSPathComponentCell;
overload selector(static "clickedRow") = Int;
overload selector(static "client") = Id;
overload selector(static "clientView") = NSView;
overload selector(static "clipRect:") = Void, NSRect;
overload selector(static "close") = Void;
overload selector(static "close:") = Void, Id;
overload selector(static "closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector(static "closeFile") = Void;
overload selector(static "closePath") = Void;
overload selector(static "closeSpellDocumentWithTag:") = Void, Int;
overload selector(static "closedHandCursor") = NSCursor;
overload selector(static "closestTickMarkValueToValue:") = Double, Double;
overload selector(static "code") = Int;
overload selector(static "coerceToDescriptorType:") = NSAppleEventDescriptor, CULong;
overload selector(static "coerceValue:forKey:") = Id, Id, NSString;
overload selector(static "coerceValue:toClass:") = Id, Id, Id;
overload selector(static "collapseItem:") = Void, Id;
overload selector(static "collapseItem:collapseChildren:") = Void, Id, Bool;
overload selector(static "collapsesBorders") = Bool;
overload selector(static "collectExhaustively") = Void;
overload selector(static "collectIfNeeded") = Void;
overload selector(static "collection") = Id;
overload selector(static "collectionBehavior") = UInt;
overload selector(static "collectionNames") = NSArray;
overload selector(static "collectionView") = NSCollectionView;
overload selector(static "collectionView:acceptDrop:index:dropOperation:") = Bool, NSCollectionView, Id, Int, Int;
overload selector(static "collectionView:canDragItemsAtIndexes:withEvent:") = Bool, NSCollectionView, NSIndexSet, NSEvent;
overload selector(static "collectionView:draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSCollectionView, NSIndexSet, NSEvent, NSPointPointer;
overload selector(static "collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:") = NSArray, NSCollectionView, NSURL, NSIndexSet;
overload selector(static "collectionView:validateDrop:proposedIndex:dropOperation:") = UInt, NSCollectionView, Id, Pointer[Int], Pointer[Int];
overload selector(static "collectionView:writeItemsAtIndexes:toPasteboard:") = Bool, NSCollectionView, NSIndexSet, NSPasteboard;
overload selector(static "color") = NSColor;
overload selector(static "colorAtX:y:") = NSColor, Int, Int;
overload selector(static "colorForControlTint:") = NSColor, UInt;
overload selector(static "colorFromPasteboard:") = NSColor, NSPasteboard;
overload selector(static "colorListNamed:") = NSColorList, NSString;
overload selector(static "colorNameComponent") = NSString;
overload selector(static "colorPanel") = NSColorPanel;
overload selector(static "colorRenderingIntent") = Int;
overload selector(static "colorSpace") = NSColorSpace;
overload selector(static "colorSpaceModel") = Int;
overload selector(static "colorSpaceName") = NSString;
overload selector(static "colorSyncProfile") = RawPointer;
overload selector(static "colorUsingColorSpace:") = NSColor, NSColorSpace;
overload selector(static "colorUsingColorSpaceName:") = NSColor, NSString;
overload selector(static "colorUsingColorSpaceName:device:") = NSColor, NSString, NSDictionary;
overload selector(static "colorWithAlphaComponent:") = NSColor, Float;
overload selector(static "colorWithCGColor:") = CIColor, CGColorRef;
overload selector(static "colorWithCIColor:") = NSColor, CIColor;
overload selector(static "colorWithCalibratedHue:saturation:brightness:alpha:") = NSColor, Float, Float, Float, Float;
overload selector(static "colorWithCalibratedRed:green:blue:alpha:") = NSColor, Float, Float, Float, Float;
overload selector(static "colorWithCalibratedWhite:alpha:") = NSColor, Float, Float;
overload selector(static "colorWithCatalogName:colorName:") = NSColor, NSString, NSString;
overload selector(static "colorWithColorSpace:components:count:") = NSColor, NSColorSpace, Pointer[Float], Int;
overload selector(static "colorWithDeviceCyan:magenta:yellow:black:alpha:") = NSColor, Float, Float, Float, Float, Float;
overload selector(static "colorWithDeviceHue:saturation:brightness:alpha:") = NSColor, Float, Float, Float, Float;
overload selector(static "colorWithDeviceRed:green:blue:alpha:") = NSColor, Float, Float, Float, Float;
overload selector(static "colorWithDeviceWhite:alpha:") = NSColor, Float, Float;
overload selector(static "colorWithKey:") = NSColor, NSString;
overload selector(static "colorWithPatternImage:") = NSColor, NSImage;
overload selector(static "colorWithRed:green:blue:") = CIColor, Float, Float, Float;
overload selector(static "colorWithRed:green:blue:alpha:") = CIColor, Float, Float, Float, Float;
overload selector(static "colorWithString:") = CIColor, NSString;
overload selector(static "colorizeByMappingGray:toColor:blackMapping:whiteMapping:") = Void, Float, NSColor, NSColor, NSColor;
overload selector(static "colors") = NSArray;
overload selector(static "columnAtPoint:") = Int, NSPoint;
overload selector(static "columnAutoresizingStyle") = UInt;
overload selector(static "columnContentWidthForColumnWidth:") = Float, Float;
overload selector(static "columnIndexesInRect:") = NSIndexSet, NSRect;
overload selector(static "columnNumber") = Int;
overload selector(static "columnOfMatrix:") = Int, NSMatrix;
overload selector(static "columnResizingType") = UInt;
overload selector(static "columnSpan") = Int;
overload selector(static "columnWidthForColumnContentWidth:") = Float, Float;
overload selector(static "columnWithIdentifier:") = Int, Id;
overload selector(static "columnsAutosaveName") = NSString;
overload selector(static "columnsInRect:") = NSRange, NSRect;
overload selector(static "comboBox:completedString:") = NSString, NSComboBox, NSString;
overload selector(static "comboBox:indexOfItemWithStringValue:") = UInt, NSComboBox, NSString;
overload selector(static "comboBox:objectValueForItemAtIndex:") = Id, NSComboBox, Int;
overload selector(static "comboBoxCell:completedString:") = NSString, NSComboBoxCell, NSString;
overload selector(static "comboBoxCell:indexOfItemWithStringValue:") = UInt, NSComboBoxCell, NSString;
overload selector(static "comboBoxCell:objectValueForItemAtIndex:") = Id, NSComboBoxCell, Int;
overload selector(static "comboBoxSelectionDidChange:") = Void, NSNotification;
overload selector(static "comboBoxSelectionIsChanging:") = Void, NSNotification;
overload selector(static "comboBoxWillDismiss:") = Void, NSNotification;
overload selector(static "comboBoxWillPopUp:") = Void, NSNotification;
overload selector(static "commandClassName") = NSString;
overload selector(static "commandDescription") = NSScriptCommandDescription;
overload selector(static "commandDescriptionWithAppleEventClass:andAppleEventCode:") = NSScriptCommandDescription, CULong, CULong;
overload selector(static "commandDescriptionsInSuite:") = NSDictionary, NSString;
overload selector(static "commandName") = NSString;
overload selector(static "commands") = NSArray;
overload selector(static "comment") = NSString;
overload selector(static "commentURL") = NSURL;
overload selector(static "commentWithStringValue:") = Id, NSString;
overload selector(static "commit") = Void;
overload selector(static "commitEditing") = Bool;
overload selector(static "commitEditingWithDelegate:didCommitSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector(static "committedValuesForKeys:") = NSDictionary, NSArray;
overload selector(static "commonISOCurrencyCodes") = NSArray;
overload selector(static "commonPrefixWithString:options:") = NSString, NSString, UInt;
overload selector(static "compact") = Void;
overload selector(static "comparator") = NSComparator;
overload selector(static "compare:") = Int, NSNumber;
overload selector(static "compare:options:") = Int, NSString, UInt;
overload selector(static "compare:options:range:") = Int, NSString, UInt, NSRange;
overload selector(static "compare:options:range:locale:") = Int, NSString, UInt, NSRange, Id;
overload selector(static "compareObject:toObject:") = Int, Id, Id;
overload selector(static "comparisonPredicateModifier") = UInt;
overload selector(static "compileAndReturnError:") = Bool, Pointer[NSDictionary];
overload selector(static "complete:") = Void, Id;
overload selector(static "completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:") = UInt, Pointer[NSString], Bool, Pointer[NSArray], NSArray;
overload selector(static "completedString:") = NSString, NSString;
overload selector(static "completes") = Bool;
overload selector(static "completionBlock") = UnknownType;
overload selector(static "completionDelay") = Double;
overload selector(static "completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, Int;
overload selector(static "completionsForPartialWordRange:indexOfSelectedItem:") = NSArray, NSRange, Pointer[Int];
overload selector(static "components") = NSArray;
overload selector(static "components:fromDate:") = NSDateComponents, UInt, NSDate;
overload selector(static "components:fromDate:toDate:options:") = NSDateComponents, UInt, NSDate, NSDate, UInt;
overload selector(static "componentsFromLocaleIdentifier:") = NSDictionary, NSString;
overload selector(static "componentsJoinedByString:") = NSString, NSString;
overload selector(static "componentsSeparatedByCharactersInSet:") = NSArray, NSCharacterSet;
overload selector(static "componentsSeparatedByString:") = NSArray, NSString;
overload selector(static "componentsToDisplayForPath:") = NSArray, NSString;
overload selector(static "compositeToPoint:fromRect:operation:") = Void, NSPoint, NSRect, UInt;
overload selector(static "compositeToPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, UInt, Float;
overload selector(static "compositeToPoint:operation:") = Void, NSPoint, UInt;
overload selector(static "compositeToPoint:operation:fraction:") = Void, NSPoint, UInt, Float;
overload selector(static "compositingFilter") = Id;
overload selector(static "compositingOperation") = UInt;
overload selector(static "compoundPredicateType") = UInt;
overload selector(static "compoundTypes") = NSArray;
overload selector(static "compressionOptionsForConnection:") = QTCompressionOptions, QTCaptureConnection;
overload selector(static "compressionOptionsIdentifiersForMediaType:") = NSArray, NSString;
overload selector(static "compressionOptionsWithIdentifier:") = Id, NSString;
overload selector(static "concat") = Void;
overload selector(static "concludeDragOperation:") = Void, Id;
overload selector(static "condition") = Int;
overload selector(static "configurationDictionary") = NSDictionary;
overload selector(static "configurationName") = NSString;
overload selector(static "configurations") = NSArray;
overload selector(static "configureAsServer") = Void;
overload selector(static "configurePersistentStoreCoordinatorForURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
overload selector(static "configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:") = Bool, NSURL, NSString, NSString, NSDictionary, Pointer[NSError];
overload selector(static "confinementRectForMenu:onScreen:") = NSRect, NSMenu, NSScreen;
overload selector(static "conformsToProtocol:") = Bool, Id;
overload selector(static "connectObject:withKey:toObject:withKey:") = Void, Id, NSString, Id, NSString;
overload selector(static "connection") = NSConnection;
overload selector(static "connection:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLConnection, NSURLProtectionSpace;
overload selector(static "connection:didCancelAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
overload selector(static "connection:didFailWithError:") = Void, NSURLConnection, NSError;
overload selector(static "connection:didReceiveAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
overload selector(static "connection:didReceiveData:") = Void, NSURLConnection, NSData;
overload selector(static "connection:didReceiveResponse:") = Void, NSURLConnection, NSURLResponse;
overload selector(static "connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:") = Void, NSURLConnection, Int, Int, Int;
overload selector(static "connection:handleRequest:") = Bool, NSConnection, NSDistantObjectRequest;
overload selector(static "connection:needNewBodyStream:") = NSInputStream, NSURLConnection, NSURLRequest;
overload selector(static "connection:shouldMakeNewConnection:") = Bool, NSConnection, NSConnection;
overload selector(static "connection:willCacheResponse:") = NSCachedURLResponse, NSURLConnection, NSCachedURLResponse;
overload selector(static "connection:willSendRequest:redirectResponse:") = NSURLRequest, NSURLConnection, NSURLRequest, NSURLResponse;
overload selector(static "connectionAttributes") = NSDictionary;
overload selector(static "connectionDidFinishLoading:") = Void, NSURLConnection;
overload selector(static "connectionForProxy") = NSConnection;
overload selector(static "connectionShouldUseCredentialStorage:") = Bool, NSURLConnection;
overload selector(static "connectionWithReceivePort:sendPort:") = Id, NSPort, NSPort;
overload selector(static "connectionWithRegisteredName:host:") = Id, NSString, NSString;
overload selector(static "connectionWithRegisteredName:host:usingNameServer:") = Id, NSString, NSString, NSPortNameServer;
overload selector(static "connectionWithRequest:delegate:") = NSURLConnection, NSURLRequest, Id;
overload selector(static "connections") = NSArray;
overload selector(static "constantValue") = Id;
overload selector(static "constrainFrameRect:toScreen:") = NSRect, NSRect, NSScreen;
overload selector(static "constrainScrollPoint:") = NSPoint, NSPoint;
overload selector(static "constraintWithAttribute:relativeTo:attribute:") = Id, Int, NSString, Int;
overload selector(static "constraintWithAttribute:relativeTo:attribute:offset:") = Id, Int, NSString, Int, Float;
overload selector(static "constraintWithAttribute:relativeTo:attribute:scale:offset:") = Id, Int, NSString, Int, Float, Float;
overload selector(static "constraints") = NSArray;
overload selector(static "containerClassDescription") = NSScriptClassDescription;
overload selector(static "containerIsObjectBeingTested") = Bool;
overload selector(static "containerIsRangeContainerObject") = Bool;
overload selector(static "containerSize") = NSSize;
overload selector(static "containerSpecifier") = NSScriptObjectSpecifier;
overload selector(static "containsAttachments") = Bool;
overload selector(static "containsIndex:") = Bool, UInt;
overload selector(static "containsIndexes:") = Bool, NSIndexSet;
overload selector(static "containsIndexesInRange:") = Bool, NSRange;
overload selector(static "containsObject:") = Bool, Id;
overload selector(static "containsPoint:") = Bool, NSPoint;
overload selector(static "containsValueForKey:") = Bool, NSString;
overload selector(static "content") = Id;
overload selector(static "contentAspectRatio") = NSSize;
overload selector(static "contentBorderThicknessForEdge:") = Float, NSRectEdge;
overload selector(static "contentFilters") = NSArray;
overload selector(static "contentMaxSize") = NSSize;
overload selector(static "contentMinSize") = NSSize;
overload selector(static "contentRect") = NSRect;
overload selector(static "contentRectForFrameRect:") = NSRect, NSRect;
overload selector(static "contentRectForFrameRect:styleMask:") = NSRect, NSRect, UInt;
overload selector(static "contentResizeIncrements") = NSSize;
overload selector(static "contentSize") = NSSize;
overload selector(static "contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, UInt;
overload selector(static "contentView") = Id;
overload selector(static "contentViewMargins") = NSSize;
overload selector(static "contentWidth") = Float;
overload selector(static "contentWidthValueType") = UInt;
overload selector(static "contents") = Id;
overload selector(static "contentsAreFlipped") = Bool;
overload selector(static "contentsAtPath:") = NSData, NSString;
overload selector(static "contentsCenter") = CGRect;
overload selector(static "contentsEqualAtPath:andPath:") = Bool, NSString, NSString;
overload selector(static "contentsGravity") = NSString;
overload selector(static "contentsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
overload selector(static "contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:") = NSArray, NSURL, NSArray, UInt, Pointer[NSError];
overload selector(static "contentsRect") = CGRect;
overload selector(static "context") = NSGraphicsContext;
overload selector(static "contextExpression") = NSExpression;
overload selector(static "contextHelpForKey:") = NSAttributedString, NSString;
overload selector(static "contextHelpForObject:") = NSAttributedString, Id;
overload selector(static "contextMenuRepresentation") = Id;
overload selector(static "contextShouldIgnoreUnmodeledPropertyChanges") = Bool;
overload selector(static "contextWithCGContext:options:") = CIContext, CGContextRef, NSDictionary;
overload selector(static "contextWithCGLContext:pixelFormat:colorSpace:options:") = CIContext, CGLContextObj, CGLPixelFormatObj, CGColorSpaceRef, NSDictionary;
overload selector(static "contextWithCGLContext:pixelFormat:options:") = CIContext, CGLContextObj, CGLPixelFormatObj, NSDictionary;
overload selector(static "contextualMenuCursor") = NSCursor;
overload selector(static "continueSpeaking") = Void;
overload selector(static "continueTracking:at:inView:") = Bool, NSPoint, NSPoint, NSView;
overload selector(static "continueWithoutCredentialForAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
overload selector(static "control:didFailToFormatString:errorDescription:") = Bool, NSControl, NSString, NSString;
overload selector(static "control:didFailToValidatePartialString:errorDescription:") = Void, NSControl, NSString, NSString;
overload selector(static "control:isValidObject:") = Bool, NSControl, Id;
overload selector(static "control:textShouldBeginEditing:") = Bool, NSControl, NSText;
overload selector(static "control:textShouldEndEditing:") = Bool, NSControl, NSText;
overload selector(static "control:textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSControl, NSTextView, NSArray, NSRange, Pointer[Int];
overload selector(static "control:textView:doCommandBySelector:") = Bool, NSControl, NSTextView, SelectorHandle;
overload selector(static "controlAlternatingRowBackgroundColors") = NSArray;
overload selector(static "controlBackgroundColor") = NSColor;
overload selector(static "controlCharacterSet") = Id;
overload selector(static "controlColor") = NSColor;
overload selector(static "controlContentFontOfSize:") = NSFont, Float;
overload selector(static "controlDarkShadowColor") = NSColor;
overload selector(static "controlHighlightColor") = NSColor;
overload selector(static "controlLightHighlightColor") = NSColor;
overload selector(static "controlPointBounds") = NSRect;
overload selector(static "controlShadowColor") = NSColor;
overload selector(static "controlSize") = UInt;
overload selector(static "controlTextColor") = NSColor;
overload selector(static "controlTextDidBeginEditing:") = Void, NSNotification;
overload selector(static "controlTextDidChange:") = Void, NSNotification;
overload selector(static "controlTextDidEndEditing:") = Void, NSNotification;
overload selector(static "controlTint") = UInt;
overload selector(static "controlView") = NSView;
overload selector(static "controllerBarHeight") = Float;
overload selector(static "conversation") = Id;
overload selector(static "conversationIdentifier") = Int;
overload selector(static "convertAttributes:") = NSDictionary, NSDictionary;
overload selector(static "convertBaseToScreen:") = NSPoint, NSPoint;
overload selector(static "convertFont:") = NSFont, NSFont;
overload selector(static "convertFont:toFace:") = NSFont, NSFont, NSString;
overload selector(static "convertFont:toFamily:") = NSFont, NSFont, NSString;
overload selector(static "convertFont:toHaveTrait:") = NSFont, NSFont, UInt;
overload selector(static "convertFont:toNotHaveTrait:") = NSFont, NSFont, UInt;
overload selector(static "convertFont:toSize:") = NSFont, NSFont, Float;
overload selector(static "convertFontTraits:") = UInt, UInt;
overload selector(static "convertPoint:fromLayer:") = CGPoint, CGPoint, CALayer;
overload selector(static "convertPoint:fromView:") = NSPoint, NSPoint, NSView;
overload selector(static "convertPoint:toLayer:") = CGPoint, CGPoint, CALayer;
overload selector(static "convertPoint:toView:") = NSPoint, NSPoint, NSView;
overload selector(static "convertPointFromBase:") = NSPoint, NSPoint;
overload selector(static "convertPointToBase:") = NSPoint, NSPoint;
overload selector(static "convertRect:fromLayer:") = CGRect, CGRect, CALayer;
overload selector(static "convertRect:fromView:") = NSRect, NSRect, NSView;
overload selector(static "convertRect:toLayer:") = CGRect, CGRect, CALayer;
overload selector(static "convertRect:toView:") = NSRect, NSRect, NSView;
overload selector(static "convertRectFromBase:") = NSRect, NSRect;
overload selector(static "convertRectToBase:") = NSRect, NSRect;
overload selector(static "convertScreenToBase:") = NSPoint, NSPoint;
overload selector(static "convertSize:fromView:") = NSSize, NSSize, NSView;
overload selector(static "convertSize:toView:") = NSSize, NSSize, NSView;
overload selector(static "convertSizeFromBase:") = NSSize, NSSize;
overload selector(static "convertSizeToBase:") = NSSize, NSSize;
overload selector(static "convertTime:fromLayer:") = Double, Double, CALayer;
overload selector(static "convertTime:toLayer:") = Double, Double, CALayer;
overload selector(static "convertWeight:ofFont:") = NSFont, Bool, NSFont;
overload selector(static "cookieAcceptPolicy") = UInt;
overload selector(static "cookieWithProperties:") = Id, NSDictionary;
overload selector(static "cookies") = NSArray;
overload selector(static "cookiesForURL:") = NSArray, NSURL;
overload selector(static "cookiesWithResponseHeaderFields:forURL:") = NSArray, NSDictionary, NSURL;
overload selector(static "copiesOnScroll") = Bool;
overload selector(static "copy") = Id;
overload selector(static "copy:") = Void, Id;
overload selector(static "copyAttributesFromContext:withMask:") = Void, NSOpenGLContext, UInt;
overload selector(static "copyCGLContextForPixelFormat:") = CGLContextObj, CGLPixelFormatObj;
overload selector(static "copyCGLPixelFormatForDisplayMask:") = CGLPixelFormatObj, UInt;
overload selector(static "copyFont:") = Void, Id;
overload selector(static "copyItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector(static "copyItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector(static "copyPath:toPath:handler:") = Bool, NSString, NSString, Id;
overload selector(static "copyRuler:") = Void, Id;
overload selector(static "copyScriptingValue:forKey:withProperties:") = Id, Id, NSString, NSDictionary;
overload selector(static "copyWithZone:") = Id, Pointer[NSZone];
overload selector(static "cornerRadius") = Float;
overload selector(static "cornerView") = NSView;
overload selector(static "correctionCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "count") = UInt;
overload selector(static "countByEnumeratingWithState:objects:count:") = UInt, Pointer[NSFastEnumerationState], Pointer[Id], UInt;
overload selector(static "countForFetchRequest:error:") = UInt, NSFetchRequest, Pointer[NSError];
overload selector(static "countForObject:") = UInt, Id;
overload selector(static "countKeyPath") = NSString;
overload selector(static "countKeyPathForNode:") = NSString, NSTreeNode;
overload selector(static "countLimit") = UInt;
overload selector(static "countOfIndexesInRange:") = UInt, NSRange;
overload selector(static "countWordsInString:language:") = Int, NSString, NSString;
overload selector(static "coveredCharacterSet") = NSCharacterSet;
overload selector(static "createCGImage:fromRect:") = CGImageRef, CIImage, CGRect;
overload selector(static "createCGImage:fromRect:format:colorSpace:") = CGImageRef, CIImage, CGRect, Int, CGColorSpaceRef;
overload selector(static "createCGLayerWithSize:info:") = CGLayerRef, CGSize, CFDictionaryRef;
overload selector(static "createClassDescription") = NSScriptClassDescription;
overload selector(static "createCommandInstance") = NSScriptCommand;
overload selector(static "createCommandInstanceWithZone:") = NSScriptCommand, Pointer[NSZone];
overload selector(static "createContext") = NSGraphicsContext;
overload selector(static "createConversationForConnection:") = Id, NSConnection;
overload selector(static "createDestinationInstancesForSourceInstance:entityMapping:manager:error:") = Bool, NSManagedObject, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector(static "createDirectoryAtPath:attributes:") = Bool, NSString, NSDictionary;
overload selector(static "createDirectoryAtPath:withIntermediateDirectories:attributes:error:") = Bool, NSString, Bool, NSDictionary, Pointer[NSError];
overload selector(static "createFileAtPath:contents:attributes:") = Bool, NSString, NSData, NSDictionary;
overload selector(static "createRelationshipsForDestinationInstance:entityMapping:manager:error:") = Bool, NSManagedObject, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector(static "createSymbolicLinkAtPath:pathContent:") = Bool, NSString, NSString;
overload selector(static "createSymbolicLinkAtPath:withDestinationPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector(static "createTexture:fromView:internalFormat:") = Void, UInt, NSView, UInt;
overload selector(static "credentialForTrust:") = NSURLCredential, SecTrustRef;
overload selector(static "credentialWithIdentity:certificates:persistence:") = NSURLCredential, SecIdentityRef, NSArray, UInt;
overload selector(static "credentialWithUser:password:persistence:") = NSURLCredential, NSString, NSString, UInt;
overload selector(static "credentialsForProtectionSpace:") = NSDictionary, NSURLProtectionSpace;
overload selector(static "criteriaForRow:") = NSArray, Int;
overload selector(static "criteriaKeyPath") = NSString;
overload selector(static "criticalValue") = Double;
overload selector(static "crosshairCursor") = NSCursor;
overload selector(static "currencyCode") = NSString;
overload selector(static "currencyDecimalSeparator") = NSString;
overload selector(static "currencyGroupingSeparator") = NSString;
overload selector(static "currencySymbol") = NSString;
overload selector(static "currentAppleEvent") = NSAppleEventDescriptor;
overload selector(static "currentApplication") = NSRunningApplication;
overload selector(static "currentCalendar") = Id;
overload selector(static "currentCommand") = NSScriptCommand;
overload selector(static "currentContext") = Id;
overload selector(static "currentContextDrawingToScreen") = Bool;
overload selector(static "currentControlTint") = UInt;
overload selector(static "currentConversation") = Id;
overload selector(static "currentCursor") = NSCursor;
overload selector(static "currentDirectory") = NSString;
overload selector(static "currentDirectoryPath") = NSString;
overload selector(static "currentDiskUsage") = UInt;
overload selector(static "currentDocument") = Id;
overload selector(static "currentEditor") = NSText;
overload selector(static "currentEntityMapping") = NSEntityMapping;
overload selector(static "currentEvent") = NSEvent;
overload selector(static "currentFontAction") = UInt;
overload selector(static "currentFrameImage") = NSImage;
overload selector(static "currentHandler") = NSAssertionHandler;
overload selector(static "currentHost") = NSHost;
overload selector(static "currentInputContext") = NSTextInputContext;
overload selector(static "currentInputManager") = NSInputManager;
overload selector(static "currentLocale") = Id;
overload selector(static "currentMemoryUsage") = UInt;
overload selector(static "currentMode") = NSString;
overload selector(static "currentOperation") = NSPrintOperation;
overload selector(static "currentPage") = Int;
overload selector(static "currentParagraphStyle") = NSParagraphStyle;
overload selector(static "currentPoint") = NSPoint;
overload selector(static "currentProgress") = Float;
overload selector(static "currentQueue") = Id;
overload selector(static "currentReplyAppleEvent") = NSAppleEventDescriptor;
overload selector(static "currentRunLoop") = NSRunLoop;
overload selector(static "currentSystemCursor") = NSCursor;
overload selector(static "currentSystemPresentationOptions") = UInt;
overload selector(static "currentTextContainer") = NSTextContainer;
overload selector(static "currentThread") = NSThread;
overload selector(static "currentTime") = Double;
overload selector(static "currentValue") = Float;
overload selector(static "currentVirtualScreen") = Int;
overload selector(static "cursorUpdate:") = Void, NSEvent;
overload selector(static "curveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
overload selector(static "customSelector") = SelectorHandle;
overload selector(static "customizationPaletteIsRunning") = Bool;
overload selector(static "cut:") = Void, Id;
overload selector(static "cyanColor") = NSColor;
overload selector(static "cyanComponent") = Float;
overload selector(static "cycleToNextInputLanguage:") = Void, Id;
overload selector(static "cycleToNextInputServerInLanguage:") = Void, Id;
overload selector(static "darkGrayColor") = NSColor;
overload selector(static "dashCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "data") = Id;
overload selector(static "data1") = Int;
overload selector(static "data2") = Int;
overload selector(static "dataCell") = Id;
overload selector(static "dataCellForRow:") = Id, Int;
overload selector(static "dataForKey:") = NSData, NSString;
overload selector(static "dataForType:") = NSData, NSString;
overload selector(static "dataFromPropertyList:format:errorDescription:") = NSData, Id, UInt, Pointer[NSString];
overload selector(static "dataFromRange:documentAttributes:error:") = NSData, NSRange, NSDictionary, Pointer[NSError];
overload selector(static "dataFromTXTRecordDictionary:") = NSData, NSDictionary;
overload selector(static "dataOfType:error:") = NSData, NSString, Pointer[NSError];
overload selector(static "dataRef") = Handle;
overload selector(static "dataRefData") = NSData;
overload selector(static "dataRefType") = NSString;
overload selector(static "dataReferenceWithDataRef:type:") = Id, Handle, NSString;
overload selector(static "dataReferenceWithDataRefData:type:") = Id, NSData, NSString;
overload selector(static "dataReferenceWithReferenceToData:") = Id, NSData;
overload selector(static "dataReferenceWithReferenceToData:name:MIMEType:") = Id, NSData, NSString, NSString;
overload selector(static "dataReferenceWithReferenceToFile:") = Id, NSString;
overload selector(static "dataReferenceWithReferenceToURL:") = Id, NSURL;
overload selector(static "dataRepresentationOfType:") = NSData, NSString;
overload selector(static "dataSource") = Id;
overload selector(static "dataUsingEncoding:") = NSData, UInt;
overload selector(static "dataUsingEncoding:allowLossyConversion:") = NSData, UInt, Bool;
overload selector(static "dataWithBytes:length:") = Id, RawPointer, UInt;
overload selector(static "dataWithBytesNoCopy:length:") = Id, RawPointer, UInt;
overload selector(static "dataWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, UInt, Bool;
overload selector(static "dataWithCapacity:") = Id, UInt;
overload selector(static "dataWithContentsOfFile:") = Id, NSString;
overload selector(static "dataWithContentsOfFile:options:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "dataWithContentsOfMappedFile:") = Id, NSString;
overload selector(static "dataWithContentsOfURL:") = Id, NSURL;
overload selector(static "dataWithContentsOfURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "dataWithData:") = Id, NSData;
overload selector(static "dataWithEPSInsideRect:") = NSData, NSRect;
overload selector(static "dataWithLength:") = Id, UInt;
overload selector(static "dataWithPDFInsideRect:") = NSData, NSRect;
overload selector(static "dataWithPropertyList:format:options:error:") = NSData, Id, UInt, UInt, Pointer[NSError];
overload selector(static "date") = Id;
overload selector(static "dateByAddingComponents:toDate:options:") = NSDate, NSDateComponents, NSDate, UInt;
overload selector(static "dateByAddingTimeInterval:") = Id, Double;
overload selector(static "dateByAddingYears:months:days:hours:minutes:seconds:") = NSCalendarDate, Int, Int, Int, Int, Int, Int;
overload selector(static "dateCheckingResultWithRange:date:") = NSTextCheckingResult, NSRange, NSDate;
overload selector(static "dateCheckingResultWithRange:date:timeZone:duration:") = NSTextCheckingResult, NSRange, NSDate, NSTimeZone, Double;
overload selector(static "dateFormat") = NSString;
overload selector(static "dateFormatFromTemplate:options:locale:") = NSString, NSString, UInt, NSLocale;
overload selector(static "dateFromComponents:") = NSDate, NSDateComponents;
overload selector(static "dateFromString:") = NSDate, NSString;
overload selector(static "datePickerCell:validateProposedDateValue:timeInterval:") = Void, NSDatePickerCell, Pointer[NSDate], Pointer[Double];
overload selector(static "datePickerElements") = UInt;
overload selector(static "datePickerMode") = UInt;
overload selector(static "datePickerStyle") = UInt;
overload selector(static "dateStyle") = UInt;
overload selector(static "dateValue") = NSDate;
overload selector(static "dateWithCalendarFormat:timeZone:") = NSCalendarDate, NSString, NSTimeZone;
overload selector(static "dateWithNaturalLanguageString:") = Id, NSString;
overload selector(static "dateWithNaturalLanguageString:locale:") = Id, NSString, Id;
overload selector(static "dateWithString:") = Id, NSString;
overload selector(static "dateWithString:calendarFormat:") = Id, NSString, NSString;
overload selector(static "dateWithString:calendarFormat:locale:") = Id, NSString, NSString, Id;
overload selector(static "dateWithTimeInterval:sinceDate:") = Id, Double, NSDate;
overload selector(static "dateWithTimeIntervalSince1970:") = Id, Double;
overload selector(static "dateWithTimeIntervalSinceNow:") = Id, Double;
overload selector(static "dateWithTimeIntervalSinceReferenceDate:") = Id, Double;
overload selector(static "dateWithYear:month:day:hour:minute:second:timeZone:") = Id, Int, UInt, UInt, UInt, UInt, UInt, NSTimeZone;
overload selector(static "day") = Int;
overload selector(static "dayOfCommonEra") = Int;
overload selector(static "dayOfMonth") = Int;
overload selector(static "dayOfWeek") = Int;
overload selector(static "dayOfYear") = Int;
overload selector(static "daylightSavingTimeOffset") = Double;
overload selector(static "daylightSavingTimeOffsetForDate:") = Double, NSDate;
overload selector(static "deactivate") = Void;
overload selector(static "dealloc") = Void;
overload selector(static "decimalDigitCharacterSet") = Id;
overload selector(static "decimalNumberByAdding:") = NSDecimalNumber, NSDecimalNumber;
overload selector(static "decimalNumberByAdding:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector(static "decimalNumberByDividingBy:") = NSDecimalNumber, NSDecimalNumber;
overload selector(static "decimalNumberByDividingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector(static "decimalNumberByMultiplyingBy:") = NSDecimalNumber, NSDecimalNumber;
overload selector(static "decimalNumberByMultiplyingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector(static "decimalNumberByMultiplyingByPowerOf10:") = NSDecimalNumber, Short;
overload selector(static "decimalNumberByMultiplyingByPowerOf10:withBehavior:") = NSDecimalNumber, Short, Id;
overload selector(static "decimalNumberByRaisingToPower:") = NSDecimalNumber, UInt;
overload selector(static "decimalNumberByRaisingToPower:withBehavior:") = NSDecimalNumber, UInt, Id;
overload selector(static "decimalNumberByRoundingAccordingToBehavior:") = NSDecimalNumber, Id;
overload selector(static "decimalNumberBySubtracting:") = NSDecimalNumber, NSDecimalNumber;
overload selector(static "decimalNumberBySubtracting:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector(static "decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, UInt, Short, Bool, Bool, Bool, Bool;
overload selector(static "decimalNumberWithDecimal:") = NSDecimalNumber, NSDecimal;
overload selector(static "decimalNumberWithMantissa:exponent:isNegative:") = NSDecimalNumber, UInt64, Short, Bool;
overload selector(static "decimalNumberWithString:") = NSDecimalNumber, NSString;
overload selector(static "decimalNumberWithString:locale:") = NSDecimalNumber, NSString, Id;
overload selector(static "decimalSeparator") = NSString;
overload selector(static "decimalValue") = NSDecimal;
overload selector(static "declareTypes:owner:") = Int, NSArray, Id;
overload selector(static "decodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], UInt, RawPointer;
overload selector(static "decodeBoolForKey:") = Bool, NSString;
overload selector(static "decodeBytesForKey:returnedLength:") = Pointer[CUChar], NSString, Pointer[UInt];
overload selector(static "decodeBytesWithReturnedLength:") = RawPointer, Pointer[UInt];
overload selector(static "decodeClassName:asClassName:") = Void, NSString, NSString;
overload selector(static "decodeDataObject") = NSData;
overload selector(static "decodeDoubleForKey:") = Double, NSString;
overload selector(static "decodeFloatForKey:") = Float, NSString;
overload selector(static "decodeInt32ForKey:") = Int, NSString;
overload selector(static "decodeInt64ForKey:") = Int64, NSString;
overload selector(static "decodeIntForKey:") = Int, NSString;
overload selector(static "decodeIntegerForKey:") = Int, NSString;
overload selector(static "decodeNXColor") = NSColor;
overload selector(static "decodeNXObject") = Id;
overload selector(static "decodeObject") = Id;
overload selector(static "decodeObjectForKey:") = Id, NSString;
overload selector(static "decodePoint") = NSPoint;
overload selector(static "decodePointForKey:") = NSPoint, NSString;
overload selector(static "decodePortObject") = NSPort;
overload selector(static "decodePropertyList") = Id;
overload selector(static "decodeQTTimeForKey:") = QTTime, NSString;
overload selector(static "decodeQTTimeRangeForKey:") = QTTimeRange, NSString;
overload selector(static "decodeRect") = NSRect;
overload selector(static "decodeRectForKey:") = NSRect, NSString;
overload selector(static "decodeSMPTETimeForKey:") = SMPTETime, NSString;
overload selector(static "decodeSize") = NSSize;
overload selector(static "decodeSizeForKey:") = NSSize, NSString;
overload selector(static "decodeTime") = QTTime;
overload selector(static "decodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
overload varargSelector(static "decodeValuesOfObjCTypes:") = Void, Pointer[CChar];
overload selector(static "decomposableCharacterSet") = Id;
overload selector(static "decomposedStringWithCanonicalMapping") = NSString;
overload selector(static "decomposedStringWithCompatibilityMapping") = NSString;
overload selector(static "decrementSampleUseCount") = Void;
overload selector(static "deepestScreen") = NSScreen;
overload selector(static "defaultActionForKey:") = Id, NSString;
overload selector(static "defaultAnimationForKey:") = Id, NSString;
overload selector(static "defaultAttachmentScaling") = UInt;
overload selector(static "defaultBaselineOffsetForFont:") = Float, NSFont;
overload selector(static "defaultBehavior") = Id;
overload selector(static "defaultButtonCell") = NSButtonCell;
overload selector(static "defaultButtonTitle") = NSString;
overload selector(static "defaultCStringEncoding") = UInt;
overload selector(static "defaultCenter") = Id;
overload selector(static "defaultCollector") = Id;
overload selector(static "defaultColumnWidth") = Float;
overload selector(static "defaultCompletionDelay") = Double;
overload selector(static "defaultConnection") = NSConnection;
overload selector(static "defaultCredentialForProtectionSpace:") = NSURLCredential, NSURLProtectionSpace;
overload selector(static "defaultDate") = NSDate;
overload selector(static "defaultDecimalNumberHandler") = Id;
overload selector(static "defaultDepthLimit") = Int;
overload selector(static "defaultFetchRequest") = NSFetchRequest;
overload selector(static "defaultFlatness") = Float;
overload selector(static "defaultFocusRingType") = UInt;
overload selector(static "defaultFormatterBehavior") = UInt;
overload selector(static "defaultInputDeviceWithMediaType:") = QTCaptureDevice, NSString;
overload selector(static "defaultLineCapStyle") = UInt;
overload selector(static "defaultLineHeightForFont") = Float;
overload selector(static "defaultLineHeightForFont:") = Float, NSFont;
overload selector(static "defaultLineJoinStyle") = UInt;
overload selector(static "defaultLineWidth") = Float;
overload selector(static "defaultManager") = NSFileManager;
overload selector(static "defaultMenu") = NSMenu;
overload selector(static "defaultMiterLimit") = Float;
overload selector(static "defaultNameServerPortNumber") = UShort;
overload selector(static "defaultParagraphStyle") = NSParagraphStyle;
overload selector(static "defaultPixelFormat") = NSOpenGLPixelFormat;
overload selector(static "defaultPlaceholderForMarker:withBinding:") = Id, Id, NSString;
overload selector(static "defaultPrinter") = NSPrinter;
overload selector(static "defaultQueue") = Id;
overload selector(static "defaultSubcontainerAttributeKey") = NSString;
overload selector(static "defaultTabInterval") = Float;
overload selector(static "defaultTimeZone") = NSTimeZone;
overload selector(static "defaultTokenizingCharacterSet") = NSCharacterSet;
overload selector(static "defaultType") = NSString;
overload selector(static "defaultTypesetterBehavior") = Int;
overload selector(static "defaultValue") = Id;
overload selector(static "defaultValueForKey:") = Id, NSString;
overload selector(static "defaultVoice") = NSString;
overload selector(static "defaultWindingRule") = UInt;
overload selector(static "defaultWritingDirectionForLanguage:") = Int, NSString;
overload selector(static "defaults") = NSUserDefaults;
overload selector(static "definition") = CIFilterShape;
overload selector(static "delegate") = Id;
overload selector(static "delete:") = Void, Id;
overload selector(static "deleteBackward:") = Void, Id;
overload selector(static "deleteBackwardByDecomposingPreviousCharacter:") = Void, Id;
overload selector(static "deleteCharactersInRange:") = Void, NSRange;
overload selector(static "deleteCookie:") = Void, NSHTTPCookie;
overload selector(static "deleteForward:") = Void, Id;
overload selector(static "deleteGlyphsInRange:") = Void, NSRange;
overload selector(static "deleteObject:") = Void, NSManagedObject;
overload selector(static "deleteRule") = UInt;
overload selector(static "deleteSegment:") = Void, QTTimeRange;
overload selector(static "deleteToBeginningOfLine:") = Void, Id;
overload selector(static "deleteToBeginningOfParagraph:") = Void, Id;
overload selector(static "deleteToEndOfLine:") = Void, Id;
overload selector(static "deleteToEndOfParagraph:") = Void, Id;
overload selector(static "deleteToMark:") = Void, Id;
overload selector(static "deleteWordBackward:") = Void, Id;
overload selector(static "deleteWordForward:") = Void, Id;
overload selector(static "deletedObjects") = NSSet;
overload selector(static "deletesFileUponFailure") = Bool;
overload selector(static "deliverResult") = Bool;
overload selector(static "deltaX") = Float;
overload selector(static "deltaY") = Float;
overload selector(static "deltaZ") = Float;
overload selector(static "deminiaturize:") = Void, Id;
overload selector(static "dependencies") = NSArray;
overload selector(static "depth") = Int;
overload selector(static "depthLimit") = Int;
overload selector(static "dequeueNotificationsMatching:coalesceMask:") = Void, NSNotification, UInt;
overload selector(static "descendantNodeAtIndexPath:") = NSTreeNode, NSIndexPath;
overload selector(static "descender") = Float;
overload selector(static "description") = NSString;
overload selector(static "descriptionFunction") = CCodePointer[[RawPointer],[NSString]];
overload selector(static "descriptionInStringsFileFormat") = NSString;
overload selector(static "descriptionWithCalendarFormat:") = NSString, NSString;
overload selector(static "descriptionWithCalendarFormat:locale:") = NSString, NSString, Id;
overload selector(static "descriptionWithCalendarFormat:timeZone:locale:") = NSString, NSString, NSTimeZone, Id;
overload selector(static "descriptionWithLocale:") = NSString, Id;
overload selector(static "descriptionWithLocale:indent:") = NSString, Id, UInt;
overload selector(static "descriptor") = NSAppleEventDescriptor;
overload selector(static "descriptorAtIndex:") = NSAppleEventDescriptor, Int;
overload selector(static "descriptorForKeyword:") = NSAppleEventDescriptor, CULong;
overload selector(static "descriptorType") = CULong;
overload selector(static "descriptorWithBoolean:") = NSAppleEventDescriptor, CUChar;
overload selector(static "descriptorWithDescriptorType:bytes:length:") = NSAppleEventDescriptor, CULong, RawPointer, UInt;
overload selector(static "descriptorWithDescriptorType:data:") = NSAppleEventDescriptor, CULong, NSData;
overload selector(static "descriptorWithEnumCode:") = NSAppleEventDescriptor, CULong;
overload selector(static "descriptorWithInt32:") = NSAppleEventDescriptor, CLong;
overload selector(static "descriptorWithString:") = NSAppleEventDescriptor, NSString;
overload selector(static "descriptorWithTypeCode:") = NSAppleEventDescriptor, CULong;
overload selector(static "deselectAll:") = Void, Id;
overload selector(static "deselectAllCells") = Void;
overload selector(static "deselectColumn:") = Void, Int;
overload selector(static "deselectItemAtIndex:") = Void, Int;
overload selector(static "deselectRow:") = Void, Int;
overload selector(static "deselectSelectedCell") = Void;
overload selector(static "desktopImageOptionsForScreen:") = NSDictionary, NSScreen;
overload selector(static "desktopImageURLForScreen:") = NSURL, NSScreen;
overload selector(static "destinationContext") = NSManagedObjectContext;
overload selector(static "destinationEntity") = NSEntityDescription;
overload selector(static "destinationEntityForEntityMapping:") = NSEntityDescription, NSEntityMapping;
overload selector(static "destinationEntityName") = NSString;
overload selector(static "destinationEntityVersionHash") = NSData;
overload selector(static "destinationInstancesForEntityMappingNamed:sourceInstances:") = NSArray, NSString, NSArray;
overload selector(static "destinationModel") = NSManagedObjectModel;
overload selector(static "destinationOfSymbolicLinkAtPath:error:") = NSString, NSString, Pointer[NSError];
overload selector(static "destroyContext") = Void;
overload selector(static "detach") = Void;
overload selector(static "detachColorList:") = Void, NSColorList;
overload selector(static "detachDrawingThread:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
overload selector(static "detachFromCurrentThread") = Bool;
overload selector(static "detachNewThreadSelector:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
overload selector(static "detachSubmenu") = Void;
overload selector(static "detectConflictsForObject:") = Void, NSManagedObject;
overload selector(static "developmentLocalization") = NSString;
overload selector(static "device") = Id;
overload selector(static "deviceAttributes") = NSDictionary;
overload selector(static "deviceCMYKColorSpace") = NSColorSpace;
overload selector(static "deviceDescription") = NSDictionary;
overload selector(static "deviceGrayColorSpace") = NSColorSpace;
overload selector(static "deviceID") = UInt;
overload selector(static "deviceInputWithDevice:") = Id, QTCaptureDevice;
overload selector(static "deviceRGBColorSpace") = NSColorSpace;
overload selector(static "deviceSize") = NSSize;
overload selector(static "deviceWithUniqueID:") = QTCaptureDevice, NSString;
overload selector(static "dictionary") = Id;
overload selector(static "dictionaryForKey:") = NSDictionary, NSString;
overload selector(static "dictionaryFromTXTRecordData:") = NSDictionary, NSData;
overload selector(static "dictionaryRepresentation") = NSDictionary;
overload selector(static "dictionaryWithCapacity:") = Id, UInt;
overload selector(static "dictionaryWithContentsOfFile:") = Id, NSString;
overload selector(static "dictionaryWithContentsOfURL:") = Id, NSURL;
overload selector(static "dictionaryWithDictionary:") = Id, NSDictionary;
overload selector(static "dictionaryWithObject:forKey:") = Id, Id, Id;
overload selector(static "dictionaryWithObjects:forKeys:") = Id, NSArray, NSArray;
overload selector(static "dictionaryWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], UInt;
overload varargSelector(static "dictionaryWithObjectsAndKeys:") = Id, Id;
overload selector(static "dictionaryWithValuesForKeys:") = NSDictionary, NSArray;
overload selector(static "didAccessValueForKey:") = Void, NSString;
overload selector(static "didAddSubview:") = Void, NSView;
overload selector(static "didAddToPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
overload selector(static "didChange:valuesAtIndexes:forKey:") = Void, UInt, NSIndexSet, NSString;
overload selector(static "didChangeArrangementCriteria") = Void;
overload selector(static "didChangeText") = Void;
overload selector(static "didChangeValueForKey:") = Void, NSString;
overload selector(static "didChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, UInt, NSSet;
overload selector(static "didLoadBytes:loadComplete:") = Void, NSData, Bool;
overload selector(static "didSave") = Void;
overload selector(static "didTurnIntoFault") = Void;
overload selector(static "directParameter") = Id;
overload selector(static "directory") = NSString;
overload selector(static "directoryAttributes") = NSDictionary;
overload selector(static "directoryContentsAtPath:") = NSArray, NSString;
overload selector(static "directoryURL") = NSURL;
overload selector(static "disable") = Void;
overload selector(static "disableActions") = Bool;
overload selector(static "disableCollectorForPointer:") = Void, RawPointer;
overload selector(static "disableCursorRects") = Void;
overload selector(static "disableFlushWindow") = Void;
overload selector(static "disableKeyEquivalentForDefaultButtonCell") = Void;
overload selector(static "disableScreenUpdatesUntilFlush") = Void;
overload selector(static "disableSuddenTermination") = Void;
overload selector(static "disableUndoRegistration") = Void;
overload selector(static "disableUpdates") = Void;
overload selector(static "disabledControlTextColor") = NSColor;
overload selector(static "disappearingItemCursor") = NSCursor;
overload selector(static "discardCachedImage") = Void;
overload selector(static "discardContentIfPossible") = Void;
overload selector(static "discardCursorRects") = Void;
overload selector(static "discardEditing") = Void;
overload selector(static "discardEventsMatchingMask:beforeEvent:") = Void, UInt, NSEvent;
overload selector(static "discardMarkedText") = Void;
overload selector(static "disconnectObject:withKey:toObject:withKey:") = Void, Id, NSString, Id, NSString;
overload selector(static "diskCapacity") = UInt;
overload selector(static "dismissPopUp") = Void;
overload selector(static "dispatch") = Void;
overload selector(static "dispatchRawAppleEvent:withRawReply:handlerRefCon:") = Short, Pointer[AppleEvent], Pointer[AppleEvent], CLong;
overload selector(static "display") = Void;
overload selector(static "displayAllColumns") = Void;
overload selector(static "displayColumn:") = Void, Int;
overload selector(static "displayIfNeeded") = Void;
overload selector(static "displayIfNeededIgnoringOpacity") = Void;
overload selector(static "displayIfNeededInRect:") = Void, NSRect;
overload selector(static "displayIfNeededInRectIgnoringOpacity:") = Void, NSRect;
overload selector(static "displayLayer:") = Void, CALayer;
overload selector(static "displayMode") = UInt;
overload selector(static "displayName") = NSString;
overload selector(static "displayNameAtPath:") = NSString, NSString;
overload selector(static "displayNameForKey:value:") = NSString, Id, Id;
overload selector(static "displayNameForType:") = NSString, NSString;
overload selector(static "displayRect:") = Void, NSRect;
overload selector(static "displayRectIgnoringOpacity:") = Void, NSRect;
overload selector(static "displayRectIgnoringOpacity:inContext:") = Void, NSRect, NSGraphicsContext;
overload selector(static "displayValuesForRow:") = NSArray, Int;
overload selector(static "displayValuesKeyPath") = NSString;
overload selector(static "displayableSubpredicatesOfPredicate:") = NSArray, NSPredicate;
overload selector(static "displayedCommandsTitle") = NSString;
overload selector(static "displaysLinkToolTips") = Bool;
overload selector(static "displaysWhenScreenProfileChanges") = Bool;
overload selector(static "dissolveToPoint:fraction:") = Void, NSPoint, Float;
overload selector(static "dissolveToPoint:fromRect:fraction:") = Void, NSPoint, NSRect, Float;
overload selector(static "distantFuture") = Id;
overload selector(static "distantPast") = Id;
overload selector(static "distinguishedNames") = NSArray;
overload selector(static "dividerColor") = NSColor;
overload selector(static "dividerStyle") = Int;
overload selector(static "dividerThickness") = Float;
overload selector(static "doClick:") = Void, Id;
overload selector(static "doCommandBySelector:") = Void, SelectorHandle;
overload selector(static "doCommandBySelector:client:") = Void, SelectorHandle, Id;
overload selector(static "doDoubleClick:") = Void, Id;
overload selector(static "docFormatFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
overload selector(static "dockMenu") = NSMenu;
overload selector(static "dockTile") = NSDockTile;
overload selector(static "document") = Id;
overload selector(static "documentClassForType:") = Id, NSString;
overload selector(static "documentClassNames") = NSArray;
overload selector(static "documentContentKind") = UInt;
overload selector(static "documentCursor") = NSCursor;
overload selector(static "documentForFileName:") = Id, NSString;
overload selector(static "documentForURL:") = Id, NSURL;
overload selector(static "documentForWindow:") = Id, NSWindow;
overload selector(static "documentRect") = NSRect;
overload selector(static "documentView") = Id;
overload selector(static "documentVisibleRect") = NSRect;
overload selector(static "documentWithRootElement:") = Id, NSXMLElement;
overload selector(static "documents") = NSArray;
overload selector(static "doesContain:") = Bool, Id;
overload selector(static "doesNotRecognizeSelector:") = Void, SelectorHandle;
overload selector(static "doesRelativeDateFormatting") = Bool;
overload selector(static "domain") = NSString;
overload selector(static "dominantLanguage") = NSString;
overload selector(static "dominantLanguageForScript:") = NSString, NSString;
overload selector(static "dominantScript") = NSString;
overload selector(static "doubleAction") = SelectorHandle;
overload selector(static "doubleClickAtIndex:") = NSRange, UInt;
overload selector(static "doubleClickInterval") = Double;
overload selector(static "doubleForKey:") = Double, NSString;
overload selector(static "doubleValue") = Double;
overload selector(static "download:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLDownload, NSURLProtectionSpace;
overload selector(static "download:decideDestinationWithSuggestedFilename:") = Void, NSURLDownload, NSString;
overload selector(static "download:didCancelAuthenticationChallenge:") = Void, NSURLDownload, NSURLAuthenticationChallenge;
overload selector(static "download:didCreateDestination:") = Void, NSURLDownload, NSString;
overload selector(static "download:didFailWithError:") = Void, NSURLDownload, NSError;
overload selector(static "download:didReceiveAuthenticationChallenge:") = Void, NSURLDownload, NSURLAuthenticationChallenge;
overload selector(static "download:didReceiveDataOfLength:") = Void, NSURLDownload, UInt;
overload selector(static "download:didReceiveResponse:") = Void, NSURLDownload, NSURLResponse;
overload selector(static "download:shouldDecodeSourceDataOfMIMEType:") = Bool, NSURLDownload, NSString;
overload selector(static "download:willResumeWithResponse:fromByte:") = Void, NSURLDownload, NSURLResponse, Int64;
overload selector(static "download:willSendRequest:redirectResponse:") = NSURLRequest, NSURLDownload, NSURLRequest, NSURLResponse;
overload selector(static "downloadDidBegin:") = Void, NSURLDownload;
overload selector(static "downloadDidFinish:") = Void, NSURLDownload;
overload selector(static "downloadShouldUseCredentialStorage:") = Bool, NSURLDownload;
overload selector(static "dragColor:withEvent:fromView:") = Bool, NSColor, NSEvent, NSView;
overload selector(static "dragCopyCursor") = NSCursor;
overload selector(static "dragFile:fromRect:slideBack:event:") = Bool, NSString, NSRect, Bool, NSEvent;
overload selector(static "dragImage:at:offset:event:pasteboard:source:slideBack:") = Void, NSImage, NSPoint, NSSize, NSEvent, NSPasteboard, Id, Bool;
overload selector(static "dragImageForRows:event:dragImageOffset:") = NSImage, NSArray, NSEvent, NSPointPointer;
overload selector(static "dragImageForRowsWithIndexes:tableColumns:event:offset:") = NSImage, NSIndexSet, NSArray, NSEvent, NSPointPointer;
overload selector(static "dragImageForSelectionWithEvent:origin:") = NSImage, NSEvent, NSPointPointer;
overload selector(static "dragLinkCursor") = NSCursor;
overload selector(static "dragOperationForDraggingInfo:type:") = UInt, Id, NSString;
overload selector(static "dragPromisedFilesOfTypes:fromRect:source:slideBack:event:") = Bool, NSArray, NSRect, Id, Bool, NSEvent;
overload selector(static "dragSelectionWithEvent:offset:slideBack:") = Bool, NSEvent, NSSize, Bool;
overload selector(static "draggedColumn") = Int;
overload selector(static "draggedDistance") = Float;
overload selector(static "draggedImage") = NSImage;
overload selector(static "draggedImage:beganAt:") = Void, NSImage, NSPoint;
overload selector(static "draggedImage:endedAt:deposited:") = Void, NSImage, NSPoint, Bool;
overload selector(static "draggedImage:endedAt:operation:") = Void, NSImage, NSPoint, UInt;
overload selector(static "draggedImage:movedTo:") = Void, NSImage, NSPoint;
overload selector(static "draggedImageLocation") = NSPoint;
overload selector(static "draggingDestinationFeedbackStyle") = Int;
overload selector(static "draggingDestinationWindow") = NSWindow;
overload selector(static "draggingEnded:") = Void, Id;
overload selector(static "draggingEntered:") = UInt, Id;
overload selector(static "draggingExited:") = Void, Id;
overload selector(static "draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSIndexSet, NSEvent, NSPointPointer;
overload selector(static "draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSIndexSet, Int, NSEvent, NSPointPointer;
overload selector(static "draggingLocation") = NSPoint;
overload selector(static "draggingPasteboard") = NSPasteboard;
overload selector(static "draggingSequenceNumber") = Int;
overload selector(static "draggingSource") = Id;
overload selector(static "draggingSourceOperationMask") = UInt;
overload selector(static "draggingSourceOperationMaskForLocal:") = UInt, Bool;
overload selector(static "draggingUpdated:") = UInt, Id;
overload selector(static "drain") = Void;
overload selector(static "draw") = Bool;
overload selector(static "drawArrow:highlight:") = Void, UInt, Bool;
overload selector(static "drawAtPoint:") = Bool, NSPoint;
overload selector(static "drawAtPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, UInt, Float;
overload selector(static "drawAtPoint:withAttributes:") = Void, NSPoint, NSDictionary;
overload selector(static "drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:") = Void, NSTextTableBlock, NSRect, NSView, NSRange, NSLayoutManager;
overload selector(static "drawBackgroundForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
overload selector(static "drawBackgroundInClipRect:") = Void, NSRect;
overload selector(static "drawBackgroundWithFrame:inView:characterRange:layoutManager:") = Void, NSRect, NSView, NSRange, NSLayoutManager;
overload selector(static "drawBarInside:flipped:") = Void, NSRect, Bool;
overload selector(static "drawBezelWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawBorderAndBackgroundWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawCell:") = Void, NSCell;
overload selector(static "drawCellAtIndex:") = Void, Int;
overload selector(static "drawCellAtRow:column:") = Void, Int, Int;
overload selector(static "drawCellInside:") = Void, NSCell;
overload selector(static "drawDividerInRect:") = Void, NSRect;
overload selector(static "drawFromCenter:radius:toCenter:radius:options:") = Void, NSPoint, Float, NSPoint, Float, UInt;
overload selector(static "drawFromPoint:toPoint:options:") = Void, NSPoint, NSPoint, UInt;
overload selector(static "drawGlyphsForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
overload selector(static "drawGridInClipRect:") = Void, NSRect;
overload selector(static "drawHashMarksAndLabelsInRect:") = Void, NSRect;
overload selector(static "drawImage:atPoint:fromRect:") = Void, CIImage, CGPoint, CGRect;
overload selector(static "drawImage:inRect:fromRect:") = Void, CIImage, CGRect, CGRect;
overload selector(static "drawImage:withFrame:inView:") = Void, NSImage, NSRect, NSView;
overload selector(static "drawImageWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawInBezierPath:angle:") = Void, NSBezierPath, Float;
overload selector(static "drawInBezierPath:relativeCenterPosition:") = Void, NSBezierPath, NSPoint;
overload selector(static "drawInCGLContext:pixelFormat:forLayerTime:displayTime:") = Void, CGLContextObj, CGLPixelFormatObj, Double, Pointer[CVTimeStamp];
overload selector(static "drawInContext:") = Void, CGContextRef;
overload selector(static "drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Void, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
overload selector(static "drawInRect:") = Bool, NSRect;
overload selector(static "drawInRect:angle:") = Void, NSRect, Float;
overload selector(static "drawInRect:fromRect:operation:fraction:") = Void, NSRect, NSRect, UInt, Float;
overload selector(static "drawInRect:fromRect:operation:fraction:respectFlipped:hints:") = Bool, NSRect, NSRect, UInt, Float, Bool, NSDictionary;
overload selector(static "drawInRect:relativeCenterPosition:") = Void, NSRect, NSPoint;
overload selector(static "drawInRect:withAttributes:") = Void, NSRect, NSDictionary;
overload selector(static "drawInsertionPointInRect:color:turnedOn:") = Void, NSRect, NSColor, Bool;
overload selector(static "drawInteriorWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawKeyEquivalentWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawKnob") = Void;
overload selector(static "drawKnob:") = Void, NSRect;
overload selector(static "drawKnobSlotInRect:highlight:") = Void, NSRect, Bool;
overload selector(static "drawLabel:inRect:") = Void, Bool, NSRect;
overload selector(static "drawLayer:inContext:") = Void, CALayer, CGContextRef;
overload selector(static "drawMarkersInRect:") = Void, NSRect;
overload selector(static "drawPackedGlyphs:atPoint:") = Void, Pointer[CChar], NSPoint;
overload selector(static "drawPageBorderWithSize:") = Void, NSSize;
overload selector(static "drawParts") = Void;
overload selector(static "drawRect:") = Void, NSRect;
overload selector(static "drawRepresentation:inRect:") = Bool, NSImageRep, NSRect;
overload selector(static "drawRow:clipRect:") = Void, Int, NSRect;
overload selector(static "drawSegment:inFrame:withView:") = Void, Int, NSRect, NSView;
overload selector(static "drawSelector") = SelectorHandle;
overload selector(static "drawSeparatorItemWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawSheetBorderWithSize:") = Void, NSSize;
overload selector(static "drawSortIndicatorWithFrame:inView:ascending:priority:") = Void, NSRect, NSView, Bool, Int;
overload selector(static "drawStateImageWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawStatusBarBackgroundInRect:withHighlight:") = Void, NSRect, Bool;
overload selector(static "drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, Int, Float, NSRect, NSRange, NSPoint;
overload selector(static "drawSwatchInRect:") = Void, NSRect;
overload selector(static "drawTitle:withFrame:inView:") = NSRect, NSAttributedString, NSRect, NSView;
overload selector(static "drawTitleOfColumn:inRect:") = Void, Int, NSRect;
overload selector(static "drawTitleWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, Int, Float, NSRect, NSRange, NSPoint;
overload selector(static "drawViewBackgroundInRect:") = Void, NSRect;
overload selector(static "drawWellInside:") = Void, NSRect;
overload selector(static "drawWithExpansionFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "drawWithFrame:inView:characterIndex:") = Void, NSRect, NSView, UInt;
overload selector(static "drawWithFrame:inView:characterIndex:layoutManager:") = Void, NSRect, NSView, UInt, NSLayoutManager;
overload selector(static "drawWithRect:options:") = Void, NSRect, Int;
overload selector(static "drawWithRect:options:attributes:") = Void, NSRect, Int, NSDictionary;
overload selector(static "drawerDidClose:") = Void, NSNotification;
overload selector(static "drawerDidOpen:") = Void, NSNotification;
overload selector(static "drawerShouldClose:") = Bool, NSDrawer;
overload selector(static "drawerShouldOpen:") = Bool, NSDrawer;
overload selector(static "drawerWillClose:") = Void, NSNotification;
overload selector(static "drawerWillOpen:") = Void, NSNotification;
overload selector(static "drawerWillResizeContents:toSize:") = NSSize, NSDrawer, NSSize;
overload selector(static "drawers") = NSArray;
overload selector(static "drawingRectForBounds:") = NSRect, NSRect;
overload selector(static "drawsBackground") = Bool;
overload selector(static "drawsCellBackground") = Bool;
overload selector(static "drawsGrid") = Bool;
overload selector(static "drawsOutsideLineFragmentForGlyphAtIndex:") = Bool, UInt;
overload selector(static "drawsVerticallyForCharacterAtIndex:") = Bool, UInt;
overload selector(static "duplicateURLs:completionHandler:") = Void, NSArray, UnknownType;
overload selector(static "duration") = Double;
overload selector(static "earlierDate:") = NSDate, NSDate;
overload selector(static "echosBullets") = Bool;
overload selector(static "edge") = NSRectEdge;
overload selector(static "edgeAntialiasingMask") = UInt;
overload selector(static "editColumn:row:withEvent:select:") = Void, Int, Int, NSEvent, Bool;
overload selector(static "editItemAtIndexPath:withEvent:select:") = Void, NSIndexPath, NSEvent, Bool;
overload selector(static "editWithFrame:inView:editor:delegate:event:") = Void, NSRect, NSView, NSText, Id, NSEvent;
overload selector(static "edited:range:changeInLength:") = Void, UInt, NSRange, Int;
overload selector(static "editedColumn") = Int;
overload selector(static "editedMask") = UInt;
overload selector(static "editedRange") = NSRange;
overload selector(static "editedRow") = Int;
overload selector(static "editingStringForObjectValue:") = NSString, Id;
overload selector(static "elementAtIndex:") = UInt, Int;
overload selector(static "elementAtIndex:associatedPoints:") = UInt, Int, NSPointArray;
overload selector(static "elementCount") = Int;
overload selector(static "elementDeclarationForName:") = NSXMLDTDNode, NSString;
overload selector(static "elementWithName:") = Id, NSString;
overload selector(static "elementWithName:URI:") = Id, NSString, NSString;
overload selector(static "elementWithName:children:attributes:") = Id, NSString, NSArray, NSArray;
overload selector(static "elementWithName:stringValue:") = Id, NSString, NSString;
overload selector(static "elementsDerivedFromExternalRecordURL:") = NSDictionary, NSURL;
overload selector(static "elementsForLocalName:URI:") = NSArray, NSString, NSString;
overload selector(static "elementsForName:") = NSArray, NSString;
overload selector(static "emissionLatitude") = Float;
overload selector(static "emissionLongitude") = Float;
overload selector(static "emissionRange") = Float;
overload selector(static "emitterCell") = Id;
overload selector(static "emitterCells") = NSArray;
overload selector(static "emitterDepth") = Float;
overload selector(static "emitterMode") = NSString;
overload selector(static "emitterPosition") = CGPoint;
overload selector(static "emitterShape") = NSString;
overload selector(static "emitterSize") = CGSize;
overload selector(static "emitterZPosition") = Float;
overload selector(static "emptyImage") = CIImage;
overload selector(static "enable") = Void;
overload selector(static "enableCollectorForPointer:") = Void, RawPointer;
overload selector(static "enableCursorRects") = Void;
overload selector(static "enableFlushWindow") = Void;
overload selector(static "enableKeyEquivalentForDefaultButtonCell") = Void;
overload selector(static "enableMultipleThreads") = Void;
overload selector(static "enableSuddenTermination") = Void;
overload selector(static "enableUndoRegistration") = Void;
overload selector(static "enableUpdates") = Void;
overload selector(static "enabledTextCheckingTypes") = UInt64;
overload selector(static "enclosingMenuItem") = NSMenuItem;
overload selector(static "enclosingScrollView") = NSScrollView;
overload selector(static "encodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], UInt, RawPointer;
overload selector(static "encodeBool:forKey:") = Void, Bool, NSString;
overload selector(static "encodeBycopyObject:") = Void, Id;
overload selector(static "encodeByrefObject:") = Void, Id;
overload selector(static "encodeBytes:length:") = Void, RawPointer, UInt;
overload selector(static "encodeBytes:length:forKey:") = Void, Pointer[CUChar], UInt, NSString;
overload selector(static "encodeClassName:intoClassName:") = Void, NSString, NSString;
overload selector(static "encodeConditionalObject:") = Void, Id;
overload selector(static "encodeConditionalObject:forKey:") = Void, Id, NSString;
overload selector(static "encodeDataObject:") = Void, NSData;
overload selector(static "encodeDouble:forKey:") = Void, Double, NSString;
overload selector(static "encodeFloat:forKey:") = Void, Float, NSString;
overload selector(static "encodeInt32:forKey:") = Void, Int, NSString;
overload selector(static "encodeInt64:forKey:") = Void, Int64, NSString;
overload selector(static "encodeInt:forKey:") = Void, Int, NSString;
overload selector(static "encodeInteger:forKey:") = Void, Int, NSString;
overload selector(static "encodeNXObject:") = Void, Id;
overload selector(static "encodeObject:") = Void, Id;
overload selector(static "encodeObject:forKey:") = Void, Id, NSString;
overload selector(static "encodePoint:") = Void, NSPoint;
overload selector(static "encodePoint:forKey:") = Void, NSPoint, NSString;
overload selector(static "encodePortObject:") = Void, NSPort;
overload selector(static "encodePropertyList:") = Void, Id;
overload selector(static "encodeQTTime:forKey:") = Void, QTTime, NSString;
overload selector(static "encodeQTTimeRange:forKey:") = Void, QTTimeRange, NSString;
overload selector(static "encodeRect:") = Void, NSRect;
overload selector(static "encodeRect:forKey:") = Void, NSRect, NSString;
overload selector(static "encodeRootObject:") = Void, Id;
overload selector(static "encodeSMPTETime:forKey:") = Void, SMPTETime, NSString;
overload selector(static "encodeSize:") = Void, NSSize;
overload selector(static "encodeSize:forKey:") = Void, NSSize, NSString;
overload selector(static "encodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
overload varargSelector(static "encodeValuesOfObjCTypes:") = Void, Pointer[CChar];
overload selector(static "encodeWithCoder:") = Void, NSCoder;
overload selector(static "encodingScheme") = NSString;
overload selector(static "endContentAccess") = Void;
overload selector(static "endDocument") = Void;
overload selector(static "endEditing") = Void;
overload selector(static "endEditing:") = Void, NSText;
overload selector(static "endEditingFor:") = Void, Id;
overload selector(static "endEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector(static "endFrame") = Void;
overload selector(static "endGestureWithEvent:") = Void, NSEvent;
overload selector(static "endGrouping") = Void;
overload selector(static "endInstanceCreationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector(static "endLineWithGlyphRange:") = Void, NSRange;
overload selector(static "endLoadInBackground") = Void;
overload selector(static "endModalSession:") = Void, NSModalSession;
overload selector(static "endPage") = Void;
overload selector(static "endParagraph") = Void;
overload selector(static "endPoint") = CGPoint;
overload selector(static "endProgress") = Float;
overload selector(static "endRelationshipCreationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector(static "endSheet:") = Void, NSWindow;
overload selector(static "endSheet:returnCode:") = Void, NSWindow, Int;
overload selector(static "endSpecifier") = NSScriptObjectSpecifier;
overload selector(static "endSubelementIdentifier") = UInt;
overload selector(static "endSubelementIndex") = Int;
overload selector(static "endUndoGrouping") = Void;
overload selector(static "enqueueNotification:postingStyle:") = Void, NSNotification, UInt;
overload selector(static "enqueueNotification:postingStyle:coalesceMask:forModes:") = Void, NSNotification, UInt, UInt, NSArray;
overload selector(static "ensureAttributesAreFixedInRange:") = Void, NSRange;
overload selector(static "ensureGlyphsForCharacterRange:") = Void, NSRange;
overload selector(static "ensureGlyphsForGlyphRange:") = Void, NSRange;
overload selector(static "ensureLayoutForBoundingRect:inTextContainer:") = Void, NSRect, NSTextContainer;
overload selector(static "ensureLayoutForCharacterRange:") = Void, NSRange;
overload selector(static "ensureLayoutForGlyphRange:") = Void, NSRange;
overload selector(static "ensureLayoutForTextContainer:") = Void, NSTextContainer;
overload selector(static "enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:") = NSEvent, UInt, NSPoint, UInt, Double, Int, NSGraphicsContext, Int, Int, RawPointer;
overload selector(static "enterFullScreenMode:withOptions:") = Bool, NSScreen, NSDictionary;
overload selector(static "enterQTKitOnThread") = Void;
overload selector(static "enterQTKitOnThreadDisablingThreadSafetyProtection") = Void;
overload selector(static "entities") = NSArray;
overload selector(static "entitiesByName") = NSDictionary;
overload selector(static "entitiesForConfiguration:") = NSArray, NSString;
overload selector(static "entity") = NSEntityDescription;
overload selector(static "entityDeclarationForName:") = NSXMLDTDNode, NSString;
overload selector(static "entityForName:inManagedObjectContext:") = NSEntityDescription, NSString, NSManagedObjectContext;
overload selector(static "entityMappings") = NSArray;
overload selector(static "entityMappingsByName") = NSDictionary;
overload selector(static "entityMigrationPolicyClassName") = NSString;
overload selector(static "entityName") = NSString;
overload selector(static "entityVersionHashesByName") = NSDictionary;
overload selector(static "entryType") = Int;
overload selector(static "enumCodeValue") = CULong;
overload selector(static "enumerateAttribute:inRange:options:usingBlock:") = Void, NSString, NSRange, UInt, UnknownType;
overload selector(static "enumerateAttributesInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
overload selector(static "enumerateIndexesInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
overload selector(static "enumerateIndexesUsingBlock:") = Void, UnknownType;
overload selector(static "enumerateIndexesWithOptions:usingBlock:") = Void, UInt, UnknownType;
overload selector(static "enumerateKeysAndObjectsUsingBlock:") = Void, UnknownType;
overload selector(static "enumerateKeysAndObjectsWithOptions:usingBlock:") = Void, UInt, UnknownType;
overload selector(static "enumerateLinesUsingBlock:") = Void, UnknownType;
overload selector(static "enumerateObjectsAtIndexes:options:usingBlock:") = Void, NSIndexSet, UInt, UnknownType;
overload selector(static "enumerateObjectsUsingBlock:") = Void, UnknownType;
overload selector(static "enumerateObjectsWithOptions:usingBlock:") = Void, UInt, UnknownType;
overload selector(static "enumerateSubstringsInRange:options:usingBlock:") = Void, NSRange, UInt, UnknownType;
overload selector(static "enumeratorAtPath:") = NSDirectoryEnumerator, NSString;
overload selector(static "enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:") = NSDirectoryEnumerator, NSURL, NSArray, UInt, UnknownType;
overload selector(static "environment") = NSDictionary;
overload selector(static "era") = Int;
overload selector(static "eraSymbols") = NSArray;
overload selector(static "error") = NSError;
overload selector(static "errorWithDomain:code:userInfo:") = Id, NSString, Int, NSDictionary;
overload selector(static "evaluate") = Void;
overload selector(static "evaluateWithObject:") = Bool, Id;
overload selector(static "evaluateWithObject:substitutionVariables:") = Bool, Id, NSDictionary;
overload selector(static "evaluatedArguments") = NSDictionary;
overload selector(static "evaluatedReceivers") = Id;
overload selector(static "evaluationErrorNumber") = Int;
overload selector(static "evaluationErrorSpecifier") = NSScriptObjectSpecifier;
overload selector(static "eventClass") = CULong;
overload selector(static "eventID") = CULong;
overload selector(static "eventNumber") = Int;
overload selector(static "eventRef") = RawPointer;
overload selector(static "eventWithCGEvent:") = NSEvent, CGEventRef;
overload selector(static "eventWithEventRef:") = NSEvent, RawPointer;
overload selector(static "evictsObjectsWithDiscardedContent") = Bool;
overload selector(static "exceptionDuringOperation:error:leftOperand:rightOperand:") = NSDecimalNumber, SelectorHandle, UInt, NSDecimalNumber, NSDecimalNumber;
overload selector(static "exceptionWithName:reason:userInfo:") = NSException, NSString, NSString, NSDictionary;
overload selector(static "exchangeObjectAtIndex:withObjectAtIndex:") = Void, UInt, UInt;
overload selector(static "excludedKeys") = NSArray;
overload selector(static "executableArchitecture") = Int;
overload selector(static "executableArchitectures") = NSArray;
overload selector(static "executablePath") = NSString;
overload selector(static "executableURL") = NSURL;
overload selector(static "executeAndReturnError:") = NSAppleEventDescriptor, Pointer[NSDictionary];
overload selector(static "executeAppleEvent:error:") = NSAppleEventDescriptor, NSAppleEventDescriptor, Pointer[NSDictionary];
overload selector(static "executeCommand") = Id;
overload selector(static "executeFetchRequest:error:") = NSArray, NSFetchRequest, Pointer[NSError];
overload selector(static "executionBlocks") = NSArray;
overload selector(static "existingObjectWithID:error:") = NSManagedObject, NSManagedObjectID, Pointer[NSError];
overload selector(static "exit") = Void;
overload selector(static "exitFullScreenModeWithOptions:") = Void, NSDictionary;
overload selector(static "exitQTKitOnThread") = Void;
overload selector(static "expandItem:") = Void, Id;
overload selector(static "expandItem:expandChildren:") = Void, Id, Bool;
overload selector(static "expansionFrameWithFrame:inView:") = NSRect, NSRect, NSView;
overload selector(static "expectedContentLength") = Int64;
overload selector(static "expectedResourceDataSize") = Int64;
overload selector(static "expiresDate") = NSDate;
overload selector(static "exponentSymbol") = NSString;
overload selector(static "exportKey:fromObject:withName:") = Void, NSString, Id, NSString;
overload selector(static "exportedKeys") = NSDictionary;
overload selector(static "exposeBinding:") = Void, NSString;
overload selector(static "exposedBindings") = NSArray;
overload selector(static "expression") = NSExpression;
overload selector(static "expressionBlock") = UnknownType;
overload selector(static "expressionForAggregate:") = NSExpression, NSArray;
overload selector(static "expressionForBlock:arguments:") = NSExpression, UnknownType, NSArray;
overload selector(static "expressionForConstantValue:") = NSExpression, Id;
overload selector(static "expressionForEvaluatedObject") = NSExpression;
overload selector(static "expressionForFetch:context:countOnly:") = NSExpression, NSExpression, NSExpression, Bool;
overload selector(static "expressionForFunction:arguments:") = NSExpression, NSString, NSArray;
overload selector(static "expressionForFunction:selectorName:arguments:") = NSExpression, NSExpression, NSString, NSArray;
overload selector(static "expressionForIntersectSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector(static "expressionForKeyPath:") = NSExpression, NSString;
overload selector(static "expressionForMinusSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector(static "expressionForSubquery:usingIteratorVariable:predicate:") = NSExpression, NSExpression, NSString, Id;
overload selector(static "expressionForUnionSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector(static "expressionForVariable:") = NSExpression, NSString;
overload selector(static "expressionResultType") = UInt;
overload selector(static "expressionType") = UInt;
overload selector(static "expressionValueWithObject:context:") = Id, Id, NSMutableDictionary;
overload selector(static "extendPowerOffBy:") = Int, Int;
overload selector(static "extent") = CGRect;
overload selector(static "externalMovie:") = QTMovie, NSDictionary;
overload selector(static "extraLineFragmentRect") = NSRect;
overload selector(static "extraLineFragmentTextContainer") = NSTextContainer;
overload selector(static "extraLineFragmentUsedRect") = NSRect;
overload selector(static "fadeDuration") = Double;
overload selector(static "failureReason") = NSString;
overload selector(static "failureResponse") = NSURLResponse;
overload selector(static "familyName") = NSString;
overload selector(static "fastestEncoding") = UInt;
overload selector(static "faultingState") = UInt;
overload selector(static "fetch:") = Void, Id;
overload selector(static "fetchBatchSize") = UInt;
overload selector(static "fetchLimit") = UInt;
overload selector(static "fetchOffset") = UInt;
overload selector(static "fetchPredicate") = NSPredicate;
overload selector(static "fetchRequest") = NSFetchRequest;
overload selector(static "fetchRequestFromTemplateWithName:substitutionVariables:") = NSFetchRequest, NSString, NSDictionary;
overload selector(static "fetchRequestTemplateForName:") = NSFetchRequest, NSString;
overload selector(static "fetchRequestTemplatesByName") = NSDictionary;
overload selector(static "fetchWithRequest:merge:error:") = Bool, NSFetchRequest, Bool, Pointer[NSError];
overload selector(static "fieldEditor:forObject:") = NSText, Bool, Id;
overload selector(static "fieldEditorForView:") = NSTextView, NSView;
overload selector(static "fileAttributes") = NSDictionary;
overload selector(static "fileAttributesAtPath:traverseLink:") = NSDictionary, NSString, Bool;
overload selector(static "fileAttributesToWriteToFile:ofType:saveOperation:") = NSDictionary, NSString, NSString, UInt;
overload selector(static "fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:") = NSDictionary, NSURL, NSString, UInt, NSURL, Pointer[NSError];
overload selector(static "fileCreationDate") = NSDate;
overload selector(static "fileDescriptor") = Int;
overload selector(static "fileExistsAtPath:") = Bool, NSString;
overload selector(static "fileExistsAtPath:isDirectory:") = Bool, NSString, Pointer[Bool];
overload selector(static "fileExtensionHidden") = Bool;
overload selector(static "fileExtensionsFromType:") = NSArray, NSString;
overload selector(static "fileGroupOwnerAccountID") = NSNumber;
overload selector(static "fileGroupOwnerAccountName") = NSString;
overload selector(static "fileHFSCreatorCode") = CULong;
overload selector(static "fileHFSTypeCode") = CULong;
overload selector(static "fileHandleForReading") = NSFileHandle;
overload selector(static "fileHandleForReadingAtPath:") = Id, NSString;
overload selector(static "fileHandleForReadingFromURL:error:") = Id, NSURL, Pointer[NSError];
overload selector(static "fileHandleForUpdatingAtPath:") = Id, NSString;
overload selector(static "fileHandleForUpdatingURL:error:") = Id, NSURL, Pointer[NSError];
overload selector(static "fileHandleForWriting") = NSFileHandle;
overload selector(static "fileHandleForWritingAtPath:") = Id, NSString;
overload selector(static "fileHandleForWritingToURL:error:") = Id, NSURL, Pointer[NSError];
overload selector(static "fileHandleWithNullDevice") = Id;
overload selector(static "fileHandleWithStandardError") = Id;
overload selector(static "fileHandleWithStandardInput") = Id;
overload selector(static "fileHandleWithStandardOutput") = Id;
overload selector(static "fileIsAppendOnly") = Bool;
overload selector(static "fileIsImmutable") = Bool;
overload selector(static "fileLabelColors") = NSArray;
overload selector(static "fileLabels") = NSArray;
overload selector(static "fileManager:shouldCopyItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector(static "fileManager:shouldCopyItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector(static "fileManager:shouldLinkItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector(static "fileManager:shouldLinkItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector(static "fileManager:shouldMoveItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector(static "fileManager:shouldMoveItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector(static "fileManager:shouldProceedAfterError:") = Bool, NSFileManager, NSDictionary;
overload selector(static "fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector(static "fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector(static "fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector(static "fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector(static "fileManager:shouldProceedAfterError:movingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector(static "fileManager:shouldProceedAfterError:movingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector(static "fileManager:shouldProceedAfterError:removingItemAtPath:") = Bool, NSFileManager, NSError, NSString;
overload selector(static "fileManager:shouldProceedAfterError:removingItemAtURL:") = Bool, NSFileManager, NSError, NSURL;
overload selector(static "fileManager:shouldRemoveItemAtPath:") = Bool, NSFileManager, NSString;
overload selector(static "fileManager:shouldRemoveItemAtURL:") = Bool, NSFileManager, NSURL;
overload selector(static "fileManager:willProcessPath:") = Void, NSFileManager, NSString;
overload selector(static "fileModificationDate") = NSDate;
overload selector(static "fileName") = NSString;
overload selector(static "fileNameExtensionForType:saveOperation:") = NSString, NSString, UInt;
overload selector(static "fileNameExtensionWasHiddenInLastRunSavePanel") = Bool;
overload selector(static "fileNamesFromRunningOpenPanel") = NSArray;
overload selector(static "fileOwnerAccountID") = NSNumber;
overload selector(static "fileOwnerAccountName") = NSString;
overload selector(static "filePathURL") = NSURL;
overload selector(static "filePosixPermissions") = UInt;
overload selector(static "fileReferenceURL") = NSURL;
overload selector(static "fileSize") = UInt64;
overload selector(static "fileSystemAttributesAtPath:") = NSDictionary, NSString;
overload selector(static "fileSystemChanged") = Bool;
overload selector(static "fileSystemFileNumber") = UInt;
overload selector(static "fileSystemNumber") = Int;
overload selector(static "fileSystemRepresentation") = Pointer[CChar];
overload selector(static "fileSystemRepresentationWithPath:") = Pointer[CChar], NSString;
overload selector(static "fileType") = NSString;
overload selector(static "fileTypeFromLastRunSavePanel") = NSString;
overload selector(static "fileURL") = NSURL;
overload selector(static "fileURLWithPath:") = Id, NSString;
overload selector(static "fileURLWithPath:isDirectory:") = Id, NSString, Bool;
overload selector(static "fileURLWithPathComponents:") = NSURL, NSArray;
overload selector(static "fileWrapper") = NSFileWrapper;
overload selector(static "fileWrapperFromRange:documentAttributes:error:") = NSFileWrapper, NSRange, NSDictionary, Pointer[NSError];
overload selector(static "fileWrapperOfType:error:") = NSFileWrapper, NSString, Pointer[NSError];
overload selector(static "fileWrapperRepresentationOfType:") = NSFileWrapper, NSString;
overload selector(static "fileWrappers") = NSDictionary;
overload selector(static "filename") = NSString;
overload selector(static "filenameExtension:isValidForType:") = Bool, NSString, NSString;
overload selector(static "filenames") = NSArray;
overload selector(static "fill") = Void;
overload selector(static "fillBackgroundRectArray:count:forCharacterRange:color:") = Void, NSRectArray, UInt, NSRange, NSColor;
overload selector(static "fillColor") = NSColor;
overload selector(static "fillMode") = NSString;
overload selector(static "fillRect:") = Void, NSRect;
overload selector(static "fillRule") = NSString;
overload selector(static "filter") = Id;
overload selector(static "filterGenerator") = CIFilterGenerator;
overload selector(static "filterGeneratorWithContentsOfURL:") = CIFilterGenerator, NSURL;
overload selector(static "filterNamesInCategories:") = NSArray, NSArray;
overload selector(static "filterNamesInCategory:") = NSArray, NSString;
overload selector(static "filterPredicate") = NSPredicate;
overload selector(static "filterUsingPredicate:") = Void, NSPredicate;
overload selector(static "filterWithImageData:options:") = CIFilter, NSData, NSDictionary;
overload selector(static "filterWithImageURL:options:") = CIFilter, NSURL, NSDictionary;
overload selector(static "filterWithName:") = CIFilter, NSString;
overload varargSelector(static "filterWithName:keysAndValues:") = CIFilter, NSString, Id;
overload selector(static "filteredArrayUsingPredicate:") = NSArray, NSPredicate;
overload selector(static "filteredSetUsingPredicate:") = NSSet, NSPredicate;
overload selector(static "filters") = NSArray;
overload selector(static "finalWritePrintInfo") = Void;
overload selector(static "finalize") = Void;
overload selector(static "findApplications") = Void;
overload selector(static "findString:inBook:") = Void, NSString, NSString;
overload selector(static "finishDecoding") = Void;
overload selector(static "finishEncoding") = Void;
overload selector(static "finishLaunching") = Void;
overload selector(static "fire") = Void;
overload selector(static "fireDate") = NSDate;
overload selector(static "firstIndex") = UInt;
overload selector(static "firstLineHeadIndent") = Float;
overload selector(static "firstObjectCommonWithArray:") = Id, NSArray;
overload selector(static "firstRectForCharacterRange:") = NSRect, NSRange;
overload selector(static "firstRectForCharacterRange:actualRange:") = NSRect, NSRange, NSRangePointer;
overload selector(static "firstResponder") = NSResponder;
overload selector(static "firstTextView") = NSTextView;
overload selector(static "firstUnlaidCharacterIndex") = UInt;
overload selector(static "firstUnlaidGlyphIndex") = UInt;
overload selector(static "firstVisibleColumn") = Int;
overload selector(static "firstWeekday") = UInt;
overload selector(static "fixAttachmentAttributeInRange:") = Void, NSRange;
overload selector(static "fixAttributesInRange:") = Void, NSRange;
overload selector(static "fixFontAttributeInRange:") = Void, NSRange;
overload selector(static "fixParagraphStyleAttributeInRange:") = Void, NSRange;
overload selector(static "fixesAttributesLazily") = Bool;
overload selector(static "flagsChanged:") = Void, NSEvent;
overload selector(static "flatness") = Float;
overload selector(static "floatForKey:") = Float, NSString;
overload selector(static "floatForKey:inTable:") = Float, NSString, NSString;
overload selector(static "floatValue") = Float;
overload selector(static "flush") = Void;
overload selector(static "flushBuffer") = Void;
overload selector(static "flushBufferedKeyEvents") = Void;
overload selector(static "flushCachedData") = Void;
overload selector(static "flushGraphics") = Void;
overload selector(static "flushHostCache") = Void;
overload selector(static "flushWindow") = Void;
overload selector(static "flushWindowIfNeeded") = Void;
overload selector(static "focusRingType") = UInt;
overload selector(static "focusView") = NSView;
overload selector(static "focusedColumn") = Int;
overload selector(static "font") = NSFont;
overload selector(static "fontAttributes") = NSDictionary;
overload selector(static "fontAttributesInRange:") = NSDictionary, NSRange;
overload selector(static "fontDescriptor") = NSFontDescriptor;
overload selector(static "fontDescriptorByAddingAttributes:") = NSFontDescriptor, NSDictionary;
overload selector(static "fontDescriptorWithFace:") = NSFontDescriptor, NSString;
overload selector(static "fontDescriptorWithFamily:") = NSFontDescriptor, NSString;
overload selector(static "fontDescriptorWithFontAttributes:") = NSFontDescriptor, NSDictionary;
overload selector(static "fontDescriptorWithMatrix:") = NSFontDescriptor, NSAffineTransform;
overload selector(static "fontDescriptorWithName:matrix:") = NSFontDescriptor, NSString, NSAffineTransform;
overload selector(static "fontDescriptorWithName:size:") = NSFontDescriptor, NSString, Float;
overload selector(static "fontDescriptorWithSize:") = NSFontDescriptor, Float;
overload selector(static "fontDescriptorWithSymbolicTraits:") = NSFontDescriptor, UInt;
overload selector(static "fontDescriptorsInCollection:") = NSArray, NSString;
overload selector(static "fontManager:willIncludeFont:") = Bool, Id, NSString;
overload selector(static "fontMenu:") = NSMenu, Bool;
overload selector(static "fontName") = NSString;
overload selector(static "fontNamed:hasTraits:") = Bool, NSString, UInt;
overload selector(static "fontPanel:") = NSFontPanel, Bool;
overload selector(static "fontSize") = Float;
overload selector(static "fontWithDescriptor:size:") = NSFont, NSFontDescriptor, Float;
overload selector(static "fontWithDescriptor:textTransform:") = NSFont, NSFontDescriptor, NSAffineTransform;
overload selector(static "fontWithFamily:traits:weight:size:") = NSFont, NSString, UInt, Int, Float;
overload selector(static "fontWithName:matrix:") = NSFont, NSString, Pointer[Float];
overload selector(static "fontWithName:size:") = NSFont, NSString, Float;
overload selector(static "forceTerminate") = Bool;
overload selector(static "foregroundColor") = NSColor;
overload selector(static "forgetWord:") = Void, NSString;
overload selector(static "formIntersectionWithCharacterSet:") = Void, NSCharacterSet;
overload selector(static "formUnionWithCharacterSet:") = Void, NSCharacterSet;
overload selector(static "format") = NSString;
overload selector(static "formatDescription") = QTFormatDescription;
overload selector(static "formatDescriptionAttributes") = NSDictionary;
overload selector(static "formatDescriptions") = NSArray;
overload selector(static "formatType") = CULong;
overload selector(static "formatWidth") = UInt;
overload selector(static "formatter") = Id;
overload selector(static "formatterBehavior") = UInt;
overload selector(static "formattingDictionary") = NSDictionary;
overload selector(static "formattingStringsFilename") = NSString;
overload selector(static "forwardInvocation:") = Void, NSInvocation;
overload selector(static "forwardingTargetForSelector:") = Id, SelectorHandle;
overload selector(static "fractionOfDistanceThroughGlyphForPoint:") = Float, NSPoint;
overload selector(static "fractionOfDistanceThroughGlyphForPoint:inTextContainer:") = Float, NSPoint, NSTextContainer;
overload selector(static "fragment") = NSString;
overload selector(static "frame") = NSRect;
overload selector(static "frameAutosaveName") = NSString;
overload selector(static "frameCenterRotation") = Float;
overload selector(static "frameForItemAtIndex:") = NSRect, UInt;
overload selector(static "frameImageAtTime:") = NSImage, QTTime;
overload selector(static "frameImageAtTime:withAttributes:error:") = RawPointer, QTTime, NSDictionary, Pointer[NSError];
overload selector(static "frameLength") = UInt;
overload selector(static "frameOfCellAtColumn:row:") = NSRect, Int, Int;
overload selector(static "frameOfColumn:") = NSRect, Int;
overload selector(static "frameOfInsideOfColumn:") = NSRect, Int;
overload selector(static "frameOfOutlineCellAtRow:") = NSRect, Int;
overload selector(static "frameOfRow:inColumn:") = NSRect, Int, Int;
overload selector(static "frameRate") = Float;
overload selector(static "frameRectForContentRect:") = NSRect, NSRect;
overload selector(static "frameRectForContentRect:styleMask:") = NSRect, NSRect, UInt;
overload selector(static "frameRotation") = Float;
overload selector(static "frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, UInt;
overload selector(static "fromValue") = Id;
overload selector(static "fullPathForApplication:") = NSString, NSString;
overload selector(static "function") = NSString;
overload selector(static "functionWithControlPoints::::") = Id, Float, Float, Float, Float;
overload selector(static "functionWithName:") = Id, NSString;
overload selector(static "gState") = Int;
overload selector(static "generalPasteboard") = NSPasteboard;
overload selector(static "generateApertureModeDimensions") = Void;
overload selector(static "generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:") = Void, Id, UInt, Pointer[UInt], Pointer[UInt];
overload selector(static "generatesCalendarDates") = Bool;
overload selector(static "generatesDecimalNumbers") = Bool;
overload selector(static "genericCMYKColorSpace") = NSColorSpace;
overload selector(static "genericGamma22GrayColorSpace") = NSColorSpace;
overload selector(static "genericGrayColorSpace") = NSColorSpace;
overload selector(static "genericRGBColorSpace") = NSColorSpace;
overload selector(static "getAdvancements:forGlyphs:count:") = Void, NSSizeArray, Pointer[UInt], UInt;
overload selector(static "getAdvancements:forPackedGlyphs:length:") = Void, NSSizeArray, RawPointer, UInt;
overload selector(static "getArgument:atIndex:") = Void, RawPointer, Int;
overload selector(static "getArgumentTypeAtIndex:") = Pointer[CChar], UInt;
overload selector(static "getAudioStreamPacketDescriptions:inRange:") = Bool, Pointer[AudioStreamPacketDescription], NSRange;
overload selector(static "getBitmapDataPlanes:") = Void, Pointer[Pointer[CUChar]];
overload selector(static "getBoundingRects:forGlyphs:count:") = Void, NSRectArray, Pointer[UInt], UInt;
overload selector(static "getBuffer:length:") = Bool, Pointer[Pointer[CUChar]], Pointer[UInt];
overload selector(static "getBytes:") = Void, RawPointer;
overload selector(static "getBytes:length:") = Void, RawPointer, UInt;
overload selector(static "getBytes:maxLength:usedLength:encoding:options:range:remainingRange:") = Bool, RawPointer, UInt, Pointer[UInt], UInt, UInt, NSRange, NSRangePointer;
overload selector(static "getBytes:range:") = Void, RawPointer, NSRange;
overload selector(static "getCFRunLoop") = CFRunLoopRef;
overload selector(static "getCString:") = Void, Pointer[CChar];
overload selector(static "getCString:maxLength:") = Void, Pointer[CChar], UInt;
overload selector(static "getCString:maxLength:encoding:") = Bool, Pointer[CChar], UInt, UInt;
overload selector(static "getCString:maxLength:range:remainingRange:") = Void, Pointer[CChar], UInt, NSRange, NSRangePointer;
overload selector(static "getCharacters:") = Void, Pointer[UShort];
overload selector(static "getCharacters:range:") = Void, Pointer[UShort], NSRange;
overload selector(static "getColor:location:atIndex:") = Void, Pointer[NSColor], Pointer[Float], Int;
overload selector(static "getComponents:") = Void, Pointer[Float];
overload selector(static "getCompression:factor:") = Void, Pointer[UInt], Pointer[Float];
overload selector(static "getControlPointAtIndex:values:") = Void, CULong, Pointer[Float];
overload selector(static "getCyan:magenta:yellow:black:alpha:") = Void, Pointer[Float], Pointer[Float], Pointer[Float], Pointer[Float], Pointer[Float];
overload selector(static "getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:") = Bool, NSString, Pointer[Bool], Pointer[Bool], Pointer[Bool], Pointer[NSString], Pointer[NSString];
overload selector(static "getFileSystemRepresentation:maxLength:") = Bool, Pointer[CChar], UInt;
overload selector(static "getFirstUnlaidCharacterIndex:glyphIndex:") = Void, Pointer[UInt], Pointer[UInt];
overload selector(static "getGlyphs:range:") = UInt, Pointer[UInt], NSRange;
overload selector(static "getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:") = UInt, NSRange, Pointer[UInt], Pointer[UInt], Pointer[UInt], Pointer[Bool];
overload selector(static "getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:") = UInt, NSRange, Pointer[UInt], Pointer[UInt], Pointer[UInt], Pointer[Bool], Pointer[CUChar];
overload selector(static "getHue:saturation:brightness:alpha:") = Void, Pointer[Float], Pointer[Float], Pointer[Float], Pointer[Float];
overload selector(static "getIndexes:") = Void, Pointer[UInt];
overload selector(static "getIndexes:maxCount:inIndexRange:") = UInt, Pointer[UInt], UInt, NSRangePointer;
overload selector(static "getInfoForFile:application:type:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
overload selector(static "getInputStream:outputStream:") = Bool, Pointer[NSInputStream], Pointer[NSOutputStream];
overload selector(static "getLineDash:count:phase:") = Void, Pointer[Float], Pointer[Int], Pointer[Float];
overload selector(static "getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:") = UInt, UInt, Bool, Bool, Pointer[Float], Pointer[UInt];
overload selector(static "getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:") = Void, NSRectPointer, NSRectPointer, NSRange, NSPoint;
overload selector(static "getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:") = Void, NSRectPointer, NSRectPointer, NSRectPointer, UInt, NSRect, Float, Float, Float;
overload selector(static "getLineStart:end:contentsEnd:forRange:") = Void, Pointer[UInt], Pointer[UInt], Pointer[UInt], NSRange;
overload selector(static "getNumberOfRows:columns:") = Void, Pointer[Int], Pointer[Int];
overload selector(static "getObjectValue:forString:errorDescription:") = Bool, Pointer[Id], NSString, Pointer[NSString];
overload selector(static "getObjectValue:forString:range:error:") = Bool, Pointer[Id], NSString, Pointer[NSRange], Pointer[NSError];
overload selector(static "getObjects:") = Void, Pointer[Id];
overload selector(static "getObjects:andKeys:") = Void, Pointer[Id], Pointer[Id];
overload selector(static "getObjects:range:") = Void, Pointer[Id], NSRange;
overload selector(static "getParagraphStart:end:contentsEnd:forRange:") = Void, Pointer[UInt], Pointer[UInt], Pointer[UInt], NSRange;
overload selector(static "getPeriodicDelay:interval:") = Void, Pointer[Float], Pointer[Float];
overload selector(static "getPixel:atX:y:") = Void, Pointer[UInt], Int, Int;
overload selector(static "getRectsBeingDrawn:count:") = Void, Pointer[Pointer[NSRect]], Pointer[Int];
overload selector(static "getRectsExposedDuringLiveResize:count:") = Void, Pointer[NSRect], Pointer[Int];
overload selector(static "getRed:green:blue:alpha:") = Void, Pointer[Float], Pointer[Float], Pointer[Float], Pointer[Float];
overload selector(static "getResourceValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector(static "getReturnValue:") = Void, RawPointer;
overload selector(static "getRow:column:forPoint:") = Bool, Pointer[Int], Pointer[Int], NSPoint;
overload selector(static "getRow:column:ofCell:") = Bool, Pointer[Int], Pointer[Int], NSCell;
overload selector(static "getStreamsToHost:port:inputStream:outputStream:") = Void, NSHost, Int, Pointer[NSInputStream], Pointer[NSOutputStream];
overload selector(static "getTIFFCompressionTypes:count:") = Void, Pointer[Pointer[UInt]], Pointer[Int];
overload selector(static "getValue:") = Void, RawPointer;
overload selector(static "getValues:forAttribute:forVirtualScreen:") = Void, Pointer[Int], UInt, Int;
overload selector(static "getValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
overload selector(static "getWhite:alpha:") = Void, Pointer[Float], Pointer[Float];
overload selector(static "globallyUniqueString") = NSString;
overload selector(static "glyphAtIndex:") = UInt, UInt;
overload selector(static "glyphAtIndex:isValidIndex:") = UInt, UInt, Pointer[Bool];
overload selector(static "glyphGenerator") = NSGlyphGenerator;
overload selector(static "glyphIndexForCharacterAtIndex:") = UInt, UInt;
overload selector(static "glyphIndexForPoint:inTextContainer:") = UInt, NSPoint, NSTextContainer;
overload selector(static "glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:") = UInt, NSPoint, NSTextContainer, Pointer[Float];
overload selector(static "glyphInfoWithCharacterIdentifier:collection:baseString:") = NSGlyphInfo, UInt, UInt, NSString;
overload selector(static "glyphInfoWithGlyph:forFont:baseString:") = NSGlyphInfo, UInt, NSFont, NSString;
overload selector(static "glyphInfoWithGlyphName:forFont:baseString:") = NSGlyphInfo, NSString, NSFont, NSString;
overload selector(static "glyphIsEncoded:") = Bool, UInt;
overload selector(static "glyphName") = NSString;
overload selector(static "glyphPacking") = UInt;
overload selector(static "glyphRangeForBoundingRect:inTextContainer:") = NSRange, NSRect, NSTextContainer;
overload selector(static "glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:") = NSRange, NSRect, NSTextContainer;
overload selector(static "glyphRangeForCharacterRange:actualCharacterRange:") = NSRange, NSRange, NSRangePointer;
overload selector(static "glyphRangeForTextContainer:") = NSRange, NSTextContainer;
overload selector(static "glyphWithName:") = UInt, NSString;
overload selector(static "gotoBeginning") = Void;
overload selector(static "gotoBeginning:") = Void, Id;
overload selector(static "gotoEnd") = Void;
overload selector(static "gotoEnd:") = Void, Id;
overload selector(static "gotoNextSelectionPoint") = Void;
overload selector(static "gotoNextSelectionPoint:") = Void, Id;
overload selector(static "gotoPosterFrame:") = Void, Id;
overload selector(static "gotoPosterTime") = Void;
overload selector(static "gotoPreviousSelectionPoint") = Void;
overload selector(static "gotoPreviousSelectionPoint:") = Void, Id;
overload selector(static "gradientType") = UInt;
overload selector(static "grammarCheckingResultWithRange:details:") = NSTextCheckingResult, NSRange, NSArray;
overload selector(static "grammarDetails") = NSArray;
overload selector(static "graphicsContext") = NSGraphicsContext;
overload selector(static "graphicsContextWithAttributes:") = NSGraphicsContext, NSDictionary;
overload selector(static "graphicsContextWithBitmapImageRep:") = NSGraphicsContext, NSBitmapImageRep;
overload selector(static "graphicsContextWithGraphicsPort:flipped:") = NSGraphicsContext, RawPointer, Bool;
overload selector(static "graphicsContextWithWindow:") = NSGraphicsContext, NSWindow;
overload selector(static "graphicsPort") = RawPointer;
overload selector(static "grayColor") = NSColor;
overload selector(static "green") = Float;
overload selector(static "greenColor") = NSColor;
overload selector(static "greenComponent") = Float;
overload selector(static "greenRange") = Float;
overload selector(static "greenSpeed") = Float;
overload selector(static "gregorianStartDate") = NSDate;
overload selector(static "gridColor") = NSColor;
overload selector(static "gridStyleMask") = UInt;
overload selector(static "groupedResults") = NSArray;
overload selector(static "groupingAttributes") = NSArray;
overload selector(static "groupingLevel") = Int;
overload selector(static "groupingSeparator") = NSString;
overload selector(static "groupingSize") = UInt;
overload selector(static "groupsByEvent") = Bool;
overload selector(static "guessesForWord:") = NSArray, NSString;
overload selector(static "guessesForWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, Int;
overload selector(static "handleCloseScriptCommand:") = Id, NSCloseCommand;
overload selector(static "handleEvent:") = Bool, NSEvent;
overload varargSelector(static "handleFailureInFunction:file:lineNumber:description:") = Void, NSString, NSString, Int, NSString;
overload varargSelector(static "handleFailureInMethod:object:file:lineNumber:description:") = Void, SelectorHandle, Id, NSString, Int, NSString;
overload selector(static "handleMachMessage:") = Void, RawPointer;
overload selector(static "handleMouseEvent:") = Bool, NSEvent;
overload selector(static "handlePortMessage:") = Void, NSPortMessage;
overload selector(static "handlePrintScriptCommand:") = Id, NSScriptCommand;
overload selector(static "handleQueryWithUnboundKey:") = Id, NSString;
overload selector(static "handleSaveScriptCommand:") = Id, NSScriptCommand;
overload selector(static "handleTakeValue:forUnboundKey:") = Void, Id, NSString;
overload selector(static "handleTextCheckingResults:forRange:types:options:orthography:wordCount:") = Void, NSArray, NSRange, UInt64, NSDictionary, NSOrthography, Int;
overload selector(static "hasAlpha") = Bool;
overload selector(static "hasBytesAvailable") = Bool;
overload selector(static "hasChanges") = Bool;
overload selector(static "hasChapters") = Bool;
overload selector(static "hasCharacteristic:") = Bool, NSString;
overload selector(static "hasCloseBox") = Bool;
overload selector(static "hasDynamicDepthLimit") = Bool;
overload selector(static "hasEditedDocuments") = Bool;
overload selector(static "hasFaultForRelationshipNamed:") = Bool, NSString;
overload selector(static "hasHorizontalRuler") = Bool;
overload selector(static "hasHorizontalScroller") = Bool;
overload selector(static "hasLearnedWord:") = Bool, NSString;
overload selector(static "hasMarkedText") = Bool;
overload selector(static "hasMediaType:") = Bool, NSString;
overload selector(static "hasMemberInPlane:") = Bool, CUChar;
overload selector(static "hasNonContiguousLayout") = Bool;
overload selector(static "hasOrderedToManyRelationshipForKey:") = Bool, NSString;
overload selector(static "hasPassword") = Bool;
overload selector(static "hasPrefix:") = Bool, NSString;
overload selector(static "hasPropertyForKey:") = Bool, NSString;
overload selector(static "hasReadablePropertyForKey:") = Bool, NSString;
overload selector(static "hasShadow") = Bool;
overload selector(static "hasSpaceAvailable") = Bool;
overload selector(static "hasSubmenu") = Bool;
overload selector(static "hasSuffix:") = Bool, NSString;
overload selector(static "hasThousandSeparators") = Bool;
overload selector(static "hasTitleBar") = Bool;
overload selector(static "hasUnappliedChanges") = Bool;
overload selector(static "hasUnautosavedChanges") = Bool;
overload selector(static "hasUndoManager") = Bool;
overload selector(static "hasValidObjectValue") = Bool;
overload selector(static "hasVerticalRuler") = Bool;
overload selector(static "hasVerticalScroller") = Bool;
overload selector(static "hasWritablePropertyForKey:") = Bool, NSString;
overload selector(static "hash") = UInt;
overload selector(static "hashFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[UInt]]],[UInt]];
overload selector(static "hashTableWithOptions:") = Id, UInt;
overload selector(static "hashTableWithWeakObjects") = Id;
overload selector(static "headIndent") = Float;
overload selector(static "headerCell") = Id;
overload selector(static "headerColor") = NSColor;
overload selector(static "headerLevel") = Int;
overload selector(static "headerRectOfColumn:") = NSRect, Int;
overload selector(static "headerTextColor") = NSColor;
overload selector(static "headerToolTip") = NSString;
overload selector(static "headerView") = NSTableHeaderView;
overload selector(static "heightAdjustLimit") = Float;
overload selector(static "heightTracksTextView") = Bool;
overload selector(static "helpAnchor") = NSString;
overload selector(static "helpMenu") = NSMenu;
overload selector(static "helpRequested:") = Void, NSEvent;
overload selector(static "hide") = Bool;
overload selector(static "hide:") = Void, Id;
overload selector(static "hideOtherApplications") = Void;
overload selector(static "hideOtherApplications:") = Void, Id;
overload selector(static "hidesEmptyCells") = Bool;
overload selector(static "hidesOnDeactivate") = Bool;
overload selector(static "highlight:") = Void, Bool;
overload selector(static "highlight:withFrame:inView:") = Void, Bool, NSRect, NSView;
overload selector(static "highlightCell:atRow:column:") = Void, Bool, Int, Int;
overload selector(static "highlightColor") = NSColor;
overload selector(static "highlightColorInView:") = NSColor, NSView;
overload selector(static "highlightColorWithFrame:inView:") = NSColor, NSRect, NSView;
overload selector(static "highlightMode") = Bool;
overload selector(static "highlightSelectionInClipRect:") = Void, NSRect;
overload selector(static "highlightWithLevel:") = NSColor, Float;
overload selector(static "highlightedBranchImage") = NSImage;
overload selector(static "highlightedItem") = NSMenuItem;
overload selector(static "highlightedItemIndex") = Int;
overload selector(static "highlightedTableColumn") = NSTableColumn;
overload selector(static "highlightsBy") = Int;
overload selector(static "hitPart") = UInt;
overload selector(static "hitTest:") = Id, NSPoint;
overload selector(static "hitTestForEvent:inRect:ofView:") = UInt, NSEvent, NSRect, NSView;
overload selector(static "hitTestRect:withImageDestinationRect:context:hints:flipped:") = Bool, NSRect, NSRect, NSGraphicsContext, NSDictionary, Bool;
overload selector(static "horizontalEdgePadding") = Float;
overload selector(static "horizontalLineScroll") = Float;
overload selector(static "horizontalPageScroll") = Float;
overload selector(static "horizontalPagination") = UInt;
overload selector(static "horizontalRulerView") = NSRulerView;
overload selector(static "horizontalScroller") = NSScroller;
overload selector(static "host") = NSString;
overload selector(static "hostName") = NSString;
overload selector(static "hostWithAddress:") = NSHost, NSString;
overload selector(static "hostWithName:") = NSHost, NSString;
overload selector(static "hotSpot") = NSPoint;
overload selector(static "hour") = Int;
overload selector(static "hourOfDay") = Int;
overload selector(static "hueComponent") = Float;
overload selector(static "hyphenCharacterForGlyphAtIndex:") = CULong, UInt;
overload selector(static "hyphenationFactor") = Float;
overload selector(static "hyphenationFactorForGlyphAtIndex:") = Float, UInt;
overload selector(static "icon") = NSImage;
overload selector(static "iconForFile:") = NSImage, NSString;
overload selector(static "iconForFileType:") = NSImage, NSString;
overload selector(static "iconForFiles:") = NSImage, NSArray;
overload selector(static "identifier") = Id;
overload selector(static "identity") = SecIdentityRef;
overload selector(static "ignoreModifierKeysWhileDragging") = Bool;
overload selector(static "ignoreSpelling:") = Void, Id;
overload selector(static "ignoreWord:inSpellDocumentWithTag:") = Void, NSString, Int;
overload selector(static "ignoredWordsInSpellDocumentWithTag:") = NSArray, Int;
overload selector(static "ignoresAlpha") = Bool;
overload selector(static "ignoresMouseEvents") = Bool;
overload selector(static "ignoresMultiClick") = Bool;
overload selector(static "illegalCharacterSet") = Id;
overload selector(static "image") = Id;
overload selector(static "image:didLoadPartOfRepresentation:withValidRows:") = Void, NSImage, NSImageRep, Int;
overload selector(static "image:didLoadRepresentation:withStatus:") = Void, NSImage, NSImageRep, UInt;
overload selector(static "image:didLoadRepresentationHeader:") = Void, NSImage, NSImageRep;
overload selector(static "image:willLoadRepresentation:") = Void, NSImage, NSImageRep;
overload selector(static "imageAccumulatorWithExtent:format:") = CIImageAccumulator, CGRect, Int;
overload selector(static "imageAlignment") = UInt;
overload selector(static "imageAndTitleOffset") = Float;
overload selector(static "imageAndTitleWidth") = Float;
overload selector(static "imageByApplyingTransform:") = CIImage, CGAffineTransform;
overload selector(static "imageByCroppingToRect:") = CIImage, CGRect;
overload selector(static "imageDidNotDraw:inRect:") = NSImage, Id, NSRect;
overload selector(static "imageDimsWhenDisabled") = Bool;
overload selector(static "imageFileTypes") = NSArray;
overload selector(static "imageForSegment:") = NSImage, Int;
overload selector(static "imageFrameStyle") = UInt;
overload selector(static "imageInterpolation") = UInt;
overload selector(static "imageNamed:") = Id, NSString;
overload selector(static "imageOrigin") = NSPoint;
overload selector(static "imagePasteboardTypes") = NSArray;
overload selector(static "imagePosition") = UInt;
overload selector(static "imageRectForBounds:") = NSRect, NSRect;
overload selector(static "imageRectForPaper:") = NSRect, NSString;
overload selector(static "imageRectInRuler") = NSRect;
overload selector(static "imageRepClassForData:") = Id, NSData;
overload selector(static "imageRepClassForFileType:") = Id, NSString;
overload selector(static "imageRepClassForPasteboardType:") = Id, NSString;
overload selector(static "imageRepClassForType:") = Id, NSString;
overload selector(static "imageRepWithCIImage:") = Id, CIImage;
overload selector(static "imageRepWithContentsOfFile:") = Id, NSString;
overload selector(static "imageRepWithContentsOfURL:") = Id, NSURL;
overload selector(static "imageRepWithData:") = Id, NSData;
overload selector(static "imageRepWithPasteboard:") = Id, NSPasteboard;
overload selector(static "imageRepsWithContentsOfFile:") = NSArray, NSString;
overload selector(static "imageRepsWithContentsOfURL:") = NSArray, NSURL;
overload selector(static "imageRepsWithData:") = NSArray, NSData;
overload selector(static "imageRepsWithPasteboard:") = NSArray, NSPasteboard;
overload selector(static "imageScaling") = UInt;
overload selector(static "imageScalingForSegment:") = UInt, Int;
overload selector(static "imageTypes") = NSArray;
overload selector(static "imageUnfilteredFileTypes") = NSArray;
overload selector(static "imageUnfilteredPasteboardTypes") = NSArray;
overload selector(static "imageUnfilteredTypes") = NSArray;
overload selector(static "imageWidth") = Float;
overload selector(static "imageWithBitmapData:bytesPerRow:size:format:colorSpace:") = CIImage, NSData, CULong, CGSize, Int, CGColorSpaceRef;
overload selector(static "imageWithCGImage:") = CIImage, CGImageRef;
overload selector(static "imageWithCGImage:options:") = CIImage, CGImageRef, NSDictionary;
overload selector(static "imageWithCGLayer:") = CIImage, CGLayerRef;
overload selector(static "imageWithCGLayer:options:") = CIImage, CGLayerRef, NSDictionary;
overload selector(static "imageWithCVImageBuffer:") = CIImage, CVImageBufferRef;
overload selector(static "imageWithCVImageBuffer:options:") = CIImage, CVImageBufferRef, NSDictionary;
overload selector(static "imageWithColor:") = CIImage, CIColor;
overload selector(static "imageWithContentsOfURL:") = CIImage, NSURL;
overload selector(static "imageWithContentsOfURL:options:") = CIImage, NSURL, NSDictionary;
overload selector(static "imageWithData:") = CIImage, NSData;
overload selector(static "imageWithData:options:") = CIImage, NSData, NSDictionary;
overload selector(static "imageWithIOSurface:") = CIImage, IOSurfaceRef;
overload selector(static "imageWithIOSurface:options:") = CIImage, IOSurfaceRef, NSDictionary;
overload selector(static "imageWithImageProvider:size::format:colorSpace:options:") = CIImage, Id, CULong, CULong, Int, CGColorSpaceRef, NSDictionary;
overload selector(static "imageWithTexture:size:flipped:colorSpace:") = CIImage, UInt, CGSize, Bool, CGColorSpaceRef;
overload selector(static "imageablePageBounds") = NSRect;
overload selector(static "implementationClassName") = NSString;
overload selector(static "importStoreWithIdentifier:fromExternalRecordsDirectory:toURL:options:withType:error:") = NSPersistentStore, NSString, NSURL, NSURL, NSDictionary, NSString, Pointer[NSError];
overload selector(static "importsGraphics") = Bool;
overload selector(static "inLiveResize") = Bool;
overload selector(static "includedKeys") = NSArray;
overload selector(static "includesPendingChanges") = Bool;
overload selector(static "includesPropertyValues") = Bool;
overload selector(static "includesSubentities") = Bool;
overload selector(static "increaseLengthBy:") = Void, UInt;
overload selector(static "increment") = Double;
overload selector(static "incrementBy:") = Void, Double;
overload selector(static "incrementSampleUseCount") = Void;
overload selector(static "incrementalLoadFromData:complete:") = Int, NSData, Bool;
overload selector(static "indent:") = Void, Id;
overload selector(static "indentationLevel") = Int;
overload selector(static "indentationMarkerFollowsCell") = Bool;
overload selector(static "indentationPerLevel") = Float;
overload selector(static "independentConversationQueueing") = Bool;
overload selector(static "index") = UInt;
overload selector(static "indexAtPosition:") = UInt, UInt;
overload selector(static "indexGreaterThanIndex:") = UInt, UInt;
overload selector(static "indexGreaterThanOrEqualToIndex:") = UInt, UInt;
overload selector(static "indexInRange:options:passingTest:") = UInt, NSRange, UInt, UnknownType;
overload selector(static "indexLessThanIndex:") = UInt, UInt;
overload selector(static "indexLessThanOrEqualToIndex:") = UInt, UInt;
overload selector(static "indexOfCellWithTag:") = Int, Int;
overload selector(static "indexOfItem:") = Int, NSMenuItem;
overload selector(static "indexOfItemAtPoint:") = Int, NSPoint;
overload selector(static "indexOfItemWithObjectValue:") = Int, Id;
overload selector(static "indexOfItemWithRepresentedObject:") = Int, Id;
overload selector(static "indexOfItemWithSubmenu:") = Int, NSMenu;
overload selector(static "indexOfItemWithTag:") = Int, Int;
overload selector(static "indexOfItemWithTarget:andAction:") = Int, Id, SelectorHandle;
overload selector(static "indexOfItemWithTitle:") = Int, NSString;
overload selector(static "indexOfObject:") = UInt, Id;
overload selector(static "indexOfObject:inRange:") = UInt, Id, NSRange;
overload selector(static "indexOfObject:inSortedRange:options:usingComparator:") = UInt, Id, NSRange, UInt, NSComparator;
overload selector(static "indexOfObjectAtIndexes:options:passingTest:") = UInt, NSIndexSet, UInt, UnknownType;
overload selector(static "indexOfObjectIdenticalTo:") = UInt, Id;
overload selector(static "indexOfObjectIdenticalTo:inRange:") = UInt, Id, NSRange;
overload selector(static "indexOfObjectPassingTest:") = UInt, UnknownType;
overload selector(static "indexOfObjectWithOptions:passingTest:") = UInt, UInt, UnknownType;
overload selector(static "indexOfPasteboardItem:") = UInt, NSPasteboardItem;
overload selector(static "indexOfResult:") = UInt, Id;
overload selector(static "indexOfSelectedItem") = Int;
overload selector(static "indexOfTabViewItem:") = Int, NSTabViewItem;
overload selector(static "indexOfTabViewItemWithIdentifier:") = Int, Id;
overload selector(static "indexOfTickMarkAtPoint:") = Int, NSPoint;
overload selector(static "indexPassingTest:") = UInt, UnknownType;
overload selector(static "indexPath") = NSIndexPath;
overload selector(static "indexPathByAddingIndex:") = NSIndexPath, UInt;
overload selector(static "indexPathByRemovingLastIndex") = NSIndexPath;
overload selector(static "indexPathForColumn:") = NSIndexPath, Int;
overload selector(static "indexPathWithIndex:") = Id, UInt;
overload selector(static "indexPathWithIndexes:length:") = Id, Pointer[UInt], UInt;
overload selector(static "indexSet") = Id;
overload selector(static "indexSetWithIndex:") = Id, UInt;
overload selector(static "indexSetWithIndexesInRange:") = Id, NSRange;
overload selector(static "indexWithOptions:passingTest:") = UInt, UInt, UnknownType;
overload selector(static "indexesInRange:options:passingTest:") = NSIndexSet, NSRange, UInt, UnknownType;
overload selector(static "indexesOfObjectsAtIndexes:options:passingTest:") = NSIndexSet, NSIndexSet, UInt, UnknownType;
overload selector(static "indexesOfObjectsPassingTest:") = NSIndexSet, UnknownType;
overload selector(static "indexesOfObjectsWithOptions:passingTest:") = NSIndexSet, UInt, UnknownType;
overload selector(static "indexesPassingTest:") = NSIndexSet, UnknownType;
overload selector(static "indexesWithOptions:passingTest:") = NSIndexSet, UInt, UnknownType;
overload selector(static "indicatorImageInTableColumn:") = NSImage, NSTableColumn;
overload selector(static "indicesOfObjectsByEvaluatingObjectSpecifier:") = NSArray, NSScriptObjectSpecifier;
overload selector(static "indicesOfObjectsByEvaluatingWithContainer:count:") = Pointer[Int], Id, Pointer[Int];
overload selector(static "inferredMappingModelForSourceModel:destinationModel:error:") = NSMappingModel, NSManagedObjectModel, NSManagedObjectModel, Pointer[NSError];
overload selector(static "infoDictionary") = NSDictionary;
overload selector(static "infoForBinding:") = NSDictionary, NSString;
overload selector(static "informativeText") = NSString;
overload selector(static "init") = Id;
overload selector(static "initAndTestWithTests:") = Id, NSArray;
overload selector(static "initAsTearOff") = Id;
overload selector(static "initByReferencingFile:") = Id, NSString;
overload selector(static "initByReferencingURL:") = Id, NSURL;
overload selector(static "initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, UInt, NSURL, Pointer[Bool], Pointer[NSError];
overload selector(static "initDirectoryWithFileWrappers:") = Id, NSDictionary;
overload selector(static "initFileURLWithPath:") = Id, NSString;
overload selector(static "initFileURLWithPath:isDirectory:") = Id, NSString, Bool;
overload selector(static "initForIncrementalLoad") = Id;
overload selector(static "initForReadingWithData:") = Id, NSData;
overload selector(static "initForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
overload selector(static "initForWritingWithMutableData:") = Id, NSMutableData;
overload selector(static "initImageCell:") = Id, NSImage;
overload selector(static "initListDescriptor") = Id;
overload selector(static "initNotTestWithTest:") = Id, NSScriptWhoseTest;
overload selector(static "initOrTestWithTests:") = Id, NSArray;
overload selector(static "initRecordDescriptor") = Id;
overload selector(static "initRegularFileWithContents:") = Id, NSData;
overload selector(static "initRemoteWithProtocolFamily:socketType:protocol:address:") = Id, Int, Int, Int, NSData;
overload selector(static "initRemoteWithTCPPort:host:") = Id, UShort, NSString;
overload selector(static "initSymbolicLinkWithDestination:") = Id, NSString;
overload selector(static "initSymbolicLinkWithDestinationURL:") = Id, NSURL;
overload selector(static "initTextCell:") = Id, NSString;
overload selector(static "initTextCell:pullsDown:") = Id, NSString, Bool;
overload selector(static "initToBuffer:capacity:") = Id, Pointer[CUChar], UInt;
overload selector(static "initToFileAtPath:append:") = Id, NSString, Bool;
overload selector(static "initToMemory") = Id;
overload selector(static "initToWritableData:error:") = Id, NSMutableData, Pointer[NSError];
overload selector(static "initToWritableDataReference:error:") = Id, QTDataReference, Pointer[NSError];
overload selector(static "initToWritableFile:error:") = Id, NSString, Pointer[NSError];
overload selector(static "initWithAEDescNoCopy:") = Id, Pointer[AEDesc];
overload selector(static "initWithArray:") = Id, NSArray;
overload selector(static "initWithArray:copyItems:") = Id, NSArray, Bool;
overload selector(static "initWithAttribute:relativeTo:attribute:scale:offset:") = Id, Int, NSString, Int, Float, Float;
overload selector(static "initWithAttributedString:") = Id, NSAttributedString;
overload selector(static "initWithAttributes:") = Id, Pointer[UInt];
overload selector(static "initWithAttributes:error:") = Id, NSDictionary, Pointer[NSError];
overload selector(static "initWithAuthenticationChallenge:sender:") = Id, NSURLAuthenticationChallenge, Id;
overload selector(static "initWithBitmapData:bytesPerRow:size:format:colorSpace:") = Id, NSData, CULong, CGSize, Int, CGColorSpaceRef;
overload selector(static "initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], Int, Int, Int, Int, Bool, Bool, NSString, UInt, Int, Int;
overload selector(static "initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], Int, Int, Int, Int, Bool, Bool, NSString, Int, Int;
overload selector(static "initWithBitmapImageRep:") = Id, NSBitmapImageRep;
overload selector(static "initWithBool:") = Id, Bool;
overload selector(static "initWithBytes:length:") = Id, RawPointer, UInt;
overload selector(static "initWithBytes:length:encoding:") = Id, RawPointer, UInt, UInt;
overload selector(static "initWithBytes:objCType:") = Id, RawPointer, Pointer[CChar];
overload selector(static "initWithBytesNoCopy:length:") = Id, RawPointer, UInt;
overload selector(static "initWithBytesNoCopy:length:encoding:freeWhenDone:") = Id, RawPointer, UInt, UInt, Bool;
overload selector(static "initWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, UInt, Bool;
overload selector(static "initWithCGColor:") = Id, CGColorRef;
overload selector(static "initWithCGColorSpace:") = Id, CGColorSpaceRef;
overload selector(static "initWithCGImage:") = Id, CGImageRef;
overload selector(static "initWithCGImage:options:") = Id, CGImageRef, NSDictionary;
overload selector(static "initWithCGImage:size:") = Id, CGImageRef, NSSize;
overload selector(static "initWithCGLContextObj:") = Id, RawPointer;
overload selector(static "initWithCGLPBufferObj:") = Id, RawPointer;
overload selector(static "initWithCGLPixelFormatObj:") = Id, RawPointer;
overload selector(static "initWithCGLayer:") = Id, CGLayerRef;
overload selector(static "initWithCGLayer:options:") = Id, CGLayerRef, NSDictionary;
overload selector(static "initWithCIImage:") = Id, CIImage;
overload selector(static "initWithCString:") = Id, Pointer[CChar];
overload selector(static "initWithCString:encoding:") = Id, Pointer[CChar], UInt;
overload selector(static "initWithCString:length:") = Id, Pointer[CChar], UInt;
overload selector(static "initWithCStringNoCopy:length:freeWhenDone:") = Id, Pointer[CChar], UInt, Bool;
overload selector(static "initWithCVImageBuffer:") = Id, CVImageBufferRef;
overload selector(static "initWithCVImageBuffer:options:") = Id, CVImageBufferRef, NSDictionary;
overload selector(static "initWithCalendarIdentifier:") = Id, NSString;
overload selector(static "initWithCapacity:") = Id, UInt;
overload selector(static "initWithChar:") = Id, CChar;
overload selector(static "initWithCharacters:length:") = Id, Pointer[UShort], UInt;
overload selector(static "initWithCharactersNoCopy:length:freeWhenDone:") = Id, Pointer[UShort], UInt, Bool;
overload selector(static "initWithClient:") = Id, Id;
overload selector(static "initWithCoder:") = Id, NSCoder;
overload selector(static "initWithColor:") = Id, NSColor;
overload selector(static "initWithColorSyncProfile:") = Id, RawPointer;
overload selector(static "initWithColors:") = Id, NSArray;
overload selector(static "initWithColors:atLocations:colorSpace:") = Id, NSArray, Pointer[Float], NSColorSpace;
overload varargSelector(static "initWithColorsAndLocations:") = Id, NSColor;
overload selector(static "initWithCommandDescription:") = Id, NSScriptCommandDescription;
overload selector(static "initWithCompoundTypes:") = Id, NSArray;
overload selector(static "initWithCondition:") = Id, Int;
overload selector(static "initWithContainerClassDescription:containerSpecifier:key:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString;
overload selector(static "initWithContainerClassDescription:containerSpecifier:key:index:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, Int;
overload selector(static "initWithContainerClassDescription:containerSpecifier:key:name:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSString;
overload selector(static "initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, UInt, NSScriptObjectSpecifier;
overload selector(static "initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSScriptObjectSpecifier, NSScriptObjectSpecifier;
overload selector(static "initWithContainerClassDescription:containerSpecifier:key:test:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSScriptWhoseTest;
overload selector(static "initWithContainerClassDescription:containerSpecifier:key:uniqueID:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, Id;
overload selector(static "initWithContainerSize:") = Id, NSSize;
overload selector(static "initWithContainerSpecifier:key:") = Id, NSScriptObjectSpecifier, NSString;
overload selector(static "initWithContent:") = Id, Id;
overload selector(static "initWithContentRect:styleMask:backing:defer:") = Id, NSRect, UInt, UInt, Bool;
overload selector(static "initWithContentRect:styleMask:backing:defer:screen:") = Id, NSRect, UInt, UInt, Bool, NSScreen;
overload selector(static "initWithContentSize:preferredEdge:") = Id, NSSize, NSRectEdge;
overload selector(static "initWithContentsOfFile:") = Id, NSString;
overload selector(static "initWithContentsOfFile:byReference:") = Id, NSString, Bool;
overload selector(static "initWithContentsOfFile:encoding:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "initWithContentsOfFile:ofType:") = Id, NSString, NSString;
overload selector(static "initWithContentsOfFile:options:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "initWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[UInt], Pointer[NSError];
overload selector(static "initWithContentsOfMappedFile:") = Id, NSString;
overload selector(static "initWithContentsOfURL:") = Id, NSURL;
overload selector(static "initWithContentsOfURL:byReference:") = Id, NSURL, Bool;
overload selector(static "initWithContentsOfURL:encoding:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "initWithContentsOfURL:error:") = Id, NSURL, Pointer[NSDictionary];
overload selector(static "initWithContentsOfURL:ofType:") = Id, NSURL, NSString;
overload selector(static "initWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
overload selector(static "initWithContentsOfURL:options:") = Id, NSURL, NSDictionary;
overload selector(static "initWithContentsOfURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "initWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[UInt], Pointer[NSError];
overload selector(static "initWithControlPoints::::") = Id, Float, Float, Float, Float;
overload selector(static "initWithData:") = Id, NSData;
overload selector(static "initWithData:encoding:") = Id, NSData, UInt;
overload selector(static "initWithData:error:") = Id, NSData, Pointer[NSError];
overload selector(static "initWithData:options:") = Id, NSData, NSDictionary;
overload selector(static "initWithData:options:documentAttributes:error:") = Id, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
overload selector(static "initWithData:options:error:") = Id, NSData, UInt, Pointer[NSError];
overload selector(static "initWithDataIgnoringOrientation:") = Id, NSData;
overload selector(static "initWithDataRef:type:") = Id, Handle, NSString;
overload selector(static "initWithDataRefData:type:") = Id, NSData, NSString;
overload selector(static "initWithDataReference:error:") = Id, QTDataReference, Pointer[NSError];
overload selector(static "initWithDateFormat:allowNaturalLanguage:") = Id, NSString, Bool;
overload selector(static "initWithDecimal:") = Id, NSDecimal;
overload selector(static "initWithDefaults:initialValues:") = Id, NSUserDefaults, NSDictionary;
overload selector(static "initWithDelegate:name:") = Id, Id, NSString;
overload selector(static "initWithDescriptorType:bytes:length:") = Id, CULong, RawPointer, UInt;
overload selector(static "initWithDescriptorType:data:") = Id, CULong, NSData;
overload selector(static "initWithDevice:") = Id, QTCaptureDevice;
overload selector(static "initWithDictionary:") = Id, NSDictionary;
overload selector(static "initWithDictionary:copyItems:") = Id, NSDictionary, Bool;
overload selector(static "initWithDocFormat:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
overload selector(static "initWithDomain:code:userInfo:") = Id, NSString, Int, NSDictionary;
overload selector(static "initWithDomain:type:name:") = Id, NSString, NSString, NSString;
overload selector(static "initWithDomain:type:name:port:") = Id, NSString, NSString, NSString, Int;
overload selector(static "initWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
overload selector(static "initWithDouble:") = Id, Double;
overload selector(static "initWithDrawSelector:delegate:") = Id, SelectorHandle, Id;
overload selector(static "initWithDuration:animationCurve:") = Id, Double, UInt;
overload selector(static "initWithEntity:insertIntoManagedObjectContext:") = Id, NSEntityDescription, NSManagedObjectContext;
overload selector(static "initWithEventClass:eventID:targetDescriptor:returnID:transactionID:") = Id, CULong, CULong, NSAppleEventDescriptor, Short, CLong;
overload selector(static "initWithExpressionType:") = Id, UInt;
overload selector(static "initWithExtent:format:") = Id, CGRect, Int;
overload selector(static "initWithFile:error:") = Id, NSString, Pointer[NSError];
overload selector(static "initWithFileAtPath:") = Id, NSString;
overload selector(static "initWithFileDescriptor:") = Id, Int;
overload selector(static "initWithFileDescriptor:closeOnDealloc:") = Id, Int, Bool;
overload selector(static "initWithFileWrapper:") = Id, NSFileWrapper;
overload selector(static "initWithFireDate:interval:target:selector:userInfo:repeats:") = Id, NSDate, Double, Id, SelectorHandle, Id, Bool;
overload selector(static "initWithFloat:") = Id, Float;
overload selector(static "initWithFocusedViewRect:") = Id, NSRect;
overload selector(static "initWithFontAttributes:") = Id, NSDictionary;
overload varargSelector(static "initWithFormat:") = Id, NSString;
overload selector(static "initWithFormat:arguments:") = Id, NSString, va_list;
overload varargSelector(static "initWithFormat:locale:") = Id, NSString, Id;
overload selector(static "initWithFormat:locale:arguments:") = Id, NSString, Id, va_list;
overload selector(static "initWithFormat:shareContext:") = Id, NSOpenGLPixelFormat, NSOpenGLContext;
overload selector(static "initWithFrame:") = Id, NSRect;
overload selector(static "initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:") = Id, NSRect, UInt, Id, Int, Int;
overload selector(static "initWithFrame:mode:prototype:numberOfRows:numberOfColumns:") = Id, NSRect, UInt, NSCell, Int, Int;
overload selector(static "initWithFrame:pixelFormat:") = Id, NSRect, NSOpenGLPixelFormat;
overload selector(static "initWithFrame:pullsDown:") = Id, NSRect, Bool;
overload selector(static "initWithFrame:textContainer:") = Id, NSRect, NSTextContainer;
overload selector(static "initWithHTML:baseURL:documentAttributes:") = Id, NSData, NSURL, Pointer[NSDictionary];
overload selector(static "initWithHTML:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
overload selector(static "initWithHTML:options:documentAttributes:") = Id, NSData, NSDictionary, Pointer[NSDictionary];
overload selector(static "initWithHost:port:protocol:realm:authenticationMethod:") = Id, NSString, Int, NSString, NSString, NSString;
overload selector(static "initWithICCProfileData:") = Id, NSData;
overload selector(static "initWithIOSurface:") = Id, IOSurfaceRef;
overload selector(static "initWithIOSurface:options:") = Id, IOSurfaceRef, NSDictionary;
overload selector(static "initWithIconRef:") = Id, IconRef;
overload selector(static "initWithIdentifier:") = Id, Id;
overload selector(static "initWithIdentity:certificates:persistence:") = Id, SecIdentityRef, NSArray, UInt;
overload selector(static "initWithImage:") = Id, CIImage;
overload selector(static "initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:") = Id, NSImage, NSColor, NSColor, NSPoint;
overload selector(static "initWithImage:hotSpot:") = Id, NSImage, NSPoint;
overload varargSelector(static "initWithImage:keysAndValues:") = Id, CIImage, Id;
overload selector(static "initWithImage:options:") = Id, CIImage, NSDictionary;
overload selector(static "initWithImageProvider:size::format:colorSpace:options:") = Id, Id, CULong, CULong, Int, CGColorSpaceRef, NSDictionary;
overload selector(static "initWithIndex:") = Id, UInt;
overload selector(static "initWithIndexSet:") = Id, NSIndexSet;
overload selector(static "initWithIndexes:length:") = Id, Pointer[UInt], UInt;
overload selector(static "initWithIndexesInRange:") = Id, NSRange;
overload selector(static "initWithInt:") = Id, Int;
overload selector(static "initWithInteger:") = Id, Int;
overload selector(static "initWithInvocation:") = Id, NSInvocation;
overload selector(static "initWithItemIdentifier:") = Id, NSString;
overload selector(static "initWithKey:ascending:") = Id, NSString, Bool;
overload selector(static "initWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
overload selector(static "initWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
overload selector(static "initWithKeyOptions:valueOptions:capacity:") = Id, UInt, UInt, UInt;
overload selector(static "initWithKeyPointerFunctions:valuePointerFunctions:capacity:") = Id, NSPointerFunctions, NSPointerFunctions, UInt;
overload selector(static "initWithKind:") = Id, UInt;
overload selector(static "initWithKind:options:") = Id, UInt, UInt;
overload selector(static "initWithLayer:") = Id, Id;
overload selector(static "initWithLeftExpression:rightExpression:customSelector:") = Id, NSExpression, NSExpression, SelectorHandle;
overload selector(static "initWithLeftExpression:rightExpression:modifier:type:options:") = Id, NSExpression, NSExpression, UInt, UInt, UInt;
overload selector(static "initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:") = Id, NSArray, UInt, UInt, NSArray, UInt;
overload selector(static "initWithLeftExpressions:rightExpressions:modifier:operators:options:") = Id, NSArray, NSArray, UInt, NSArray, UInt;
overload selector(static "initWithLength:") = Id, UInt;
overload selector(static "initWithLevelIndicatorStyle:") = Id, UInt;
overload selector(static "initWithLocal:connection:") = Id, Id, NSConnection;
overload selector(static "initWithLocaleIdentifier:") = Id, NSString;
overload selector(static "initWithLong:") = Id, CLong;
overload selector(static "initWithLongLong:") = Id, Int64;
overload selector(static "initWithMachPort:") = Id, UInt;
overload selector(static "initWithMachPort:options:") = Id, UInt, UInt;
overload selector(static "initWithManagedObjectModel:") = Id, NSManagedObjectModel;
overload selector(static "initWithMantissa:exponent:isNegative:") = Id, UInt64, Short, Bool;
overload selector(static "initWithMarkerFormat:options:") = Id, NSString, UInt;
overload selector(static "initWithMemoryCapacity:diskCapacity:diskPath:") = Id, UInt, UInt, NSString;
overload selector(static "initWithMovie:") = Id, RawPointer;
overload selector(static "initWithMovie:timeRange:error:") = Id, QTMovie, QTTimeRange, Pointer[NSError];
overload selector(static "initWithName:") = Id, NSString;
overload selector(static "initWithName:URI:") = Id, NSString, NSString;
overload selector(static "initWithName:data:") = Id, NSString, NSData;
overload selector(static "initWithName:fromFile:") = Id, NSString, NSString;
overload selector(static "initWithName:host:") = NSInputManager, NSString, NSString;
overload selector(static "initWithName:reason:userInfo:") = Id, NSString, NSString, NSDictionary;
overload selector(static "initWithName:stringValue:") = Id, NSString, NSString;
overload selector(static "initWithNibName:bundle:") = Id, NSString, NSBundle;
overload selector(static "initWithNibNamed:bundle:") = Id, NSString, NSBundle;
overload selector(static "initWithNotificationCenter:") = Id, NSNotificationCenter;
overload selector(static "initWithObjectID:") = Id, NSManagedObjectID;
overload selector(static "initWithObjectSpecifier:comparisonOperator:testObject:") = Id, NSScriptObjectSpecifier, UInt, Id;
overload varargSelector(static "initWithObjects:") = Id, Id;
overload selector(static "initWithObjects:count:") = Id, Pointer[Id], UInt;
overload selector(static "initWithObjects:forKeys:") = Id, NSArray, NSArray;
overload selector(static "initWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], UInt;
overload varargSelector(static "initWithObjectsAndKeys:") = Id, Id;
overload selector(static "initWithOptions:") = Id, UInt;
overload selector(static "initWithOptions:capacity:") = Id, UInt, UInt;
overload selector(static "initWithPasteboard:") = Id, NSPasteboard;
overload selector(static "initWithPasteboard:error:") = Id, NSPasteboard, Pointer[NSError];
overload selector(static "initWithPasteboardPropertyList:ofType:") = Id, Id, NSString;
overload selector(static "initWithPath:") = Id, NSString;
overload selector(static "initWithPath:documentAttributes:") = Id, NSString, Pointer[NSDictionary];
overload selector(static "initWithPersistentStoreCoordinator:configurationName:URL:options:") = Id, NSPersistentStoreCoordinator, NSString, NSURL, NSDictionary;
overload selector(static "initWithPickerMask:colorPanel:") = Id, UInt, NSColorPanel;
overload selector(static "initWithPointerFunctions:") = Id, NSPointerFunctions;
overload selector(static "initWithPointerFunctions:capacity:") = Id, NSPointerFunctions, UInt;
overload selector(static "initWithPosition:objectSpecifier:") = Id, UInt, NSScriptObjectSpecifier;
overload selector(static "initWithProperties:") = Id, NSDictionary;
overload selector(static "initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:") = Id, NSURLProtectionSpace, NSURLCredential, Int, NSURLResponse, NSError, Id;
overload selector(static "initWithProtocolFamily:socketType:protocol:address:") = Id, Int, Int, Int, NSData;
overload selector(static "initWithProtocolFamily:socketType:protocol:socket:") = Id, Int, Int, Int, Int;
overload selector(static "initWithProxyHost:port:type:realm:authenticationMethod:") = Id, NSString, Int, NSString, NSString, NSString;
overload selector(static "initWithQuickTimeMedia:error:") = Id, Media, Pointer[NSError];
overload selector(static "initWithQuickTimeMovie:disposeWhenDone:error:") = Id, Movie, Bool, Pointer[NSError];
overload selector(static "initWithQuickTimeTrack:error:") = Id, Track, Pointer[NSError];
overload selector(static "initWithRTF:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
overload selector(static "initWithRTFD:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
overload selector(static "initWithRTFDFileWrapper:documentAttributes:") = Id, NSFileWrapper, Pointer[NSDictionary];
overload selector(static "initWithReceivePort:sendPort:") = Id, NSPort, NSPort;
overload selector(static "initWithReceivePort:sendPort:components:") = Id, NSPort, NSPort, NSArray;
overload selector(static "initWithRect:") = Id, CGRect;
overload selector(static "initWithRect:options:owner:userInfo:") = Id, NSRect, UInt, Id, NSDictionary;
overload selector(static "initWithReferenceToData:") = Id, NSData;
overload selector(static "initWithReferenceToData:name:MIMEType:") = Id, NSData, NSString, NSString;
overload selector(static "initWithReferenceToFile:") = Id, NSString;
overload selector(static "initWithReferenceToURL:") = Id, NSURL;
overload selector(static "initWithRepresentedObject:") = Id, Id;
overload selector(static "initWithRequest:cachedResponse:client:") = Id, NSURLRequest, NSCachedURLResponse, Id;
overload selector(static "initWithRequest:delegate:") = Id, NSURLRequest, Id;
overload selector(static "initWithRequest:delegate:startImmediately:") = Id, NSURLRequest, Id, Bool;
overload selector(static "initWithResponse:data:") = Id, NSURLResponse, NSData;
overload selector(static "initWithResponse:data:userInfo:storagePolicy:") = Id, NSURLResponse, NSData, NSDictionary, UInt;
overload selector(static "initWithResumeData:delegate:path:") = Id, NSData, Id, NSString;
overload selector(static "initWithRootElement:") = Id, NSXMLElement;
overload selector(static "initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, UInt, Short, Bool, Bool, Bool, Bool;
overload selector(static "initWithRulerView:markerLocation:image:imageOrigin:") = Id, NSRulerView, Float, NSImage, NSPoint;
overload selector(static "initWithScheme:host:path:") = Id, NSString, NSString, NSString;
overload selector(static "initWithScrollView:orientation:") = Id, NSScrollView, UInt;
overload selector(static "initWithSendPort:receivePort:components:") = Id, NSPort, NSPort, NSArray;
overload selector(static "initWithSerializedRepresentation:") = Id, NSData;
overload selector(static "initWithSession:") = Id, QTCaptureSession;
overload selector(static "initWithSet:") = Id, NSSet;
overload selector(static "initWithSet:copyItems:") = Id, NSSet, Bool;
overload selector(static "initWithShort:") = Id, Short;
overload selector(static "initWithSize:") = Id, NSSize;
overload selector(static "initWithSize:depth:separate:alpha:") = Id, NSSize, Int, Bool, Bool;
overload selector(static "initWithSource:") = Id, NSString;
overload selector(static "initWithSourceModel:destinationModel:") = Id, NSManagedObjectModel, NSManagedObjectModel;
overload selector(static "initWithStartingColor:endingColor:") = Id, NSColor, NSColor;
overload selector(static "initWithStorageLocation:") = Id, NSURL;
overload selector(static "initWithString:") = Id, NSString;
overload selector(static "initWithString:attributes:") = Id, NSString, NSDictionary;
overload selector(static "initWithString:calendarFormat:") = Id, NSString, NSString;
overload selector(static "initWithString:calendarFormat:locale:") = Id, NSString, NSString, Id;
overload selector(static "initWithString:locale:") = Id, NSString, Id;
overload selector(static "initWithString:relativeToURL:") = Id, NSString, NSURL;
overload selector(static "initWithSuiteName:className:dictionary:") = Id, NSString, NSString, NSDictionary;
overload selector(static "initWithSuiteName:commandName:dictionary:") = Id, NSString, NSString, NSDictionary;
overload selector(static "initWithTCPPort:") = Id, UShort;
overload selector(static "initWithTable:startingRow:rowSpan:startingColumn:columnSpan:") = Id, NSTextTable, Int, Int, Int, Int;
overload selector(static "initWithTarget:connection:") = Id, Id, NSConnection;
overload selector(static "initWithTarget:protocol:") = Id, NSObject, Id;
overload selector(static "initWithTarget:selector:object:") = Id, Id, SelectorHandle, Id;
overload selector(static "initWithTextAlignment:location:options:") = Id, UInt, Float, NSDictionary;
overload selector(static "initWithTexture:size:flipped:colorSpace:") = Id, UInt, CGSize, Bool, CGColorSpaceRef;
overload selector(static "initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:") = Id, UInt, UInt, Int, Int, Int;
overload selector(static "initWithTimeInterval:sinceDate:") = Id, Double, NSDate;
overload selector(static "initWithTimeIntervalSince1970:") = Id, Double;
overload selector(static "initWithTimeIntervalSinceNow:") = Id, Double;
overload selector(static "initWithTimeIntervalSinceReferenceDate:") = Id, Double;
overload selector(static "initWithTitle:") = Id, NSString;
overload selector(static "initWithTitle:action:keyEquivalent:") = Id, NSString, SelectorHandle, NSString;
overload selector(static "initWithTransform:") = Id, NSAffineTransform;
overload selector(static "initWithTrust:") = Id, SecTrustRef;
overload selector(static "initWithType:error:") = Id, NSString, Pointer[NSError];
overload selector(static "initWithType:location:") = Id, UInt, Float;
overload selector(static "initWithType:subpredicates:") = Id, UInt, NSArray;
overload selector(static "initWithURL:") = Id, NSURL;
overload selector(static "initWithURL:MIMEType:expectedContentLength:textEncodingName:") = Id, NSURL, NSString, Int, NSString;
overload selector(static "initWithURL:append:") = Id, NSURL, Bool;
overload selector(static "initWithURL:byReference:") = Id, NSURL, Bool;
overload selector(static "initWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, UInt, Double;
overload selector(static "initWithURL:cached:") = Id, NSURL, Bool;
overload selector(static "initWithURL:documentAttributes:") = Id, NSURL, Pointer[NSDictionary];
overload selector(static "initWithURL:error:") = Id, NSURL, Pointer[NSError];
overload selector(static "initWithURL:options:documentAttributes:error:") = Id, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
overload selector(static "initWithURL:options:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "initWithUTF8String:") = Id, Pointer[CChar];
overload selector(static "initWithUnsignedChar:") = Id, CUChar;
overload selector(static "initWithUnsignedInt:") = Id, UInt;
overload selector(static "initWithUnsignedInteger:") = Id, UInt;
overload selector(static "initWithUnsignedLong:") = Id, CULong;
overload selector(static "initWithUnsignedLongLong:") = Id, UInt64;
overload selector(static "initWithUnsignedShort:") = Id, UShort;
overload selector(static "initWithUser:") = Id, NSString;
overload selector(static "initWithUser:password:persistence:") = Id, NSString, NSString, UInt;
overload selector(static "initWithValues:count:") = Id, Pointer[Float], CULong;
overload selector(static "initWithViewAnimations:") = Id, NSArray;
overload selector(static "initWithVoice:") = Id, NSString;
overload selector(static "initWithWindow:") = Id, NSWindow;
overload selector(static "initWithWindow:rect:") = Id, NSWindow, NSRect;
overload selector(static "initWithWindowNibName:") = Id, NSString;
overload selector(static "initWithWindowNibName:owner:") = Id, NSString, Id;
overload selector(static "initWithWindowNibPath:owner:") = Id, NSString, Id;
overload selector(static "initWithWindowRef:") = NSWindow, RawPointer;
overload selector(static "initWithX:") = Id, Float;
overload selector(static "initWithX:Y:") = Id, Float, Float;
overload selector(static "initWithX:Y:Z:") = Id, Float, Float, Float;
overload selector(static "initWithX:Y:Z:W:") = Id, Float, Float, Float, Float;
overload selector(static "initWithXMLString:") = Id, NSString;
overload selector(static "initWithXMLString:error:") = Id, NSString, Pointer[NSError];
overload selector(static "initWithXMLString:options:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "initWithYear:month:day:hour:minute:second:timeZone:") = Id, Int, UInt, UInt, UInt, UInt, UInt, NSTimeZone;
overload selector(static "initialFirstResponder") = Id;
overload selector(static "initialKey") = NSString;
overload selector(static "initialValue") = Id;
overload selector(static "initialValues") = NSDictionary;
overload selector(static "initialize") = Void;
overload selector(static "innerRect") = NSRect;
overload selector(static "inputClientBecomeActive:") = Void, Id;
overload selector(static "inputClientDisabled:") = Void, Id;
overload selector(static "inputClientEnabled:") = Void, Id;
overload selector(static "inputClientResignActive:") = Void, Id;
overload selector(static "inputContext") = NSTextInputContext;
overload selector(static "inputDevices") = NSArray;
overload selector(static "inputDevicesWithMediaType:") = NSArray, NSString;
overload selector(static "inputKeys") = NSArray;
overload selector(static "inputStreamWithData:") = Id, NSData;
overload selector(static "inputStreamWithFileAtPath:") = Id, NSString;
overload selector(static "inputStreamWithURL:") = Id, NSURL;
overload selector(static "inputs") = NSArray;
overload selector(static "insert:") = Void, Id;
overload selector(static "insertAttributedString:atIndex:") = Void, NSAttributedString, UInt;
overload selector(static "insertBacktab:") = Void, Id;
overload selector(static "insertChild:") = Void, Id;
overload selector(static "insertChild:atIndex:") = Void, NSXMLNode, UInt;
overload selector(static "insertChildren:atIndex:") = Void, NSArray, UInt;
overload selector(static "insertColor:key:atIndex:") = Void, NSColor, NSString, UInt;
overload selector(static "insertColumn:") = Void, Int;
overload selector(static "insertColumn:withCells:") = Void, Int, NSArray;
overload selector(static "insertCompletion:forPartialWordRange:movement:isFinal:") = Void, NSString, NSRange, Int, Bool;
overload selector(static "insertContainerBreak:") = Void, Id;
overload selector(static "insertDescriptor:atIndex:") = Void, NSAppleEventDescriptor, Int;
overload selector(static "insertDoubleQuoteIgnoringSubstitution:") = Void, Id;
overload selector(static "insertEmptySegmentAt:") = Void, QTTimeRange;
overload selector(static "insertEntry:atIndex:") = NSFormCell, NSString, Int;
overload selector(static "insertGlyph:atGlyphIndex:characterIndex:") = Void, UInt, UInt, UInt;
overload selector(static "insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:") = Void, Pointer[UInt], UInt, UInt, UInt;
overload selector(static "insertItem:atIndex:") = Void, NSMenuItem, Int;
overload selector(static "insertItemWithItemIdentifier:atIndex:") = Void, NSString, Int;
overload selector(static "insertItemWithObjectValue:atIndex:") = Void, Id, Int;
overload selector(static "insertItemWithTitle:action:keyEquivalent:atIndex:") = NSMenuItem, NSString, SelectorHandle, NSString, Int;
overload selector(static "insertItemWithTitle:atIndex:") = Void, NSString, Int;
overload selector(static "insertLineBreak:") = Void, Id;
overload selector(static "insertNewButtonImage:in:") = Void, NSImage, NSButtonCell;
overload selector(static "insertNewObjectForEntityForName:inManagedObjectContext:") = Id, NSString, NSManagedObjectContext;
overload selector(static "insertNewline:") = Void, Id;
overload selector(static "insertNewlineIgnoringFieldEditor:") = Void, Id;
overload selector(static "insertObject:") = Void, NSManagedObject;
overload selector(static "insertObject:atArrangedObjectIndex:") = Void, Id, UInt;
overload selector(static "insertObject:atArrangedObjectIndexPath:") = Void, Id, NSIndexPath;
overload selector(static "insertObject:atIndex:") = Void, Id, UInt;
overload selector(static "insertObjects:atArrangedObjectIndexPaths:") = Void, NSArray, NSArray;
overload selector(static "insertObjects:atArrangedObjectIndexes:") = Void, NSArray, NSIndexSet;
overload selector(static "insertObjects:atIndexes:") = Void, NSArray, NSIndexSet;
overload selector(static "insertParagraphSeparator:") = Void, Id;
overload selector(static "insertPointer:atIndex:") = Void, RawPointer, UInt;
overload selector(static "insertRow:") = Void, Int;
overload selector(static "insertRow:withCells:") = Void, Int, NSArray;
overload selector(static "insertRowAtIndex:withType:asSubrowOfRow:animate:") = Void, Int, UInt, Int, Bool;
overload selector(static "insertSegmentOfMovie:fromRange:scaledToRange:") = Void, QTMovie, QTTimeRange, QTTimeRange;
overload selector(static "insertSegmentOfMovie:timeRange:atTime:") = Void, QTMovie, QTTimeRange, QTTime;
overload selector(static "insertSegmentOfTrack:fromRange:scaledToRange:") = QTTrack, QTTrack, QTTimeRange, QTTimeRange;
overload selector(static "insertSegmentOfTrack:timeRange:atTime:") = QTTrack, QTTrack, QTTimeRange, QTTime;
overload selector(static "insertSingleQuoteIgnoringSubstitution:") = Void, Id;
overload selector(static "insertString:atIndex:") = Void, NSString, UInt;
overload selector(static "insertSublayer:above:") = Void, CALayer, CALayer;
overload selector(static "insertSublayer:atIndex:") = Void, CALayer, UInt;
overload selector(static "insertSublayer:below:") = Void, CALayer, CALayer;
overload selector(static "insertTab:") = Void, Id;
overload selector(static "insertTabIgnoringFieldEditor:") = Void, Id;
overload selector(static "insertTabViewItem:atIndex:") = Void, NSTabViewItem, Int;
overload selector(static "insertText:") = Void, Id;
overload selector(static "insertText:client:") = Void, Id, Id;
overload selector(static "insertText:replacementRange:") = Void, Id, NSRange;
overload selector(static "insertTextContainer:atIndex:") = Void, NSTextContainer, UInt;
overload selector(static "insertValue:atIndex:inPropertyWithKey:") = Void, Id, UInt, NSString;
overload selector(static "insertValue:inPropertyWithKey:") = Void, Id, NSString;
overload selector(static "insertedObjects") = NSSet;
overload selector(static "insertionContainer") = Id;
overload selector(static "insertionIndex") = Int;
overload selector(static "insertionKey") = NSString;
overload selector(static "insertionPointColor") = NSColor;
overload selector(static "insertionReplaces") = Bool;
overload selector(static "insetByX:Y:") = CIFilterShape, Int, Int;
overload selector(static "instanceAlphaOffset") = Float;
overload selector(static "instanceBlueOffset") = Float;
overload selector(static "instanceColor") = CGColorRef;
overload selector(static "instanceCount") = Int;
overload selector(static "instanceDelay") = Double;
overload selector(static "instanceGreenOffset") = Float;
overload selector(static "instanceMethodForSelector:") = IMP, SelectorHandle;
overload selector(static "instanceMethodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
overload selector(static "instanceRedOffset") = Float;
overload selector(static "instanceTransform") = CATransform3D;
overload selector(static "instancesRespondToSelector:") = Bool, SelectorHandle;
overload selector(static "instantiateNibWithExternalNameTable:") = Bool, NSDictionary;
overload selector(static "instantiateNibWithOwner:topLevelObjects:") = Bool, Id, Pointer[NSArray];
overload selector(static "int32Value") = CLong;
overload selector(static "intAttribute:forGlyphAtIndex:") = Int, Int, UInt;
overload selector(static "intForKey:inTable:") = Int, NSString, NSString;
overload selector(static "intValue") = Int;
overload selector(static "integerForKey:") = Int, NSString;
overload selector(static "integerValue") = Int;
overload selector(static "intercellSpacing") = NSSize;
overload selector(static "interfaceStyle") = UInt;
overload selector(static "interiorBackgroundStyle") = Int;
overload selector(static "interiorBackgroundStyleForSegment:") = Int, Int;
overload selector(static "internationalCurrencySymbol") = NSString;
overload selector(static "interpolatedColorAtLocation:") = NSColor, Float;
overload selector(static "interpretKeyEvents:") = Void, NSArray;
overload selector(static "interrupt") = Void;
overload selector(static "intersectHashTable:") = Void, NSHashTable;
overload selector(static "intersectSet:") = Void, NSSet;
overload selector(static "intersectWith:") = CIFilterShape, CIFilterShape;
overload selector(static "intersectWithRect:") = CIFilterShape, CGRect;
overload selector(static "intersectsHashTable:") = Bool, NSHashTable;
overload selector(static "intersectsIndexesInRange:") = Bool, NSRange;
overload selector(static "intersectsSet:") = Bool, NSSet;
overload selector(static "invalidate") = Void;
overload selector(static "invalidateAttributesInRange:") = Void, NSRange;
overload selector(static "invalidateCharacterCoordinates") = Void;
overload selector(static "invalidateClassDescriptionCache") = Void;
overload selector(static "invalidateCursorRectsForView:") = Void, NSView;
overload selector(static "invalidateDisplayForCharacterRange:") = Void, NSRange;
overload selector(static "invalidateDisplayForGlyphRange:") = Void, NSRange;
overload selector(static "invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:") = Void, NSRange, Int, NSRangePointer;
overload selector(static "invalidateGlyphsOnLayoutInvalidationForGlyphRange:") = Void, NSRange;
overload selector(static "invalidateHashMarks") = Void;
overload selector(static "invalidateLayoutForCharacterRange:actualCharacterRange:") = Void, NSRange, NSRangePointer;
overload selector(static "invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:") = Void, NSRange, Bool, NSRangePointer;
overload selector(static "invalidateLayoutOfLayer:") = Void, CALayer;
overload selector(static "invalidateShadow") = Void;
overload selector(static "invalidateTextContainerOrigin") = Void;
overload selector(static "inverseForRelationshipKey:") = NSString, NSString;
overload selector(static "inverseRelationship") = NSRelationshipDescription;
overload selector(static "invert") = Void;
overload selector(static "invertedSet") = NSCharacterSet;
overload selector(static "invocation") = NSInvocation;
overload selector(static "invocationWithMethodSignature:") = NSInvocation, NSMethodSignature;
overload selector(static "invoke") = Void;
overload selector(static "invokeWithTarget:") = Void, Id;
overload selector(static "isARepeat") = Bool;
overload selector(static "isAbsolutePath") = Bool;
overload selector(static "isAbstract") = Bool;
overload selector(static "isActive") = Bool;
overload selector(static "isAdditive") = Bool;
overload selector(static "isAlternate") = Bool;
overload selector(static "isAnimating") = Bool;
overload selector(static "isAnyApplicationSpeaking") = Bool;
overload selector(static "isAsynchronous") = Bool;
overload selector(static "isAtEnd") = Bool;
overload selector(static "isAttached") = Bool;
overload selector(static "isAutodisplay") = Bool;
overload selector(static "isAutomaticDashSubstitutionEnabled") = Bool;
overload selector(static "isAutomaticDataDetectionEnabled") = Bool;
overload selector(static "isAutomaticLinkDetectionEnabled") = Bool;
overload selector(static "isAutomaticQuoteSubstitutionEnabled") = Bool;
overload selector(static "isAutomaticSpellingCorrectionEnabled") = Bool;
overload selector(static "isAutomaticTextReplacementEnabled") = Bool;
overload selector(static "isAutoscroll") = Bool;
overload selector(static "isBackButtonVisible") = Bool;
overload selector(static "isBaseFont") = Bool;
overload selector(static "isBezeled") = Bool;
overload selector(static "isBordered") = Bool;
overload selector(static "isButtonBordered") = Bool;
overload selector(static "isBycopy") = Bool;
overload selector(static "isByref") = Bool;
overload selector(static "isCachedSeparately") = Bool;
overload selector(static "isCancelled") = Bool;
overload selector(static "isCaseInsensitiveLike:") = Bool, NSString;
overload selector(static "isCoalescingUndo") = Bool;
overload selector(static "isCollecting") = Bool;
overload selector(static "isColor") = Bool;
overload selector(static "isColumnSelected:") = Bool, Int;
overload selector(static "isCompiled") = Bool;
overload selector(static "isConcurrent") = Bool;
overload selector(static "isConfiguration:compatibleWithStoreMetadata:") = Bool, NSString, NSDictionary;
overload selector(static "isConnected") = Bool;
overload selector(static "isContentDiscarded") = Bool;
overload selector(static "isContextHelpModeActive") = Bool;
overload selector(static "isContinuous") = Bool;
overload selector(static "isContinuousSpellCheckingEnabled") = Bool;
overload selector(static "isControllerVisible") = Bool;
overload selector(static "isCopyingOperation") = Bool;
overload selector(static "isCountOnlyRequest") = Bool;
overload selector(static "isCumulative") = Bool;
overload selector(static "isCustomButtonVisible") = Bool;
overload selector(static "isDataRetained") = Bool;
overload selector(static "isDaylightSavingTime") = Bool;
overload selector(static "isDaylightSavingTimeForDate:") = Bool, NSDate;
overload selector(static "isDeletableFileAtPath:") = Bool, NSString;
overload selector(static "isDeleted") = Bool;
overload selector(static "isDescendantOf:") = Bool, NSView;
overload selector(static "isDirectory") = Bool;
overload selector(static "isDisplayedWhenStopped") = Bool;
overload selector(static "isDocumentEdited") = Bool;
overload selector(static "isDoubleSided") = Bool;
overload selector(static "isDragging") = Bool;
overload selector(static "isDrawingToScreen") = Bool;
overload selector(static "isEditable") = Bool;
overload selector(static "isEditing") = Bool;
overload selector(static "isEmpty") = Bool;
overload selector(static "isEnabled") = Bool;
overload selector(static "isEnabledForSegment:") = Bool, Int;
overload selector(static "isEnteringProximity") = Bool;
overload selector(static "isEntryAcceptable:") = Bool, NSString;
overload selector(static "isEqual:") = Bool, Id;
overload selector(static "isEqualFunction") = CCodePointer[[RawPointer,RawPointer,CCodePointer[[RawPointer],[UInt]]],[CChar]];
overload selector(static "isEqualTo:") = Bool, Id;
overload selector(static "isEqualToArray:") = Bool, NSArray;
overload selector(static "isEqualToAttributedString:") = Bool, NSAttributedString;
overload selector(static "isEqualToCompressionOptions:") = Bool, QTCompressionOptions;
overload selector(static "isEqualToData:") = Bool, NSData;
overload selector(static "isEqualToDate:") = Bool, NSDate;
overload selector(static "isEqualToDictionary:") = Bool, NSDictionary;
overload selector(static "isEqualToFormatDescription:") = Bool, QTFormatDescription;
overload selector(static "isEqualToHashTable:") = Bool, NSHashTable;
overload selector(static "isEqualToHost:") = Bool, NSHost;
overload selector(static "isEqualToIndexSet:") = Bool, NSIndexSet;
overload selector(static "isEqualToNumber:") = Bool, NSNumber;
overload selector(static "isEqualToSet:") = Bool, NSSet;
overload selector(static "isEqualToString:") = Bool, NSString;
overload selector(static "isEqualToTimeZone:") = Bool, NSTimeZone;
overload selector(static "isEqualToValue:") = Bool, NSValue;
overload selector(static "isExcludedFromWindowsMenu") = Bool;
overload selector(static "isExecutableFileAtPath:") = Bool, NSString;
overload selector(static "isExecuting") = Bool;
overload selector(static "isExpandable:") = Bool, Id;
overload selector(static "isExpanded") = Bool;
overload selector(static "isExplicitlyIncluded") = Bool;
overload selector(static "isExtensionHidden") = Bool;
overload selector(static "isExternal") = Bool;
overload selector(static "isFault") = Bool;
overload selector(static "isFieldEditor") = Bool;
overload selector(static "isFilePackageAtPath:") = Bool, NSString;
overload selector(static "isFileReferenceURL") = Bool;
overload selector(static "isFileURL") = Bool;
overload selector(static "isFinished") = Bool;
overload selector(static "isFinishedLaunching") = Bool;
overload selector(static "isFirstResponder") = Bool;
overload selector(static "isFixedPitch") = Bool;
overload selector(static "isFlipped") = Bool;
overload selector(static "isFloatingPanel") = Bool;
overload selector(static "isFlushWindowDisabled") = Bool;
overload selector(static "isFontAvailable:") = Bool, NSString;
overload selector(static "isFullKeyboardAccessEnabled") = Bool;
overload selector(static "isGathering") = Bool;
overload selector(static "isGeometryFlipped") = Bool;
overload selector(static "isGrammarCheckingEnabled") = Bool;
overload selector(static "isGreaterThan:") = Bool, Id;
overload selector(static "isGreaterThanOrEqualTo:") = Bool, Id;
overload selector(static "isHTTPOnly") = Bool;
overload selector(static "isHidden") = Bool;
overload selector(static "isHiddenOrHasHiddenAncestor") = Bool;
overload selector(static "isHighlighted") = Bool;
overload selector(static "isHorizontal") = Bool;
overload selector(static "isHorizontallyCentered") = Bool;
overload selector(static "isHorizontallyResizable") = Bool;
overload selector(static "isHostCacheEnabled") = Bool;
overload selector(static "isHotSpotButtonVisible") = Bool;
overload selector(static "isIdling") = Bool;
overload selector(static "isInFullScreenMode") = Bool;
overload selector(static "isInUseByAnotherApplication") = Bool;
overload selector(static "isIndeterminate") = Bool;
overload selector(static "isIndexed") = Bool;
overload selector(static "isIndexedBySpotlight") = Bool;
overload selector(static "isInserted") = Bool;
overload selector(static "isItemExpanded:") = Bool, Id;
overload selector(static "isKey:inTable:") = Bool, NSString, NSString;
overload selector(static "isKeyWindow") = Bool;
overload selector(static "isKindOfClass:") = Bool, Id;
overload selector(static "isKindOfEntity:") = Bool, NSEntityDescription;
overload selector(static "isLeaf") = Bool;
overload selector(static "isLeafItem:") = Bool, Id;
overload selector(static "isLenient") = Bool;
overload selector(static "isLessThan:") = Bool, Id;
overload selector(static "isLessThanOrEqualTo:") = Bool, Id;
overload selector(static "isLike:") = Bool, NSString;
overload selector(static "isLoaded") = Bool;
overload selector(static "isLocationRequiredToCreateForKey:") = Bool, NSString;
overload selector(static "isMainThread") = Bool;
overload selector(static "isMainWindow") = Bool;
overload selector(static "isMemberOfClass:") = Bool, Id;
overload selector(static "isMiniaturizable") = Bool;
overload selector(static "isMiniaturized") = Bool;
overload selector(static "isModalPanel") = Bool;
overload selector(static "isMouseCoalescingEnabled") = Bool;
overload selector(static "isMovable") = Bool;
overload selector(static "isMovableByWindowBackground") = Bool;
overload selector(static "isMultiThreaded") = Bool;
overload selector(static "isMultiple") = Bool;
overload selector(static "isMuted") = Bool;
overload selector(static "isNativeType:") = Bool, NSString;
overload selector(static "isNotEqualTo:") = Bool, Id;
overload selector(static "isOnActiveSpace") = Bool;
overload selector(static "isOneShot") = Bool;
overload selector(static "isOneway") = Bool;
overload selector(static "isOpaque") = Bool;
overload selector(static "isOpen") = Bool;
overload selector(static "isOptional") = Bool;
overload selector(static "isOptionalArgumentWithName:") = Bool, NSString;
overload selector(static "isOutputStackInReverseOrder") = Bool;
overload selector(static "isPaneSplitter") = Bool;
overload selector(static "isPartialStringValid:newEditingString:errorDescription:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
overload selector(static "isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:") = Bool, Pointer[NSString], NSRangePointer, NSString, NSRange, Pointer[NSString];
overload selector(static "isPartialStringValidationEnabled") = Bool;
overload selector(static "isPlanar") = Bool;
overload selector(static "isPlaying") = Bool;
overload selector(static "isProxy") = Bool;
overload selector(static "isReadOnly") = Bool;
overload selector(static "isReadOnlyKey:") = Bool, NSString;
overload selector(static "isReadableFileAtPath:") = Bool, NSString;
overload selector(static "isReady") = Bool;
overload selector(static "isRecordingPaused") = Bool;
overload selector(static "isRedoing") = Bool;
overload selector(static "isRegularFile") = Bool;
overload selector(static "isReleasedWhenClosed") = Bool;
overload selector(static "isRemovable") = Bool;
overload selector(static "isRemovedOnCompletion") = Bool;
overload selector(static "isResizable") = Bool;
overload selector(static "isResting") = Bool;
overload selector(static "isRichText") = Bool;
overload selector(static "isRotatedFromBase") = Bool;
overload selector(static "isRotatedOrScaledFromBase") = Bool;
overload selector(static "isRowSelected:") = Bool, Int;
overload selector(static "isRulerVisible") = Bool;
overload selector(static "isRunning") = Bool;
overload selector(static "isScrollable") = Bool;
overload selector(static "isSecure") = Bool;
overload selector(static "isSelectable") = Bool;
overload selector(static "isSelected") = Bool;
overload selector(static "isSelectedForSegment:") = Bool, Int;
overload selector(static "isSelectionByRect") = Bool;
overload selector(static "isSelectionOnly") = Bool;
overload selector(static "isSeparatorItem") = Bool;
overload selector(static "isSessionOnly") = Bool;
overload selector(static "isSetOnMouseEntered") = Bool;
overload selector(static "isSetOnMouseExited") = Bool;
overload selector(static "isSheet") = Bool;
overload selector(static "isSimpleRectangularTextContainer") = Bool;
overload selector(static "isSpeaking") = Bool;
overload selector(static "isStandalone") = Bool;
overload selector(static "isStarted") = Bool;
overload selector(static "isStopped") = Bool;
overload selector(static "isStoredInExternalRecord") = Bool;
overload selector(static "isSubclassOfClass:") = Bool, Id;
overload selector(static "isSubsetOfHashTable:") = Bool, NSHashTable;
overload selector(static "isSubsetOfSet:") = Bool, NSSet;
overload selector(static "isSubviewCollapsed:") = Bool, NSView;
overload selector(static "isSupersetOfSet:") = Bool, NSCharacterSet;
overload selector(static "isSuspended") = Bool;
overload selector(static "isSymbolicLink") = Bool;
overload selector(static "isTemplate") = Bool;
overload selector(static "isTemporaryID") = Bool;
overload selector(static "isTerminated") = Bool;
overload selector(static "isTitled") = Bool;
overload selector(static "isToMany") = Bool;
overload selector(static "isTornOff") = Bool;
overload selector(static "isTransient") = Bool;
overload selector(static "isTranslateButtonVisible") = Bool;
overload selector(static "isTransparent") = Bool;
overload selector(static "isTrue") = Bool;
overload selector(static "isUndoRegistrationEnabled") = Bool;
overload selector(static "isUndoing") = Bool;
overload selector(static "isUpdated") = Bool;
overload selector(static "isValid") = Bool;
overload selector(static "isValidGlyphIndex:") = Bool, UInt;
overload selector(static "isVertical") = Bool;
overload selector(static "isVerticallyCentered") = Bool;
overload selector(static "isVerticallyResizable") = Bool;
overload selector(static "isVisible") = Bool;
overload selector(static "isVolumeButtonVisible") = Bool;
overload selector(static "isWellFormed") = Bool;
overload selector(static "isWindowLoaded") = Bool;
overload selector(static "isWordInUserDictionaries:caseSensitive:") = Bool, NSString, Bool;
overload selector(static "isWrapped") = Bool;
overload selector(static "isWritableFileAtPath:") = Bool, NSString;
overload selector(static "isZoomable") = Bool;
overload selector(static "isZoomed") = Bool;
overload selector(static "italicAngle") = Float;
overload selector(static "itemAdded:") = Void, NSNotification;
overload selector(static "itemArray") = NSArray;
overload selector(static "itemAtIndex:") = Id, Int;
overload selector(static "itemAtIndexPath:") = Id, NSIndexPath;
overload selector(static "itemAtRow:") = Id, Int;
overload selector(static "itemAtRow:inColumn:") = Id, Int, Int;
overload selector(static "itemChanged:") = Void, NSMenuItem;
overload selector(static "itemHeight") = Float;
overload selector(static "itemIdentifier") = NSString;
overload selector(static "itemNumberInTextList:atIndex:") = Int, NSTextList, UInt;
overload selector(static "itemObjectValueAtIndex:") = Id, Int;
overload selector(static "itemPrototype") = NSCollectionViewItem;
overload selector(static "itemRemoved:") = Void, NSNotification;
overload selector(static "itemTitleAtIndex:") = NSString, Int;
overload selector(static "itemTitles") = NSArray;
overload selector(static "itemWithTag:") = NSMenuItem, Int;
overload selector(static "itemWithTitle:") = NSMenuItem, NSString;
overload selector(static "items") = NSArray;
overload selector(static "jobDisposition") = NSString;
overload selector(static "jobStyleHint") = NSString;
overload selector(static "jobTitle") = NSString;
overload selector(static "keepBackupFile") = Bool;
overload selector(static "kernelsWithString:") = NSArray, NSString;
overload selector(static "key") = NSString;
overload selector(static "keyCell") = Id;
overload selector(static "keyClassDescription") = NSScriptClassDescription;
overload selector(static "keyCode") = UShort;
overload selector(static "keyDown:") = Void, NSEvent;
overload selector(static "keyEnumerator") = NSEnumerator;
overload selector(static "keyEquivalent") = NSString;
overload selector(static "keyEquivalentFont") = NSFont;
overload selector(static "keyEquivalentModifierMask") = UInt;
overload selector(static "keyEquivalentOffset") = Float;
overload selector(static "keyEquivalentRectForBounds:") = NSRect, NSRect;
overload selector(static "keyEquivalentWidth") = Float;
overload selector(static "keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:") = NSEvent, UInt, NSPoint, UInt, Double, Int, NSGraphicsContext, NSString, NSString, Bool, UShort;
overload selector(static "keyForFileWrapper:") = NSString, NSFileWrapper;
overload selector(static "keyPath") = NSString;
overload selector(static "keyPathsForValuesAffectingPreview") = NSSet;
overload selector(static "keyPathsForValuesAffectingValueForKey:") = NSSet, NSString;
overload selector(static "keyPointerFunctions") = NSPointerFunctions;
overload selector(static "keyRepeatDelay") = Double;
overload selector(static "keyRepeatInterval") = Double;
overload selector(static "keySpecifier") = NSScriptObjectSpecifier;
overload selector(static "keyTimes") = NSArray;
overload selector(static "keyUp:") = Void, NSEvent;
overload selector(static "keyViewSelectionDirection") = UInt;
overload selector(static "keyWindow") = NSWindow;
overload selector(static "keyWithAppleEventCode:") = NSString, CULong;
overload selector(static "keyboardFocusIndicatorColor") = NSColor;
overload selector(static "keyboardInputSources") = NSArray;
overload selector(static "keysOfEntriesPassingTest:") = NSSet, UnknownType;
overload selector(static "keysOfEntriesWithOptions:passingTest:") = NSSet, UInt, UnknownType;
overload selector(static "keysSortedByValueUsingComparator:") = NSArray, NSComparator;
overload selector(static "keysSortedByValueUsingSelector:") = NSArray, SelectorHandle;
overload selector(static "keysSortedByValueWithOptions:usingComparator:") = NSArray, UInt, NSComparator;
overload selector(static "keywordForDescriptorAtIndex:") = CULong, Int;
overload selector(static "kind") = UInt;
overload selector(static "knobColor") = NSColor;
overload selector(static "knobProportion") = Float;
overload selector(static "knobRectFlipped:") = NSRect, Bool;
overload selector(static "knobThickness") = Float;
overload selector(static "knownTimeZoneNames") = NSArray;
overload selector(static "knowsPageRange:") = Bool, NSRangePointer;
overload selector(static "label") = NSString;
overload selector(static "labelFontOfSize:") = NSFont, Float;
overload selector(static "labelFontSize") = Float;
overload selector(static "labelForSegment:") = NSString, Int;
overload selector(static "language") = NSString;
overload selector(static "languageLevel") = Int;
overload selector(static "languageMap") = NSDictionary;
overload selector(static "languagesForScript:") = NSArray, NSString;
overload selector(static "lastColumn") = Int;
overload selector(static "lastComponentOfFileName") = NSString;
overload selector(static "lastIndex") = UInt;
overload selector(static "lastItem") = NSMenuItem;
overload selector(static "lastObject") = Id;
overload selector(static "lastPathComponent") = NSString;
overload selector(static "lastVisibleColumn") = Int;
overload selector(static "laterDate:") = NSDate, NSDate;
overload selector(static "launch") = Void;
overload selector(static "launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:") = Bool, NSString, UInt, NSAppleEventDescriptor, Pointer[NSNumber];
overload selector(static "launchApplication:") = Bool, NSString;
overload selector(static "launchApplication:showIcon:autolaunch:") = Bool, NSString, Bool, Bool;
overload selector(static "launchApplicationAtURL:options:configuration:error:") = NSRunningApplication, NSURL, UInt, NSDictionary, Pointer[NSError];
overload selector(static "launchDate") = NSDate;
overload selector(static "launchPath") = NSString;
overload selector(static "launchedApplications") = NSArray;
overload selector(static "launchedTaskWithLaunchPath:arguments:") = NSTask, NSString, NSArray;
overload selector(static "layer") = Id;
overload selector(static "layerContentsPlacement") = Int;
overload selector(static "layerContentsRedrawPolicy") = Int;
overload selector(static "layerWithMovie:") = Id, QTMovie;
overload selector(static "layerWithSession:") = Id, QTCaptureSession;
overload selector(static "layout") = Void;
overload selector(static "layoutAlgorithm") = UInt;
overload selector(static "layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:") = NSRange, NSRange, NSLayoutManager, UInt;
overload selector(static "layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:") = Void, NSLayoutManager, UInt, UInt, Pointer[UInt];
overload selector(static "layoutIfNeeded") = Void;
overload selector(static "layoutManager") = Id;
overload selector(static "layoutManager:didCompleteLayoutForTextContainer:atEnd:") = Void, NSLayoutManager, NSTextContainer, Bool;
overload selector(static "layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:") = NSDictionary, NSLayoutManager, NSDictionary, Bool, UInt, NSRangePointer;
overload selector(static "layoutManagerDidInvalidateLayout:") = Void, NSLayoutManager;
overload selector(static "layoutManagerOwnsFirstResponderInWindow:") = Bool, NSWindow;
overload selector(static "layoutManagers") = NSArray;
overload selector(static "layoutOptions") = UInt;
overload selector(static "layoutParagraphAtPoint:") = UInt, NSPointPointer;
overload selector(static "layoutRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, UInt, NSRangePointer;
overload selector(static "layoutRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
overload selector(static "layoutSublayers") = Void;
overload selector(static "layoutSublayersOfLayer:") = Void, CALayer;
overload selector(static "leading") = Float;
overload selector(static "leadingOffset") = Float;
overload selector(static "leafKeyPath") = NSString;
overload selector(static "leafKeyPathForNode:") = NSString, NSTreeNode;
overload selector(static "learnWord:") = Void, NSString;
overload selector(static "leftExpression") = NSExpression;
overload selector(static "leftExpressions") = NSArray;
overload selector(static "leftMargin") = Float;
overload selector(static "length") = UInt;
overload selector(static "lengthForAllSamples") = UInt;
overload selector(static "lengthOfBytesUsingEncoding:") = UInt, UInt;
overload selector(static "letterCharacterSet") = Id;
overload selector(static "level") = UInt;
overload selector(static "levelForItem:") = Int, Id;
overload selector(static "levelForRow:") = Int, Int;
overload selector(static "levelIndicatorStyle") = UInt;
overload selector(static "levelsOfDetail") = CULong;
overload selector(static "levelsOfDetailBias") = CULong;
overload selector(static "levelsOfUndo") = UInt;
overload selector(static "lifetime") = Float;
overload selector(static "lifetimeRange") = Float;
overload selector(static "lightGrayColor") = NSColor;
overload selector(static "limitDateForMode:") = NSDate, NSString;
overload selector(static "lineBreakBeforeIndex:withinRange:") = UInt, UInt, NSRange;
overload selector(static "lineBreakByHyphenatingBeforeIndex:withinRange:") = UInt, UInt, NSRange;
overload selector(static "lineBreakMode") = UInt;
overload selector(static "lineCap") = NSString;
overload selector(static "lineCapStyle") = UInt;
overload selector(static "lineDashPattern") = NSArray;
overload selector(static "lineDashPhase") = Float;
overload selector(static "lineDirectionForLanguage:") = UInt, NSString;
overload selector(static "lineFragmentPadding") = Float;
overload selector(static "lineFragmentRectForGlyphAtIndex:effectiveRange:") = NSRect, UInt, NSRangePointer;
overload selector(static "lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, UInt, NSRangePointer, Bool;
overload selector(static "lineFragmentRectForProposedRect:remainingRect:") = NSRect, NSRect, NSRectPointer;
overload selector(static "lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:") = NSRect, NSRect, UInt, UInt, NSRectPointer;
overload selector(static "lineFragmentUsedRectForGlyphAtIndex:effectiveRange:") = NSRect, UInt, NSRangePointer;
overload selector(static "lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, UInt, NSRangePointer, Bool;
overload selector(static "lineHeightMultiple") = Float;
overload selector(static "lineJoin") = NSString;
overload selector(static "lineJoinStyle") = UInt;
overload selector(static "lineNumber") = Int;
overload selector(static "lineRangeForRange:") = NSRange, NSRange;
overload selector(static "lineScroll") = Float;
overload selector(static "lineSpacing") = Float;
overload selector(static "lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Float, UInt, NSRect;
overload selector(static "lineToPoint:") = Void, NSPoint;
overload selector(static "lineWidth") = Float;
overload selector(static "linkCheckingResultWithRange:URL:") = NSTextCheckingResult, NSRange, NSURL;
overload selector(static "linkItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector(static "linkItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector(static "linkPath:toPath:handler:") = Bool, NSString, NSString, Id;
overload selector(static "linkTextAttributes") = NSDictionary;
overload selector(static "listDescriptor") = NSAppleEventDescriptor;
overload selector(static "listOptions") = UInt;
overload selector(static "listensInForegroundOnly") = Bool;
overload selector(static "load") = Bool;
overload selector(static "load:") = Bool, Pointer[NSError];
overload selector(static "loadAllPlugIns") = Void;
overload selector(static "loadAndReturnError:") = Bool, Pointer[NSError];
overload selector(static "loadColumnZero") = Void;
overload selector(static "loadDataRepresentation:ofType:") = Bool, NSData, NSString;
overload selector(static "loadFileWrapperRepresentation:ofType:") = Bool, NSFileWrapper, NSString;
overload selector(static "loadInBackground") = Void;
overload selector(static "loadInForeground") = NSData;
overload selector(static "loadMetadata:") = Bool, Pointer[NSError];
overload selector(static "loadNibFile:externalNameTable:withZone:") = Bool, NSString, NSDictionary, Pointer[NSZone];
overload selector(static "loadNibNamed:owner:") = Bool, NSString, Id;
overload selector(static "loadNonExecutablePlugIns") = Void;
overload selector(static "loadPlugIn:allowNonExecutable:") = Void, NSURL, Bool;
overload selector(static "loadResourceDataNotifyingClient:usingCache:") = Void, Id, Bool;
overload selector(static "loadSuiteWithDictionary:fromBundle:") = Void, NSDictionary, NSBundle;
overload selector(static "loadSuitesFromBundle:") = Void, NSBundle;
overload selector(static "loadView") = Void;
overload selector(static "loadWindow") = Void;
overload selector(static "loadedCellAtRow:column:") = Id, Int, Int;
overload selector(static "localName") = NSString;
overload selector(static "localNameForName:") = NSString, NSString;
overload selector(static "localObjects") = NSArray;
overload selector(static "localTimeZone") = NSTimeZone;
overload selector(static "locale") = Id;
overload selector(static "localeIdentifier") = NSString;
overload selector(static "localeIdentifierFromComponents:") = NSString, NSDictionary;
overload selector(static "localeIdentifierFromWindowsLocaleCode:") = NSString, UInt;
overload selector(static "localizationDictionary") = NSDictionary;
overload selector(static "localizations") = NSArray;
overload selector(static "localizedCaseInsensitiveCompare:") = Int, NSString;
overload selector(static "localizedCatalogNameComponent") = NSString;
overload selector(static "localizedColorNameComponent") = NSString;
overload selector(static "localizedCompare:") = Int, NSString;
overload selector(static "localizedCompressionOptionsSummary") = NSString;
overload selector(static "localizedDescription") = NSString;
overload selector(static "localizedDescriptionForFilterName:") = NSString, NSString;
overload selector(static "localizedDescriptionForType:") = NSString, NSString;
overload selector(static "localizedDisplayName") = NSString;
overload selector(static "localizedFailureReason") = NSString;
overload selector(static "localizedFormatSummary") = NSString;
overload selector(static "localizedInfoDictionary") = NSDictionary;
overload selector(static "localizedInputManagerName") = NSString;
overload selector(static "localizedKey") = NSString;
overload selector(static "localizedKeyDictionary") = NSDictionary;
overload selector(static "localizedKeyTable") = NSString;
overload selector(static "localizedName") = NSString;
overload selector(static "localizedName:locale:") = NSString, Int, NSLocale;
overload selector(static "localizedNameForCategory:") = NSString, NSString;
overload selector(static "localizedNameForFamily:face:") = NSString, NSString, NSString;
overload selector(static "localizedNameForFilterName:") = NSString, NSString;
overload selector(static "localizedNameForInputSource:") = NSString, NSString;
overload selector(static "localizedNameForTIFFCompressionType:") = NSString, UInt;
overload selector(static "localizedNameOfStringEncoding:") = NSString, UInt;
overload selector(static "localizedPaperName") = NSString;
overload selector(static "localizedRecoveryOptions") = NSArray;
overload selector(static "localizedRecoverySuggestion") = NSString;
overload selector(static "localizedReferenceDocumentationForFilterName:") = NSURL, NSString;
overload selector(static "localizedScannerWithString:") = Id, NSString;
overload selector(static "localizedStandardCompare:") = Int, NSString;
overload selector(static "localizedStringForKey:value:table:") = NSString, NSString, NSString, NSString;
overload selector(static "localizedStringForStatusCode:") = NSString, Int;
overload selector(static "localizedStringFromDate:dateStyle:timeStyle:") = NSString, NSDate, UInt, UInt;
overload selector(static "localizedStringFromNumber:numberStyle:") = NSString, NSNumber, UInt;
overload varargSelector(static "localizedStringWithFormat:") = Id, NSString;
overload selector(static "localizedSummaryItems") = NSArray;
overload selector(static "localizedTitlesForItem:") = NSArray, Id;
overload selector(static "localizesFormat") = Bool;
overload selector(static "location") = Float;
overload selector(static "locationForGlyphAtIndex:") = NSPoint, UInt;
overload selector(static "locationForSubmenu:") = NSPoint, NSMenu;
overload selector(static "locationInWindow") = NSPoint;
overload selector(static "locationOfPrintRect:") = NSPoint, NSRect;
overload selector(static "locations") = NSArray;
overload selector(static "lock") = Void;
overload selector(static "lockBeforeDate:") = Bool, NSDate;
overload selector(static "lockDate") = NSDate;
overload selector(static "lockFocus") = Void;
overload selector(static "lockFocusFlipped:") = Void, Bool;
overload selector(static "lockFocusIfCanDraw") = Bool;
overload selector(static "lockFocusIfCanDrawInContext:") = Bool, NSGraphicsContext;
overload selector(static "lockFocusOnRepresentation:") = Void, NSImageRep;
overload selector(static "lockWhenCondition:") = Void, Int;
overload selector(static "lockWhenCondition:beforeDate:") = Bool, Int, NSDate;
overload selector(static "lockWithPath:") = NSDistributedLock, NSString;
overload selector(static "longCharacterIsMember:") = Bool, CULong;
overload selector(static "longEraSymbols") = NSArray;
overload selector(static "longLongValue") = Int64;
overload selector(static "longValue") = CLong;
overload selector(static "loopMode") = UInt;
overload selector(static "loops") = Bool;
overload selector(static "loosenKerning:") = Void, Id;
overload selector(static "lossyCString") = Pointer[CChar];
overload selector(static "lowerBaseline:") = Void, Id;
overload selector(static "lowercaseLetterCharacterSet") = Id;
overload selector(static "lowercaseString") = NSString;
overload selector(static "lowercaseWord:") = Void, Id;
overload selector(static "machPort") = UInt;
overload selector(static "magentaColor") = NSColor;
overload selector(static "magentaComponent") = Float;
overload selector(static "magnification") = Float;
overload selector(static "magnificationFilter") = NSString;
overload selector(static "magnifyWithEvent:") = Void, NSEvent;
overload selector(static "main") = Void;
overload selector(static "mainBundle") = NSBundle;
overload selector(static "mainDocumentURL") = NSURL;
overload selector(static "mainMenu") = NSMenu;
overload selector(static "mainQueue") = Id;
overload selector(static "mainRunLoop") = NSRunLoop;
overload selector(static "mainScreen") = NSScreen;
overload selector(static "mainThread") = NSThread;
overload selector(static "mainWindow") = NSWindow;
overload selector(static "makeBackingLayer") = CALayer;
overload selector(static "makeBaseWritingDirectionLeftToRight:") = Void, Id;
overload selector(static "makeBaseWritingDirectionNatural:") = Void, Id;
overload selector(static "makeBaseWritingDirectionRightToLeft:") = Void, Id;
overload selector(static "makeCellAtRow:column:") = NSCell, Int, Int;
overload selector(static "makeCurrentContext") = Void;
overload selector(static "makeDocumentForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
overload selector(static "makeDocumentWithContentsOfFile:ofType:") = Id, NSString, NSString;
overload selector(static "makeDocumentWithContentsOfURL:ofType:") = Id, NSURL, NSString;
overload selector(static "makeDocumentWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
overload selector(static "makeFirstResponder:") = Bool, NSResponder;
overload selector(static "makeKeyAndOrderFront:") = Void, Id;
overload selector(static "makeKeyWindow") = Void;
overload selector(static "makeMainWindow") = Void;
overload selector(static "makeNewConnection:sender:") = Bool, NSConnection, NSConnection;
overload selector(static "makeNextSegmentKey") = Void;
overload selector(static "makeObjectsPerformSelector:") = Void, SelectorHandle;
overload selector(static "makeObjectsPerformSelector:withObject:") = Void, SelectorHandle, Id;
overload selector(static "makePreviousSegmentKey") = Void;
overload selector(static "makeTextWritingDirectionLeftToRight:") = Void, Id;
overload selector(static "makeTextWritingDirectionNatural:") = Void, Id;
overload selector(static "makeTextWritingDirectionRightToLeft:") = Void, Id;
overload selector(static "makeUntitledDocumentOfType:") = Id, NSString;
overload selector(static "makeUntitledDocumentOfType:error:") = Id, NSString, Pointer[NSError];
overload selector(static "makeWindowControllers") = Void;
overload selector(static "makeWindowsPerform:inOrder:") = NSWindow, SelectorHandle, Bool;
overload selector(static "managedObjectClassName") = NSString;
overload selector(static "managedObjectContext") = NSManagedObjectContext;
overload selector(static "managedObjectIDForURIRepresentation:") = NSManagedObjectID, NSURL;
overload selector(static "managedObjectModel") = Id;
overload selector(static "mapTableWithKeyOptions:valueOptions:") = Id, UInt, UInt;
overload selector(static "mapTableWithStrongToStrongObjects") = Id;
overload selector(static "mapTableWithStrongToWeakObjects") = Id;
overload selector(static "mapTableWithWeakToStrongObjects") = Id;
overload selector(static "mapTableWithWeakToWeakObjects") = Id;
overload selector(static "mappingModel") = NSMappingModel;
overload selector(static "mappingModelFromBundles:forSourceModel:destinationModel:") = NSMappingModel, NSArray, NSManagedObjectModel, NSManagedObjectModel;
overload selector(static "mappingType") = UInt;
overload selector(static "markedRange") = NSRange;
overload selector(static "markedTextAbandoned:") = Void, Id;
overload selector(static "markedTextAttributes") = NSDictionary;
overload selector(static "markedTextSelectionChanged:client:") = Void, NSRange, Id;
overload selector(static "markerForItemNumber:") = NSString, Int;
overload selector(static "markerFormat") = NSString;
overload selector(static "markerLocation") = Float;
overload selector(static "markers") = NSArray;
overload selector(static "mask") = CALayer;
overload selector(static "masksToBounds") = Bool;
overload selector(static "matchForPredicate:") = Double, NSPredicate;
overload selector(static "matchesAppleEventCode:") = Bool, CULong;
overload selector(static "matchesContentsOfURL:") = Bool, NSURL;
overload selector(static "matchesOnMultipleResolution") = Bool;
overload selector(static "matchingFontDescriptorWithMandatoryKeys:") = NSFontDescriptor, NSSet;
overload selector(static "matchingFontDescriptorsWithMandatoryKeys:") = NSArray, NSSet;
overload selector(static "matrix") = Pointer[Float];
overload selector(static "matrixClass") = Id;
overload selector(static "matrixInColumn:") = NSMatrix, Int;
overload selector(static "maxConcurrentOperationCount") = Int;
overload selector(static "maxContentSize") = NSSize;
overload selector(static "maxCount") = UInt;
overload selector(static "maxDate") = NSDate;
overload selector(static "maxItemSize") = NSSize;
overload selector(static "maxNumberOfColumns") = UInt;
overload selector(static "maxNumberOfRows") = UInt;
overload selector(static "maxPossiblePositionOfDividerAtIndex:") = Float, Int;
overload selector(static "maxSize") = NSSize;
overload selector(static "maxValue") = Double;
overload selector(static "maxVisibleColumns") = Int;
overload selector(static "maxWidth") = Float;
overload selector(static "maximum") = NSNumber;
overload selector(static "maximumAdvancement") = NSSize;
overload selector(static "maximumDecimalNumber") = NSDecimalNumber;
overload selector(static "maximumFractionDigits") = UInt;
overload selector(static "maximumIntegerDigits") = UInt;
overload selector(static "maximumLengthOfBytesUsingEncoding:") = UInt, UInt;
overload selector(static "maximumLineHeight") = Float;
overload selector(static "maximumRangeOfUnit:") = NSRange, UInt;
overload selector(static "maximumRecentDocumentCount") = UInt;
overload selector(static "maximumRecents") = Int;
overload selector(static "maximumRecordedDuration") = QTTime;
overload selector(static "maximumRecordedFileSize") = UInt64;
overload selector(static "maximumSignificantDigits") = UInt;
overload selector(static "maximumVideoSize") = NSSize;
overload selector(static "measurementUnits") = NSString;
overload selector(static "media") = QTMedia;
overload selector(static "mediaAttributes") = NSDictionary;
overload selector(static "mediaType") = NSString;
overload selector(static "mediaWithQuickTimeMedia:error:") = Id, Media, Pointer[NSError];
overload selector(static "member:") = Id, Id;
overload selector(static "memoryCapacity") = UInt;
overload selector(static "menu") = NSMenu;
overload selector(static "menu:updateItem:atIndex:shouldCancel:") = Bool, NSMenu, NSMenuItem, Int, Bool;
overload selector(static "menu:willHighlightItem:") = Void, NSMenu, NSMenuItem;
overload selector(static "menuBarFontOfSize:") = NSFont, Float;
overload selector(static "menuBarHeight") = Float;
overload selector(static "menuBarVisible") = Bool;
overload selector(static "menuChanged:") = Void, NSMenu;
overload selector(static "menuChangedMessagesEnabled") = Bool;
overload selector(static "menuDidClose:") = Void, NSMenu;
overload selector(static "menuFontOfSize:") = NSFont, Float;
overload selector(static "menuForEvent:") = NSMenu, NSEvent;
overload selector(static "menuForEvent:inRect:ofView:") = NSMenu, NSEvent, NSRect, NSView;
overload selector(static "menuForEventDelegate:") = NSMenu, NSEvent;
overload selector(static "menuForResult:string:options:atLocation:inView:") = NSMenu, NSTextCheckingResult, NSString, NSDictionary, NSPoint, NSView;
overload selector(static "menuForSegment:") = NSMenu, Int;
overload selector(static "menuFormRepresentation") = NSMenuItem;
overload selector(static "menuHasKeyEquivalent:forEvent:target:action:") = Bool, NSMenu, NSEvent, Pointer[Id], Pointer[SelectorHandle];
overload selector(static "menuItem") = NSMenuItem;
overload selector(static "menuItemCellForItemAtIndex:") = NSMenuItemCell, Int;
overload selector(static "menuNeedsUpdate:") = Void, NSMenu;
overload selector(static "menuRepresentation") = Id;
overload selector(static "menuView") = NSMenuView;
overload selector(static "menuWillOpen:") = Void, NSMenu;
overload selector(static "menuZone") = Pointer[NSZone];
overload selector(static "mergeChangesFromContextDidSaveNotification:") = Void, NSNotification;
overload selector(static "mergePolicy") = Id;
overload selector(static "mergedModelFromBundles:") = NSManagedObjectModel, NSArray;
overload selector(static "mergedModelFromBundles:forStoreMetadata:") = NSManagedObjectModel, NSArray, NSDictionary;
overload selector(static "message") = NSString;
overload selector(static "messageFontOfSize:") = NSFont, Float;
overload selector(static "messageText") = NSString;
overload selector(static "metadata") = NSDictionary;
overload selector(static "metadataForPersistentStore:") = NSDictionary, NSPersistentStore;
overload selector(static "metadataForPersistentStoreOfType:URL:error:") = NSDictionary, NSString, NSURL, Pointer[NSError];
overload selector(static "metadataForPersistentStoreWithURL:error:") = NSDictionary, NSURL, Pointer[NSError];
overload selector(static "metadataQuery:replacementObjectForResultObject:") = Id, NSMetadataQuery, NSMetadataItem;
overload selector(static "metadataQuery:replacementValueForAttribute:value:") = Id, NSMetadataQuery, NSString, Id;
overload selector(static "methodForSelector:") = IMP, SelectorHandle;
overload selector(static "methodReturnLength") = UInt;
overload selector(static "methodReturnType") = Pointer[CChar];
overload selector(static "methodSignature") = NSMethodSignature;
overload selector(static "methodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
overload selector(static "migratePersistentStore:toURL:options:withType:error:") = NSPersistentStore, NSPersistentStore, NSURL, NSDictionary, NSString, Pointer[NSError];
overload selector(static "migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:") = Bool, NSURL, NSString, NSDictionary, NSMappingModel, NSURL, NSString, NSDictionary, Pointer[NSError];
overload selector(static "migrationManagerClass") = Id;
overload selector(static "migrationProgress") = Float;
overload selector(static "minColumnWidth") = Float;
overload selector(static "minContentSize") = NSSize;
overload selector(static "minCount") = UInt;
overload selector(static "minDate") = NSDate;
overload selector(static "minFrameWidthWithTitle:styleMask:") = Float, NSString, UInt;
overload selector(static "minItemSize") = NSSize;
overload selector(static "minPossiblePositionOfDividerAtIndex:") = Float, Int;
overload selector(static "minSize") = NSSize;
overload selector(static "minValue") = Double;
overload selector(static "minWidth") = Float;
overload selector(static "miniaturize:") = Void, Id;
overload selector(static "miniaturizeAll:") = Void, Id;
overload selector(static "minificationFilter") = NSString;
overload selector(static "minificationFilterBias") = Float;
overload selector(static "minimum") = NSNumber;
overload selector(static "minimumDaysInFirstWeek") = UInt;
overload selector(static "minimumDecimalNumber") = NSDecimalNumber;
overload selector(static "minimumFractionDigits") = UInt;
overload selector(static "minimumIntegerDigits") = UInt;
overload selector(static "minimumLineHeight") = Float;
overload selector(static "minimumRangeOfUnit:") = NSRange, UInt;
overload selector(static "minimumSignificantDigits") = UInt;
overload selector(static "minimumSize") = NSSize;
overload selector(static "minimumVideoFrameInterval") = Double;
overload selector(static "minimumWidth") = Float;
overload selector(static "miniwindowImage") = NSImage;
overload selector(static "miniwindowTitle") = NSString;
overload selector(static "minusHashTable:") = Void, NSHashTable;
overload selector(static "minusSet:") = Void, NSSet;
overload selector(static "minusSign") = NSString;
overload selector(static "minute") = Int;
overload selector(static "minuteOfHour") = Int;
overload selector(static "miterLimit") = Float;
overload selector(static "mixedStateImage") = NSImage;
overload selector(static "mnemonic") = NSString;
overload selector(static "mnemonicLocation") = UInt;
overload selector(static "modalWindow") = NSWindow;
overload selector(static "mode") = UInt;
overload selector(static "modelByMergingModels:") = NSManagedObjectModel, NSArray;
overload selector(static "modelByMergingModels:forStoreMetadata:") = NSManagedObjectModel, NSArray, NSDictionary;
overload selector(static "modelLayer") = Id;
overload selector(static "modelUniqueID") = NSString;
overload selector(static "modifier") = UInt;
overload selector(static "modifierFlags") = UInt;
overload selector(static "modifyFont:") = Void, Id;
overload selector(static "modifyFontViaPanel:") = Void, Id;
overload selector(static "month") = Int;
overload selector(static "monthOfYear") = Int;
overload selector(static "monthSymbols") = NSArray;
overload selector(static "mostCompatibleStringEncoding") = UInt;
overload selector(static "mountNewRemovableMedia") = NSArray;
overload selector(static "mountedLocalVolumePaths") = NSArray;
overload selector(static "mountedRemovableMedia") = NSArray;
overload selector(static "mountedVolumeURLsIncludingResourceValuesForKeys:options:") = NSArray, NSArray, UInt;
overload selector(static "mouse:inRect:") = Bool, NSPoint, NSRect;
overload selector(static "mouseDown:") = Void, NSEvent;
overload selector(static "mouseDownCanMoveWindow") = Bool;
overload selector(static "mouseDownFlags") = Int;
overload selector(static "mouseDownOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, UInt, NSPoint, UInt, Id;
overload selector(static "mouseDragged:") = Void, NSEvent;
overload selector(static "mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, UInt, NSPoint, UInt, Id;
overload selector(static "mouseEntered:") = Void, NSEvent;
overload selector(static "mouseEntered:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
overload selector(static "mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:") = NSEvent, UInt, NSPoint, UInt, Double, Int, NSGraphicsContext, Int, Int, Float;
overload selector(static "mouseExited:") = Void, NSEvent;
overload selector(static "mouseExited:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
overload selector(static "mouseLocation") = NSPoint;
overload selector(static "mouseLocationOutsideOfEventStream") = NSPoint;
overload selector(static "mouseMoved:") = Void, NSEvent;
overload selector(static "mouseUp:") = Void, NSEvent;
overload selector(static "mouseUpOnCharacterIndex:atCoordinate:withModifier:client:") = Void, UInt, NSPoint, UInt, Id;
overload selector(static "moveBackward:") = Void, Id;
overload selector(static "moveBackwardAndModifySelection:") = Void, Id;
overload selector(static "moveColumn:toColumn:") = Void, Int, Int;
overload selector(static "moveDown:") = Void, Id;
overload selector(static "moveDownAndModifySelection:") = Void, Id;
overload selector(static "moveForward:") = Void, Id;
overload selector(static "moveForwardAndModifySelection:") = Void, Id;
overload selector(static "moveItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector(static "moveItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector(static "moveLeft:") = Void, Id;
overload selector(static "moveLeftAndModifySelection:") = Void, Id;
overload selector(static "moveNode:toIndexPath:") = Void, NSTreeNode, NSIndexPath;
overload selector(static "moveNodes:toIndexPath:") = Void, NSArray, NSIndexPath;
overload selector(static "moveParagraphBackwardAndModifySelection:") = Void, Id;
overload selector(static "moveParagraphForwardAndModifySelection:") = Void, Id;
overload selector(static "movePath:toPath:handler:") = Bool, NSString, NSString, Id;
overload selector(static "moveRight:") = Void, Id;
overload selector(static "moveRightAndModifySelection:") = Void, Id;
overload selector(static "moveRulerlineFromLocation:toLocation:") = Void, Float, Float;
overload selector(static "moveToBeginningOfDocument:") = Void, Id;
overload selector(static "moveToBeginningOfDocumentAndModifySelection:") = Void, Id;
overload selector(static "moveToBeginningOfLine:") = Void, Id;
overload selector(static "moveToBeginningOfLineAndModifySelection:") = Void, Id;
overload selector(static "moveToBeginningOfParagraph:") = Void, Id;
overload selector(static "moveToBeginningOfParagraphAndModifySelection:") = Void, Id;
overload selector(static "moveToEndOfDocument:") = Void, Id;
overload selector(static "moveToEndOfDocumentAndModifySelection:") = Void, Id;
overload selector(static "moveToEndOfLine:") = Void, Id;
overload selector(static "moveToEndOfLineAndModifySelection:") = Void, Id;
overload selector(static "moveToEndOfParagraph:") = Void, Id;
overload selector(static "moveToEndOfParagraphAndModifySelection:") = Void, Id;
overload selector(static "moveToLeftEndOfLine:") = Void, Id;
overload selector(static "moveToLeftEndOfLineAndModifySelection:") = Void, Id;
overload selector(static "moveToPoint:") = Void, NSPoint;
overload selector(static "moveToRightEndOfLine:") = Void, Id;
overload selector(static "moveToRightEndOfLineAndModifySelection:") = Void, Id;
overload selector(static "moveUp:") = Void, Id;
overload selector(static "moveUpAndModifySelection:") = Void, Id;
overload selector(static "moveWordBackward:") = Void, Id;
overload selector(static "moveWordBackwardAndModifySelection:") = Void, Id;
overload selector(static "moveWordForward:") = Void, Id;
overload selector(static "moveWordForwardAndModifySelection:") = Void, Id;
overload selector(static "moveWordLeft:") = Void, Id;
overload selector(static "moveWordLeftAndModifySelection:") = Void, Id;
overload selector(static "moveWordRight:") = Void, Id;
overload selector(static "moveWordRightAndModifySelection:") = Void, Id;
overload selector(static "movie") = Id;
overload selector(static "movie:linkToURL:") = Bool, QTMovie, NSURL;
overload selector(static "movie:shouldContinueOperation:withPhase:atPercent:withAttributes:") = Bool, QTMovie, NSString, QTMovieOperationPhase, NSNumber, NSDictionary;
overload selector(static "movieAttributes") = NSDictionary;
overload selector(static "movieBounds") = NSRect;
overload selector(static "movieController") = RawPointer;
overload selector(static "movieControllerBounds") = NSRect;
overload selector(static "movieFileTypes:") = NSArray, QTMovieFileTypeOptions;
overload selector(static "movieFormatRepresentation") = NSData;
overload selector(static "movieNamed:error:") = Id, NSString, Pointer[NSError];
overload selector(static "movieRect") = NSRect;
overload selector(static "movieShouldLoadData:") = Bool, Id;
overload selector(static "movieShouldTask:") = Bool, Id;
overload selector(static "movieTypesWithOptions:") = NSArray, QTMovieFileTypeOptions;
overload selector(static "movieUnfilteredFileTypes") = NSArray;
overload selector(static "movieUnfilteredPasteboardTypes") = NSArray;
overload selector(static "movieWithAttributes:error:") = Id, NSDictionary, Pointer[NSError];
overload selector(static "movieWithData:error:") = Id, NSData, Pointer[NSError];
overload selector(static "movieWithDataReference:error:") = Id, QTDataReference, Pointer[NSError];
overload selector(static "movieWithFile:error:") = Id, NSString, Pointer[NSError];
overload selector(static "movieWithPasteboard:error:") = Id, NSPasteboard, Pointer[NSError];
overload selector(static "movieWithQuickTimeMovie:disposeWhenDone:error:") = Id, Movie, Bool, Pointer[NSError];
overload selector(static "movieWithTimeRange:error:") = Id, QTTimeRange, Pointer[NSError];
overload selector(static "movieWithURL:error:") = Id, NSURL, Pointer[NSError];
overload selector(static "msgid") = UInt;
overload selector(static "multipleThreadsEnabled") = Bool;
overload selector(static "multiplier") = NSNumber;
overload selector(static "mutableArrayValueForKey:") = NSMutableArray, NSString;
overload selector(static "mutableArrayValueForKeyPath:") = NSMutableArray, NSString;
overload selector(static "mutableBytes") = RawPointer;
overload selector(static "mutableChildNodes") = NSMutableArray;
overload selector(static "mutableCopy") = Id;
overload selector(static "mutableCopyWithZone:") = Id, Pointer[NSZone];
overload selector(static "mutableSetValueForKey:") = NSMutableSet, NSString;
overload selector(static "mutableSetValueForKeyPath:") = NSMutableSet, NSString;
overload selector(static "mutableString") = NSMutableString;
overload selector(static "muted") = Bool;
overload selector(static "name") = NSString;
overload selector(static "nameFieldLabel") = NSString;
overload selector(static "nameFieldStringValue") = NSString;
overload selector(static "names") = NSArray;
overload selector(static "namesOfPromisedFilesDroppedAtDestination:") = NSArray, NSURL;
overload selector(static "namespaceForPrefix:") = NSXMLNode, NSString;
overload selector(static "namespaceWithName:stringValue:") = Id, NSString, NSString;
overload selector(static "namespaces") = NSArray;
overload selector(static "needsDisplay") = Bool;
overload selector(static "needsDisplayForKey:") = Bool, NSString;
overload selector(static "needsDisplayOnBoundsChange") = Bool;
overload selector(static "needsLayout") = Bool;
overload selector(static "needsPanelToBecomeKey") = Bool;
overload selector(static "needsSizing") = Bool;
overload selector(static "needsToBeUpdatedFromPath:") = Bool, NSString;
overload selector(static "needsToDrawRect:") = Bool, NSRect;
overload selector(static "negativeFormat") = NSString;
overload selector(static "negativeInfinitySymbol") = NSString;
overload selector(static "negativePrefix") = NSString;
overload selector(static "negativeSuffix") = NSString;
overload selector(static "nestingMode") = UInt;
overload selector(static "netService:didNotPublish:") = Void, NSNetService, NSDictionary;
overload selector(static "netService:didNotResolve:") = Void, NSNetService, NSDictionary;
overload selector(static "netService:didUpdateTXTRecordData:") = Void, NSNetService, NSData;
overload selector(static "netServiceBrowser:didFindDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
overload selector(static "netServiceBrowser:didFindService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
overload selector(static "netServiceBrowser:didNotSearch:") = Void, NSNetServiceBrowser, NSDictionary;
overload selector(static "netServiceBrowser:didRemoveDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
overload selector(static "netServiceBrowser:didRemoveService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
overload selector(static "netServiceBrowserDidStopSearch:") = Void, NSNetServiceBrowser;
overload selector(static "netServiceBrowserWillSearch:") = Void, NSNetServiceBrowser;
overload selector(static "netServiceDidPublish:") = Void, NSNetService;
overload selector(static "netServiceDidResolveAddress:") = Void, NSNetService;
overload selector(static "netServiceDidStop:") = Void, NSNetService;
overload selector(static "netServiceWillPublish:") = Void, NSNetService;
overload selector(static "netServiceWillResolve:") = Void, NSNetService;
overload selector(static "new") = Id;
overload selector(static "newCacheNodeForManagedObject:") = NSAtomicStoreCacheNode, NSManagedObject;
overload selector(static "newDocument:") = Void, Id;
overload selector(static "newItemForRepresentedObject:") = NSCollectionViewItem, Id;
overload selector(static "newObject") = Id;
overload selector(static "newReferenceObjectForManagedObject:") = Id, NSManagedObject;
overload selector(static "newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:") = Id, Id, NSString, Id, NSDictionary;
overload selector(static "newlineCharacterSet") = Id;
overload selector(static "nextDaylightSavingTimeTransition") = NSDate;
overload selector(static "nextDaylightSavingTimeTransitionAfterDate:") = NSDate, NSDate;
overload selector(static "nextEventMatchingMask:") = NSEvent, UInt;
overload selector(static "nextEventMatchingMask:untilDate:inMode:dequeue:") = NSEvent, UInt, NSDate, NSString, Bool;
overload selector(static "nextFrameTime") = Double;
overload selector(static "nextKeyView") = NSView;
overload selector(static "nextNode") = NSXMLNode;
overload selector(static "nextObject") = Id;
overload selector(static "nextResponder") = NSResponder;
overload selector(static "nextSibling") = NSXMLNode;
overload selector(static "nextState") = Int;
overload selector(static "nextValidKeyView") = NSView;
overload selector(static "nextWordFromIndex:forward:") = UInt, UInt, Bool;
overload selector(static "nibBundle") = NSBundle;
overload selector(static "nibName") = NSString;
overload selector(static "nilSymbol") = NSString;
overload selector(static "noResponderFor:") = Void, SelectorHandle;
overload selector(static "nodesForXPath:error:") = NSArray, NSString, Pointer[NSError];
overload selector(static "nonBaseCharacterSet") = Id;
overload selector(static "nonretainedObjectValue") = Id;
overload selector(static "normalizeAdjacentTextNodesPreservingCDATA:") = Void, Bool;
overload selector(static "normalizedPosition") = NSPoint;
overload selector(static "notANumber") = NSDecimalNumber;
overload selector(static "notANumberSymbol") = NSString;
overload selector(static "notPredicateWithSubpredicate:") = NSPredicate, NSPredicate;
overload selector(static "notShownAttributeForGlyphAtIndex:") = Bool, UInt;
overload selector(static "notationDeclarationForName:") = NSXMLDTDNode, NSString;
overload selector(static "notationName") = NSString;
overload selector(static "note") = NSString;
overload selector(static "noteFileSystemChanged") = Void;
overload selector(static "noteFileSystemChanged:") = Void, NSString;
overload selector(static "noteHeightOfRowsWithIndexesChanged:") = Void, NSIndexSet;
overload selector(static "noteHeightOfRowsWithIndexesChanged:inColumn:") = Void, NSIndexSet, Int;
overload selector(static "noteNewRecentDocument:") = Void, NSDocument;
overload selector(static "noteNewRecentDocumentURL:") = Void, NSURL;
overload selector(static "noteNumberOfItemsChanged") = Void;
overload selector(static "noteNumberOfRowsChanged") = Void;
overload selector(static "noteUserDefaultsChanged") = Void;
overload selector(static "notificationBatchingInterval") = Double;
overload selector(static "notificationCenter") = NSNotificationCenter;
overload selector(static "notificationCenterForType:") = NSDistributedNotificationCenter, NSString;
overload selector(static "notificationWithName:object:") = Id, NSString, Id;
overload selector(static "notificationWithName:object:userInfo:") = Id, NSString, Id, NSDictionary;
overload selector(static "null") = NSNull;
overload selector(static "nullDescriptor") = NSAppleEventDescriptor;
overload selector(static "numberFromString:") = NSNumber, NSString;
overload selector(static "numberOfArguments") = UInt;
overload selector(static "numberOfColorComponents") = Int;
overload selector(static "numberOfColorStops") = Int;
overload selector(static "numberOfColumns") = Int;
overload selector(static "numberOfComponents") = CULong;
overload selector(static "numberOfGlyphs") = UInt;
overload selector(static "numberOfItems") = Int;
overload selector(static "numberOfItemsInComboBox:") = Int, NSComboBox;
overload selector(static "numberOfItemsInComboBoxCell:") = Int, NSComboBoxCell;
overload selector(static "numberOfItemsInMenu:") = Int, NSMenu;
overload selector(static "numberOfMajorTickMarks") = Int;
overload selector(static "numberOfPlanes") = Int;
overload selector(static "numberOfRows") = Int;
overload selector(static "numberOfRowsInTableView:") = Int, NSTableView;
overload selector(static "numberOfSamples") = UInt;
overload selector(static "numberOfSelectedColumns") = Int;
overload selector(static "numberOfSelectedRows") = Int;
overload selector(static "numberOfTabViewItems") = Int;
overload selector(static "numberOfTickMarks") = Int;
overload selector(static "numberOfVirtualScreens") = Int;
overload selector(static "numberOfVisibleColumns") = Int;
overload selector(static "numberOfVisibleItems") = Int;
overload selector(static "numberStyle") = UInt;
overload selector(static "numberWithBool:") = NSNumber, Bool;
overload selector(static "numberWithChar:") = NSNumber, CChar;
overload selector(static "numberWithDouble:") = NSNumber, Double;
overload selector(static "numberWithFloat:") = NSNumber, Float;
overload selector(static "numberWithInt:") = NSNumber, Int;
overload selector(static "numberWithInteger:") = NSNumber, Int;
overload selector(static "numberWithLong:") = NSNumber, CLong;
overload selector(static "numberWithLongLong:") = NSNumber, Int64;
overload selector(static "numberWithShort:") = NSNumber, Short;
overload selector(static "numberWithUnsignedChar:") = NSNumber, CUChar;
overload selector(static "numberWithUnsignedInt:") = NSNumber, UInt;
overload selector(static "numberWithUnsignedInteger:") = NSNumber, UInt;
overload selector(static "numberWithUnsignedLong:") = NSNumber, CULong;
overload selector(static "numberWithUnsignedLongLong:") = NSNumber, UInt64;
overload selector(static "numberWithUnsignedShort:") = NSNumber, UShort;
overload selector(static "objCType") = Pointer[CChar];
overload selector(static "object") = Id;
overload selector(static "objectAtIndex:") = Id, UInt;
overload selector(static "objectBeingTested") = Id;
overload selector(static "objectByApplyingXSLT:arguments:error:") = Id, NSData, NSDictionary, Pointer[NSError];
overload selector(static "objectByApplyingXSLTAtURL:arguments:error:") = Id, NSURL, NSDictionary, Pointer[NSError];
overload selector(static "objectByApplyingXSLTString:arguments:error:") = Id, NSString, NSDictionary, Pointer[NSError];
overload selector(static "objectClass") = Id;
overload selector(static "objectDidBeginEditing:") = Void, Id;
overload selector(static "objectDidEndEditing:") = Void, Id;
overload selector(static "objectEnumerator") = NSEnumerator;
overload selector(static "objectForInfoDictionaryKey:") = Id, NSString;
overload selector(static "objectForKey:") = Id, Id;
overload selector(static "objectForProperty:error:") = Id, NSString, Pointer[NSError];
overload selector(static "objectID") = NSManagedObjectID;
overload selector(static "objectIDForEntity:referenceObject:") = NSManagedObjectID, NSEntityDescription, Id;
overload selector(static "objectIsForcedForKey:") = Bool, NSString;
overload selector(static "objectIsForcedForKey:inDomain:") = Bool, NSString, NSString;
overload selector(static "objectRegisteredForID:") = NSManagedObject, NSManagedObjectID;
overload selector(static "objectSpecifier") = NSScriptObjectSpecifier;
overload selector(static "objectSpecifierWithDescriptor:") = NSScriptObjectSpecifier, NSAppleEventDescriptor;
overload selector(static "objectValue") = Id;
overload selector(static "objectValueOfSelectedItem") = Id;
overload selector(static "objectValues") = NSArray;
overload selector(static "objectWithID:") = NSManagedObject, NSManagedObjectID;
overload selector(static "objectZone") = Pointer[NSZone];
overload selector(static "objectsAtIndexes:") = NSArray, NSIndexSet;
overload selector(static "objectsByEvaluatingSpecifier") = Id;
overload selector(static "objectsByEvaluatingWithContainers:") = Id, Id;
overload selector(static "objectsForKeys:notFoundMarker:") = NSArray, NSArray, Id;
overload selector(static "objectsForXQuery:constants:error:") = NSArray, NSString, NSDictionary, Pointer[NSError];
overload selector(static "objectsForXQuery:error:") = NSArray, NSString, Pointer[NSError];
overload selector(static "objectsPassingTest:") = NSSet, UnknownType;
overload selector(static "objectsWithOptions:passingTest:") = NSSet, UInt, UnknownType;
overload selector(static "observationInfo") = RawPointer;
overload selector(static "observeValueForKeyPath:ofObject:change:context:") = Void, NSString, Id, NSDictionary, RawPointer;
overload selector(static "obtainPermanentIDsForObjects:error:") = Bool, NSArray, Pointer[NSError];
overload selector(static "offStateImage") = NSImage;
overload selector(static "offset") = Float;
overload selector(static "offsetInFile") = UInt64;
overload selector(static "ok:") = Void, Id;
overload selector(static "onStateImage") = NSImage;
overload selector(static "one") = NSDecimalNumber;
overload selector(static "opacity") = Float;
overload selector(static "opaqueAncestor") = NSView;
overload selector(static "open") = Void;
overload selector(static "open:") = Bool, Id;
overload selector(static "openDocument:") = Void, Id;
overload selector(static "openDocumentWithContentsOfFile:display:") = Id, NSString, Bool;
overload selector(static "openDocumentWithContentsOfURL:display:") = Id, NSURL, Bool;
overload selector(static "openDocumentWithContentsOfURL:display:error:") = Id, NSURL, Bool, Pointer[NSError];
overload selector(static "openFile:") = Bool, NSString;
overload selector(static "openFile:fromImage:at:inView:") = Bool, NSString, NSImage, NSPoint, NSView;
overload selector(static "openFile:withApplication:") = Bool, NSString, NSString;
overload selector(static "openFile:withApplication:andDeactivate:") = Bool, NSString, NSString, Bool;
overload selector(static "openGLContext") = NSOpenGLContext;
overload selector(static "openGLContextForPixelFormat:") = NSOpenGLContext, NSOpenGLPixelFormat;
overload selector(static "openGLPixelFormat") = NSOpenGLPixelFormat;
overload selector(static "openGLPixelFormatForDisplayMask:") = NSOpenGLPixelFormat, UInt;
overload selector(static "openHandCursor") = NSCursor;
overload selector(static "openHelpAnchor:inBook:") = Void, NSString, NSString;
overload selector(static "openOnEdge:") = Void, NSRectEdge;
overload selector(static "openPanel") = NSOpenPanel;
overload selector(static "openTempFile:") = Bool, NSString;
overload selector(static "openURL:") = Bool, NSURL;
overload selector(static "openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:") = Bool, NSArray, NSString, UInt, NSAppleEventDescriptor, Pointer[NSArray];
overload selector(static "openUntitledDocumentAndDisplay:error:") = Id, Bool, Pointer[NSError];
overload selector(static "openUntitledDocumentOfType:display:") = Id, NSString, Bool;
overload selector(static "operand") = NSExpression;
overload selector(static "operatingSystem") = UInt;
overload selector(static "operatingSystemName") = NSString;
overload selector(static "operatingSystemVersionString") = NSString;
overload selector(static "operationCount") = UInt;
overload selector(static "operationNotAllowedCursor") = NSCursor;
overload selector(static "operations") = NSArray;
overload selector(static "operators") = NSArray;
overload selector(static "optionDescriptionsForBinding:") = NSArray, NSString;
overload selector(static "options") = UInt;
overload selector(static "orPredicateWithSubpredicates:") = NSPredicate, NSArray;
overload selector(static "orangeColor") = NSColor;
overload selector(static "orderBack:") = Void, Id;
overload selector(static "orderFront:") = Void, Id;
overload selector(static "orderFrontCharacterPalette:") = Void, Id;
overload selector(static "orderFrontColorPanel:") = Void, Id;
overload selector(static "orderFrontFontPanel:") = Void, Id;
overload selector(static "orderFrontLinkPanel:") = Void, Id;
overload selector(static "orderFrontListPanel:") = Void, Id;
overload selector(static "orderFrontRegardless") = Void;
overload selector(static "orderFrontSpacingPanel:") = Void, Id;
overload selector(static "orderFrontStandardAboutPanel:") = Void, Id;
overload selector(static "orderFrontStandardAboutPanelWithOptions:") = Void, NSDictionary;
overload selector(static "orderFrontStylesPanel:") = Void, Id;
overload selector(static "orderFrontSubstitutionsPanel:") = Void, Id;
overload selector(static "orderFrontTablePanel:") = Void, Id;
overload selector(static "orderOut:") = Void, Id;
overload selector(static "orderWindow:relativeTo:") = Void, Int, Int;
overload selector(static "orderedDocuments") = NSArray;
overload selector(static "orderedIndex") = Int;
overload selector(static "orderedWindows") = NSArray;
overload selector(static "ordinalityOfUnit:inUnit:forDate:") = UInt, UInt, UInt, NSDate;
overload selector(static "orientation") = UInt;
overload selector(static "originOffset") = Float;
overload selector(static "orthography") = NSOrthography;
overload selector(static "orthographyCheckingResultWithRange:orthography:") = NSTextCheckingResult, NSRange, NSOrthography;
overload selector(static "orthographyWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
overload selector(static "otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:") = NSEvent, UInt, NSPoint, UInt, Double, Int, NSGraphicsContext, Short, Int, Int;
overload selector(static "otherMouseDown:") = Void, NSEvent;
overload selector(static "otherMouseDragged:") = Void, NSEvent;
overload selector(static "otherMouseUp:") = Void, NSEvent;
overload selector(static "outline:") = Void, Id;
overload selector(static "outlineTableColumn") = NSTableColumn;
overload selector(static "outlineView:acceptDrop:item:childIndex:") = Bool, NSOutlineView, Id, Id, Int;
overload selector(static "outlineView:child:ofItem:") = Id, NSOutlineView, Int, Id;
overload selector(static "outlineView:dataCellForTableColumn:item:") = NSCell, NSOutlineView, NSTableColumn, Id;
overload selector(static "outlineView:didClickTableColumn:") = Void, NSOutlineView, NSTableColumn;
overload selector(static "outlineView:didDragTableColumn:") = Void, NSOutlineView, NSTableColumn;
overload selector(static "outlineView:heightOfRowByItem:") = Float, NSOutlineView, Id;
overload selector(static "outlineView:isGroupItem:") = Bool, NSOutlineView, Id;
overload selector(static "outlineView:isItemExpandable:") = Bool, NSOutlineView, Id;
overload selector(static "outlineView:itemForPersistentObject:") = Id, NSOutlineView, Id;
overload selector(static "outlineView:mouseDownInHeaderOfTableColumn:") = Void, NSOutlineView, NSTableColumn;
overload selector(static "outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:") = NSArray, NSOutlineView, NSURL, NSArray;
overload selector(static "outlineView:nextTypeSelectMatchFromItem:toItem:forString:") = Id, NSOutlineView, Id, Id, NSString;
overload selector(static "outlineView:numberOfChildrenOfItem:") = Int, NSOutlineView, Id;
overload selector(static "outlineView:objectValueForTableColumn:byItem:") = Id, NSOutlineView, NSTableColumn, Id;
overload selector(static "outlineView:persistentObjectForItem:") = Id, NSOutlineView, Id;
overload selector(static "outlineView:selectionIndexesForProposedSelection:") = NSIndexSet, NSOutlineView, NSIndexSet;
overload selector(static "outlineView:setObjectValue:forTableColumn:byItem:") = Void, NSOutlineView, Id, NSTableColumn, Id;
overload selector(static "outlineView:shouldCollapseItem:") = Bool, NSOutlineView, Id;
overload selector(static "outlineView:shouldEditTableColumn:item:") = Bool, NSOutlineView, NSTableColumn, Id;
overload selector(static "outlineView:shouldExpandItem:") = Bool, NSOutlineView, Id;
overload selector(static "outlineView:shouldReorderColumn:toColumn:") = Bool, NSOutlineView, Int, Int;
overload selector(static "outlineView:shouldSelectItem:") = Bool, NSOutlineView, Id;
overload selector(static "outlineView:shouldSelectTableColumn:") = Bool, NSOutlineView, NSTableColumn;
overload selector(static "outlineView:shouldShowCellExpansionForTableColumn:item:") = Bool, NSOutlineView, NSTableColumn, Id;
overload selector(static "outlineView:shouldShowOutlineCellForItem:") = Bool, NSOutlineView, Id;
overload selector(static "outlineView:shouldTrackCell:forTableColumn:item:") = Bool, NSOutlineView, NSCell, NSTableColumn, Id;
overload selector(static "outlineView:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSOutlineView, NSEvent, NSString;
overload selector(static "outlineView:sizeToFitWidthOfColumn:") = Float, NSOutlineView, Int;
overload selector(static "outlineView:sortDescriptorsDidChange:") = Void, NSOutlineView, NSArray;
overload selector(static "outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:") = NSString, NSOutlineView, NSCell, NSRectPointer, NSTableColumn, Id, NSPoint;
overload selector(static "outlineView:typeSelectStringForTableColumn:item:") = NSString, NSOutlineView, NSTableColumn, Id;
overload selector(static "outlineView:validateDrop:proposedItem:proposedChildIndex:") = UInt, NSOutlineView, Id, Id, Int;
overload selector(static "outlineView:willDisplayCell:forTableColumn:item:") = Void, NSOutlineView, Id, NSTableColumn, Id;
overload selector(static "outlineView:willDisplayOutlineCell:forTableColumn:item:") = Void, NSOutlineView, Id, NSTableColumn, Id;
overload selector(static "outlineView:writeItems:toPasteboard:") = Bool, NSOutlineView, NSArray, NSPasteboard;
overload selector(static "outlineViewColumnDidMove:") = Void, NSNotification;
overload selector(static "outlineViewColumnDidResize:") = Void, NSNotification;
overload selector(static "outlineViewItemDidCollapse:") = Void, NSNotification;
overload selector(static "outlineViewItemDidExpand:") = Void, NSNotification;
overload selector(static "outlineViewItemWillCollapse:") = Void, NSNotification;
overload selector(static "outlineViewItemWillExpand:") = Void, NSNotification;
overload selector(static "outlineViewSelectionDidChange:") = Void, NSNotification;
overload selector(static "outlineViewSelectionIsChanging:") = Void, NSNotification;
overload selector(static "outputAudioSampleBuffer:fromConnection:") = Void, QTSampleBuffer, QTCaptureConnection;
overload selector(static "outputDeviceUniqueID") = NSString;
overload selector(static "outputFileURL") = NSURL;
overload selector(static "outputFormat") = UInt;
overload selector(static "outputKeys") = NSArray;
overload selector(static "outputStreamToBuffer:capacity:") = Id, Pointer[CUChar], UInt;
overload selector(static "outputStreamToFileAtPath:append:") = Id, NSString, Bool;
overload selector(static "outputStreamToMemory") = Id;
overload selector(static "outputStreamWithURL:append:") = Id, NSURL, Bool;
overload selector(static "outputVideoFrame:withSampleBuffer:fromConnection:") = Void, CVImageBufferRef, QTSampleBuffer, QTCaptureConnection;
overload selector(static "outputs") = NSArray;
overload selector(static "overrideKeyboardWithKeyboardNamed:") = Void, NSString;
overload selector(static "owner") = Id;
overload selector(static "paddingCharacter") = NSString;
overload selector(static "paddingPosition") = UInt;
overload selector(static "pageCount") = Int;
overload selector(static "pageDown:") = Void, Id;
overload selector(static "pageDownAndModifySelection:") = Void, Id;
overload selector(static "pageFooter") = NSAttributedString;
overload selector(static "pageHeader") = NSAttributedString;
overload selector(static "pageLayout") = NSPageLayout;
overload selector(static "pageOrder") = Int;
overload selector(static "pageRange") = NSRange;
overload selector(static "pageScroll") = Float;
overload selector(static "pageSizeForPaper:") = NSSize, NSString;
overload selector(static "pageUp:") = Void, Id;
overload selector(static "pageUpAndModifySelection:") = Void, Id;
overload selector(static "paletteFontOfSize:") = NSFont, Float;
overload selector(static "paletteLabel") = NSString;
overload selector(static "panel:compareFilename:with:caseSensitive:") = Int, Id, NSString, NSString, Bool;
overload selector(static "panel:didChangeToDirectoryURL:") = Void, Id, NSURL;
overload selector(static "panel:directoryDidChange:") = Void, Id, NSString;
overload selector(static "panel:isValidFilename:") = Bool, Id, NSString;
overload selector(static "panel:shouldEnableURL:") = Bool, Id, NSURL;
overload selector(static "panel:shouldShowFilename:") = Bool, Id, NSString;
overload selector(static "panel:userEnteredFilename:confirmed:") = NSString, Id, NSString, Bool;
overload selector(static "panel:validateURL:error:") = Bool, Id, NSURL, Pointer[NSError];
overload selector(static "panel:willExpand:") = Void, Id, Bool;
overload selector(static "panelConvertFont:") = NSFont, NSFont;
overload selector(static "panelSelectionDidChange:") = Void, Id;
overload selector(static "paperName") = NSString;
overload selector(static "paperSize") = NSSize;
overload selector(static "paragraphCharacterRange") = NSRange;
overload selector(static "paragraphGlyphRange") = NSRange;
overload selector(static "paragraphRangeForRange:") = NSRange, NSRange;
overload selector(static "paragraphSeparatorCharacterRange") = NSRange;
overload selector(static "paragraphSeparatorGlyphRange") = NSRange;
overload selector(static "paragraphSpacing") = Float;
overload selector(static "paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Float, UInt, NSRect;
overload selector(static "paragraphSpacingBefore") = Float;
overload selector(static "paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:") = Float, UInt, NSRect;
overload selector(static "paragraphs") = NSArray;
overload selector(static "paramDescriptorForKeyword:") = NSAppleEventDescriptor, CULong;
overload selector(static "parameterString") = NSString;
overload selector(static "parent") = NSXMLNode;
overload selector(static "parentForItem:") = Id, Id;
overload selector(static "parentForItemsInColumn:") = Id, Int;
overload selector(static "parentItem") = NSMenuItem;
overload selector(static "parentNode") = NSTreeNode;
overload selector(static "parentRowForRow:") = Int, Int;
overload selector(static "parentWindow") = NSWindow;
overload selector(static "parse") = Bool;
overload selector(static "parser:didEndElement:namespaceURI:qualifiedName:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector(static "parser:didEndMappingPrefix:") = Void, NSXMLParser, NSString;
overload selector(static "parser:didStartElement:namespaceURI:qualifiedName:attributes:") = Void, NSXMLParser, NSString, NSString, NSString, NSDictionary;
overload selector(static "parser:didStartMappingPrefix:toURI:") = Void, NSXMLParser, NSString, NSString;
overload selector(static "parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
overload selector(static "parser:foundCDATA:") = Void, NSXMLParser, NSData;
overload selector(static "parser:foundCharacters:") = Void, NSXMLParser, NSString;
overload selector(static "parser:foundComment:") = Void, NSXMLParser, NSString;
overload selector(static "parser:foundElementDeclarationWithName:model:") = Void, NSXMLParser, NSString, NSString;
overload selector(static "parser:foundExternalEntityDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector(static "parser:foundIgnorableWhitespace:") = Void, NSXMLParser, NSString;
overload selector(static "parser:foundInternalEntityDeclarationWithName:value:") = Void, NSXMLParser, NSString, NSString;
overload selector(static "parser:foundNotationDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector(static "parser:foundProcessingInstructionWithTarget:data:") = Void, NSXMLParser, NSString, NSString;
overload selector(static "parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
overload selector(static "parser:parseErrorOccurred:") = Void, NSXMLParser, NSError;
overload selector(static "parser:resolveExternalEntityName:systemID:") = NSData, NSXMLParser, NSString, NSString;
overload selector(static "parser:validationErrorOccurred:") = Void, NSXMLParser, NSError;
overload selector(static "parserDidEndDocument:") = Void, NSXMLParser;
overload selector(static "parserDidStartDocument:") = Void, NSXMLParser;
overload selector(static "parserError") = NSError;
overload selector(static "password") = NSString;
overload selector(static "paste:") = Void, Id;
overload selector(static "pasteAsPlainText:") = Void, Id;
overload selector(static "pasteAsRichText:") = Void, Id;
overload selector(static "pasteFont:") = Void, Id;
overload selector(static "pasteRuler:") = Void, Id;
overload selector(static "pasteboard:item:provideDataForType:") = Void, NSPasteboard, NSPasteboardItem, NSString;
overload selector(static "pasteboard:provideDataForType:") = Void, NSPasteboard, NSString;
overload selector(static "pasteboardByFilteringData:ofType:") = NSPasteboard, NSData, NSString;
overload selector(static "pasteboardByFilteringFile:") = NSPasteboard, NSString;
overload selector(static "pasteboardByFilteringTypesInPasteboard:") = NSPasteboard, NSPasteboard;
overload selector(static "pasteboardChangedOwner:") = Void, NSPasteboard;
overload selector(static "pasteboardFinishedWithDataProvider:") = Void, NSPasteboard;
overload selector(static "pasteboardItems") = NSArray;
overload selector(static "pasteboardPropertyListForType:") = Id, NSString;
overload selector(static "pasteboardWithName:") = NSPasteboard, NSString;
overload selector(static "pasteboardWithUniqueName") = NSPasteboard;
overload selector(static "path") = NSString;
overload selector(static "pathCell:willDisplayOpenPanel:") = Void, NSPathCell, NSOpenPanel;
overload selector(static "pathCell:willPopUpMenu:") = Void, NSPathCell, NSMenu;
overload selector(static "pathComponentCellAtPoint:withFrame:inView:") = NSPathComponentCell, NSPoint, NSRect, NSView;
overload selector(static "pathComponentCellClass") = Id;
overload selector(static "pathComponentCells") = NSArray;
overload selector(static "pathComponents") = NSArray;
overload selector(static "pathContentOfSymbolicLinkAtPath:") = NSString, NSString;
overload selector(static "pathControl:acceptDrop:") = Bool, NSPathControl, Id;
overload selector(static "pathControl:shouldDragPathComponentCell:withPasteboard:") = Bool, NSPathControl, NSPathComponentCell, NSPasteboard;
overload selector(static "pathControl:validateDrop:") = UInt, NSPathControl, Id;
overload selector(static "pathControl:willDisplayOpenPanel:") = Void, NSPathControl, NSOpenPanel;
overload selector(static "pathControl:willPopUpMenu:") = Void, NSPathControl, NSMenu;
overload selector(static "pathExtension") = NSString;
overload selector(static "pathForAuxiliaryExecutable:") = NSString, NSString;
overload selector(static "pathForImageResource:") = NSString, NSString;
overload selector(static "pathForResource:ofType:") = NSString, NSString, NSString;
overload selector(static "pathForResource:ofType:inDirectory:") = NSString, NSString, NSString, NSString;
overload selector(static "pathForResource:ofType:inDirectory:forLocalization:") = NSString, NSString, NSString, NSString, NSString;
overload selector(static "pathForSoundResource:") = NSString, NSString;
overload selector(static "pathSeparator") = NSString;
overload selector(static "pathStyle") = Int;
overload selector(static "pathToColumn:") = NSString, Int;
overload selector(static "pathWithComponents:") = NSString, NSArray;
overload selector(static "pathsForResourcesOfType:inDirectory:") = NSArray, NSString, NSString;
overload selector(static "pathsForResourcesOfType:inDirectory:forLocalization:") = NSArray, NSString, NSString, NSString;
overload selector(static "pathsMatchingExtensions:") = NSArray, NSArray;
overload selector(static "patternImage") = NSImage;
overload selector(static "patternPhase") = NSPoint;
overload selector(static "pause") = Bool;
overload selector(static "pause:") = Void, Id;
overload selector(static "pauseRecording") = Void;
overload selector(static "pauseSpeakingAtBoundary:") = Void, UInt;
overload selector(static "perMillSymbol") = NSString;
overload selector(static "percentSymbol") = NSString;
overload selector(static "performActionForItem:") = Void, Id;
overload selector(static "performActionForItemAtIndex:") = Void, Int;
overload selector(static "performActionWithHighlightingForItemAtIndex:") = Void, Int;
overload selector(static "performClick:") = Void, Id;
overload selector(static "performClickOnCellAtColumn:row:") = Void, Int, Int;
overload selector(static "performClickWithFrame:inView:") = Void, NSRect, NSView;
overload selector(static "performClose:") = Void, Id;
overload selector(static "performCustomValidationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector(static "performDefaultImplementation") = Id;
overload selector(static "performDragOperation:") = Bool, Id;
overload selector(static "performFileOperation:source:destination:files:tag:") = Bool, NSString, NSString, NSString, NSArray, Pointer[Int];
overload selector(static "performFindPanelAction:") = Void, Id;
overload selector(static "performKeyEquivalent:") = Bool, NSEvent;
overload selector(static "performMiniaturize:") = Void, Id;
overload selector(static "performMnemonic:") = Bool, NSString;
overload selector(static "performSelector:") = Id, SelectorHandle;
overload selector(static "performSelector:onThread:withObject:waitUntilDone:") = Void, SelectorHandle, NSThread, Id, Bool;
overload selector(static "performSelector:onThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, NSThread, Id, Bool, NSArray;
overload selector(static "performSelector:target:argument:order:modes:") = Void, SelectorHandle, Id, Id, UInt, NSArray;
overload selector(static "performSelector:withObject:") = Id, SelectorHandle, Id;
overload selector(static "performSelector:withObject:afterDelay:") = Void, SelectorHandle, Id, Double;
overload selector(static "performSelector:withObject:afterDelay:inModes:") = Void, SelectorHandle, Id, Double, NSArray;
overload selector(static "performSelector:withObject:withObject:") = Id, SelectorHandle, Id, Id;
overload selector(static "performSelectorInBackground:withObject:") = Void, SelectorHandle, Id;
overload selector(static "performSelectorOnMainThread:withObject:waitUntilDone:") = Void, SelectorHandle, Id, Bool;
overload selector(static "performSelectorOnMainThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, Id, Bool, NSArray;
overload selector(static "performZoom:") = Void, Id;
overload selector(static "persistence") = UInt;
overload selector(static "persistentDomainForName:") = NSDictionary, NSString;
overload selector(static "persistentDomainNames") = NSArray;
overload selector(static "persistentStore") = NSPersistentStore;
overload selector(static "persistentStoreCoordinator") = NSPersistentStoreCoordinator;
overload selector(static "persistentStoreForURL:") = NSPersistentStore, NSURL;
overload selector(static "persistentStoreTypeForFileType:") = NSString, NSString;
overload selector(static "persistentStores") = NSArray;
overload selector(static "phase") = UInt;
overload selector(static "phonemesFromText:") = NSString, NSString;
overload selector(static "physicalMemory") = UInt64;
overload selector(static "pipe") = Id;
overload selector(static "pixelBuffer") = NSOpenGLPixelBuffer;
overload selector(static "pixelBufferAttributes") = NSDictionary;
overload selector(static "pixelBufferCubeMapFace") = UInt;
overload selector(static "pixelBufferMipMapLevel") = Int;
overload selector(static "pixelFormat") = NSOpenGLPixelFormat;
overload selector(static "pixelsHigh") = Int;
overload selector(static "pixelsWide") = Int;
overload selector(static "placeholderAttributedString") = NSAttributedString;
overload selector(static "placeholderString") = NSString;
overload selector(static "play") = Bool;
overload selector(static "play:") = Void, Id;
overload selector(static "playbackDeviceIdentifier") = NSString;
overload selector(static "playsEveryFrame") = Bool;
overload selector(static "playsSelectionOnly") = Bool;
overload selector(static "plusSign") = NSString;
overload selector(static "pointSize") = Float;
overload selector(static "pointValue") = NSPoint;
overload selector(static "pointerArrayWithOptions:") = Id, UInt;
overload selector(static "pointerArrayWithPointerFunctions:") = Id, NSPointerFunctions;
overload selector(static "pointerArrayWithStrongObjects") = Id;
overload selector(static "pointerArrayWithWeakObjects") = Id;
overload selector(static "pointerAtIndex:") = RawPointer, UInt;
overload selector(static "pointerFunctions") = NSPointerFunctions;
overload selector(static "pointerFunctionsWithOptions:") = Id, UInt;
overload selector(static "pointerValue") = RawPointer;
overload selector(static "pointingDeviceID") = UInt;
overload selector(static "pointingDeviceSerialNumber") = UInt;
overload selector(static "pointingDeviceType") = UInt;
overload selector(static "pointingHandCursor") = NSCursor;
overload selector(static "pop") = Void;
overload selector(static "popUpContextMenu:withEvent:forView:") = Void, NSMenu, NSEvent, NSView;
overload selector(static "popUpContextMenu:withEvent:forView:withFont:") = Void, NSMenu, NSEvent, NSView, NSFont;
overload selector(static "popUpMenuPositioningItem:atLocation:inView:") = Bool, NSMenuItem, NSPoint, NSView;
overload selector(static "popUpStatusItemMenu:") = Void, NSMenu;
overload selector(static "port") = Id;
overload selector(static "portCoderWithReceivePort:sendPort:components:") = Id, NSPort, NSPort, NSArray;
overload selector(static "portForName:") = NSPort, NSString;
overload selector(static "portForName:host:") = NSPort, NSString, NSString;
overload selector(static "portForName:host:nameServerPortNumber:") = NSPort, NSString, NSString, UShort;
overload selector(static "portList") = NSArray;
overload selector(static "portWithMachPort:") = NSPort, UInt;
overload selector(static "portWithMachPort:options:") = NSPort, UInt, UInt;
overload selector(static "poseAsClass:") = Void, Id;
overload selector(static "position") = UInt;
overload selector(static "positionOfGlyph:forCharacter:struckOverRect:") = NSPoint, UInt, UShort, NSRect;
overload selector(static "positionOfGlyph:precededByGlyph:isNominal:") = NSPoint, UInt, UInt, Pointer[Bool];
overload selector(static "positionOfGlyph:struckOverGlyph:metricsExist:") = NSPoint, UInt, UInt, Pointer[Bool];
overload selector(static "positionOfGlyph:struckOverRect:metricsExist:") = NSPoint, UInt, NSRect, Pointer[Bool];
overload selector(static "positionOfGlyph:withRelation:toBaseGlyph:totalAdvancement:metricsExist:") = NSPoint, UInt, UInt, UInt, NSSizePointer, Pointer[Bool];
overload selector(static "positionsForCompositeSequence:numberOfGlyphs:pointArray:") = Int, Pointer[UInt], Int, NSPointArray;
overload selector(static "positiveFormat") = NSString;
overload selector(static "positiveInfinitySymbol") = NSString;
overload selector(static "positivePrefix") = NSString;
overload selector(static "positiveSuffix") = NSString;
overload selector(static "postEvent:atStart:") = Void, NSEvent, Bool;
overload selector(static "postNotification:") = Void, NSNotification;
overload selector(static "postNotificationName:object:") = Void, NSString, Id;
overload selector(static "postNotificationName:object:userInfo:") = Void, NSString, Id, NSDictionary;
overload selector(static "postNotificationName:object:userInfo:deliverImmediately:") = Void, NSString, NSString, NSDictionary, Bool;
overload selector(static "postNotificationName:object:userInfo:options:") = Void, NSString, NSString, NSDictionary, UInt;
overload selector(static "posterImage") = NSImage;
overload selector(static "postsBoundsChangedNotifications") = Bool;
overload selector(static "postsFrameChangedNotifications") = Bool;
overload selector(static "postscriptName") = NSString;
overload selector(static "precomposedStringWithCanonicalMapping") = NSString;
overload selector(static "precomposedStringWithCompatibilityMapping") = NSString;
overload selector(static "predefinedEntityDeclarationForName:") = NSXMLDTDNode, NSString;
overload selector(static "predefinedNamespaceForPrefix:") = NSXMLNode, NSString;
overload selector(static "predicate") = NSPredicate;
overload selector(static "predicateForRow:") = NSPredicate, Int;
overload selector(static "predicateFormat") = NSString;
overload selector(static "predicateOperatorType") = UInt;
overload selector(static "predicateWithBlock:") = NSPredicate, UnknownType;
overload varargSelector(static "predicateWithFormat:") = NSPredicate, NSString;
overload selector(static "predicateWithFormat:argumentArray:") = NSPredicate, NSString, NSArray;
overload selector(static "predicateWithFormat:arguments:") = NSPredicate, NSString, va_list;
overload selector(static "predicateWithLeftExpression:rightExpression:customSelector:") = NSPredicate, NSExpression, NSExpression, SelectorHandle;
overload selector(static "predicateWithLeftExpression:rightExpression:modifier:type:options:") = NSPredicate, NSExpression, NSExpression, UInt, UInt, UInt;
overload selector(static "predicateWithSubpredicates:") = NSPredicate, NSArray;
overload selector(static "predicateWithSubstitutionVariables:") = NSPredicate, NSDictionary;
overload selector(static "predicateWithValue:") = NSPredicate, Bool;
overload selector(static "preferredBackingLocation") = UInt;
overload selector(static "preferredEdge") = NSRectEdge;
overload selector(static "preferredFilename") = NSString;
overload selector(static "preferredFilenameExtensionForType:") = NSString, NSString;
overload selector(static "preferredFontNames") = NSArray;
overload selector(static "preferredFrameSize") = CGSize;
overload selector(static "preferredLanguages") = NSArray;
overload selector(static "preferredLocalizations") = NSArray;
overload selector(static "preferredLocalizationsFromArray:") = NSArray, NSArray;
overload selector(static "preferredLocalizationsFromArray:forPreferences:") = NSArray, NSArray, NSArray;
overload selector(static "preferredPasteboardTypeFromArray:restrictedToTypesFromArray:") = NSString, NSArray, NSArray;
overload selector(static "preferredSizeOfLayer:") = CGSize, CALayer;
overload selector(static "prefersAllColumnUserResizing") = Bool;
overload selector(static "prefersColorMatch") = Bool;
overload selector(static "prefersTrackingUntilMouseUp") = Bool;
overload selector(static "prefix") = NSString;
overload selector(static "prefixForName:") = NSString, NSString;
overload selector(static "preflightAndReturnError:") = Bool, Pointer[NSError];
overload selector(static "prepareContent") = Void;
overload selector(static "prepareForDeletion") = Void;
overload selector(static "prepareForDragOperation:") = Bool, Id;
overload selector(static "prepareGState") = Void;
overload selector(static "prepareOpenGL") = Void;
overload selector(static "preparePageLayout:") = Bool, NSPageLayout;
overload selector(static "prepareSavePanel:") = Bool, NSSavePanel;
overload selector(static "prepareWithInvocationTarget:") = Id, Id;
overload selector(static "preparedCellAtColumn:row:") = NSCell, Int, Int;
overload selector(static "prependTransform:") = Void, NSAffineTransform;
overload selector(static "presentError:") = Bool, NSError;
overload selector(static "presentError:modalForWindow:delegate:didPresentSelector:contextInfo:") = Void, NSError, NSWindow, Id, SelectorHandle, RawPointer;
overload selector(static "presentationLayer") = Id;
overload selector(static "presentationOptions") = UInt;
overload selector(static "presentationTime") = QTTime;
overload selector(static "preservesAspectRatio") = Bool;
overload selector(static "preservesContentDuringLiveResize") = Bool;
overload selector(static "preservesDepth") = Bool;
overload selector(static "preservesSelection") = Bool;
overload selector(static "pressedMouseButtons") = UInt;
overload selector(static "pressure") = Float;
overload selector(static "preventWindowOrdering") = Void;
overload selector(static "preventsApplicationTerminationWhenModal") = Bool;
overload selector(static "previewBounds") = NSRect;
overload selector(static "previousFailureCount") = Int;
overload selector(static "previousKeyView") = NSView;
overload selector(static "previousNode") = NSXMLNode;
overload selector(static "previousSibling") = NSXMLNode;
overload selector(static "previousValidKeyView") = NSView;
overload selector(static "primitiveValueForKey:") = Id, NSString;
overload selector(static "principalClass") = Id;
overload selector(static "print:") = Void, Id;
overload selector(static "printDocument:") = Void, Id;
overload selector(static "printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:") = Void, NSDictionary, Bool, Id, SelectorHandle, RawPointer;
overload selector(static "printInfo") = NSPrintInfo;
overload selector(static "printJobTitle") = NSString;
overload selector(static "printOperationWithSettings:error:") = NSPrintOperation, NSDictionary, Pointer[NSError];
overload selector(static "printOperationWithView:") = NSPrintOperation, NSView;
overload selector(static "printOperationWithView:printInfo:") = NSPrintOperation, NSView, NSPrintInfo;
overload selector(static "printPanel") = NSPrintPanel;
overload selector(static "printSettings") = NSMutableDictionary;
overload selector(static "printShowingPrintPanel:") = Void, Bool;
overload selector(static "printer") = NSPrinter;
overload selector(static "printerFont") = NSFont;
overload selector(static "printerNames") = NSArray;
overload selector(static "printerTypes") = NSArray;
overload selector(static "printerWithName:") = NSPrinter, NSString;
overload selector(static "printerWithName:domain:includeUnavailable:") = NSPrinter, NSString, NSString, Bool;
overload selector(static "printerWithType:") = NSPrinter, NSString;
overload selector(static "printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:") = NSSize, NSLayoutManager, NSRange, Pointer[CUChar], UInt;
overload selector(static "privateFrameworksPath") = NSString;
overload selector(static "privateFrameworksURL") = NSURL;
overload selector(static "processEditing") = Void;
overload selector(static "processIdentifier") = Int;
overload selector(static "processInfo") = NSProcessInfo;
overload selector(static "processName") = NSString;
overload selector(static "processPendingChanges") = Void;
overload selector(static "processingInstructionWithName:stringValue:") = Id, NSString, NSString;
overload selector(static "processorCount") = UInt;
overload selector(static "progressMarks") = NSArray;
overload selector(static "prompt") = NSString;
overload selector(static "propagatesDeletesAtEndOfEvent") = Bool;
overload selector(static "properties") = Id;
overload selector(static "propertiesByName") = NSDictionary;
overload selector(static "propertiesToFetch") = NSArray;
overload selector(static "propertiesToUpdate") = UInt;
overload selector(static "propertyCache") = NSMutableDictionary;
overload selector(static "propertyForKey:") = Id, NSString;
overload selector(static "propertyForKey:inRequest:") = Id, NSString, NSURLRequest;
overload selector(static "propertyForKeyIfAvailable:") = Id, NSString;
overload selector(static "propertyList") = Id;
overload selector(static "propertyList:isValidForFormat:") = Bool, Id, UInt;
overload selector(static "propertyListForType:") = Id, NSString;
overload selector(static "propertyListFromData:mutabilityOption:format:errorDescription:") = Id, NSData, UInt, Pointer[UInt], Pointer[NSString];
overload selector(static "propertyListFromStringsFileFormat") = NSDictionary;
overload selector(static "propertyListWithData:options:format:error:") = Id, NSData, UInt, Pointer[UInt], Pointer[NSError];
overload selector(static "propertyListWithStream:options:format:error:") = Id, NSInputStream, UInt, Pointer[UInt], Pointer[NSError];
overload selector(static "proposedCredential") = NSURLCredential;
overload selector(static "protectionSpace") = NSURLProtectionSpace;
overload selector(static "protocol") = Int;
overload selector(static "protocolCheckerWithTarget:protocol:") = Id, NSObject, Id;
overload selector(static "protocolFamily") = Int;
overload selector(static "protocolSpecificInformation") = NSString;
overload selector(static "prototype") = Id;
overload selector(static "provideImageData:bytesPerRow:origin::size::userInfo:") = Void, RawPointer, CULong, CULong, CULong, CULong, CULong, Id;
overload selector(static "provideNewButtonImage") = NSImage;
overload selector(static "provideNewView:") = NSView, Bool;
overload selector(static "proxyType") = NSString;
overload selector(static "proxyWithLocal:connection:") = NSDistantObject, Id, NSConnection;
overload selector(static "proxyWithTarget:connection:") = NSDistantObject, Id, NSConnection;
overload selector(static "publicID") = NSString;
overload selector(static "publish") = Void;
overload selector(static "publishWithOptions:") = Void, UInt;
overload selector(static "pullsDown") = Bool;
overload selector(static "punctuationCharacterSet") = Id;
overload selector(static "purpleColor") = NSColor;
overload selector(static "push") = Void;
overload selector(static "putCell:atRow:column:") = Void, NSCell, Int, Int;
overload selector(static "qdPort") = RawPointer;
overload selector(static "quarter") = Int;
overload selector(static "quarterSymbols") = NSArray;
overload selector(static "query") = NSString;
overload selector(static "queuePriority") = Int;
overload selector(static "quickTimeMedia") = Media;
overload selector(static "quickTimeMovie") = Movie;
overload selector(static "quickTimeMovieController") = MovieController;
overload selector(static "quickTimeSampleDescription") = NSData;
overload selector(static "quickTimeTrack") = Track;
overload selector(static "quoteCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "raise") = Void;
overload varargSelector(static "raise:format:") = Void, NSString, NSString;
overload selector(static "raise:format:arguments:") = Void, NSString, NSString, va_list;
overload selector(static "raiseBaseline:") = Void, Id;
overload selector(static "range") = NSRange;
overload selector(static "rangeContainerObject") = Id;
overload selector(static "rangeForUserCharacterAttributeChange") = NSRange;
overload selector(static "rangeForUserCompletion") = NSRange;
overload selector(static "rangeForUserParagraphAttributeChange") = NSRange;
overload selector(static "rangeForUserTextChange") = NSRange;
overload selector(static "rangeOfCharacterFromSet:") = NSRange, NSCharacterSet;
overload selector(static "rangeOfCharacterFromSet:options:") = NSRange, NSCharacterSet, UInt;
overload selector(static "rangeOfCharacterFromSet:options:range:") = NSRange, NSCharacterSet, UInt, NSRange;
overload selector(static "rangeOfComposedCharacterSequenceAtIndex:") = NSRange, UInt;
overload selector(static "rangeOfComposedCharacterSequencesForRange:") = NSRange, NSRange;
overload selector(static "rangeOfData:options:range:") = NSRange, NSData, UInt, NSRange;
overload selector(static "rangeOfNominallySpacedGlyphsContainingIndex:") = NSRange, UInt;
overload selector(static "rangeOfString:") = NSRange, NSString;
overload selector(static "rangeOfString:options:") = NSRange, NSString, UInt;
overload selector(static "rangeOfString:options:range:") = NSRange, NSString, UInt, NSRange;
overload selector(static "rangeOfString:options:range:locale:") = NSRange, NSString, UInt, NSRange, NSLocale;
overload selector(static "rangeOfTextBlock:atIndex:") = NSRange, NSTextBlock, UInt;
overload selector(static "rangeOfTextList:atIndex:") = NSRange, NSTextList, UInt;
overload selector(static "rangeOfTextTable:atIndex:") = NSRange, NSTextTable, UInt;
overload selector(static "rangeOfUnit:inUnit:forDate:") = NSRange, UInt, UInt, NSDate;
overload selector(static "rangeOfUnit:startDate:interval:forDate:") = Bool, UInt, Pointer[NSDate], Pointer[Double], NSDate;
overload selector(static "rangeValue") = NSRange;
overload selector(static "rangesForUserCharacterAttributeChange") = NSArray;
overload selector(static "rangesForUserParagraphAttributeChange") = NSArray;
overload selector(static "rangesForUserTextChange") = NSArray;
overload selector(static "rate") = Float;
overload selector(static "read:maxLength:") = Int, Pointer[CUChar], UInt;
overload selector(static "readDataOfLength:") = NSData, UInt;
overload selector(static "readDataToEndOfFile") = NSData;
overload selector(static "readFileContentsType:toFile:") = NSString, NSString, NSString;
overload selector(static "readFileWrapper") = NSFileWrapper;
overload selector(static "readFromData:ofType:error:") = Bool, NSData, NSString, Pointer[NSError];
overload selector(static "readFromData:options:documentAttributes:") = Bool, NSData, NSDictionary, Pointer[NSDictionary];
overload selector(static "readFromData:options:documentAttributes:error:") = Bool, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
overload selector(static "readFromFile:ofType:") = Bool, NSString, NSString;
overload selector(static "readFromFileWrapper:ofType:error:") = Bool, NSFileWrapper, NSString, Pointer[NSError];
overload selector(static "readFromURL:ofType:") = Bool, NSURL, NSString;
overload selector(static "readFromURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
overload selector(static "readFromURL:options:documentAttributes:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary];
overload selector(static "readFromURL:options:documentAttributes:error:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
overload selector(static "readFromURL:options:error:") = Bool, NSURL, UInt, Pointer[NSError];
overload selector(static "readInBackgroundAndNotify") = Void;
overload selector(static "readInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector(static "readObjectsForClasses:options:") = NSArray, NSArray, NSDictionary;
overload selector(static "readPrintInfo") = Void;
overload selector(static "readRTFDFromFile:") = Bool, NSString;
overload selector(static "readSelectionFromPasteboard:") = Bool, NSPasteboard;
overload selector(static "readSelectionFromPasteboard:type:") = Bool, NSPasteboard, NSString;
overload selector(static "readToEndOfFileInBackgroundAndNotify") = Void;
overload selector(static "readToEndOfFileInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector(static "readablePasteboardTypes") = NSArray;
overload selector(static "readableTypes") = NSArray;
overload selector(static "readableTypesForPasteboard:") = NSArray, NSPasteboard;
overload selector(static "readingOptionsForType:pasteboard:") = UInt, NSString, NSPasteboard;
overload selector(static "realm") = NSString;
overload selector(static "rearrangeObjects") = Void;
overload selector(static "reason") = NSString;
overload selector(static "recache") = Void;
overload selector(static "recalculateKeyViewLoop") = Void;
overload selector(static "receivePort") = NSPort;
overload selector(static "receiversSpecifier") = NSScriptObjectSpecifier;
overload selector(static "receivesCredentialSecurely") = Bool;
overload selector(static "recentDocumentURLs") = NSArray;
overload selector(static "recentSearches") = NSArray;
overload selector(static "recentsAutosaveName") = NSString;
overload selector(static "reclaimResources") = Void;
overload selector(static "recordDescriptor") = NSAppleEventDescriptor;
overload selector(static "recordToOutputFileURL:") = Void, NSURL;
overload selector(static "recordToOutputFileURL:bufferDestination:") = Void, NSURL, UInt;
overload selector(static "recordedDuration") = QTTime;
overload selector(static "recordedFileSize") = UInt64;
overload selector(static "recoveryAttempter") = Id;
overload selector(static "rect") = NSRect;
overload selector(static "rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[UInt];
overload selector(static "rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[UInt];
overload selector(static "rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSPoint, NSRect, NSTextContainer, NSRange;
overload selector(static "rectForKey:inTable:") = NSRect, NSString, NSString;
overload selector(static "rectForLayoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSPoint, NSRect, NSTextContainer, NSRange;
overload selector(static "rectForPage:") = NSRect, Int;
overload selector(static "rectForPart:") = NSRect, UInt;
overload selector(static "rectOfColumn:") = NSRect, Int;
overload selector(static "rectOfItemAtIndex:") = NSRect, Int;
overload selector(static "rectOfPathComponentCell:withFrame:inView:") = NSRect, NSPathComponentCell, NSRect, NSView;
overload selector(static "rectOfRow:") = NSRect, Int;
overload selector(static "rectOfTickMarkAtIndex:") = NSRect, Int;
overload selector(static "rectPreservedDuringLiveResize") = NSRect;
overload selector(static "rectValue") = NSRect;
overload selector(static "recycleURLs:completionHandler:") = Void, NSArray, UnknownType;
overload selector(static "red") = Float;
overload selector(static "redColor") = NSColor;
overload selector(static "redComponent") = Float;
overload selector(static "redRange") = Float;
overload selector(static "redSpeed") = Float;
overload selector(static "redo") = Void;
overload selector(static "redoActionName") = NSString;
overload selector(static "redoMenuItemTitle") = NSString;
overload selector(static "redoMenuTitleForUndoActionName:") = NSString, NSString;
overload selector(static "referenceData") = NSData;
overload selector(static "referenceFile") = NSString;
overload selector(static "referenceObjectForObjectID:") = Id, NSManagedObjectID;
overload selector(static "referenceURL") = NSURL;
overload selector(static "reflectScrolledClipView:") = Void, NSClipView;
overload selector(static "refreshObject:mergeChanges:") = Void, NSManagedObject, Bool;
overload selector(static "refusesFirstResponder") = Bool;
overload selector(static "registerBooksInBundle:") = Bool, NSBundle;
overload selector(static "registerClass:") = Bool, Id;
overload selector(static "registerClassDescription:") = Void, NSScriptClassDescription;
overload selector(static "registerClassDescription:forClass:") = Void, NSClassDescription, Id;
overload selector(static "registerCoercer:selector:toConvertFromClass:toClass:") = Void, Id, SelectorHandle, Id, Id;
overload selector(static "registerCommandDescription:") = Void, NSScriptCommandDescription;
overload selector(static "registerDefaults:") = Void, NSDictionary;
overload selector(static "registerFilterName:") = Void, NSString;
overload selector(static "registerFilterName:constructor:classAttributes:") = Void, NSString, Id, NSDictionary;
overload selector(static "registerForDraggedTypes:") = Void, NSArray;
overload selector(static "registerForServices") = Void;
overload selector(static "registerImageRepClass:") = Void, Id;
overload selector(static "registerLanguage:byVendor:") = Bool, NSString, NSString;
overload selector(static "registerName:") = Bool, NSString;
overload selector(static "registerName:withNameServer:") = Bool, NSString, NSPortNameServer;
overload selector(static "registerPort:name:") = Bool, NSPort, NSString;
overload selector(static "registerPort:name:nameServerPortNumber:") = Bool, NSPort, NSString, UShort;
overload selector(static "registerServicesMenuSendTypes:returnTypes:") = Void, NSArray, NSArray;
overload selector(static "registerStoreClass:forStoreType:") = Void, Id, NSString;
overload selector(static "registerURLHandleClass:") = Void, Id;
overload selector(static "registerUndoWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
overload selector(static "registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:") = Void, NSString, NSString, Float, NSArray, NSArray;
overload selector(static "registerUserInterfaceItemSearchHandler:") = Void, Id;
overload selector(static "registeredDraggedTypes") = NSArray;
overload selector(static "registeredImageRepClasses") = NSArray;
overload selector(static "registeredObjects") = NSSet;
overload selector(static "registeredStoreTypes") = NSDictionary;
overload selector(static "regularFileContents") = NSData;
overload selector(static "relationshipKeyPathsForPrefetching") = NSArray;
overload selector(static "relationshipMappings") = NSArray;
overload selector(static "relationshipsByName") = NSDictionary;
overload selector(static "relationshipsWithDestinationEntity:") = NSArray, NSEntityDescription;
overload selector(static "relativeCurveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
overload selector(static "relativeLineToPoint:") = Void, NSPoint;
overload selector(static "relativeMoveToPoint:") = Void, NSPoint;
overload selector(static "relativePath") = NSString;
overload selector(static "relativePosition") = UInt;
overload selector(static "relativeString") = NSString;
overload selector(static "release") = Void;
overload selector(static "releaseCGLContext:") = Void, CGLContextObj;
overload selector(static "releaseCGLPixelFormat:") = Void, CGLPixelFormatObj;
overload selector(static "releaseGState") = Void;
overload selector(static "releaseGlobally") = Void;
overload selector(static "relinquishFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[UInt]]],[]];
overload selector(static "reloadColumn:") = Void, Int;
overload selector(static "reloadCriteria") = Void;
overload selector(static "reloadData") = Void;
overload selector(static "reloadDataForRowIndexes:columnIndexes:") = Void, NSIndexSet, NSIndexSet;
overload selector(static "reloadDataForRowIndexes:inColumn:") = Void, NSIndexSet, Int;
overload selector(static "reloadDefaultFontFamilies") = Void;
overload selector(static "reloadItem:") = Void, Id;
overload selector(static "reloadItem:reloadChildren:") = Void, Id, Bool;
overload selector(static "reloadPredicate") = Void;
overload selector(static "remoteObjects") = NSArray;
overload selector(static "remove:") = Void, Id;
overload selector(static "removeAccessoryController:") = Void, NSViewController;
overload selector(static "removeAllActions") = Void;
overload selector(static "removeAllActionsWithTarget:") = Void, Id;
overload selector(static "removeAllAnimations") = Void;
overload selector(static "removeAllCachedResponses") = Void;
overload selector(static "removeAllIndexes") = Void;
overload selector(static "removeAllItems") = Void;
overload selector(static "removeAllObjects") = Void;
overload selector(static "removeAllPoints") = Void;
overload selector(static "removeAllToolTips") = Void;
overload selector(static "removeAnimationForKey:") = Void, NSString;
overload selector(static "removeApertureModeDimensions") = Void;
overload selector(static "removeAttribute:range:") = Void, NSString, NSRange;
overload selector(static "removeAttributeForName:") = Void, NSString;
overload selector(static "removeCachedResponseForRequest:") = Void, NSURLRequest;
overload selector(static "removeChapters") = Bool;
overload selector(static "removeCharactersInRange:") = Void, NSRange;
overload selector(static "removeCharactersInString:") = Void, NSString;
overload selector(static "removeChildAtIndex:") = Void, UInt;
overload selector(static "removeChildWindow:") = Void, NSWindow;
overload selector(static "removeClient:") = Void, Id;
overload selector(static "removeCollection:") = Bool, NSString;
overload selector(static "removeColorWithKey:") = Void, NSString;
overload selector(static "removeColumn:") = Void, Int;
overload selector(static "removeConnection:fromRunLoop:forMode:") = Void, NSConnection, NSRunLoop, NSString;
overload selector(static "removeContextHelpForObject:") = Void, Id;
overload selector(static "removeCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector(static "removeCursorRect:cursor:") = Void, NSRect, NSCursor;
overload selector(static "removeDependency:") = Void, NSOperation;
overload selector(static "removeDescriptorAtIndex:") = Void, Int;
overload selector(static "removeDescriptorWithKeyword:") = Void, CULong;
overload selector(static "removeDocument:") = Void, NSDocument;
overload selector(static "removeEntryAtIndex:") = Void, Int;
overload selector(static "removeEventHandlerForEventClass:andEventID:") = Void, CULong, CULong;
overload selector(static "removeExportedKey:") = Void, NSString;
overload selector(static "removeFile") = Void;
overload selector(static "removeFileAtPath:handler:") = Bool, NSString, Id;
overload selector(static "removeFileWrapper:") = Void, NSFileWrapper;
overload selector(static "removeFontDescriptor:fromCollection:") = Void, NSFontDescriptor, NSString;
overload selector(static "removeFontTrait:") = Void, Id;
overload selector(static "removeFrameUsingName:") = Void, NSString;
overload selector(static "removeFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector(static "removeFromSuperlayer") = Void;
overload selector(static "removeFromSuperview") = Void;
overload selector(static "removeFromSuperviewWithoutNeedingDisplay") = Void;
overload selector(static "removeIndex:") = Void, UInt;
overload selector(static "removeIndexes:") = Void, NSIndexSet;
overload selector(static "removeIndexesInRange:") = Void, NSRange;
overload selector(static "removeInput:") = Void, QTCaptureInput;
overload selector(static "removeItem:") = Void, NSMenuItem;
overload selector(static "removeItemAtIndex:") = Void, Int;
overload selector(static "removeItemAtPath:error:") = Bool, NSString, Pointer[NSError];
overload selector(static "removeItemAtURL:error:") = Bool, NSURL, Pointer[NSError];
overload selector(static "removeItemWithObjectValue:") = Void, Id;
overload selector(static "removeItemWithTitle:") = Void, NSString;
overload selector(static "removeLastObject") = Void;
overload selector(static "removeLayoutManager:") = Void, NSLayoutManager;
overload selector(static "removeMarker:") = Void, NSRulerMarker;
overload selector(static "removeMonitor:") = Void, Id;
overload selector(static "removeNamespaceForPrefix:") = Void, NSString;
overload selector(static "removeObject:") = Void, Id;
overload selector(static "removeObject:inRange:") = Void, Id, NSRange;
overload selector(static "removeObjectAtArrangedObjectIndex:") = Void, UInt;
overload selector(static "removeObjectAtArrangedObjectIndexPath:") = Void, NSIndexPath;
overload selector(static "removeObjectAtIndex:") = Void, UInt;
overload selector(static "removeObjectForKey:") = Void, Id;
overload selector(static "removeObjectIdenticalTo:") = Void, Id;
overload selector(static "removeObjectIdenticalTo:inRange:") = Void, Id, NSRange;
overload selector(static "removeObjects:") = Void, NSArray;
overload selector(static "removeObjectsAtArrangedObjectIndexPaths:") = Void, NSArray;
overload selector(static "removeObjectsAtArrangedObjectIndexes:") = Void, NSIndexSet;
overload selector(static "removeObjectsAtIndexes:") = Void, NSIndexSet;
overload selector(static "removeObjectsForKeys:") = Void, NSArray;
overload selector(static "removeObjectsFromIndices:numIndices:") = Void, Pointer[UInt], UInt;
overload selector(static "removeObjectsInArray:") = Void, NSArray;
overload selector(static "removeObjectsInRange:") = Void, NSRange;
overload selector(static "removeObserver:") = Void, Id;
overload selector(static "removeObserver:forKeyPath:") = Void, NSObject, NSString;
overload selector(static "removeObserver:fromObjectsAtIndexes:forKeyPath:") = Void, NSObject, NSIndexSet, NSString;
overload selector(static "removeObserver:name:object:") = Void, Id, NSString, Id;
overload selector(static "removeOutput:") = Void, QTCaptureOutput;
overload selector(static "removeParamDescriptorWithKeyword:") = Void, CULong;
overload selector(static "removePersistentDomainForName:") = Void, NSString;
overload selector(static "removePersistentStore:error:") = Bool, NSPersistentStore, Pointer[NSError];
overload selector(static "removePointerAtIndex:") = Void, UInt;
overload selector(static "removePort:forMode:") = Void, NSPort, NSString;
overload selector(static "removePortForName:") = Bool, NSString;
overload selector(static "removeProgressMark:") = Void, Float;
overload selector(static "removePropertyForKey:inRequest:") = Void, NSString, NSMutableURLRequest;
overload selector(static "removeRepresentation:") = Void, NSImageRep;
overload selector(static "removeRequestMode:") = Void, NSString;
overload selector(static "removeRow:") = Void, Int;
overload selector(static "removeRowAtIndex:") = Void, Int;
overload selector(static "removeRowsAtIndexes:includeSubrows:") = Void, NSIndexSet, Bool;
overload selector(static "removeRunLoop:") = Void, NSRunLoop;
overload selector(static "removeSavedColumnsWithAutosaveName:") = Void, NSString;
overload selector(static "removeSelectedObjects:") = Bool, NSArray;
overload selector(static "removeSelectionIndexPaths:") = Bool, NSArray;
overload selector(static "removeSelectionIndexes:") = Bool, NSIndexSet;
overload selector(static "removeStatusItem:") = Void, NSStatusItem;
overload selector(static "removeSuiteNamed:") = Void, NSString;
overload selector(static "removeTabStop:") = Void, NSTextTab;
overload selector(static "removeTabViewItem:") = Void, NSTabViewItem;
overload selector(static "removeTableColumn:") = Void, NSTableColumn;
overload selector(static "removeTemporaryAttribute:forCharacterRange:") = Void, NSString, NSRange;
overload selector(static "removeTextContainerAtIndex:") = Void, UInt;
overload selector(static "removeToolTip:") = Void, Int;
overload selector(static "removeTrack:") = Void, QTTrack;
overload selector(static "removeTrackingArea:") = Void, NSTrackingArea;
overload selector(static "removeTrackingRect:") = Void, Int;
overload selector(static "removeValueAtIndex:fromPropertyWithKey:") = Void, UInt, NSString;
overload selector(static "removeVolatileDomainForName:") = Void, NSString;
overload selector(static "removeWindowController:") = Void, NSWindowController;
overload selector(static "removeWindowsItem:") = Void, NSWindow;
overload selector(static "renamingIdentifier") = NSString;
overload selector(static "render") = Void;
overload selector(static "render:toBitmap:rowBytes:bounds:format:colorSpace:") = Void, CIImage, RawPointer, Int, CGRect, Int, CGColorSpaceRef;
overload selector(static "render:toIOSurface:bounds:colorSpace:") = Void, CIImage, IOSurfaceRef, CGRect, CGColorSpaceRef;
overload selector(static "renderInContext:") = Void, CGContextRef;
overload selector(static "renderMode") = NSString;
overload selector(static "rendererWithCGLContext:options:") = CARenderer, RawPointer, NSDictionary;
overload selector(static "renderingMode") = UInt;
overload selector(static "renewGState") = Void;
overload selector(static "renewRows:columns:") = Void, Int, Int;
overload selector(static "reopenDocumentForURL:withContentsOfURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector(static "repeatCount") = Float;
overload selector(static "repeatDuration") = Double;
overload selector(static "replace:") = Void, Id;
overload selector(static "replaceBytesInRange:withBytes:") = Void, NSRange, RawPointer;
overload selector(static "replaceBytesInRange:withBytes:length:") = Void, NSRange, RawPointer, UInt;
overload selector(static "replaceCharactersInRange:withAttributedString:") = Void, NSRange, NSAttributedString;
overload selector(static "replaceCharactersInRange:withRTF:") = Void, NSRange, NSData;
overload selector(static "replaceCharactersInRange:withRTFD:") = Void, NSRange, NSData;
overload selector(static "replaceCharactersInRange:withString:") = Void, NSRange, NSString;
overload selector(static "replaceChildAtIndex:withNode:") = Void, UInt, NSXMLNode;
overload selector(static "replaceGlyphAtIndex:withGlyph:") = Void, UInt, UInt;
overload selector(static "replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:") = Bool, NSURL, NSURL, NSString, UInt, Pointer[NSURL], Pointer[NSError];
overload selector(static "replaceLayoutManager:") = Void, NSLayoutManager;
overload selector(static "replaceObject:withObject:") = Void, Id, Id;
overload selector(static "replaceObjectAtIndex:withObject:") = Void, UInt, Id;
overload selector(static "replaceObjectsAtIndexes:withObjects:") = Void, NSIndexSet, NSArray;
overload selector(static "replaceObjectsInRange:withObjectsFromArray:") = Void, NSRange, NSArray;
overload selector(static "replaceObjectsInRange:withObjectsFromArray:range:") = Void, NSRange, NSArray, NSRange;
overload selector(static "replaceOccurrencesOfString:withString:options:range:") = UInt, NSString, NSString, UInt, NSRange;
overload selector(static "replacePointerAtIndex:withPointer:") = Void, UInt, RawPointer;
overload selector(static "replaceSelectionWithSelectionFromMovie:") = Void, Id;
overload selector(static "replaceSublayer:with:") = Void, CALayer, CALayer;
overload selector(static "replaceSubview:with:") = Void, NSView, NSView;
overload selector(static "replaceTextContainer:") = Void, NSTextContainer;
overload selector(static "replaceTextStorage:") = Void, NSTextStorage;
overload selector(static "replaceValueAtIndex:inPropertyWithKey:withValue:") = Void, UInt, NSString, Id;
overload selector(static "replacementCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector(static "replacementClassForClass:") = Id, Id;
overload selector(static "replacementObjectForArchiver:") = Id, NSArchiver;
overload selector(static "replacementObjectForCoder:") = Id, NSCoder;
overload selector(static "replacementObjectForKeyedArchiver:") = Id, NSKeyedArchiver;
overload selector(static "replacementObjectForPortCoder:") = Id, NSPortCoder;
overload selector(static "replacementString") = NSString;
overload selector(static "replyAppleEventForSuspensionID:") = NSAppleEventDescriptor, NSAppleEventManagerSuspensionID;
overload selector(static "replyTimeout") = Double;
overload selector(static "replyToApplicationShouldTerminate:") = Void, Bool;
overload selector(static "replyToOpenOrPrint:") = Void, UInt;
overload selector(static "replyWithException:") = Void, NSException;
overload selector(static "reportException:") = Void, NSException;
overload selector(static "representationOfImageRepsInArray:usingType:properties:") = NSData, NSArray, UInt, NSDictionary;
overload selector(static "representationUsingType:properties:") = NSData, UInt, NSDictionary;
overload selector(static "representations") = NSArray;
overload selector(static "representedFilename") = NSString;
overload selector(static "representedObject") = Id;
overload selector(static "representedURL") = NSURL;
overload selector(static "request") = NSURLRequest;
overload selector(static "requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:") = Int, NSString, NSRange, UInt64, NSDictionary, Int, UnknownType;
overload selector(static "requestExpression") = NSExpression;
overload selector(static "requestHeaderFieldsWithCookies:") = NSDictionary, NSArray;
overload selector(static "requestIsCacheEquivalent:toRequest:") = Bool, NSURLRequest, NSURLRequest;
overload selector(static "requestModes") = NSArray;
overload selector(static "requestTimeout") = Double;
overload selector(static "requestUserAttention:") = Int, UInt;
overload selector(static "requestWithURL:") = Id, NSURL;
overload selector(static "requestWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, UInt, Double;
overload selector(static "requiredFileType") = NSString;
overload selector(static "requiredThickness") = Float;
overload selector(static "reservedSpaceLength") = UInt;
overload selector(static "reservedThicknessForAccessoryView") = Float;
overload selector(static "reservedThicknessForMarkers") = Float;
overload selector(static "reset") = Void;
overload selector(static "resetBytesInRange:") = Void, NSRange;
overload selector(static "resetCancelButtonCell") = Void;
overload selector(static "resetCursorRect:inView:") = Void, NSRect, NSView;
overload selector(static "resetCursorRects") = Void;
overload selector(static "resetSearchButtonCell") = Void;
overload selector(static "resetStandardUserDefaults") = Void;
overload selector(static "resetSystemTimeZone") = Void;
overload selector(static "reshape") = Void;
overload selector(static "resignFirstResponder") = Bool;
overload selector(static "resignKeyWindow") = Void;
overload selector(static "resignMainWindow") = Void;
overload selector(static "resizeDownCursor") = NSCursor;
overload selector(static "resizeFlags") = Int;
overload selector(static "resizeIncrements") = NSSize;
overload selector(static "resizeLeftCursor") = NSCursor;
overload selector(static "resizeLeftRightCursor") = NSCursor;
overload selector(static "resizeRightCursor") = NSCursor;
overload selector(static "resizeSublayersWithOldSize:") = Void, CGSize;
overload selector(static "resizeSubviewsWithOldSize:") = Void, NSSize;
overload selector(static "resizeUpCursor") = NSCursor;
overload selector(static "resizeUpDownCursor") = NSCursor;
overload selector(static "resizeWithMagnification:") = Void, Float;
overload selector(static "resizeWithOldSuperlayerSize:") = Void, CGSize;
overload selector(static "resizeWithOldSuperviewSize:") = Void, NSSize;
overload selector(static "resizedColumn") = Int;
overload selector(static "resizingMask") = UInt;
overload selector(static "resolve") = Void;
overload selector(static "resolveClassMethod:") = Bool, SelectorHandle;
overload selector(static "resolveInstanceMethod:") = Bool, SelectorHandle;
overload selector(static "resolveNamespaceForName:") = NSXMLNode, NSString;
overload selector(static "resolvePrefixForNamespaceURI:") = NSString, NSString;
overload selector(static "resolveWithTimeout:") = Void, Double;
overload selector(static "resolvedKeyDictionary") = NSDictionary;
overload selector(static "resolvesAliases") = Bool;
overload selector(static "resourceData") = NSData;
overload selector(static "resourceDataUsingCache:") = NSData, Bool;
overload selector(static "resourcePath") = NSString;
overload selector(static "resourceSpecifier") = NSString;
overload selector(static "resourceURL") = NSURL;
overload selector(static "resourceValuesForKeys:error:") = NSDictionary, NSArray, Pointer[NSError];
overload selector(static "resourceValuesForKeys:fromBookmarkData:") = NSDictionary, NSArray, NSData;
overload selector(static "respondsToSelector:") = Bool, SelectorHandle;
overload selector(static "response") = NSURLResponse;
overload selector(static "restoreCachedImage") = Void;
overload selector(static "restoreGraphicsState") = Void;
overload selector(static "result") = Id;
overload selector(static "resultAtIndex:") = Id, UInt;
overload selector(static "resultCount") = UInt;
overload selector(static "resultType") = UInt64;
overload selector(static "results") = NSArray;
overload selector(static "resume") = Bool;
overload selector(static "resumeData") = NSData;
overload selector(static "resumeExecutionWithResult:") = Void, Id;
overload selector(static "resumeRecording") = Void;
overload selector(static "resumeWithSuspensionID:") = Void, NSAppleEventManagerSuspensionID;
overload selector(static "retain") = Id;
overload selector(static "retainArguments") = Void;
overload selector(static "retainCount") = UInt;
overload selector(static "retainsRegisteredObjects") = Bool;
overload selector(static "returnID") = Short;
overload selector(static "returnType") = NSString;
overload selector(static "returnsDistinctResults") = Bool;
overload selector(static "returnsObjectsAsFaults") = Bool;
overload selector(static "reusesColumns") = Bool;
overload selector(static "reverseObjectEnumerator") = NSEnumerator;
overload selector(static "reverseTransformedValue:") = Id, Id;
overload selector(static "reversedSortDescriptor") = Id;
overload selector(static "revert:") = Void, Id;
overload selector(static "revertDocumentToSaved:") = Void, Id;
overload selector(static "revertToContentsOfURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
overload selector(static "revertToInitialValues:") = Void, Id;
overload selector(static "revertToSavedFromFile:ofType:") = Bool, NSString, NSString;
overload selector(static "revertToSavedFromURL:ofType:") = Bool, NSURL, NSString;
overload selector(static "reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:") = Void, NSString, Bool, Id, SelectorHandle, RawPointer;
overload selector(static "richTextSource") = NSAttributedString;
overload selector(static "rightExpression") = NSExpression;
overload selector(static "rightExpressionAttributeType") = UInt;
overload selector(static "rightExpressions") = NSArray;
overload selector(static "rightMargin") = Float;
overload selector(static "rightMouseDown:") = Void, NSEvent;
overload selector(static "rightMouseDragged:") = Void, NSEvent;
overload selector(static "rightMouseUp:") = Void, NSEvent;
overload selector(static "rollback") = Void;
overload selector(static "rootDocument") = NSXMLDocument;
overload selector(static "rootElement") = NSXMLElement;
overload selector(static "rootItemForBrowser:") = Id, NSBrowser;
overload selector(static "rootObject") = Id;
overload selector(static "rootProxy") = NSDistantObject;
overload selector(static "rootProxyForConnectionWithRegisteredName:host:") = NSDistantObject, NSString, NSString;
overload selector(static "rootProxyForConnectionWithRegisteredName:host:usingNameServer:") = NSDistantObject, NSString, NSString, NSPortNameServer;
overload selector(static "rotateByAngle:") = Void, Float;
overload selector(static "rotateByDegrees:") = Void, Float;
overload selector(static "rotateByRadians:") = Void, Float;
overload selector(static "rotateWithEvent:") = Void, NSEvent;
overload selector(static "rotation") = Float;
overload selector(static "rotationMode") = NSString;
overload selector(static "roundingBehavior") = NSDecimalNumberHandler;
overload selector(static "roundingIncrement") = NSNumber;
overload selector(static "roundingMode") = UInt;
overload selector(static "rowAtPoint:") = Int, NSPoint;
overload selector(static "rowClass") = Id;
overload selector(static "rowForDisplayValue:") = Int, Id;
overload selector(static "rowForItem:") = Int, Id;
overload selector(static "rowHeight") = Float;
overload selector(static "rowSpan") = Int;
overload selector(static "rowTemplates") = NSArray;
overload selector(static "rowTypeForRow:") = UInt, Int;
overload selector(static "rowTypeKeyPath") = NSString;
overload selector(static "rowsInRect:") = NSRange, NSRect;
overload selector(static "ruleEditor:child:forCriterion:withRowType:") = Id, NSRuleEditor, Int, Id, UInt;
overload selector(static "ruleEditor:displayValueForCriterion:inRow:") = Id, NSRuleEditor, Id, Int;
overload selector(static "ruleEditor:numberOfChildrenForCriterion:withRowType:") = Int, NSRuleEditor, Id, UInt;
overload selector(static "ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:") = NSDictionary, NSRuleEditor, Id, Id, Int;
overload selector(static "ruleEditorRowsDidChange:") = Void, NSNotification;
overload selector(static "ruleThickness") = Float;
overload selector(static "ruler") = NSRulerView;
overload selector(static "rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:") = NSView, NSTextView, NSParagraphStyle, NSRulerView, Bool;
overload selector(static "rulerAttributesInRange:") = NSDictionary, NSRange;
overload selector(static "rulerMarkersForTextView:paragraphStyle:ruler:") = NSArray, NSTextView, NSParagraphStyle, NSRulerView;
overload selector(static "rulerView:didAddMarker:") = Void, NSRulerView, NSRulerMarker;
overload selector(static "rulerView:didMoveMarker:") = Void, NSRulerView, NSRulerMarker;
overload selector(static "rulerView:didRemoveMarker:") = Void, NSRulerView, NSRulerMarker;
overload selector(static "rulerView:handleMouseDown:") = Void, NSRulerView, NSEvent;
overload selector(static "rulerView:shouldAddMarker:") = Bool, NSRulerView, NSRulerMarker;
overload selector(static "rulerView:shouldMoveMarker:") = Bool, NSRulerView, NSRulerMarker;
overload selector(static "rulerView:shouldRemoveMarker:") = Bool, NSRulerView, NSRulerMarker;
overload selector(static "rulerView:willAddMarker:atLocation:") = Float, NSRulerView, NSRulerMarker, Float;
overload selector(static "rulerView:willMoveMarker:toLocation:") = Float, NSRulerView, NSRulerMarker, Float;
overload selector(static "rulerView:willSetClientView:") = Void, NSRulerView, NSView;
overload selector(static "rulerViewClass") = Id;
overload selector(static "rulersVisible") = Bool;
overload selector(static "run") = Void;
overload selector(static "runActionForKey:object:arguments:") = Void, NSString, Id, NSDictionary;
overload selector(static "runCustomizationPalette:") = Void, Id;
overload selector(static "runInNewThread") = Void;
overload selector(static "runLoopModes") = NSArray;
overload selector(static "runLoopModesForAnimating") = NSArray;
overload selector(static "runModal") = Int;
overload selector(static "runModalForDirectory:file:") = Int, NSString, NSString;
overload selector(static "runModalForDirectory:file:types:") = Int, NSString, NSString, NSArray;
overload selector(static "runModalForTypes:") = Int, NSArray;
overload selector(static "runModalForWindow:") = Int, NSWindow;
overload selector(static "runModalForWindow:relativeToWindow:") = Int, NSWindow, NSWindow;
overload selector(static "runModalOpenPanel:forTypes:") = Int, NSOpenPanel, NSArray;
overload selector(static "runModalPageLayoutWithPrintInfo:") = Int, NSPrintInfo;
overload selector(static "runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:") = Void, NSPrintInfo, Id, SelectorHandle, RawPointer;
overload selector(static "runModalPrintOperation:delegate:didRunSelector:contextInfo:") = Void, NSPrintOperation, Id, SelectorHandle, RawPointer;
overload selector(static "runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, UInt, Id, SelectorHandle, RawPointer;
overload selector(static "runModalSession:") = Int, NSModalSession;
overload selector(static "runModalWithPrintInfo:") = Int, NSPrintInfo;
overload selector(static "runMode:beforeDate:") = Bool, NSString, NSDate;
overload selector(static "runOperation") = Bool;
overload selector(static "runOperationModalForWindow:delegate:didRunSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
overload selector(static "runPageLayout:") = Void, Id;
overload selector(static "runToolbarCustomizationPalette:") = Void, Id;
overload selector(static "runUntilDate:") = Void, NSDate;
overload selector(static "runningApplicationWithProcessIdentifier:") = NSRunningApplication, Int;
overload selector(static "runningApplications") = NSArray;
overload selector(static "runningApplicationsWithBundleIdentifier:") = NSArray, NSString;
overload selector(static "sRGBColorSpace") = NSColorSpace;
overload selector(static "sampleBufferAttributes") = NSDictionary;
overload selector(static "sampleUseCount") = UInt;
overload selector(static "samplerWithImage:") = CISampler, CIImage;
overload varargSelector(static "samplerWithImage:keysAndValues:") = CISampler, CIImage, Id;
overload selector(static "samplerWithImage:options:") = CISampler, CIImage, NSDictionary;
overload selector(static "samplesPerPixel") = Int;
overload selector(static "saturationComponent") = Float;
overload selector(static "save:") = Bool, Id;
overload selector(static "saveAllDocuments:") = Void, Id;
overload selector(static "saveDocument:") = Void, Id;
overload selector(static "saveDocumentAs:") = Void, Id;
overload selector(static "saveDocumentTo:") = Void, Id;
overload selector(static "saveDocumentWithDelegate:didSaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector(static "saveFrameUsingName:") = Void, NSString;
overload selector(static "saveGraphicsState") = Void;
overload selector(static "saveOptions") = UInt;
overload selector(static "savePanel") = NSSavePanel;
overload selector(static "saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSString, UInt, Id, SelectorHandle, RawPointer;
overload selector(static "saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSURL, NSString, UInt, Id, SelectorHandle, RawPointer;
overload selector(static "saveToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, UInt, Pointer[NSError];
overload selector(static "scale") = Short;
overload selector(static "scaleBy:") = Void, Float;
overload selector(static "scaleRange") = Float;
overload selector(static "scaleSegment:newDuration:") = Void, QTTimeRange, QTTime;
overload selector(static "scaleSpeed") = Float;
overload selector(static "scaleUnitSquareToSize:") = Void, NSSize;
overload selector(static "scaleXBy:yBy:") = Void, Float, Float;
overload selector(static "scalesWhenResized") = Bool;
overload selector(static "scalingFactor") = Float;
overload selector(static "scanCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
overload selector(static "scanDecimal:") = Bool, Pointer[NSDecimal];
overload selector(static "scanDouble:") = Bool, Pointer[Double];
overload selector(static "scanFloat:") = Bool, Pointer[Float];
overload selector(static "scanHexDouble:") = Bool, Pointer[Double];
overload selector(static "scanHexFloat:") = Bool, Pointer[Float];
overload selector(static "scanHexInt:") = Bool, Pointer[UInt];
overload selector(static "scanHexLongLong:") = Bool, Pointer[UInt64];
overload selector(static "scanInt:") = Bool, Pointer[Int];
overload selector(static "scanInteger:") = Bool, Pointer[Int];
overload selector(static "scanLocation") = UInt;
overload selector(static "scanLongLong:") = Bool, Pointer[Int64];
overload selector(static "scanString:intoString:") = Bool, NSString, Pointer[NSString];
overload selector(static "scanUpToCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
overload selector(static "scanUpToString:intoString:") = Bool, NSString, Pointer[NSString];
overload selector(static "scannerWithString:") = Id, NSString;
overload selector(static "scheduleInRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector(static "scheduledTimerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
overload selector(static "scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
overload selector(static "scheme") = NSString;
overload selector(static "screen") = NSScreen;
overload selector(static "screenFont") = NSFont;
overload selector(static "screenFontWithRenderingMode:") = NSFont, UInt;
overload selector(static "screens") = NSArray;
overload selector(static "scriptErrorExpectedTypeDescriptor") = NSAppleEventDescriptor;
overload selector(static "scriptErrorNumber") = Int;
overload selector(static "scriptErrorOffendingObjectDescriptor") = NSAppleEventDescriptor;
overload selector(static "scriptErrorString") = NSString;
overload selector(static "scriptingBeginsWith:") = Bool, Id;
overload selector(static "scriptingContains:") = Bool, Id;
overload selector(static "scriptingEndsWith:") = Bool, Id;
overload selector(static "scriptingIsEqualTo:") = Bool, Id;
overload selector(static "scriptingIsGreaterThan:") = Bool, Id;
overload selector(static "scriptingIsGreaterThanOrEqualTo:") = Bool, Id;
overload selector(static "scriptingIsLessThan:") = Bool, Id;
overload selector(static "scriptingIsLessThanOrEqualTo:") = Bool, Id;
overload selector(static "scriptingProperties") = NSDictionary;
overload selector(static "scriptingValueForSpecifier:") = Id, NSScriptObjectSpecifier;
overload selector(static "scrollBarColor") = NSColor;
overload selector(static "scrollCellToVisibleAtRow:column:") = Void, Int, Int;
overload selector(static "scrollClipView:toPoint:") = Void, NSClipView, NSPoint;
overload selector(static "scrollColumnToVisible:") = Void, Int;
overload selector(static "scrollColumnsLeftBy:") = Void, Int;
overload selector(static "scrollColumnsRightBy:") = Void, Int;
overload selector(static "scrollItemAtIndexToTop:") = Void, Int;
overload selector(static "scrollItemAtIndexToVisible:") = Void, Int;
overload selector(static "scrollLineDown:") = Void, Id;
overload selector(static "scrollLineUp:") = Void, Id;
overload selector(static "scrollMode") = NSString;
overload selector(static "scrollPageDown:") = Void, Id;
overload selector(static "scrollPageUp:") = Void, Id;
overload selector(static "scrollPoint:") = Void, NSPoint;
overload selector(static "scrollRangeToVisible:") = Void, NSRange;
overload selector(static "scrollRect:by:") = Void, NSRect, NSSize;
overload selector(static "scrollRectToVisible:") = Bool, NSRect;
overload selector(static "scrollRowToVisible:") = Void, Int;
overload selector(static "scrollRowToVisible:inColumn:") = Void, Int, Int;
overload selector(static "scrollToBeginningOfDocument:") = Void, Id;
overload selector(static "scrollToEndOfDocument:") = Void, Id;
overload selector(static "scrollToPoint:") = Void, NSPoint;
overload selector(static "scrollToRect:") = Void, CGRect;
overload selector(static "scrollViaScroller:") = Void, NSScroller;
overload selector(static "scrollView") = NSScrollView;
overload selector(static "scrollWheel:") = Void, NSEvent;
overload selector(static "scrollerWidth") = Float;
overload selector(static "scrollerWidthForControlSize:") = Float, UInt;
overload selector(static "scrollsDynamically") = Bool;
overload selector(static "searchButtonCell") = NSButtonCell;
overload selector(static "searchButtonRectForBounds:") = NSRect, NSRect;
overload selector(static "searchForAllDomains") = Void;
overload selector(static "searchForBrowsableDomains") = Void;
overload selector(static "searchForItemsWithSearchString:resultLimit:matchedItemHandler:") = Void, NSString, Int, UnknownType;
overload selector(static "searchForRegistrationDomains") = Void;
overload selector(static "searchForServicesOfType:inDomain:") = Void, NSString, NSString;
overload selector(static "searchMenuTemplate") = NSMenu;
overload selector(static "searchScopes") = NSArray;
overload selector(static "searchString:inUserInterfaceItemString:searchRange:foundRange:") = Bool, NSString, NSString, NSRange, Pointer[NSRange];
overload selector(static "searchTextRectForBounds:") = NSRect, NSRect;
overload selector(static "second") = Int;
overload selector(static "secondOfMinute") = Int;
overload selector(static "secondaryGroupingSize") = UInt;
overload selector(static "secondarySelectedControlColor") = NSColor;
overload selector(static "secondsFromGMT") = Int;
overload selector(static "secondsFromGMTForDate:") = Int, NSDate;
overload selector(static "seed") = UInt;
overload selector(static "seekToEndOfFile") = UInt64;
overload selector(static "seekToFileOffset:") = Void, UInt64;
overload selector(static "segmentCount") = Int;
overload selector(static "segmentStyle") = Int;
overload selector(static "selectAll:") = Void, Id;
overload selector(static "selectCell:") = Void, NSCell;
overload selector(static "selectCellAtRow:column:") = Void, Int, Int;
overload selector(static "selectCellWithTag:") = Bool, Int;
overload selector(static "selectColumn:byExtendingSelection:") = Void, Int, Bool;
overload selector(static "selectColumnIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
overload selector(static "selectFile:inFileViewerRootedAtPath:") = Bool, NSString, NSString;
overload selector(static "selectFirstTabViewItem:") = Void, Id;
overload selector(static "selectInputMode:") = Void, NSString;
overload selector(static "selectItem:") = Void, NSMenuItem;
overload selector(static "selectItemAtIndex:") = Void, Int;
overload selector(static "selectItemWithObjectValue:") = Void, Id;
overload selector(static "selectItemWithTag:") = Bool, Int;
overload selector(static "selectItemWithTitle:") = Void, NSString;
overload selector(static "selectKeyViewFollowingView:") = Void, NSView;
overload selector(static "selectKeyViewPrecedingView:") = Void, NSView;
overload selector(static "selectLastTabViewItem:") = Void, Id;
overload selector(static "selectLine:") = Void, Id;
overload selector(static "selectNext:") = Void, Id;
overload selector(static "selectNextKeyView:") = Void, Id;
overload selector(static "selectNextTabViewItem:") = Void, Id;
overload selector(static "selectNone:") = Void, Id;
overload selector(static "selectParagraph:") = Void, Id;
overload selector(static "selectPrevious:") = Void, Id;
overload selector(static "selectPreviousKeyView:") = Void, Id;
overload selector(static "selectPreviousTabViewItem:") = Void, Id;
overload selector(static "selectRow:byExtendingSelection:") = Void, Int, Bool;
overload selector(static "selectRow:inColumn:") = Void, Int, Int;
overload selector(static "selectRowIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
overload selector(static "selectRowIndexes:inColumn:") = Void, NSIndexSet, Int;
overload selector(static "selectSegmentWithTag:") = Bool, Int;
overload selector(static "selectTabViewItem:") = Void, NSTabViewItem;
overload selector(static "selectTabViewItemAtIndex:") = Void, Int;
overload selector(static "selectTabViewItemWithIdentifier:") = Void, Id;
overload selector(static "selectText:") = Void, Id;
overload selector(static "selectTextAtIndex:") = Void, Int;
overload selector(static "selectTextAtRow:column:") = Id, Int, Int;
overload selector(static "selectToMark:") = Void, Id;
overload selector(static "selectWithFrame:inView:editor:delegate:start:length:") = Void, NSRect, NSView, NSText, Id, Int, Int;
overload selector(static "selectWord:") = Void, Id;
overload selector(static "selectedCell") = Id;
overload selector(static "selectedCellInColumn:") = Id, Int;
overload selector(static "selectedCells") = NSArray;
overload selector(static "selectedColumn") = Int;
overload selector(static "selectedColumnEnumerator") = NSEnumerator;
overload selector(static "selectedColumnIndexes") = NSIndexSet;
overload selector(static "selectedControlColor") = NSColor;
overload selector(static "selectedControlTextColor") = NSColor;
overload selector(static "selectedFont") = NSFont;
overload selector(static "selectedItem") = NSMenuItem;
overload selector(static "selectedItemIdentifier") = NSString;
overload selector(static "selectedKeyboardInputSource") = NSString;
overload selector(static "selectedKnobColor") = NSColor;
overload selector(static "selectedMenuItemColor") = NSColor;
overload selector(static "selectedMenuItemTextColor") = NSColor;
overload selector(static "selectedNodes") = NSArray;
overload selector(static "selectedObjects") = NSArray;
overload selector(static "selectedRange") = NSRange;
overload selector(static "selectedRanges") = NSArray;
overload selector(static "selectedRow") = Int;
overload selector(static "selectedRowEnumerator") = NSEnumerator;
overload selector(static "selectedRowInColumn:") = Int, Int;
overload selector(static "selectedRowIndexes") = NSIndexSet;
overload selector(static "selectedRowIndexesInColumn:") = NSIndexSet, Int;
overload selector(static "selectedSegment") = Int;
overload selector(static "selectedTabViewItem") = NSTabViewItem;
overload selector(static "selectedTag") = Int;
overload selector(static "selectedTextAttributes") = NSDictionary;
overload selector(static "selectedTextBackgroundColor") = NSColor;
overload selector(static "selectedTextColor") = NSColor;
overload selector(static "selection") = Id;
overload selector(static "selectionAffinity") = UInt;
overload selector(static "selectionDuration") = QTTime;
overload selector(static "selectionEnd") = QTTime;
overload selector(static "selectionGranularity") = UInt;
overload selector(static "selectionHighlightStyle") = Int;
overload selector(static "selectionIndex") = UInt;
overload selector(static "selectionIndexPath") = NSIndexPath;
overload selector(static "selectionIndexPaths") = NSArray;
overload selector(static "selectionIndexes") = NSIndexSet;
overload selector(static "selectionRangeForProposedRange:granularity:") = NSRange, NSRange, UInt;
overload selector(static "selectionShouldChangeInOutlineView:") = Bool, NSOutlineView;
overload selector(static "selectionShouldChangeInTableView:") = Bool, NSTableView;
overload selector(static "selectionStart") = QTTime;
overload selector(static "selector") = SelectorHandle;
overload selector(static "selectorForCommand:") = SelectorHandle, NSScriptCommandDescription;
overload selector(static "selectsInsertedObjects") = Bool;
overload selector(static "self") = Id;
overload selector(static "sendAction") = Bool;
overload selector(static "sendAction:to:") = Bool, SelectorHandle, Id;
overload selector(static "sendAction:to:forAllCells:") = Void, SelectorHandle, Id, Bool;
overload selector(static "sendAction:to:from:") = Bool, SelectorHandle, Id, Id;
overload selector(static "sendActionOn:") = Int, Int;
overload selector(static "sendBeforeDate:") = Bool, NSDate;
overload selector(static "sendBeforeDate:components:from:reserved:") = Bool, NSDate, NSMutableArray, NSPort, UInt;
overload selector(static "sendBeforeDate:msgid:components:from:reserved:") = Bool, NSDate, UInt, NSMutableArray, NSPort, UInt;
overload selector(static "sendDoubleAction") = Void;
overload selector(static "sendEvent:") = Void, NSEvent;
overload selector(static "sendPort") = NSPort;
overload selector(static "sendSynchronousRequest:returningResponse:error:") = NSData, NSURLRequest, Pointer[NSURLResponse], Pointer[NSError];
overload selector(static "sender") = Id;
overload selector(static "sendsActionOnArrowKeys") = Bool;
overload selector(static "sendsActionOnEndEditing") = Bool;
overload selector(static "sendsSearchStringImmediately") = Bool;
overload selector(static "sendsWholeSearchString") = Bool;
overload selector(static "separatesColumns") = Bool;
overload selector(static "separatorItem") = NSMenuItem;
overload selector(static "serializedRepresentation") = NSData;
overload selector(static "server") = NSInputServer;
overload selector(static "serverTrust") = SecTrustRef;
overload selector(static "serviceConnectionWithName:rootObject:") = Id, NSString, Id;
overload selector(static "serviceConnectionWithName:rootObject:usingNameServer:") = Id, NSString, Id, NSPortNameServer;
overload selector(static "servicePortWithName:") = NSPort, NSString;
overload selector(static "servicesMenu") = NSMenu;
overload selector(static "servicesProvider") = Id;
overload selector(static "session") = QTCaptureSession;
overload selector(static "set") = Id;
overload selector(static "setAMSymbol:") = Void, NSString;
overload selector(static "setAbbreviationDictionary:") = Void, NSDictionary;
overload selector(static "setAbstract:") = Void, Bool;
overload selector(static "setAcceptsArrowKeys:") = Void, Bool;
overload selector(static "setAcceptsGlyphInfo:") = Void, Bool;
overload selector(static "setAcceptsMouseMovedEvents:") = Void, Bool;
overload selector(static "setAcceptsTouchEvents:") = Void, Bool;
overload selector(static "setAccessibilityDescription:") = Void, NSString;
overload selector(static "setAccessoryView:") = Void, NSView;
overload selector(static "setAcquireFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[UInt]],CChar],[RawPointer]];
overload selector(static "setAction:") = Void, SelectorHandle;
overload selector(static "setActionName:") = Void, NSString;
overload selector(static "setActions:") = Void, NSDictionary;
overload selector(static "setActivationPolicy:") = Bool, Int;
overload selector(static "setAdditive:") = Void, Bool;
overload selector(static "setAffectedStores:") = Void, NSArray;
overload selector(static "setAffineTransform:") = Void, CGAffineTransform;
overload selector(static "setAlertStyle:") = Void, UInt;
overload selector(static "setAlignment:") = Void, UInt;
overload selector(static "setAlignment:range:") = Void, UInt, NSRange;
overload selector(static "setAlignmentMode:") = Void, NSString;
overload selector(static "setAlignmentRect:") = Void, NSRect;
overload selector(static "setAllHTTPHeaderFields:") = Void, NSDictionary;
overload selector(static "setAllowedFileTypes:") = Void, NSArray;
overload selector(static "setAllowedInputSourceLocales:") = Void, NSArray;
overload selector(static "setAllowedTypes:") = Void, NSArray;
overload selector(static "setAllowsBranchSelection:") = Void, Bool;
overload selector(static "setAllowsColumnReordering:") = Void, Bool;
overload selector(static "setAllowsColumnResizing:") = Void, Bool;
overload selector(static "setAllowsColumnSelection:") = Void, Bool;
overload selector(static "setAllowsConcurrentViewDrawing:") = Void, Bool;
overload selector(static "setAllowsContextMenuPlugIns:") = Void, Bool;
overload selector(static "setAllowsCutCopyPaste:") = Void, Bool;
overload selector(static "setAllowsDocumentBackgroundColorChange:") = Void, Bool;
overload selector(static "setAllowsEditingTextAttributes:") = Void, Bool;
overload selector(static "setAllowsEmptySelection:") = Void, Bool;
overload selector(static "setAllowsFloats:") = Void, Bool;
overload selector(static "setAllowsImageEditing:") = Void, Bool;
overload selector(static "setAllowsMixedState:") = Void, Bool;
overload selector(static "setAllowsMultipleSelection:") = Void, Bool;
overload selector(static "setAllowsNonContiguousLayout:") = Void, Bool;
overload selector(static "setAllowsOtherFileTypes:") = Void, Bool;
overload selector(static "setAllowsTickMarkValuesOnly:") = Void, Bool;
overload selector(static "setAllowsToolTipsWhenApplicationIsInactive:") = Void, Bool;
overload selector(static "setAllowsTruncatedLabels:") = Void, Bool;
overload selector(static "setAllowsTypeSelect:") = Void, Bool;
overload selector(static "setAllowsUndo:") = Void, Bool;
overload selector(static "setAllowsUserCustomization:") = Void, Bool;
overload selector(static "setAlpha:") = Void, Bool;
overload selector(static "setAlphaRange:") = Void, Float;
overload selector(static "setAlphaSpeed:") = Void, Float;
overload selector(static "setAlphaValue:") = Void, Float;
overload selector(static "setAltIncrementValue:") = Void, Double;
overload selector(static "setAlternate:") = Void, Bool;
overload selector(static "setAlternateImage:") = Void, NSImage;
overload selector(static "setAlternateMnemonicLocation:") = Void, UInt;
overload selector(static "setAlternateTitle:") = Void, NSString;
overload selector(static "setAlternateTitleWithMnemonic:") = Void, NSString;
overload selector(static "setAltersStateOfSelectedItem:") = Void, Bool;
overload selector(static "setAlwaysShowsDecimalSeparator:") = Void, Bool;
overload selector(static "setAlwaysUsesMultipleValuesMarker:") = Void, Bool;
overload selector(static "setAnchorPoint:") = Void, CGPoint;
overload selector(static "setAnchorPointZ:") = Void, Float;
overload selector(static "setAnimates:") = Void, Bool;
overload selector(static "setAnimationBlockingMode:") = Void, UInt;
overload selector(static "setAnimationCurve:") = Void, UInt;
overload selector(static "setAnimationDelay:") = Void, Double;
overload selector(static "setAnimationDuration:") = Void, Double;
overload selector(static "setAnimationTimingFunction:") = Void, CAMediaTimingFunction;
overload selector(static "setAnimations:") = Void, NSDictionary;
overload selector(static "setApertureModeDimensions:forMode:") = Void, NSSize, NSString;
overload selector(static "setApplicationIconImage:") = Void, NSImage;
overload selector(static "setAppliesImmediately:") = Void, Bool;
overload selector(static "setArgument:atIndex:") = Void, RawPointer, Int;
overload selector(static "setArguments:") = Void, NSArray;
overload selector(static "setArray:") = Void, NSArray;
overload selector(static "setArrowPosition:") = Void, UInt;
overload selector(static "setArrowsPosition:") = Void, UInt;
overload selector(static "setAspectRatio:") = Void, NSSize;
overload selector(static "setAssociatedPoints:atIndex:") = Void, NSPointArray, Int;
overload selector(static "setAsynchronous:") = Void, Bool;
overload selector(static "setAttachment:") = Void, NSTextAttachment;
overload selector(static "setAttachmentCell:") = Void, Id;
overload selector(static "setAttachmentSize:forGlyphRange:") = Void, NSSize, NSRange;
overload selector(static "setAttribute:forKey:") = Void, Id, NSString;
overload selector(static "setAttributeDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, CULong;
overload selector(static "setAttributeMappings:") = Void, NSArray;
overload selector(static "setAttributeRuns:") = Void, NSArray;
overload selector(static "setAttributeType:") = Void, UInt;
overload selector(static "setAttributeValueClassName:") = Void, NSString;
overload selector(static "setAttributedAlternateTitle:") = Void, NSAttributedString;
overload selector(static "setAttributedString:") = Void, NSAttributedString;
overload selector(static "setAttributedStringForNil:") = Void, NSAttributedString;
overload selector(static "setAttributedStringForNotANumber:") = Void, NSAttributedString;
overload selector(static "setAttributedStringForZero:") = Void, NSAttributedString;
overload selector(static "setAttributedStringValue:") = Void, NSAttributedString;
overload selector(static "setAttributedTitle:") = Void, NSAttributedString;
overload selector(static "setAttributes:") = Void, NSArray;
overload selector(static "setAttributes:forExportedKey:") = Void, NSDictionary, NSString;
overload selector(static "setAttributes:ofItemAtPath:error:") = Bool, NSDictionary, NSString, Pointer[NSError];
overload selector(static "setAttributes:range:") = Void, NSDictionary, NSRange;
overload selector(static "setAttributesAsDictionary:") = Void, NSDictionary;
overload selector(static "setAutodisplay:") = Void, Bool;
overload selector(static "setAutoenablesItems:") = Void, Bool;
overload selector(static "setAutohidesScroller:") = Void, Bool;
overload selector(static "setAutohidesScrollers:") = Void, Bool;
overload selector(static "setAutomaticDashSubstitutionEnabled:") = Void, Bool;
overload selector(static "setAutomaticDataDetectionEnabled:") = Void, Bool;
overload selector(static "setAutomaticLinkDetectionEnabled:") = Void, Bool;
overload selector(static "setAutomaticQuoteSubstitutionEnabled:") = Void, Bool;
overload selector(static "setAutomaticSpellingCorrectionEnabled:") = Void, Bool;
overload selector(static "setAutomaticTextReplacementEnabled:") = Void, Bool;
overload selector(static "setAutomaticallyDropsLateVideoFrames:") = Void, Bool;
overload selector(static "setAutomaticallyIdentifiesLanguages:") = Void, Bool;
overload selector(static "setAutomaticallyPreparesContent:") = Void, Bool;
overload selector(static "setAutomaticallyRearrangesObjects:") = Void, Bool;
overload selector(static "setAutorecalculatesContentBorderThickness:forEdge:") = Void, Bool, NSRectEdge;
overload selector(static "setAutorecalculatesKeyViewLoop:") = Void, Bool;
overload selector(static "setAutorepeat:") = Void, Bool;
overload selector(static "setAutoresizesAllColumnsToFit:") = Void, Bool;
overload selector(static "setAutoresizesOutlineColumn:") = Void, Bool;
overload selector(static "setAutoresizesSubviews:") = Void, Bool;
overload selector(static "setAutoresizingMask:") = Void, UInt;
overload selector(static "setAutoreverses:") = Void, Bool;
overload selector(static "setAutosaveExpandedItems:") = Void, Bool;
overload selector(static "setAutosaveName:") = Void, NSString;
overload selector(static "setAutosaveTableColumns:") = Void, Bool;
overload selector(static "setAutosavedContentsFileURL:") = Void, NSURL;
overload selector(static "setAutosavesConfiguration:") = Void, Bool;
overload selector(static "setAutosavingDelay:") = Void, Double;
overload selector(static "setAutoscroll:") = Void, Bool;
overload selector(static "setAutosizesCells:") = Void, Bool;
overload selector(static "setAutovalidates:") = Void, Bool;
overload selector(static "setAvoidsEmptySelection:") = Void, Bool;
overload selector(static "setBackButtonVisible:") = Void, Bool;
overload selector(static "setBackgroundColor:") = Void, NSColor;
overload selector(static "setBackgroundColors:") = Void, NSArray;
overload selector(static "setBackgroundFilters:") = Void, NSArray;
overload selector(static "setBackgroundLayoutEnabled:") = Void, Bool;
overload selector(static "setBackgroundStyle:") = Void, Int;
overload selector(static "setBackingType:") = Void, UInt;
overload selector(static "setBadgeLabel:") = Void, NSString;
overload selector(static "setBaseSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector(static "setBaseWritingDirection:") = Void, Int;
overload selector(static "setBaseWritingDirection:range:") = Void, Int, NSRange;
overload selector(static "setBecomesKeyOnlyIfNeeded:") = Void, Bool;
overload selector(static "setBeginTime:") = Void, Double;
overload selector(static "setBezelStyle:") = Void, UInt;
overload selector(static "setBezeled:") = Void, Bool;
overload selector(static "setBidiLevels:forGlyphRange:") = Void, Pointer[CUChar], NSRange;
overload selector(static "setBidiProcessingEnabled:") = Void, Bool;
overload selector(static "setBirthRate:") = Void, Float;
overload selector(static "setBitsPerSample:") = Void, Int;
overload selector(static "setBlocksOtherRecognizers:") = Void, Bool;
overload selector(static "setBlueRange:") = Void, Float;
overload selector(static "setBlueSpeed:") = Void, Float;
overload selector(static "setBool:forKey:") = Void, Bool, NSString;
overload selector(static "setBorderColor:") = Void, NSColor;
overload selector(static "setBorderColor:forEdge:") = Void, NSColor, NSRectEdge;
overload selector(static "setBorderType:") = Void, UInt;
overload selector(static "setBorderWidth:") = Void, Float;
overload selector(static "setBordered:") = Void, Bool;
overload selector(static "setBottomMargin:") = Void, Float;
overload selector(static "setBounds:") = Void, NSRect;
overload selector(static "setBoundsOrigin:") = Void, NSPoint;
overload selector(static "setBoundsRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
overload selector(static "setBoundsRotation:") = Void, Float;
overload selector(static "setBoundsSize:") = Void, NSSize;
overload selector(static "setBoxType:") = Void, UInt;
overload selector(static "setButtonBordered:") = Void, Bool;
overload selector(static "setButtonType:") = Void, UInt;
overload selector(static "setByAddingObject:") = NSSet, Id;
overload selector(static "setByAddingObjectsFromArray:") = NSSet, NSArray;
overload selector(static "setByAddingObjectsFromSet:") = NSSet, NSSet;
overload selector(static "setByValue:") = Void, Id;
overload selector(static "setCacheDepthMatchesImageDepth:") = Void, Bool;
overload selector(static "setCacheMode:") = Void, UInt;
overload selector(static "setCachePolicy:") = Void, UInt;
overload selector(static "setCachedSeparately:") = Void, Bool;
overload selector(static "setCachesBezierPath:") = Void, Bool;
overload selector(static "setCalculationMode:") = Void, NSString;
overload selector(static "setCalendar:") = Void, NSCalendar;
overload selector(static "setCalendarFormat:") = Void, NSString;
overload selector(static "setCanBeVisibleOnAllSpaces:") = Void, Bool;
overload selector(static "setCanBecomeVisibleWithoutLogin:") = Void, Bool;
overload selector(static "setCanChooseDirectories:") = Void, Bool;
overload selector(static "setCanChooseFiles:") = Void, Bool;
overload selector(static "setCanCreateDirectories:") = Void, Bool;
overload selector(static "setCanDrawConcurrently:") = Void, Bool;
overload selector(static "setCanHide:") = Void, Bool;
overload selector(static "setCanRemoveAllRows:") = Void, Bool;
overload selector(static "setCanSelectHiddenExtension:") = Void, Bool;
overload selector(static "setCanSpawnSeparateThread:") = Void, Bool;
overload selector(static "setCancelButtonCell:") = Void, NSButtonCell;
overload selector(static "setCaptureSession:") = Void, QTCaptureSession;
overload selector(static "setCaseSensitive:") = Void, Bool;
overload selector(static "setCell:") = Void, NSCell;
overload selector(static "setCellAttribute:to:") = Void, UInt, Int;
overload selector(static "setCellBackgroundColor:") = Void, NSColor;
overload selector(static "setCellClass:") = Void, Id;
overload selector(static "setCellPrototype:") = Void, NSCell;
overload selector(static "setCellSize:") = Void, NSSize;
overload selector(static "setChannelMapping:") = Void, NSArray;
overload selector(static "setCharacterEncoding:") = Void, NSString;
overload selector(static "setCharacterIndex:forGlyphAtIndex:") = Void, UInt, UInt;
overload selector(static "setCharacters:") = Void, NSArray;
overload selector(static "setCharactersToBeSkipped:") = Void, NSCharacterSet;
overload selector(static "setChildSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector(static "setChildren:") = Void, NSArray;
overload selector(static "setChildrenKeyPath:") = Void, NSString;
overload selector(static "setClass:forClassName:") = Void, Id, NSString;
overload selector(static "setClassAttributes:") = Void, NSDictionary;
overload selector(static "setClassName:forClass:") = Void, NSString, Id;
overload selector(static "setClearsFilterPredicateOnInsertion:") = Void, Bool;
overload selector(static "setClientView:") = Void, NSView;
overload selector(static "setClip") = Void;
overload selector(static "setCollapsesBorders:") = Void, Bool;
overload selector(static "setCollectionBehavior:") = Void, UInt;
overload selector(static "setColor:") = Void, NSColor;
overload selector(static "setColor:atX:y:") = Void, NSColor, Int, Int;
overload selector(static "setColor:forKey:") = Void, NSColor, NSString;
overload selector(static "setColorRenderingIntent:") = Void, Int;
overload selector(static "setColorSpace:") = Void, NSColorSpace;
overload selector(static "setColorSpaceName:") = Void, NSString;
overload selector(static "setColors:") = Void, NSArray;
overload selector(static "setColumnAutoresizingStyle:") = Void, UInt;
overload selector(static "setColumnResizingType:") = Void, UInt;
overload selector(static "setColumnsAutosaveName:") = Void, NSString;
overload selector(static "setCommands:") = Void, NSArray;
overload selector(static "setCompletes:") = Void, Bool;
overload selector(static "setCompletionBlock:") = Void, UnknownType;
overload selector(static "setCompletionDelay:") = Void, Double;
overload selector(static "setCompositingFilter:") = Void, CIFilter;
overload selector(static "setCompositingOperation:") = Void, UInt;
overload selector(static "setCompression:factor:") = Void, UInt, Float;
overload selector(static "setCompressionOptions:forConnection:") = Void, QTCompressionOptions, QTCaptureConnection;
overload selector(static "setConfigurationFromDictionary:") = Void, NSDictionary;
overload selector(static "setConnectionAttributes:") = Void, NSDictionary;
overload selector(static "setConstrainedFrameSize:") = Void, NSSize;
overload selector(static "setConstraints:") = Void, NSArray;
overload selector(static "setContainerClassDescription:") = Void, NSScriptClassDescription;
overload selector(static "setContainerIsObjectBeingTested:") = Void, Bool;
overload selector(static "setContainerIsRangeContainerObject:") = Void, Bool;
overload selector(static "setContainerSize:") = Void, NSSize;
overload selector(static "setContainerSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector(static "setContent:") = Void, Id;
overload selector(static "setContentAspectRatio:") = Void, NSSize;
overload selector(static "setContentBorderThickness:forEdge:") = Void, Float, NSRectEdge;
overload selector(static "setContentFilters:") = Void, NSArray;
overload selector(static "setContentMaxSize:") = Void, NSSize;
overload selector(static "setContentMinSize:") = Void, NSSize;
overload selector(static "setContentResizeIncrements:") = Void, NSSize;
overload selector(static "setContentSize:") = Void, NSSize;
overload selector(static "setContentView:") = Void, NSView;
overload selector(static "setContentViewMargins:") = Void, NSSize;
overload selector(static "setContentWidth:type:") = Void, Float, UInt;
overload selector(static "setContents:") = Void, Id;
overload selector(static "setContentsCenter:") = Void, CGRect;
overload selector(static "setContentsGravity:") = Void, NSString;
overload selector(static "setContentsRect:") = Void, CGRect;
overload selector(static "setContextHelp:forObject:") = Void, NSAttributedString, Id;
overload selector(static "setContextHelpModeActive:") = Void, Bool;
overload selector(static "setContextMenuRepresentation:") = Void, Id;
overload selector(static "setContinuous:") = Void, Bool;
overload selector(static "setContinuousSpellCheckingEnabled:") = Void, Bool;
overload selector(static "setControlSize:") = Void, UInt;
overload selector(static "setControlTint:") = Void, UInt;
overload selector(static "setControlView:") = Void, NSView;
overload selector(static "setControllerVisible:") = Void, Bool;
overload selector(static "setCookie:") = Void, NSHTTPCookie;
overload selector(static "setCookieAcceptPolicy:") = Void, UInt;
overload selector(static "setCookies:forURL:mainDocumentURL:") = Void, NSArray, NSURL, NSURL;
overload selector(static "setCopiesOnScroll:") = Void, Bool;
overload selector(static "setCornerRadius:") = Void, Float;
overload selector(static "setCornerView:") = Void, NSView;
overload selector(static "setCount:") = Void, UInt;
overload selector(static "setCountKeyPath:") = Void, NSString;
overload selector(static "setCountLimit:") = Void, UInt;
overload selector(static "setCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector(static "setCriteria:andDisplayValues:forRowAtIndex:") = Void, NSArray, NSArray, Int;
overload selector(static "setCriteriaKeyPath:") = Void, NSString;
overload selector(static "setCriticalValue:") = Void, Double;
overload selector(static "setCumulative:") = Void, Bool;
overload selector(static "setCurrencyCode:") = Void, NSString;
overload selector(static "setCurrencyDecimalSeparator:") = Void, NSString;
overload selector(static "setCurrencyGroupingSeparator:") = Void, NSString;
overload selector(static "setCurrencySymbol:") = Void, NSString;
overload selector(static "setCurrentAppleEventAndReplyEventWithSuspensionID:") = Void, NSAppleEventManagerSuspensionID;
overload selector(static "setCurrentContext:") = Void, NSGraphicsContext;
overload selector(static "setCurrentDirectoryPath:") = Void, NSString;
overload selector(static "setCurrentOperation:") = Void, NSPrintOperation;
overload selector(static "setCurrentPage:") = Void, Int;
overload selector(static "setCurrentProgress:") = Void, Float;
overload selector(static "setCurrentTime:") = Void, Double;
overload selector(static "setCurrentVirtualScreen:") = Void, Int;
overload selector(static "setCustomButtonVisible:") = Void, Bool;
overload selector(static "setDTD:") = Void, NSXMLDTD;
overload selector(static "setDTDKind:") = Void, UInt;
overload selector(static "setData:") = Void, NSData;
overload selector(static "setData:forType:") = Bool, NSData, NSString;
overload selector(static "setDataCell:") = Void, NSCell;
overload selector(static "setDataProvider:forTypes:") = Bool, Id, NSArray;
overload selector(static "setDataRef:") = Void, Handle;
overload selector(static "setDataRefType:") = Void, NSString;
overload selector(static "setDataRetained:") = Void, Bool;
overload selector(static "setDataSource:") = Void, Id;
overload selector(static "setDateFormat:") = Void, NSString;
overload selector(static "setDatePickerElements:") = Void, UInt;
overload selector(static "setDatePickerMode:") = Void, UInt;
overload selector(static "setDatePickerStyle:") = Void, UInt;
overload selector(static "setDateStyle:") = Void, UInt;
overload selector(static "setDateValue:") = Void, NSDate;
overload selector(static "setDay:") = Void, Int;
overload selector(static "setDecimalSeparator:") = Void, NSString;
overload selector(static "setDefaultAttachmentScaling:") = Void, UInt;
overload selector(static "setDefaultBehavior:") = Void, Id;
overload selector(static "setDefaultButtonCell:") = Void, NSButtonCell;
overload selector(static "setDefaultButtonTitle:") = Void, NSString;
overload selector(static "setDefaultColumnWidth:") = Void, Float;
overload selector(static "setDefaultCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector(static "setDefaultDate:") = Void, NSDate;
overload selector(static "setDefaultFlatness:") = Void, Float;
overload selector(static "setDefaultFormatterBehavior:") = Void, UInt;
overload selector(static "setDefaultLineCapStyle:") = Void, UInt;
overload selector(static "setDefaultLineJoinStyle:") = Void, UInt;
overload selector(static "setDefaultLineWidth:") = Void, Float;
overload selector(static "setDefaultMiterLimit:") = Void, Float;
overload selector(static "setDefaultNameServerPortNumber:") = Void, UShort;
overload selector(static "setDefaultParagraphStyle:") = Void, NSParagraphStyle;
overload selector(static "setDefaultPlaceholder:forMarker:withBinding:") = Void, Id, Id, NSString;
overload selector(static "setDefaultPrinter:") = Void, NSPrinter;
overload selector(static "setDefaultTabInterval:") = Void, Float;
overload selector(static "setDefaultTimeZone:") = Void, NSTimeZone;
overload selector(static "setDefaultValue:") = Void, Id;
overload selector(static "setDefaultWindingRule:") = Void, UInt;
overload selector(static "setDefaults") = Void;
overload selector(static "setDelegate:") = Void, Id;
overload selector(static "setDeleteRule:") = Void, UInt;
overload selector(static "setDeletesFileUponFailure:") = Void, Bool;
overload selector(static "setDepthLimit:") = Void, Int;
overload selector(static "setDescriptionFunction:") = Void, CCodePointer[[RawPointer],[NSString]];
overload selector(static "setDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, CULong;
overload selector(static "setDesktopImageURL:forScreen:options:error:") = Bool, NSURL, NSScreen, NSDictionary, Pointer[NSError];
overload selector(static "setDestination:allowOverwrite:") = Void, NSString, Bool;
overload selector(static "setDestinationEntity:") = Void, NSEntityDescription;
overload selector(static "setDestinationEntityName:") = Void, NSString;
overload selector(static "setDestinationEntityVersionHash:") = Void, NSData;
overload selector(static "setDeviceAttributes:") = Void, NSDictionary;
overload selector(static "setDictionary:") = Void, NSDictionary;
overload selector(static "setDirectParameter:") = Void, Id;
overload selector(static "setDirectory:") = Void, NSString;
overload selector(static "setDirectoryURL:") = Void, NSURL;
overload selector(static "setDisableActions:") = Void, Bool;
overload selector(static "setDiskCapacity:") = Void, UInt;
overload selector(static "setDisplayMode:") = Void, UInt;
overload selector(static "setDisplayValuesKeyPath:") = Void, NSString;
overload selector(static "setDisplayedCommandsTitle:") = Void, NSString;
overload selector(static "setDisplayedWhenStopped:") = Void, Bool;
overload selector(static "setDisplaysLinkToolTips:") = Void, Bool;
overload selector(static "setDisplaysWhenScreenProfileChanges:") = Void, Bool;
overload selector(static "setDividerStyle:") = Void, Int;
overload selector(static "setDockTile:") = Void, NSDockTile;
overload selector(static "setDocument:") = Void, NSDocument;
overload selector(static "setDocumentContentKind:") = Void, UInt;
overload selector(static "setDocumentCursor:") = Void, NSCursor;
overload selector(static "setDocumentEdited:") = Void, Bool;
overload selector(static "setDocumentView:") = Void, NSView;
overload selector(static "setDoesRelativeDateFormatting:") = Void, Bool;
overload selector(static "setDouble:forKey:") = Void, Double, NSString;
overload selector(static "setDoubleAction:") = Void, SelectorHandle;
overload selector(static "setDoubleSided:") = Void, Bool;
overload selector(static "setDoubleValue:") = Void, Double;
overload selector(static "setDraggingDestinationFeedbackStyle:") = Void, Int;
overload selector(static "setDraggingSourceOperationMask:forLocal:") = Void, UInt, Bool;
overload selector(static "setDrawsBackground:") = Void, Bool;
overload selector(static "setDrawsCellBackground:") = Void, Bool;
overload selector(static "setDrawsGrid:") = Void, Bool;
overload selector(static "setDrawsOutsideLineFragment:forGlyphAtIndex:") = Void, Bool, UInt;
overload selector(static "setDrawsOutsideLineFragment:forGlyphRange:") = Void, Bool, NSRange;
overload selector(static "setDropItem:dropChildIndex:") = Void, Id, Int;
overload selector(static "setDropRow:dropOperation:") = Void, Int, UInt;
overload selector(static "setDuration:") = Void, Double;
overload selector(static "setDynamicDepthLimit:") = Void, Bool;
overload selector(static "setEchosBullets:") = Void, Bool;
overload selector(static "setEdgeAntialiasingMask:") = Void, UInt;
overload selector(static "setEditable:") = Void, Bool;
overload selector(static "setEmissionLatitude:") = Void, Float;
overload selector(static "setEmissionLongitude:") = Void, Float;
overload selector(static "setEmissionRange:") = Void, Float;
overload selector(static "setEmitterCells:") = Void, NSArray;
overload selector(static "setEmitterDepth:") = Void, Float;
overload selector(static "setEmitterMode:") = Void, NSString;
overload selector(static "setEmitterPosition:") = Void, CGPoint;
overload selector(static "setEmitterShape:") = Void, NSString;
overload selector(static "setEmitterSize:") = Void, CGSize;
overload selector(static "setEmitterZPosition:") = Void, Float;
overload selector(static "setEnabled:") = Void, Bool;
overload selector(static "setEnabled:forSegment:") = Void, Bool, Int;
overload selector(static "setEnabledTextCheckingTypes:") = Void, UInt64;
overload selector(static "setEndPoint:") = Void, CGPoint;
overload selector(static "setEndProgress:") = Void, Float;
overload selector(static "setEndSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector(static "setEndSubelementIdentifier:") = Void, UInt;
overload selector(static "setEndSubelementIndex:") = Void, Int;
overload selector(static "setEntities:") = Void, NSArray;
overload selector(static "setEntities:forConfiguration:") = Void, NSArray, NSString;
overload selector(static "setEntity:") = Void, NSEntityDescription;
overload selector(static "setEntityMappings:") = Void, NSArray;
overload selector(static "setEntityMigrationPolicyClassName:") = Void, NSString;
overload selector(static "setEntityName:") = Void, NSString;
overload selector(static "setEntryType:") = Void, Int;
overload selector(static "setEntryWidth:") = Void, Float;
overload selector(static "setEnvironment:") = Void, NSDictionary;
overload selector(static "setEra:") = Void, Int;
overload selector(static "setEraSymbols:") = Void, NSArray;
overload selector(static "setEvaluationErrorNumber:") = Void, Int;
overload selector(static "setEventHandler:andSelector:forEventClass:andEventID:") = Void, Id, SelectorHandle, CULong, CULong;
overload selector(static "setEvictsObjectsWithDiscardedContent:") = Void, Bool;
overload selector(static "setExcludedFromWindowsMenu:") = Void, Bool;
overload selector(static "setExcludedKeys:") = Void, NSArray;
overload selector(static "setExponentSymbol:") = Void, NSString;
overload selector(static "setExpression:") = Void, NSExpression;
overload selector(static "setExpressionResultType:") = Void, UInt;
overload selector(static "setExtensionHidden:") = Void, Bool;
overload selector(static "setExtraLineFragmentRect:usedRect:textContainer:") = Void, NSRect, NSRect, NSTextContainer;
overload selector(static "setFetchBatchSize:") = Void, UInt;
overload selector(static "setFetchLimit:") = Void, UInt;
overload selector(static "setFetchOffset:") = Void, UInt;
overload selector(static "setFetchPredicate:") = Void, NSPredicate;
overload selector(static "setFetchRequest:") = Void, NSFetchRequest;
overload selector(static "setFetchRequestTemplate:forName:") = Void, NSFetchRequest, NSString;
overload selector(static "setFieldEditor:") = Void, Bool;
overload selector(static "setFileAttributes:") = Void, NSDictionary;
overload selector(static "setFileModificationDate:") = Void, NSDate;
overload selector(static "setFileName:") = Void, NSString;
overload selector(static "setFileType:") = Void, NSString;
overload selector(static "setFileURL:") = Void, NSURL;
overload selector(static "setFileWrapper:") = Void, NSFileWrapper;
overload selector(static "setFilename:") = Void, NSString;
overload selector(static "setFill") = Void;
overload selector(static "setFillColor:") = Void, NSColor;
overload selector(static "setFillMode:") = Void, NSString;
overload selector(static "setFillRule:") = Void, NSString;
overload selector(static "setFilter:") = Void, Id;
overload selector(static "setFilterPredicate:") = Void, NSPredicate;
overload selector(static "setFilters:") = Void, NSArray;
overload selector(static "setFireDate:") = Void, NSDate;
overload selector(static "setFirstLineHeadIndent:") = Void, Float;
overload selector(static "setFirstWeekday:") = Void, UInt;
overload selector(static "setFlatness:") = Void, Float;
overload selector(static "setFlipped:") = Void, Bool;
overload selector(static "setFloat:forKey:") = Void, Float, NSString;
overload selector(static "setFloatValue:") = Void, Float;
overload selector(static "setFloatValue:knobProportion:") = Void, Float, Float;
overload selector(static "setFloatingPanel:") = Void, Bool;
overload selector(static "setFloatingPointFormat:left:right:") = Void, Bool, UInt, UInt;
overload selector(static "setFocusRingType:") = Void, UInt;
overload selector(static "setFocusedColumn:") = Void, Int;
overload selector(static "setFont:") = Void, NSFont;
overload selector(static "setFont:range:") = Void, NSFont, NSRange;
overload selector(static "setFontManagerFactory:") = Void, Id;
overload selector(static "setFontMenu:") = Void, NSMenu;
overload selector(static "setFontPanelFactory:") = Void, Id;
overload selector(static "setFontSize:") = Void, Float;
overload selector(static "setForegroundColor:") = Void, NSColor;
overload selector(static "setFormat:") = Void, NSString;
overload selector(static "setFormatWidth:") = Void, UInt;
overload selector(static "setFormatter:") = Void, NSFormatter;
overload selector(static "setFormatterBehavior:") = Void, UInt;
overload selector(static "setFormattingDictionary:") = Void, NSDictionary;
overload selector(static "setFormattingStringsFilename:") = Void, NSString;
overload selector(static "setFrame:") = Void, NSRect;
overload selector(static "setFrame:display:") = Void, NSRect, Bool;
overload selector(static "setFrame:display:animate:") = Void, NSRect, Bool, Bool;
overload selector(static "setFrameAutosaveName:") = Bool, NSString;
overload selector(static "setFrameCenterRotation:") = Void, Float;
overload selector(static "setFrameFromContentFrame:") = Void, NSRect;
overload selector(static "setFrameFromString:") = Void, NSString;
overload selector(static "setFrameOrigin:") = Void, NSPoint;
overload selector(static "setFrameRate:") = Void, Float;
overload selector(static "setFrameRotation:") = Void, Float;
overload selector(static "setFrameSize:") = Void, NSSize;
overload selector(static "setFrameTopLeftPoint:") = Void, NSPoint;
overload selector(static "setFrameUsingName:") = Bool, NSString;
overload selector(static "setFrameUsingName:force:") = Bool, NSString, Bool;
overload selector(static "setFromValue:") = Void, Id;
overload selector(static "setFullScreen") = Void;
overload selector(static "setGeneratesCalendarDates:") = Void, Bool;
overload selector(static "setGeneratesDecimalNumbers:") = Void, Bool;
overload selector(static "setGeometryFlipped:") = Void, Bool;
overload selector(static "setGlyphGenerator:") = Void, NSGlyphGenerator;
overload selector(static "setGradientType:") = Void, UInt;
overload selector(static "setGrammarCheckingEnabled:") = Void, Bool;
overload selector(static "setGraphicsState:") = Void, Int;
overload selector(static "setGreenRange:") = Void, Float;
overload selector(static "setGreenSpeed:") = Void, Float;
overload selector(static "setGregorianStartDate:") = Void, NSDate;
overload selector(static "setGridColor:") = Void, NSColor;
overload selector(static "setGridStyleMask:") = Void, UInt;
overload selector(static "setGroupingAttributes:") = Void, NSArray;
overload selector(static "setGroupingSeparator:") = Void, NSString;
overload selector(static "setGroupingSize:") = Void, UInt;
overload selector(static "setGroupsByEvent:") = Void, Bool;
overload selector(static "setHTTPBody:") = Void, NSData;
overload selector(static "setHTTPBodyStream:") = Void, NSInputStream;
overload selector(static "setHTTPMethod:") = Void, NSString;
overload selector(static "setHTTPShouldHandleCookies:") = Void, Bool;
overload selector(static "setHardInvalidation:forGlyphRange:") = Void, Bool, NSRange;
overload selector(static "setHasHorizontalRuler:") = Void, Bool;
overload selector(static "setHasHorizontalScroller:") = Void, Bool;
overload selector(static "setHasShadow:") = Void, Bool;
overload selector(static "setHasThousandSeparators:") = Void, Bool;
overload selector(static "setHasUndoManager:") = Void, Bool;
overload selector(static "setHasVerticalRuler:") = Void, Bool;
overload selector(static "setHasVerticalScroller:") = Void, Bool;
overload selector(static "setHashFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[UInt]]],[UInt]];
overload selector(static "setHeadIndent:") = Void, Float;
overload selector(static "setHeaderCell:") = Void, NSCell;
overload selector(static "setHeaderLevel:") = Void, Int;
overload selector(static "setHeaderToolTip:") = Void, NSString;
overload selector(static "setHeaderView:") = Void, NSTableHeaderView;
overload selector(static "setHeightTracksTextView:") = Void, Bool;
overload selector(static "setHelpAnchor:") = Void, NSString;
overload selector(static "setHelpMenu:") = Void, NSMenu;
overload selector(static "setHidden:") = Void, Bool;
overload selector(static "setHiddenUntilMouseMoves:") = Void, Bool;
overload selector(static "setHidesEmptyCells:") = Void, Bool;
overload selector(static "setHidesOnDeactivate:") = Void, Bool;
overload selector(static "setHighlightMode:") = Void, Bool;
overload selector(static "setHighlighted:") = Void, Bool;
overload selector(static "setHighlightedItemIndex:") = Void, Int;
overload selector(static "setHighlightedTableColumn:") = Void, NSTableColumn;
overload selector(static "setHighlightsBy:") = Void, Int;
overload selector(static "setHorizontal:") = Void, Bool;
overload selector(static "setHorizontalEdgePadding:") = Void, Float;
overload selector(static "setHorizontalLineScroll:") = Void, Float;
overload selector(static "setHorizontalPageScroll:") = Void, Float;
overload selector(static "setHorizontalPagination:") = Void, UInt;
overload selector(static "setHorizontalRulerView:") = Void, NSRulerView;
overload selector(static "setHorizontalScroller:") = Void, NSScroller;
overload selector(static "setHorizontallyCentered:") = Void, Bool;
overload selector(static "setHorizontallyResizable:") = Void, Bool;
overload selector(static "setHostCacheEnabled:") = Void, Bool;
overload selector(static "setHotSpotButtonVisible:") = Void, Bool;
overload selector(static "setHour:") = Void, Int;
overload selector(static "setHyphenationFactor:") = Void, Float;
overload selector(static "setIcon:") = Void, NSImage;
overload selector(static "setIcon:forFile:options:") = Bool, NSImage, NSString, UInt;
overload selector(static "setIdentifier:") = Void, Id;
overload selector(static "setIdling:") = Void, Bool;
overload selector(static "setIgnoredWords:inSpellDocumentWithTag:") = Void, NSArray, Int;
overload selector(static "setIgnoresAlpha:") = Void, Bool;
overload selector(static "setIgnoresMouseEvents:") = Void, Bool;
overload selector(static "setIgnoresMultiClick:") = Void, Bool;
overload selector(static "setImage:") = Void, NSImage;
overload selector(static "setImage:dirtyRect:") = Void, CIImage, CGRect;
overload selector(static "setImage:forSegment:") = Void, NSImage, Int;
overload selector(static "setImageAlignment:") = Void, UInt;
overload selector(static "setImageDimsWhenDisabled:") = Void, Bool;
overload selector(static "setImageFrameStyle:") = Void, UInt;
overload selector(static "setImageInterpolation:") = Void, UInt;
overload selector(static "setImageOrigin:") = Void, NSPoint;
overload selector(static "setImagePosition:") = Void, UInt;
overload selector(static "setImageScaling:") = Void, UInt;
overload selector(static "setImageScaling:forSegment:") = Void, UInt, Int;
overload selector(static "setImportsGraphics:") = Void, Bool;
overload selector(static "setInContext:") = Void, NSGraphicsContext;
overload selector(static "setIncludedKeys:") = Void, NSArray;
overload selector(static "setIncludesPendingChanges:") = Void, Bool;
overload selector(static "setIncludesPropertyValues:") = Void, Bool;
overload selector(static "setIncludesSubentities:") = Void, Bool;
overload selector(static "setIncrement:") = Void, Double;
overload selector(static "setIndentationLevel:") = Void, Int;
overload selector(static "setIndentationMarkerFollowsCell:") = Void, Bool;
overload selector(static "setIndentationPerLevel:") = Void, Float;
overload selector(static "setIndependentConversationQueueing:") = Void, Bool;
overload selector(static "setIndeterminate:") = Void, Bool;
overload selector(static "setIndex:") = Void, Int;
overload selector(static "setIndexed:") = Void, Bool;
overload selector(static "setIndexedBySpotlight:") = Void, Bool;
overload selector(static "setIndicatorImage:inTableColumn:") = Void, NSImage, NSTableColumn;
overload selector(static "setInformativeText:") = Void, NSString;
overload selector(static "setInitialFirstResponder:") = Void, NSView;
overload selector(static "setInitialKey:") = Void, NSString;
overload selector(static "setInitialValue:") = Void, Id;
overload selector(static "setInitialValues:") = Void, NSDictionary;
overload selector(static "setInsertionClassDescription:") = Void, NSScriptClassDescription;
overload selector(static "setInsertionPointColor:") = Void, NSColor;
overload selector(static "setInstanceAlphaOffset:") = Void, Float;
overload selector(static "setInstanceBlueOffset:") = Void, Float;
overload selector(static "setInstanceColor:") = Void, CGColorRef;
overload selector(static "setInstanceCount:") = Void, Int;
overload selector(static "setInstanceDelay:") = Void, Double;
overload selector(static "setInstanceGreenOffset:") = Void, Float;
overload selector(static "setInstanceRedOffset:") = Void, Float;
overload selector(static "setInstanceTransform:") = Void, CATransform3D;
overload selector(static "setIntAttribute:value:forGlyphAtIndex:") = Void, Int, Int, UInt;
overload selector(static "setIntValue:") = Void, Int;
overload selector(static "setInteger:forKey:") = Void, Int, NSString;
overload selector(static "setIntegerValue:") = Void, Int;
overload selector(static "setIntercellSpacing:") = Void, NSSize;
overload selector(static "setInterfaceStyle:") = Void, UInt;
overload selector(static "setInterlineSpacing:") = Void, Float;
overload selector(static "setInternationalCurrencySymbol:") = Void, NSString;
overload selector(static "setInverseRelationship:") = Void, NSRelationshipDescription;
overload selector(static "setIsEqualFunction:") = Void, CCodePointer[[RawPointer,RawPointer,CCodePointer[[RawPointer],[UInt]]],[CChar]];
overload selector(static "setIsMiniaturized:") = Void, Bool;
overload selector(static "setIsPaneSplitter:") = Void, Bool;
overload selector(static "setIsVisible:") = Void, Bool;
overload selector(static "setIsZoomed:") = Void, Bool;
overload selector(static "setItemHeight:") = Void, Float;
overload selector(static "setItemPrototype:") = Void, NSCollectionViewItem;
overload selector(static "setJobDisposition:") = Void, NSString;
overload selector(static "setJobStyleHint:") = Void, NSString;
overload selector(static "setJobTitle:") = Void, NSString;
overload selector(static "setKey:") = Void, NSString;
overload selector(static "setKeyCell:") = Void, NSCell;
overload selector(static "setKeyEquivalent:") = Void, NSString;
overload selector(static "setKeyEquivalentFont:") = Void, NSFont;
overload selector(static "setKeyEquivalentFont:size:") = Void, NSString, Float;
overload selector(static "setKeyEquivalentModifierMask:") = Void, UInt;
overload selector(static "setKeyPath:") = Void, NSString;
overload selector(static "setKeyTimes:") = Void, NSArray;
overload selector(static "setKeyboardFocusRingNeedsDisplayInRect:") = Void, NSRect;
overload selector(static "setKeys:triggerChangeNotificationsForDependentKey:") = Void, NSArray, NSString;
overload selector(static "setKnobProportion:") = Void, Float;
overload selector(static "setKnobThickness:") = Void, Float;
overload selector(static "setLabel:") = Void, NSString;
overload selector(static "setLabel:forSegment:") = Void, NSString, Int;
overload selector(static "setLanguage:") = Bool, NSString;
overload selector(static "setLastColumn:") = Void, Int;
overload selector(static "setLastComponentOfFileName:") = Void, NSString;
overload selector(static "setLaunchPath:") = Void, NSString;
overload selector(static "setLayer:") = Void, CALayer;
overload selector(static "setLayerContentsPlacement:") = Void, Int;
overload selector(static "setLayerContentsRedrawPolicy:") = Void, Int;
overload selector(static "setLayoutAlgorithm:") = Void, UInt;
overload selector(static "setLayoutManager:") = Void, NSLayoutManager;
overload selector(static "setLayoutRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
overload selector(static "setLeadingOffset:") = Void, Float;
overload selector(static "setLeaf:") = Void, Bool;
overload selector(static "setLeafKeyPath:") = Void, NSString;
overload selector(static "setLeftMargin:") = Void, Float;
overload selector(static "setLength:") = Void, UInt;
overload selector(static "setLenient:") = Void, Bool;
overload selector(static "setLevel:") = Void, Int;
overload selector(static "setLevelIndicatorStyle:") = Void, UInt;
overload selector(static "setLevelsOfDetail:") = Void, CULong;
overload selector(static "setLevelsOfDetailBias:") = Void, CULong;
overload selector(static "setLevelsOfUndo:") = Void, UInt;
overload selector(static "setLifetime:") = Void, Float;
overload selector(static "setLifetimeRange:") = Void, Float;
overload selector(static "setLineBreakMode:") = Void, UInt;
overload selector(static "setLineCap:") = Void, NSString;
overload selector(static "setLineCapStyle:") = Void, UInt;
overload selector(static "setLineDash:count:phase:") = Void, Pointer[Float], Int, Float;
overload selector(static "setLineDashPattern:") = Void, NSArray;
overload selector(static "setLineDashPhase:") = Void, Float;
overload selector(static "setLineFragmentPadding:") = Void, Float;
overload selector(static "setLineFragmentRect:forGlyphRange:usedRect:") = Void, NSRect, NSRange, NSRect;
overload selector(static "setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRect, NSRange, NSRect, Float;
overload selector(static "setLineHeightMultiple:") = Void, Float;
overload selector(static "setLineJoin:") = Void, NSString;
overload selector(static "setLineJoinStyle:") = Void, UInt;
overload selector(static "setLineScroll:") = Void, Float;
overload selector(static "setLineSpacing:") = Void, Float;
overload selector(static "setLineWidth:") = Void, Float;
overload selector(static "setLinkTextAttributes:") = Void, NSDictionary;
overload selector(static "setListensInForegroundOnly:") = Void, Bool;
overload selector(static "setLoaded:") = Void, Bool;
overload selector(static "setLocale:") = Void, NSLocale;
overload selector(static "setLocalizationDictionary:") = Void, NSDictionary;
overload selector(static "setLocalizedKey:") = Void, NSString;
overload selector(static "setLocalizedKeyDictionary:") = Void, NSDictionary;
overload selector(static "setLocalizedKeyTable:") = Void, NSString;
overload selector(static "setLocalizesFormat:") = Void, Bool;
overload selector(static "setLocation:forStartOfGlyphRange:") = Void, NSPoint, NSRange;
overload selector(static "setLocation:withAdvancements:forStartOfGlyphRange:") = Void, NSPoint, Pointer[Float], NSRange;
overload selector(static "setLocations:") = Void, NSArray;
overload selector(static "setLocations:startingGlyphIndexes:count:forGlyphRange:") = Void, NSPointArray, Pointer[UInt], UInt, NSRange;
overload selector(static "setLongEraSymbols:") = Void, NSArray;
overload selector(static "setLoopMode:") = Void, UInt;
overload selector(static "setLoops:") = Void, Bool;
overload selector(static "setMIMEType:") = Void, NSString;
overload selector(static "setMagnificationFilter:") = Void, NSString;
overload selector(static "setMainDocumentURL:") = Void, NSURL;
overload selector(static "setMainMenu:") = Void, NSMenu;
overload selector(static "setManagedObjectClassName:") = Void, NSString;
overload selector(static "setManagedObjectContext:") = Void, NSManagedObjectContext;
overload selector(static "setMappingType:") = Void, UInt;
overload selector(static "setMark:") = Void, Id;
overload selector(static "setMarkedText:selectedRange:") = Void, Id, NSRange;
overload selector(static "setMarkedText:selectedRange:replacementRange:") = Void, Id, NSRange, NSRange;
overload selector(static "setMarkedText:selectionRange:replacementRange:") = Void, Id, NSRange, NSRange;
overload selector(static "setMarkedTextAttributes:") = Void, NSDictionary;
overload selector(static "setMarkerLocation:") = Void, Float;
overload selector(static "setMarkers:") = Void, NSArray;
overload selector(static "setMask:") = Void, CALayer;
overload selector(static "setMasksToBounds:") = Void, Bool;
overload selector(static "setMatchesOnMultipleResolution:") = Void, Bool;
overload selector(static "setMatrixClass:") = Void, Id;
overload selector(static "setMaxConcurrentOperationCount:") = Void, Int;
overload selector(static "setMaxContentSize:") = Void, NSSize;
overload selector(static "setMaxCount:") = Void, UInt;
overload selector(static "setMaxDate:") = Void, NSDate;
overload selector(static "setMaxItemSize:") = Void, NSSize;
overload selector(static "setMaxNumberOfColumns:") = Void, UInt;
overload selector(static "setMaxNumberOfRows:") = Void, UInt;
overload selector(static "setMaxSize:") = Void, NSSize;
overload selector(static "setMaxValue:") = Void, Double;
overload selector(static "setMaxVisibleColumns:") = Void, Int;
overload selector(static "setMaxWidth:") = Void, Float;
overload selector(static "setMaximum:") = Void, NSNumber;
overload selector(static "setMaximumFractionDigits:") = Void, UInt;
overload selector(static "setMaximumIntegerDigits:") = Void, UInt;
overload selector(static "setMaximumLineHeight:") = Void, Float;
overload selector(static "setMaximumRecents:") = Void, Int;
overload selector(static "setMaximumRecordedDuration:") = Void, QTTime;
overload selector(static "setMaximumRecordedFileSize:") = Void, UInt64;
overload selector(static "setMaximumSignificantDigits:") = Void, UInt;
overload selector(static "setMaximumVideoSize:") = Void, NSSize;
overload selector(static "setMeasurementUnits:") = Void, NSString;
overload selector(static "setMediaAttributes:") = Void, NSDictionary;
overload selector(static "setMemoryCapacity:") = Void, UInt;
overload selector(static "setMenu:") = Void, NSMenu;
overload selector(static "setMenu:forSegment:") = Void, NSMenu, Int;
overload selector(static "setMenuBarVisible:") = Void, Bool;
overload selector(static "setMenuChangedMessagesEnabled:") = Void, Bool;
overload selector(static "setMenuFormRepresentation:") = Void, NSMenuItem;
overload selector(static "setMenuItem:") = Void, NSMenuItem;
overload selector(static "setMenuItemCell:forItemAtIndex:") = Void, NSMenuItemCell, Int;
overload selector(static "setMenuRepresentation:") = Void, Id;
overload selector(static "setMenuView:") = Void, NSMenuView;
overload selector(static "setMenuZone:") = Void, Pointer[NSZone];
overload selector(static "setMergePolicy:") = Void, Id;
overload selector(static "setMessage:") = Void, NSString;
overload selector(static "setMessageText:") = Void, NSString;
overload selector(static "setMetadata:") = Void, NSDictionary;
overload selector(static "setMetadata:forPersistentStore:") = Void, NSDictionary, NSPersistentStore;
overload selector(static "setMetadata:forPersistentStoreOfType:URL:error:") = Bool, NSDictionary, NSString, NSURL, Pointer[NSError];
overload selector(static "setMetadata:forPersistentStoreWithURL:error:") = Bool, NSDictionary, NSURL, Pointer[NSError];
overload selector(static "setMinColumnWidth:") = Void, Float;
overload selector(static "setMinContentSize:") = Void, NSSize;
overload selector(static "setMinCount:") = Void, UInt;
overload selector(static "setMinDate:") = Void, NSDate;
overload selector(static "setMinItemSize:") = Void, NSSize;
overload selector(static "setMinSize:") = Void, NSSize;
overload selector(static "setMinValue:") = Void, Double;
overload selector(static "setMinWidth:") = Void, Float;
overload selector(static "setMinificationFilter:") = Void, NSString;
overload selector(static "setMinificationFilterBias:") = Void, Float;
overload selector(static "setMinimum:") = Void, NSNumber;
overload selector(static "setMinimumDaysInFirstWeek:") = Void, UInt;
overload selector(static "setMinimumFractionDigits:") = Void, UInt;
overload selector(static "setMinimumIntegerDigits:") = Void, UInt;
overload selector(static "setMinimumLineHeight:") = Void, Float;
overload selector(static "setMinimumSignificantDigits:") = Void, UInt;
overload selector(static "setMinimumVideoFrameInterval:") = Void, Double;
overload selector(static "setMinimumWidth:") = Void, Float;
overload selector(static "setMiniwindowImage:") = Void, NSImage;
overload selector(static "setMiniwindowTitle:") = Void, NSString;
overload selector(static "setMinusSign:") = Void, NSString;
overload selector(static "setMinute:") = Void, Int;
overload selector(static "setMiterLimit:") = Void, Float;
overload selector(static "setMixedStateImage:") = Void, NSImage;
overload selector(static "setMnemonicLocation:") = Void, UInt;
overload selector(static "setMode:") = Void, UInt;
overload selector(static "setMonth:") = Void, Int;
overload selector(static "setMonthSymbols:") = Void, NSArray;
overload selector(static "setMouseCoalescingEnabled:") = Void, Bool;
overload selector(static "setMovable:") = Void, Bool;
overload selector(static "setMovableByWindowBackground:") = Void, Bool;
overload selector(static "setMovie:") = Void, NSMovie;
overload selector(static "setMovieAttributes:") = Void, NSDictionary;
overload selector(static "setMsgid:") = Void, UInt;
overload selector(static "setMultiplier:") = Void, NSNumber;
overload selector(static "setMuted:") = Void, Bool;
overload selector(static "setName:") = Bool, NSString;
overload selector(static "setNameFieldLabel:") = Void, NSString;
overload selector(static "setNameFieldStringValue:") = Void, NSString;
overload selector(static "setNamespaces:") = Void, NSArray;
overload selector(static "setNeedsDisplay") = Void;
overload selector(static "setNeedsDisplay:") = Void, Bool;
overload selector(static "setNeedsDisplayForItemAtIndex:") = Void, Int;
overload selector(static "setNeedsDisplayInRect:") = Void, NSRect;
overload selector(static "setNeedsDisplayInRect:avoidAdditionalLayout:") = Void, NSRect, Bool;
overload selector(static "setNeedsDisplayOnBoundsChange:") = Void, Bool;
overload selector(static "setNeedsLayout") = Void;
overload selector(static "setNeedsSizing:") = Void, Bool;
overload selector(static "setNegativeFormat:") = Void, NSString;
overload selector(static "setNegativeInfinitySymbol:") = Void, NSString;
overload selector(static "setNegativePrefix:") = Void, NSString;
overload selector(static "setNegativeSuffix:") = Void, NSString;
overload selector(static "setNestingMode:") = Void, UInt;
overload selector(static "setNextKeyView:") = Void, NSView;
overload selector(static "setNextResponder:") = Void, NSResponder;
overload selector(static "setNextState") = Void;
overload selector(static "setNilSymbol:") = Void, NSString;
overload selector(static "setNilValueForKey:") = Void, NSString;
overload selector(static "setNotANumberSymbol:") = Void, NSString;
overload selector(static "setNotShownAttribute:forGlyphAtIndex:") = Void, Bool, UInt;
overload selector(static "setNotShownAttribute:forGlyphRange:") = Void, Bool, NSRange;
overload selector(static "setNotationName:") = Void, NSString;
overload selector(static "setNotificationBatchingInterval:") = Void, Double;
overload selector(static "setNumberOfColumns:") = Void, UInt;
overload selector(static "setNumberOfMajorTickMarks:") = Void, Int;
overload selector(static "setNumberOfTickMarks:") = Void, Int;
overload selector(static "setNumberOfVisibleItems:") = Void, Int;
overload selector(static "setNumberStyle:") = Void, UInt;
overload selector(static "setObject:forKey:") = Void, Id, Id;
overload selector(static "setObject:forKey:cost:") = Void, Id, Id, UInt;
overload selector(static "setObject:forProperty:error:") = Bool, Id, NSString, Pointer[NSError];
overload selector(static "setObjectBeingTested:") = Void, Id;
overload selector(static "setObjectClass:") = Void, Id;
overload selector(static "setObjectValue:") = Void, Id;
overload selector(static "setObjectZone:") = Void, Pointer[NSZone];
overload selector(static "setObservationInfo:") = Void, RawPointer;
overload selector(static "setOffScreen:width:height:rowbytes:") = Void, RawPointer, Int, Int, Int;
overload selector(static "setOffStateImage:") = Void, NSImage;
overload selector(static "setOnMouseEntered:") = Void, Bool;
overload selector(static "setOnMouseExited:") = Void, Bool;
overload selector(static "setOnStateImage:") = Void, NSImage;
overload selector(static "setOneShot:") = Void, Bool;
overload selector(static "setOpacity:") = Void, Float;
overload selector(static "setOpaque:") = Void, Bool;
overload selector(static "setOpenGLContext:") = Void, NSOpenGLContext;
overload selector(static "setOpenGLPixelFormat:") = Void, NSOpenGLPixelFormat;
overload selector(static "setOptional:") = Void, Bool;
overload selector(static "setOptions:") = Void, Int;
overload selector(static "setOrderedIndex:") = Void, Int;
overload selector(static "setOrientation:") = Void, UInt;
overload selector(static "setOriginOffset:") = Void, Float;
overload selector(static "setOutlineTableColumn:") = Void, NSTableColumn;
overload selector(static "setOutputDeviceUniqueID:") = Void, NSString;
overload selector(static "setOutputFormat:") = Void, UInt;
overload selector(static "setPMSymbol:") = Void, NSString;
overload selector(static "setPaddingCharacter:") = Void, NSString;
overload selector(static "setPaddingPosition:") = Void, UInt;
overload selector(static "setPageOrder:") = Void, Int;
overload selector(static "setPageScroll:") = Void, Float;
overload selector(static "setPaletteLabel:") = Void, NSString;
overload selector(static "setPanelFont:isMultiple:") = Void, NSFont, Bool;
overload selector(static "setPaperName:") = Void, NSString;
overload selector(static "setPaperSize:") = Void, NSSize;
overload selector(static "setParagraphGlyphRange:separatorGlyphRange:") = Void, NSRange, NSRange;
overload selector(static "setParagraphSpacing:") = Void, Float;
overload selector(static "setParagraphSpacingBefore:") = Void, Float;
overload selector(static "setParagraphStyle:") = Void, NSParagraphStyle;
overload selector(static "setParagraphs:") = Void, NSArray;
overload selector(static "setParamDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, CULong;
overload selector(static "setParentWindow:") = Void, NSWindow;
overload selector(static "setPartialStringValidationEnabled:") = Void, Bool;
overload selector(static "setPath:") = Bool, NSString;
overload selector(static "setPathComponentCells:") = Void, NSArray;
overload selector(static "setPathSeparator:") = Void, NSString;
overload selector(static "setPathStyle:") = Void, Int;
overload selector(static "setPatternPhase:") = Void, NSPoint;
overload selector(static "setPerMillSymbol:") = Void, NSString;
overload selector(static "setPercentSymbol:") = Void, NSString;
overload selector(static "setPeriodicDelay:interval:") = Void, Float, Float;
overload selector(static "setPersistentDomain:forName:") = Void, NSDictionary, NSString;
overload selector(static "setPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
overload selector(static "setPickerMask:") = Void, UInt;
overload selector(static "setPickerMode:") = Void, Int;
overload selector(static "setPixel:atX:y:") = Void, Pointer[UInt], Int, Int;
overload selector(static "setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:") = Void, NSOpenGLPixelBuffer, UInt, Int, Int;
overload selector(static "setPixelBufferAttributes:") = Void, NSDictionary;
overload selector(static "setPixelFormat:") = Void, NSOpenGLPixelFormat;
overload selector(static "setPixelsHigh:") = Void, Int;
overload selector(static "setPixelsWide:") = Void, Int;
overload selector(static "setPlaceholderAttributedString:") = Void, NSAttributedString;
overload selector(static "setPlaceholderString:") = Void, NSString;
overload selector(static "setPlaybackDeviceIdentifier:") = Void, NSString;
overload selector(static "setPlaysEveryFrame:") = Void, Bool;
overload selector(static "setPlaysSelectionOnly:") = Void, Bool;
overload selector(static "setPlusSign:") = Void, NSString;
overload selector(static "setPosition:") = Void, CGPoint;
overload selector(static "setPosition:ofDividerAtIndex:") = Void, Float, Int;
overload selector(static "setPositiveFormat:") = Void, NSString;
overload selector(static "setPositiveInfinitySymbol:") = Void, NSString;
overload selector(static "setPositivePrefix:") = Void, NSString;
overload selector(static "setPositiveSuffix:") = Void, NSString;
overload selector(static "setPostsBoundsChangedNotifications:") = Void, Bool;
overload selector(static "setPostsFrameChangedNotifications:") = Void, Bool;
overload selector(static "setPredicate:") = Void, NSPredicate;
overload selector(static "setPreferredBackingLocation:") = Void, UInt;
overload selector(static "setPreferredEdge:") = Void, NSRectEdge;
overload selector(static "setPreferredFilename:") = Void, NSString;
overload selector(static "setPreferredFontNames:") = Void, NSArray;
overload selector(static "setPrefersAllColumnUserResizing:") = Void, Bool;
overload selector(static "setPrefersColorMatch:") = Void, Bool;
overload selector(static "setPresentationOptions:") = Void, UInt;
overload selector(static "setPreservesAspectRatio:") = Void, Bool;
overload selector(static "setPreservesContentDuringLiveResize:") = Void, Bool;
overload selector(static "setPreservesDepth:") = Void, Bool;
overload selector(static "setPreservesSelection:") = Void, Bool;
overload selector(static "setPreventsApplicationTerminationWhenModal:") = Void, Bool;
overload selector(static "setPrimitiveValue:forKey:") = Void, Id, NSString;
overload selector(static "setPrintInfo:") = Void, NSPrintInfo;
overload selector(static "setPrintPanel:") = Void, NSPrintPanel;
overload selector(static "setPrinter:") = Void, NSPrinter;
overload selector(static "setProcessName:") = Void, NSString;
overload selector(static "setProgressMarks:") = Void, NSArray;
overload selector(static "setPrompt:") = Void, NSString;
overload selector(static "setPropagatesDeletesAtEndOfEvent:") = Void, Bool;
overload selector(static "setProperties:") = Void, NSArray;
overload selector(static "setPropertiesToFetch:") = Void, NSArray;
overload selector(static "setProperty:forKey:") = Bool, Id, NSString;
overload selector(static "setProperty:forKey:inRequest:") = Void, Id, NSString, NSMutableURLRequest;
overload selector(static "setProperty:withValue:") = Void, NSString, Id;
overload selector(static "setPropertyCache:") = Void, NSMutableDictionary;
overload selector(static "setPropertyList:forType:") = Bool, Id, NSString;
overload selector(static "setProtocolForProxy:") = Void, Id;
overload selector(static "setProtocolSpecificInformation:") = Void, NSString;
overload selector(static "setPrototype:") = Void, NSCell;
overload selector(static "setPublicID:") = Void, NSString;
overload selector(static "setPullsDown:") = Void, Bool;
overload selector(static "setQuarter:") = Void, Int;
overload selector(static "setQuarterSymbols:") = Void, NSArray;
overload selector(static "setQueuePriority:") = Void, Int;
overload selector(static "setROISelector:") = Void, SelectorHandle;
overload selector(static "setRangeContainerObject:") = Void, Id;
overload selector(static "setRate:") = Void, Float;
overload selector(static "setReadOnly:") = Void, Bool;
overload selector(static "setReceiversSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector(static "setRecentSearches:") = Void, NSArray;
overload selector(static "setRecentsAutosaveName:") = Void, NSString;
overload selector(static "setRedRange:") = Void, Float;
overload selector(static "setRedSpeed:") = Void, Float;
overload selector(static "setRefusesFirstResponder:") = Void, Bool;
overload selector(static "setRelationshipKeyPathsForPrefetching:") = Void, NSArray;
overload selector(static "setRelationshipMappings:") = Void, NSArray;
overload selector(static "setRelativePosition:") = Void, UInt;
overload selector(static "setReleasedWhenClosed:") = Void, Bool;
overload selector(static "setRelinquishFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[UInt]]],[]];
overload selector(static "setRemovable:") = Void, Bool;
overload selector(static "setRemovedOnCompletion:") = Void, Bool;
overload selector(static "setRenamingIdentifier:") = Void, NSString;
overload selector(static "setRenderMode:") = Void, NSString;
overload selector(static "setRepeatCount:") = Void, Float;
overload selector(static "setRepeatDuration:") = Void, Double;
overload selector(static "setReplyTimeout:") = Void, Double;
overload selector(static "setRepresentation") = NSSet;
overload selector(static "setRepresentedFilename:") = Void, NSString;
overload selector(static "setRepresentedObject:") = Void, Id;
overload selector(static "setRepresentedURL:") = Void, NSURL;
overload selector(static "setRequestTimeout:") = Void, Double;
overload selector(static "setRequiredFileType:") = Void, NSString;
overload selector(static "setReservedThicknessForAccessoryView:") = Void, Float;
overload selector(static "setReservedThicknessForMarkers:") = Void, Float;
overload selector(static "setResizable:") = Void, Bool;
overload selector(static "setResizeIncrements:") = Void, NSSize;
overload selector(static "setResizingMask:") = Void, UInt;
overload selector(static "setResolvesAliases:") = Void, Bool;
overload selector(static "setResourceData:") = Bool, NSData;
overload selector(static "setResourceValue:forKey:error:") = Bool, Id, NSString, Pointer[NSError];
overload selector(static "setResourceValues:error:") = Bool, NSDictionary, Pointer[NSError];
overload selector(static "setResultType:") = Void, UInt;
overload selector(static "setRetainsRegisteredObjects:") = Void, Bool;
overload selector(static "setReturnValue:") = Void, RawPointer;
overload selector(static "setReturnsDistinctResults:") = Void, Bool;
overload selector(static "setReturnsObjectsAsFaults:") = Void, Bool;
overload selector(static "setReusesColumns:") = Void, Bool;
overload selector(static "setRichText:") = Void, Bool;
overload selector(static "setRightMargin:") = Void, Float;
overload selector(static "setRootElement:") = Void, NSXMLNode;
overload selector(static "setRootObject:") = Void, Id;
overload selector(static "setRotationMode:") = Void, NSString;
overload selector(static "setRoundingBehavior:") = Void, NSDecimalNumberHandler;
overload selector(static "setRoundingIncrement:") = Void, NSNumber;
overload selector(static "setRoundingMode:") = Void, UInt;
overload selector(static "setRowClass:") = Void, Id;
overload selector(static "setRowHeight:") = Void, Float;
overload selector(static "setRowTemplates:") = Void, NSArray;
overload selector(static "setRowTypeKeyPath:") = Void, NSString;
overload selector(static "setRuleThickness:") = Void, Float;
overload selector(static "setRulerViewClass:") = Void, Id;
overload selector(static "setRulerVisible:") = Void, Bool;
overload selector(static "setRulersVisible:") = Void, Bool;
overload selector(static "setRunLoopModes:") = Void, NSArray;
overload selector(static "setScale:") = Void, Float;
overload selector(static "setScaleRange:") = Void, Float;
overload selector(static "setScaleSpeed:") = Void, Float;
overload selector(static "setScalesWhenResized:") = Void, Bool;
overload selector(static "setScalingFactor:") = Void, Float;
overload selector(static "setScanLocation:") = Void, UInt;
overload selector(static "setScriptErrorExpectedTypeDescriptor:") = Void, NSAppleEventDescriptor;
overload selector(static "setScriptErrorNumber:") = Void, Int;
overload selector(static "setScriptErrorOffendingObjectDescriptor:") = Void, NSAppleEventDescriptor;
overload selector(static "setScriptErrorString:") = Void, NSString;
overload selector(static "setScriptingProperties:") = Void, NSDictionary;
overload selector(static "setScrollMode:") = Void, NSString;
overload selector(static "setScrollView:") = Void, NSScrollView;
overload selector(static "setScrollable:") = Void, Bool;
overload selector(static "setScrollsDynamically:") = Void, Bool;
overload selector(static "setSearchButtonCell:") = Void, NSButtonCell;
overload selector(static "setSearchMenuTemplate:") = Void, NSMenu;
overload selector(static "setSearchScopes:") = Void, NSArray;
overload selector(static "setSecond:") = Void, Int;
overload selector(static "setSecondaryGroupingSize:") = Void, UInt;
overload selector(static "setSeed:") = Void, UInt;
overload selector(static "setSegmentCount:") = Void, Int;
overload selector(static "setSegmentStyle:") = Void, Int;
overload selector(static "setSelectable:") = Void, Bool;
overload selector(static "setSelected:") = Void, Bool;
overload selector(static "setSelected:forSegment:") = Void, Bool, Int;
overload selector(static "setSelectedAttributes:isMultiple:") = Void, NSDictionary, Bool;
overload selector(static "setSelectedFont:isMultiple:") = Void, NSFont, Bool;
overload selector(static "setSelectedItemIdentifier:") = Void, NSString;
overload selector(static "setSelectedKeyboardInputSource:") = Void, NSString;
overload selector(static "setSelectedObjects:") = Bool, NSArray;
overload selector(static "setSelectedRange:") = Void, NSRange;
overload selector(static "setSelectedRange:affinity:stillSelecting:") = Void, NSRange, UInt, Bool;
overload selector(static "setSelectedRanges:") = Void, NSArray;
overload selector(static "setSelectedRanges:affinity:stillSelecting:") = Void, NSArray, UInt, Bool;
overload selector(static "setSelectedSegment:") = Void, Int;
overload selector(static "setSelectedTextAttributes:") = Void, NSDictionary;
overload selector(static "setSelection:") = Void, QTTimeRange;
overload selector(static "setSelectionByRect:") = Void, Bool;
overload selector(static "setSelectionFrom:to:anchor:highlight:") = Void, Int, Int, Int, Bool;
overload selector(static "setSelectionGranularity:") = Void, UInt;
overload selector(static "setSelectionHighlightStyle:") = Void, Int;
overload selector(static "setSelectionIndex:") = Bool, UInt;
overload selector(static "setSelectionIndexPath:") = Bool, NSIndexPath;
overload selector(static "setSelectionIndexPaths:") = Bool, NSArray;
overload selector(static "setSelectionIndexes:") = Bool, NSIndexSet;
overload selector(static "setSelectionOnly:") = Void, Bool;
overload selector(static "setSelector:") = Void, SelectorHandle;
overload selector(static "setSelectsInsertedObjects:") = Void, Bool;
overload selector(static "setSendsActionOnArrowKeys:") = Void, Bool;
overload selector(static "setSendsActionOnEndEditing:") = Void, Bool;
overload selector(static "setSendsSearchStringImmediately:") = Void, Bool;
overload selector(static "setSendsWholeSearchString:") = Void, Bool;
overload selector(static "setSeparatesColumns:") = Void, Bool;
overload selector(static "setServicesMenu:") = Void, NSMenu;
overload selector(static "setServicesProvider:") = Void, Id;
overload selector(static "setSession:") = Void, QTCaptureSession;
overload selector(static "setSet:") = Void, NSSet;
overload selector(static "setShadow:") = Void, NSShadow;
overload selector(static "setShadowBlurRadius:") = Void, Float;
overload selector(static "setShadowColor:") = Void, CGColorRef;
overload selector(static "setShadowOffset:") = Void, CGSize;
overload selector(static "setShadowOpacity:") = Void, Float;
overload selector(static "setShadowRadius:") = Void, Float;
overload selector(static "setSharedPrintInfo:") = Void, NSPrintInfo;
overload selector(static "setSharedScriptSuiteRegistry:") = Void, NSScriptSuiteRegistry;
overload selector(static "setSharedURLCache:") = Void, NSURLCache;
overload selector(static "setSharingType:") = Void, UInt;
overload selector(static "setShortMonthSymbols:") = Void, NSArray;
overload selector(static "setShortQuarterSymbols:") = Void, NSArray;
overload selector(static "setShortStandaloneMonthSymbols:") = Void, NSArray;
overload selector(static "setShortStandaloneQuarterSymbols:") = Void, NSArray;
overload selector(static "setShortStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector(static "setShortWeekdaySymbols:") = Void, NSArray;
overload selector(static "setShouldAntialias:") = Void, Bool;
overload selector(static "setShouldCascadeWindows:") = Void, Bool;
overload selector(static "setShouldCloseDocument:") = Void, Bool;
overload selector(static "setShouldCreateUI:") = Void, Bool;
overload selector(static "setShouldProcessNamespaces:") = Void, Bool;
overload selector(static "setShouldReportNamespacePrefixes:") = Void, Bool;
overload selector(static "setShouldResolveExternalEntities:") = Void, Bool;
overload selector(static "setShowPanels:") = Void, Bool;
overload selector(static "setShowsAlpha:") = Void, Bool;
overload selector(static "setShowsApplicationBadge:") = Void, Bool;
overload selector(static "setShowsBaselineSeparator:") = Void, Bool;
overload selector(static "setShowsBorderOnlyWhileMouseInside:") = Void, Bool;
overload selector(static "setShowsControlCharacters:") = Void, Bool;
overload selector(static "setShowsFirstResponder:") = Void, Bool;
overload selector(static "setShowsHelp:") = Void, Bool;
overload selector(static "setShowsHiddenFiles:") = Void, Bool;
overload selector(static "setShowsInvisibleCharacters:") = Void, Bool;
overload selector(static "setShowsPrintPanel:") = Void, Bool;
overload selector(static "setShowsProgressPanel:") = Void, Bool;
overload selector(static "setShowsResizeIndicator:") = Void, Bool;
overload selector(static "setShowsStateBy:") = Void, Int;
overload selector(static "setShowsStateColumn:") = Void, Bool;
overload selector(static "setShowsSuppressionButton:") = Void, Bool;
overload selector(static "setShowsToolbarButton:") = Void, Bool;
overload selector(static "setSize:") = Void, NSSize;
overload selector(static "setSizeFunction:") = Void, CCodePointer[[RawPointer],[UInt]];
overload selector(static "setSizeMode:") = Void, UInt;
overload selector(static "setSliderType:") = Void, UInt;
overload selector(static "setSmartInsertDeleteEnabled:") = Void, Bool;
overload selector(static "setSortDescriptorPrototype:") = Void, NSSortDescriptor;
overload selector(static "setSortDescriptors:") = Void, NSArray;
overload selector(static "setSound:") = Void, NSSound;
overload selector(static "setSourceEntityName:") = Void, NSString;
overload selector(static "setSourceEntityVersionHash:") = Void, NSData;
overload selector(static "setSourceExpression:") = Void, NSExpression;
overload selector(static "setSpeed:") = Void, Float;
overload selector(static "setSpellingState:range:") = Void, Int, NSRange;
overload selector(static "setSpin:") = Void, Float;
overload selector(static "setSpinRange:") = Void, Float;
overload selector(static "setStackSize:") = Void, UInt;
overload selector(static "setStalenessInterval:") = Void, Double;
overload selector(static "setStandalone:") = Void, Bool;
overload selector(static "setStandaloneMonthSymbols:") = Void, NSArray;
overload selector(static "setStandaloneQuarterSymbols:") = Void, NSArray;
overload selector(static "setStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector(static "setStandardError:") = Void, Id;
overload selector(static "setStandardInput:") = Void, Id;
overload selector(static "setStandardOutput:") = Void, Id;
overload selector(static "setStartPoint:") = Void, CGPoint;
overload selector(static "setStartProgress:") = Void, Float;
overload selector(static "setStartSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector(static "setStartSubelementIdentifier:") = Void, UInt;
overload selector(static "setStartSubelementIndex:") = Void, Int;
overload selector(static "setStartingItemNumber:") = Void, Int;
overload selector(static "setState:") = Void, Int;
overload selector(static "setState:atRow:column:") = Void, Int, Int, Int;
overload selector(static "setStepButtonsVisible:") = Void, Bool;
overload selector(static "setStoredInExternalRecord:") = Void, Bool;
overload selector(static "setString:") = Void, NSString;
overload selector(static "setString:forType:") = Bool, NSString, NSString;
overload selector(static "setStringValue:") = Void, NSString;
overload selector(static "setStringValue:resolvingEntities:") = Void, NSString, Bool;
overload selector(static "setStroke") = Void;
overload selector(static "setStrokeColor:") = Void, CGColorRef;
overload selector(static "setStyle:") = Void, UInt;
overload selector(static "setStyleMask:") = Void, UInt;
overload selector(static "setSubentities:") = Void, NSArray;
overload selector(static "setSubitems:") = Void, NSArray;
overload selector(static "setSublayerTransform:") = Void, CATransform3D;
overload selector(static "setSublayers:") = Void, NSArray;
overload selector(static "setSubmenu:") = Void, NSMenu;
overload selector(static "setSubmenu:forItem:") = Void, NSMenu, NSMenuItem;
overload selector(static "setSubrowsKeyPath:") = Void, NSString;
overload selector(static "setSubstitutionsPanelAccessoryViewController:") = Void, NSViewController;
overload selector(static "setSubtype:") = Void, NSString;
overload selector(static "setSubviews:") = Void, NSArray;
overload selector(static "setSupermenu:") = Void, NSMenu;
overload selector(static "setSuspended:") = Void, Bool;
overload selector(static "setSystemID:") = Void, NSString;
overload selector(static "setTXTRecordData:") = Bool, NSData;
overload selector(static "setTabKeyTraversesCells:") = Void, Bool;
overload selector(static "setTabStops:") = Void, NSArray;
overload selector(static "setTabViewType:") = Void, UInt;
overload selector(static "setTableView:") = Void, NSTableView;
overload selector(static "setTag:") = Void, Int;
overload selector(static "setTag:forSegment:") = Void, Int, Int;
overload selector(static "setTailIndent:") = Void, Float;
overload selector(static "setTakesTitleFromPreviousColumn:") = Void, Bool;
overload selector(static "setTarget:") = Void, Id;
overload selector(static "setTearOffMenuRepresentation:") = Void, Id;
overload selector(static "setTemplate:") = Void, Bool;
overload selector(static "setTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
overload selector(static "setTest:") = Void, NSScriptWhoseTest;
overload selector(static "setTextAlignment:") = Void, UInt;
overload selector(static "setTextAttributesForNegativeInfinity:") = Void, NSDictionary;
overload selector(static "setTextAttributesForNegativeValues:") = Void, NSDictionary;
overload selector(static "setTextAttributesForNil:") = Void, NSDictionary;
overload selector(static "setTextAttributesForNotANumber:") = Void, NSDictionary;
overload selector(static "setTextAttributesForPositiveInfinity:") = Void, NSDictionary;
overload selector(static "setTextAttributesForPositiveValues:") = Void, NSDictionary;
overload selector(static "setTextAttributesForZero:") = Void, NSDictionary;
overload selector(static "setTextBaseWritingDirection:") = Void, Int;
overload selector(static "setTextBlocks:") = Void, NSArray;
overload selector(static "setTextColor:") = Void, NSColor;
overload selector(static "setTextColor:range:") = Void, NSColor, NSRange;
overload selector(static "setTextContainer:") = Void, NSTextContainer;
overload selector(static "setTextContainer:forGlyphRange:") = Void, NSTextContainer, NSRange;
overload selector(static "setTextContainerInset:") = Void, NSSize;
overload selector(static "setTextFont:") = Void, NSFont;
overload selector(static "setTextLists:") = Void, NSArray;
overload selector(static "setTextStorage:") = Void, NSTextStorage;
overload selector(static "setTextView:") = Void, NSTextView;
overload selector(static "setTextureImageToPixelBuffer:colorBuffer:") = Void, NSOpenGLPixelBuffer, UInt;
overload selector(static "setThousandSeparator:") = Void, NSString;
overload selector(static "setThreadPriority:") = Bool, Double;
overload selector(static "setTickMarkPosition:") = Void, UInt;
overload selector(static "setTighteningFactorForTruncation:") = Void, Float;
overload selector(static "setTileSize:") = Void, CGSize;
overload selector(static "setTimeInterval:") = Void, Double;
overload selector(static "setTimeOffset:") = Void, Double;
overload selector(static "setTimeStyle:") = Void, UInt;
overload selector(static "setTimeZone:") = Void, NSTimeZone;
overload selector(static "setTimeoutInterval:") = Void, Double;
overload selector(static "setTimingFunction:") = Void, CAMediaTimingFunction;
overload selector(static "setTimingFunctions:") = Void, NSArray;
overload selector(static "setTitle:") = Void, NSString;
overload selector(static "setTitle:ofColumn:") = Void, NSString, Int;
overload selector(static "setTitleAlignment:") = Void, UInt;
overload selector(static "setTitleBaseWritingDirection:") = Void, Int;
overload selector(static "setTitleCell:") = Void, NSCell;
overload selector(static "setTitleColor:") = Void, NSColor;
overload selector(static "setTitleFont:") = Void, NSFont;
overload selector(static "setTitlePosition:") = Void, UInt;
overload selector(static "setTitleWidth:") = Void, Float;
overload selector(static "setTitleWithMnemonic:") = Void, NSString;
overload selector(static "setTitleWithRepresentedFilename:") = Void, NSString;
overload selector(static "setTitled:") = Void, Bool;
overload selector(static "setToValue:") = Void, Id;
overload selector(static "setTokenStyle:") = Void, UInt;
overload selector(static "setTokenizingCharacterSet:") = Void, NSCharacterSet;
overload selector(static "setToolTip:") = Void, NSString;
overload selector(static "setToolTip:forCell:") = Void, NSString, NSCell;
overload selector(static "setToolTip:forSegment:") = Void, NSString, Int;
overload selector(static "setToolbar:") = Void, NSToolbar;
overload selector(static "setTopLevelObject:") = Void, Id;
overload selector(static "setTopMargin:") = Void, Float;
overload selector(static "setTotalCostLimit:") = Void, UInt;
overload selector(static "setTrackAttributes:") = Void, NSDictionary;
overload selector(static "setTrackingMode:") = Void, UInt;
overload selector(static "setTrailingOffset:") = Void, Float;
overload selector(static "setTransform:") = Void, CATransform3D;
overload selector(static "setTransformStruct:") = Void, NSAffineTransformStruct;
overload selector(static "setTransient:") = Void, Bool;
overload selector(static "setTranslateButtonVisible:") = Void, Bool;
overload selector(static "setTransparent:") = Void, Bool;
overload selector(static "setTreatsFilePackagesAsDirectories:") = Void, Bool;
overload selector(static "setTruncatesLastVisibleLine:") = Void, Bool;
overload selector(static "setTruncationMode:") = Void, NSString;
overload selector(static "setTwoDigitStartDate:") = Void, NSDate;
overload selector(static "setType:") = Void, UInt;
overload selector(static "setTypesetter:") = Void, NSTypesetter;
overload selector(static "setTypesetterBehavior:") = Void, Int;
overload selector(static "setTypingAttributes:") = Void, NSDictionary;
overload selector(static "setURI:") = Void, NSString;
overload selector(static "setURL:") = Void, NSURL;
overload selector(static "setURL:forKey:") = Void, NSURL, NSString;
overload selector(static "setURL:forPersistentStore:") = Bool, NSURL, NSPersistentStore;
overload selector(static "setUndoManager:") = Void, NSUndoManager;
overload selector(static "setUniqueID:") = Void, Id;
overload selector(static "setUpFieldEditorAttributes:") = NSText, NSText;
overload selector(static "setUpGState") = Void;
overload selector(static "setUpPrintOperationDefaultValues") = Void;
overload selector(static "setUserFixedPitchFont:") = Void, NSFont;
overload selector(static "setUserFont:") = Void, NSFont;
overload selector(static "setUserInfo:") = Void, NSDictionary;
overload selector(static "setUserInterfaceLayoutDirection:") = Void, Int;
overload selector(static "setUsesAlternatingRowBackgroundColors:") = Void, Bool;
overload selector(static "setUsesDataSource:") = Void, Bool;
overload selector(static "setUsesEPSOnResolutionMismatch:") = Void, Bool;
overload selector(static "setUsesFeedbackWindow:") = Void, Bool;
overload selector(static "setUsesFindPanel:") = Void, Bool;
overload selector(static "setUsesFontLeading:") = Void, Bool;
overload selector(static "setUsesFontPanel:") = Void, Bool;
overload selector(static "setUsesGroupingSeparator:") = Void, Bool;
overload selector(static "setUsesItemFromMenu:") = Void, Bool;
overload selector(static "setUsesLazyFetching:") = Void, Bool;
overload selector(static "setUsesRuler:") = Void, Bool;
overload selector(static "setUsesScreenFonts:") = Void, Bool;
overload selector(static "setUsesSignificantDigits:") = Void, Bool;
overload selector(static "setUsesSingleLineMode:") = Void, Bool;
overload selector(static "setUsesStrongWriteBarrier:") = Void, Bool;
overload selector(static "setUsesThreadedAnimation:") = Void, Bool;
overload selector(static "setUsesUserKeyEquivalents:") = Void, Bool;
overload selector(static "setUsesWeakReadAndWriteBarriers:") = Void, Bool;
overload selector(static "setValidateSize:") = Void, Bool;
overload selector(static "setValidationPredicates:withValidationWarnings:") = Void, NSArray, NSArray;
overload selector(static "setValue:") = Void, Id;
overload selector(static "setValue:forHTTPHeaderField:") = Void, NSString, NSString;
overload selector(static "setValue:forKey:") = Void, Id, NSString;
overload selector(static "setValue:forKeyPath:") = Void, Id, NSString;
overload selector(static "setValue:forUndefinedKey:") = Void, Id, NSString;
overload selector(static "setValue:type:forDimension:") = Void, Float, UInt, UInt;
overload selector(static "setValueExpression:") = Void, NSExpression;
overload selector(static "setValueFunction:") = Void, CAValueFunction;
overload selector(static "setValueListAttributes:") = Void, NSArray;
overload selector(static "setValueTransformer:forName:") = Void, NSValueTransformer, NSString;
overload selector(static "setValueTransformerName:") = Void, NSString;
overload selector(static "setValueWraps:") = Void, Bool;
overload selector(static "setValues:") = Void, NSArray;
overload selector(static "setValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
overload selector(static "setValuesForKeysWithDictionary:") = Void, NSDictionary;
overload selector(static "setVelocity:") = Void, Float;
overload selector(static "setVelocityRange:") = Void, Float;
overload selector(static "setVersion:") = Void, Int;
overload selector(static "setVersionHashModifier:") = Void, NSString;
overload selector(static "setVersionIdentifiers:") = Void, NSSet;
overload selector(static "setVertical:") = Void, Bool;
overload selector(static "setVerticalAlignment:") = Void, UInt;
overload selector(static "setVerticalLineScroll:") = Void, Float;
overload selector(static "setVerticalMotionCanBeginDrag:") = Void, Bool;
overload selector(static "setVerticalPageScroll:") = Void, Float;
overload selector(static "setVerticalPagination:") = Void, UInt;
overload selector(static "setVerticalRulerView:") = Void, NSRulerView;
overload selector(static "setVerticalScroller:") = Void, NSScroller;
overload selector(static "setVerticallyCentered:") = Void, Bool;
overload selector(static "setVerticallyResizable:") = Void, Bool;
overload selector(static "setVeryShortMonthSymbols:") = Void, NSArray;
overload selector(static "setVeryShortStandaloneMonthSymbols:") = Void, NSArray;
overload selector(static "setVeryShortStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector(static "setVeryShortWeekdaySymbols:") = Void, NSArray;
overload selector(static "setVideoPreviewConnection:") = Void, QTCaptureConnection;
overload selector(static "setView:") = Void, NSView;
overload selector(static "setViewAnimations:") = Void, NSArray;
overload selector(static "setViewsNeedDisplay:") = Void, Bool;
overload selector(static "setVisibilityPriority:") = Void, Int;
overload selector(static "setVisible:") = Void, Bool;
overload selector(static "setVisualContext:") = Void, QTVisualContextRef;
overload selector(static "setVisualContext:forConnection:") = Void, QTVisualContextRef, QTCaptureConnection;
overload selector(static "setVoice:") = Bool, NSString;
overload selector(static "setVolatileDomain:forName:") = Void, NSDictionary, NSString;
overload selector(static "setVolume:") = Void, Float;
overload selector(static "setVolumeButtonVisible:") = Void, Bool;
overload selector(static "setWantsLayer:") = Void, Bool;
overload selector(static "setWantsNotificationForMarkedText:") = Void, Bool;
overload selector(static "setWantsRestingTouches:") = Void, Bool;
overload selector(static "setWarningValue:") = Void, Double;
overload selector(static "setWeek:") = Void, Int;
overload selector(static "setWeekday:") = Void, Int;
overload selector(static "setWeekdayOrdinal:") = Void, Int;
overload selector(static "setWeekdaySymbols:") = Void, NSArray;
overload selector(static "setWidth:") = Void, Float;
overload selector(static "setWidth:forSegment:") = Void, Float, Int;
overload selector(static "setWidth:ofColumn:") = Void, Float, Int;
overload selector(static "setWidth:type:forLayer:") = Void, Float, UInt, Int;
overload selector(static "setWidth:type:forLayer:edge:") = Void, Float, UInt, Int, NSRectEdge;
overload selector(static "setWidthTracksTextView:") = Void, Bool;
overload selector(static "setWindingRule:") = Void, UInt;
overload selector(static "setWindow:") = Void, NSWindow;
overload selector(static "setWindowController:") = Void, NSWindowController;
overload selector(static "setWindowFrameAutosaveName:") = Void, NSString;
overload selector(static "setWindowFrameForAttachingToRect:onScreen:preferredEdge:popUpSelectedItem:") = Void, NSRect, NSScreen, NSRectEdge, Int;
overload selector(static "setWindowsMenu:") = Void, NSMenu;
overload selector(static "setWindowsNeedUpdate:") = Void, Bool;
overload selector(static "setWithArray:") = Id, NSArray;
overload selector(static "setWithCapacity:") = Id, UInt;
overload selector(static "setWithObject:") = Id, Id;
overload varargSelector(static "setWithObjects:") = Id, Id;
overload selector(static "setWithObjects:count:") = Id, Pointer[Id], UInt;
overload selector(static "setWithSet:") = Id, NSSet;
overload selector(static "setWordFieldStringValue:") = Void, NSString;
overload selector(static "setWords:") = Void, NSArray;
overload selector(static "setWorksWhenModal:") = Void, Bool;
overload selector(static "setWrapped:") = Void, Bool;
overload selector(static "setWraps:") = Void, Bool;
overload selector(static "setXAcceleration:") = Void, Float;
overload selector(static "setYAcceleration:") = Void, Float;
overload selector(static "setYear:") = Void, Int;
overload selector(static "setZAcceleration:") = Void, Float;
overload selector(static "setZPosition:") = Void, Float;
overload selector(static "setZeroSymbol:") = Void, NSString;
overload selector(static "setZoomButtonsVisible:") = Void, Bool;
overload selector(static "shadow") = NSShadow;
overload selector(static "shadowBlurRadius") = Float;
overload selector(static "shadowColor") = NSColor;
overload selector(static "shadowOffset") = CGSize;
overload selector(static "shadowOpacity") = Float;
overload selector(static "shadowRadius") = Float;
overload selector(static "shadowWithLevel:") = NSColor, Float;
overload selector(static "shapeWithRect:") = Id, CGRect;
overload selector(static "sharedAppleEventManager") = NSAppleEventManager;
overload selector(static "sharedApplication") = NSApplication;
overload selector(static "sharedCoercionHandler") = NSScriptCoercionHandler;
overload selector(static "sharedColorPanel") = NSColorPanel;
overload selector(static "sharedColorPanelExists") = Bool;
overload selector(static "sharedCredentialStorage") = NSURLCredentialStorage;
overload selector(static "sharedDocumentController") = Id;
overload selector(static "sharedFontManager") = NSFontManager;
overload selector(static "sharedFontPanel") = NSFontPanel;
overload selector(static "sharedFontPanelExists") = Bool;
overload selector(static "sharedFrameworksPath") = NSString;
overload selector(static "sharedFrameworksURL") = NSURL;
overload selector(static "sharedGlyphGenerator") = Id;
overload selector(static "sharedHTTPCookieStorage") = NSHTTPCookieStorage;
overload selector(static "sharedHelpManager") = NSHelpManager;
overload selector(static "sharedInstance") = Id;
overload selector(static "sharedPrintInfo") = NSPrintInfo;
overload selector(static "sharedScriptExecutionContext") = NSScriptExecutionContext;
overload selector(static "sharedScriptSuiteRegistry") = NSScriptSuiteRegistry;
overload selector(static "sharedSpellChecker") = NSSpellChecker;
overload selector(static "sharedSpellCheckerExists") = Bool;
overload selector(static "sharedSupportPath") = NSString;
overload selector(static "sharedSupportURL") = NSURL;
overload selector(static "sharedSystemTypesetter") = Id;
overload selector(static "sharedSystemTypesetterForBehavior:") = Id, Int;
overload selector(static "sharedTypesetter") = Id;
overload selector(static "sharedURLCache") = NSURLCache;
overload selector(static "sharedUserDefaultsController") = Id;
overload selector(static "sharedWorkspace") = NSWorkspace;
overload selector(static "sharingType") = UInt;
overload selector(static "shiftIndexesStartingAtIndex:by:") = Void, UInt, Int;
overload selector(static "shortMonthSymbols") = NSArray;
overload selector(static "shortQuarterSymbols") = NSArray;
overload selector(static "shortStandaloneMonthSymbols") = NSArray;
overload selector(static "shortStandaloneQuarterSymbols") = NSArray;
overload selector(static "shortStandaloneWeekdaySymbols") = NSArray;
overload selector(static "shortValue") = Short;
overload selector(static "shortWeekdaySymbols") = NSArray;
overload selector(static "shouldAntialias") = Bool;
overload selector(static "shouldArchiveValueForKey:") = Bool, NSString;
overload selector(static "shouldBeTreatedAsInkEvent:") = Bool, NSEvent;
overload selector(static "shouldBreakLineByHyphenatingBeforeCharacterAtIndex:") = Bool, UInt;
overload selector(static "shouldBreakLineByWordBeforeCharacterAtIndex:") = Bool, UInt;
overload selector(static "shouldCascadeWindows") = Bool;
overload selector(static "shouldChangePrintInfo:") = Bool, NSPrintInfo;
overload selector(static "shouldChangeTextInRange:replacementString:") = Bool, NSRange, NSString;
overload selector(static "shouldChangeTextInRanges:replacementStrings:") = Bool, NSArray, NSArray;
overload selector(static "shouldCloseDocument") = Bool;
overload selector(static "shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:") = Void, NSWindowController, Id, SelectorHandle, RawPointer;
overload selector(static "shouldCollapseAutoExpandedItemsForDeposited:") = Bool, Bool;
overload selector(static "shouldCreateUI") = Bool;
overload selector(static "shouldDelayWindowOrderingForEvent:") = Bool, NSEvent;
overload selector(static "shouldDrawColor") = Bool;
overload selector(static "shouldDrawInsertionPoint") = Bool;
overload selector(static "shouldFocusCell:atColumn:row:") = Bool, NSCell, Int, Int;
overload selector(static "shouldProcessNamespaces") = Bool;
overload selector(static "shouldReportNamespacePrefixes") = Bool;
overload selector(static "shouldResolveExternalEntities") = Bool;
overload selector(static "shouldRunSavePanelWithAccessoryView") = Bool;
overload selector(static "showAllHelpTopicsForSearchString:") = Void, NSString;
overload selector(static "showAttachmentCell:inRect:characterIndex:") = Void, NSCell, NSRect, UInt;
overload selector(static "showContextHelp:") = Void, Id;
overload selector(static "showContextHelpForObject:locationHint:") = Bool, Id, NSPoint;
overload selector(static "showController:adjustingSize:") = Void, Bool, Bool;
overload selector(static "showDefinitionForAttributedString:atPoint:") = Void, NSAttributedString, NSPoint;
overload selector(static "showDefinitionForAttributedString:range:options:baselineOriginProvider:") = Void, NSAttributedString, NSRange, NSDictionary, UnknownType;
overload selector(static "showFindIndicatorForRange:") = Void, NSRange;
overload selector(static "showGuessPanel:") = Void, Id;
overload selector(static "showHelp:") = Void, Id;
overload selector(static "showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:") = Void, Pointer[CChar], UInt, NSRange, NSPoint, NSFont, NSColor, NSSize;
overload selector(static "showPanels") = Bool;
overload selector(static "showSearchResultsForQueryString:") = Bool, NSString;
overload selector(static "showWindow:") = Void, Id;
overload selector(static "showWindows") = Void;
overload selector(static "showsAlpha") = Bool;
overload selector(static "showsApplicationBadge") = Bool;
overload selector(static "showsBaselineSeparator") = Bool;
overload selector(static "showsBorderOnlyWhileMouseInside") = Bool;
overload selector(static "showsControlCharacters") = Bool;
overload selector(static "showsFirstResponder") = Bool;
overload selector(static "showsHelp") = Bool;
overload selector(static "showsHiddenFiles") = Bool;
overload selector(static "showsInvisibleCharacters") = Bool;
overload selector(static "showsPrintPanel") = Bool;
overload selector(static "showsProgressPanel") = Bool;
overload selector(static "showsResizeIndicator") = Bool;
overload selector(static "showsStateBy") = Int;
overload selector(static "showsStateColumn") = Bool;
overload selector(static "showsSuppressionButton") = Bool;
overload selector(static "showsToolbarButton") = Bool;
overload selector(static "signal") = Void;
overload selector(static "signatureWithObjCTypes:") = NSMethodSignature, Pointer[CChar];
overload selector(static "size") = NSSize;
overload selector(static "sizeForKey:inTable:") = NSSize, NSString, NSString;
overload selector(static "sizeForMagnification:") = NSSize, Float;
overload selector(static "sizeForPaperName:") = NSSize, NSString;
overload selector(static "sizeFunction") = CCodePointer[[RawPointer],[UInt]];
overload selector(static "sizeLastColumnToFit") = Void;
overload selector(static "sizeMode") = UInt;
overload selector(static "sizeOfLabel:") = NSSize, Bool;
overload selector(static "sizeToCells") = Void;
overload selector(static "sizeToFit") = Void;
overload selector(static "sizeValue") = NSSize;
overload selector(static "sizeWithAttributes:") = NSSize, NSDictionary;
overload selector(static "skipDescendants") = Void;
overload selector(static "skipDescendents") = Void;
overload selector(static "sleepForTimeInterval:") = Void, Double;
overload selector(static "sleepUntilDate:") = Void, NSDate;
overload selector(static "slideDraggedImageTo:") = Void, NSPoint;
overload selector(static "slideImage:from:to:") = Void, NSImage, NSPoint, NSPoint;
overload selector(static "sliderType") = UInt;
overload selector(static "smallSystemFontSize") = Float;
overload selector(static "smallestEncoding") = UInt;
overload selector(static "smartDeleteRangeForProposedRange:") = NSRange, NSRange;
overload selector(static "smartInsertAfterStringForString:replacingRange:") = NSString, NSString, NSRange;
overload selector(static "smartInsertBeforeStringForString:replacingRange:") = NSString, NSString, NSRange;
overload selector(static "smartInsertDeleteEnabled") = Bool;
overload selector(static "smartInsertForString:replacingRange:beforeString:afterString:") = Void, NSString, NSRange, Pointer[NSString], Pointer[NSString];
overload selector(static "socket") = Int;
overload selector(static "socketType") = Int;
overload selector(static "sortDescriptorPrototype") = NSSortDescriptor;
overload selector(static "sortDescriptorWithKey:ascending:") = Id, NSString, Bool;
overload selector(static "sortDescriptorWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
overload selector(static "sortDescriptorWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
overload selector(static "sortDescriptors") = NSArray;
overload selector(static "sortIndicatorRectForBounds:") = NSRect, NSRect;
overload selector(static "sortSubviewsUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer;
overload selector(static "sortUsingComparator:") = Void, NSComparator;
overload selector(static "sortUsingDescriptors:") = Void, NSArray;
overload selector(static "sortUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer;
overload selector(static "sortUsingSelector:") = Void, SelectorHandle;
overload selector(static "sortWithOptions:usingComparator:") = Void, UInt, NSComparator;
overload selector(static "sortWithSortDescriptors:recursively:") = Void, NSArray, Bool;
overload selector(static "sortedArrayHint") = NSData;
overload selector(static "sortedArrayUsingComparator:") = NSArray, NSComparator;
overload selector(static "sortedArrayUsingDescriptors:") = NSArray, NSArray;
overload selector(static "sortedArrayUsingFunction:context:") = NSArray, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer;
overload selector(static "sortedArrayUsingFunction:context:hint:") = NSArray, CCodePointer[[Id,Id,RawPointer],[Int]], RawPointer, NSData;
overload selector(static "sortedArrayUsingSelector:") = NSArray, SelectorHandle;
overload selector(static "sortedArrayWithOptions:usingComparator:") = NSArray, UInt, NSComparator;
overload selector(static "sound") = NSSound;
overload selector(static "sound:didFinishPlaying:") = Void, NSSound, Bool;
overload selector(static "soundNamed:") = Id, NSString;
overload selector(static "soundUnfilteredFileTypes") = NSArray;
overload selector(static "soundUnfilteredPasteboardTypes") = NSArray;
overload selector(static "soundUnfilteredTypes") = NSArray;
overload selector(static "source") = NSString;
overload selector(static "sourceAttribute") = Int;
overload selector(static "sourceContext") = NSManagedObjectContext;
overload selector(static "sourceEntityForEntityMapping:") = NSEntityDescription, NSEntityMapping;
overload selector(static "sourceEntityName") = NSString;
overload selector(static "sourceEntityVersionHash") = NSData;
overload selector(static "sourceExpression") = NSExpression;
overload selector(static "sourceInstancesForEntityMappingNamed:destinationInstances:") = NSArray, NSString, NSArray;
overload selector(static "sourceModel") = NSManagedObjectModel;
overload selector(static "sourceName") = NSString;
overload selector(static "speechRecognizer:didRecognizeCommand:") = Void, NSSpeechRecognizer, Id;
overload selector(static "speechSynthesizer:didEncounterErrorAtIndex:ofString:message:") = Void, NSSpeechSynthesizer, UInt, NSString, NSString;
overload selector(static "speechSynthesizer:didEncounterSyncMessage:") = Void, NSSpeechSynthesizer, NSString;
overload selector(static "speechSynthesizer:didFinishSpeaking:") = Void, NSSpeechSynthesizer, Bool;
overload selector(static "speechSynthesizer:willSpeakPhoneme:") = Void, NSSpeechSynthesizer, Short;
overload selector(static "speechSynthesizer:willSpeakWord:ofString:") = Void, NSSpeechSynthesizer, NSRange, NSString;
overload selector(static "speed") = Float;
overload selector(static "spellCheckerDocumentTag") = Int;
overload selector(static "spellCheckingResultWithRange:") = NSTextCheckingResult, NSRange;
overload selector(static "spellServer:checkGrammarInString:language:details:") = NSRange, NSSpellServer, NSString, NSString, Pointer[NSArray];
overload selector(static "spellServer:checkString:offset:types:options:orthography:wordCount:") = NSArray, NSSpellServer, NSString, UInt, UInt64, NSDictionary, NSOrthography, Pointer[Int];
overload selector(static "spellServer:didForgetWord:inLanguage:") = Void, NSSpellServer, NSString, NSString;
overload selector(static "spellServer:didLearnWord:inLanguage:") = Void, NSSpellServer, NSString, NSString;
overload selector(static "spellServer:findMisspelledWordInString:language:wordCount:countOnly:") = NSRange, NSSpellServer, NSString, NSString, Pointer[Int], Bool;
overload selector(static "spellServer:suggestCompletionsForPartialWordRange:inString:language:") = NSArray, NSSpellServer, NSRange, NSString, NSString;
overload selector(static "spellServer:suggestGuessesForWord:inLanguage:") = NSArray, NSSpellServer, NSString, NSString;
overload selector(static "spellingPanel") = NSPanel;
overload selector(static "spin") = Float;
overload selector(static "spinRange") = Float;
overload selector(static "splitView:additionalEffectiveRectOfDividerAtIndex:") = NSRect, NSSplitView, Int;
overload selector(static "splitView:canCollapseSubview:") = Bool, NSSplitView, NSView;
overload selector(static "splitView:constrainMaxCoordinate:ofSubviewAt:") = Float, NSSplitView, Float, Int;
overload selector(static "splitView:constrainMinCoordinate:ofSubviewAt:") = Float, NSSplitView, Float, Int;
overload selector(static "splitView:constrainSplitPosition:ofSubviewAt:") = Float, NSSplitView, Float, Int;
overload selector(static "splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:") = NSRect, NSSplitView, NSRect, NSRect, Int;
overload selector(static "splitView:resizeSubviewsWithOldSize:") = Void, NSSplitView, NSSize;
overload selector(static "splitView:shouldAdjustSizeOfSubview:") = Bool, NSSplitView, NSView;
overload selector(static "splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:") = Bool, NSSplitView, NSView, Int;
overload selector(static "splitView:shouldHideDividerAtIndex:") = Bool, NSSplitView, Int;
overload selector(static "splitViewDidResizeSubviews:") = Void, NSNotification;
overload selector(static "splitViewWillResizeSubviews:") = Void, NSNotification;
overload selector(static "stackSize") = UInt;
overload selector(static "stalenessInterval") = Double;
overload selector(static "standaloneMonthSymbols") = NSArray;
overload selector(static "standaloneQuarterSymbols") = NSArray;
overload selector(static "standaloneWeekdaySymbols") = NSArray;
overload selector(static "standardError") = Id;
overload selector(static "standardInput") = Id;
overload selector(static "standardOutput") = Id;
overload selector(static "standardUserDefaults") = NSUserDefaults;
overload selector(static "standardWindowButton:") = NSButton, UInt;
overload selector(static "standardWindowButton:forStyleMask:") = NSButton, UInt, UInt;
overload selector(static "standardizedURL") = NSURL;
overload selector(static "start") = Void;
overload selector(static "start:") = Void, Id;
overload selector(static "startAnimation") = Void;
overload selector(static "startAnimation:") = Void, Id;
overload selector(static "startListening") = Void;
overload selector(static "startLoading") = Void;
overload selector(static "startMonitoring") = Void;
overload selector(static "startPeriodicEventsAfterDelay:withPeriod:") = Void, Double, Double;
overload selector(static "startPoint") = CGPoint;
overload selector(static "startProgress") = Float;
overload selector(static "startQuery") = Bool;
overload selector(static "startRunning") = Void;
overload selector(static "startSpeaking:") = Void, Id;
overload selector(static "startSpeakingString:") = Bool, NSString;
overload selector(static "startSpeakingString:toURL:") = Bool, NSString, NSURL;
overload selector(static "startSpecifier") = NSScriptObjectSpecifier;
overload selector(static "startSubelementIdentifier") = UInt;
overload selector(static "startSubelementIndex") = Int;
overload selector(static "startTimeOfChapter:") = QTTime, Int;
overload selector(static "startTrackingAt:inView:") = Bool, NSPoint, NSView;
overload selector(static "startWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
overload selector(static "startingColumn") = Int;
overload selector(static "startingItemNumber") = Int;
overload selector(static "startingRow") = Int;
overload selector(static "state") = Int;
overload selector(static "stateImageOffset") = Float;
overload selector(static "stateImageRectForBounds:") = NSRect, NSRect;
overload selector(static "stateImageWidth") = Float;
overload selector(static "statistics") = NSDictionary;
overload selector(static "status") = UInt;
overload selector(static "statusBar") = NSStatusBar;
overload selector(static "statusCode") = Int;
overload selector(static "statusForTable:") = UInt, NSString;
overload selector(static "statusItemWithLength:") = NSStatusItem, Float;
overload selector(static "stepBack:") = Void, Id;
overload selector(static "stepBackward") = Void;
overload selector(static "stepBackward:") = Void, Id;
overload selector(static "stepForward") = Void;
overload selector(static "stepForward:") = Void, Id;
overload selector(static "stop") = Bool;
overload selector(static "stop:") = Void, Id;
overload selector(static "stopAnimation") = Void;
overload selector(static "stopAnimation:") = Void, Id;
overload selector(static "stopListening") = Void;
overload selector(static "stopLoading") = Void;
overload selector(static "stopModal") = Void;
overload selector(static "stopModalWithCode:") = Void, Int;
overload selector(static "stopMonitoring") = Void;
overload selector(static "stopPeriodicEvents") = Void;
overload selector(static "stopQuery") = Void;
overload selector(static "stopRunning") = Void;
overload selector(static "stopSpeaking") = Void;
overload selector(static "stopSpeaking:") = Void, Id;
overload selector(static "stopSpeakingAtBoundary:") = Void, UInt;
overload selector(static "stopTracking:at:inView:mouseIsUp:") = Void, NSPoint, NSPoint, NSView, Bool;
overload selector(static "stopWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
overload selector(static "storagePolicy") = UInt;
overload selector(static "storeCachedResponse:forRequest:") = Void, NSCachedURLResponse, NSURLRequest;
overload selector(static "storedValueForKey:") = Id, NSString;
overload selector(static "stream:handleEvent:") = Void, NSStream, UInt;
overload selector(static "streamError") = NSError;
overload selector(static "streamStatus") = UInt;
overload selector(static "strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, Int, NSRect, NSRange, NSPoint;
overload selector(static "string") = Id;
overload selector(static "stringArrayForKey:") = NSArray, NSString;
overload selector(static "stringByAbbreviatingWithTildeInPath") = NSString;
overload selector(static "stringByAddingPercentEscapesUsingEncoding:") = NSString, UInt;
overload varargSelector(static "stringByAppendingFormat:") = NSString, NSString;
overload selector(static "stringByAppendingPathComponent:") = NSString, NSString;
overload selector(static "stringByAppendingPathExtension:") = NSString, NSString;
overload selector(static "stringByAppendingString:") = NSString, NSString;
overload selector(static "stringByDeletingLastPathComponent") = NSString;
overload selector(static "stringByDeletingPathExtension") = NSString;
overload selector(static "stringByExpandingTildeInPath") = NSString;
overload selector(static "stringByFoldingWithOptions:locale:") = NSString, UInt, NSLocale;
overload selector(static "stringByPaddingToLength:withString:startingAtIndex:") = NSString, UInt, NSString, UInt;
overload selector(static "stringByReplacingCharactersInRange:withString:") = NSString, NSRange, NSString;
overload selector(static "stringByReplacingOccurrencesOfString:withString:") = NSString, NSString, NSString;
overload selector(static "stringByReplacingOccurrencesOfString:withString:options:range:") = NSString, NSString, NSString, UInt, NSRange;
overload selector(static "stringByReplacingPercentEscapesUsingEncoding:") = NSString, UInt;
overload selector(static "stringByResolvingSymlinksInPath") = NSString;
overload selector(static "stringByStandardizingPath") = NSString;
overload selector(static "stringByTrimmingCharactersInSet:") = NSString, NSCharacterSet;
overload selector(static "stringForKey:") = NSString, NSString;
overload selector(static "stringForKey:inTable:") = NSString, NSString, NSString;
overload selector(static "stringForObjectValue:") = NSString, Id;
overload selector(static "stringForType:") = NSString, NSString;
overload selector(static "stringFromDate:") = NSString, NSDate;
overload selector(static "stringFromNumber:") = NSString, NSNumber;
overload selector(static "stringListForKey:inTable:") = NSArray, NSString, NSString;
overload selector(static "stringRepresentation") = NSString;
overload selector(static "stringValue") = NSString;
overload selector(static "stringWithCString:") = Id, Pointer[CChar];
overload selector(static "stringWithCString:encoding:") = Id, Pointer[CChar], UInt;
overload selector(static "stringWithCString:length:") = Id, Pointer[CChar], UInt;
overload selector(static "stringWithCapacity:") = Id, UInt;
overload selector(static "stringWithCharacters:length:") = Id, Pointer[UShort], UInt;
overload selector(static "stringWithContentsOfFile:") = Id, NSString;
overload selector(static "stringWithContentsOfFile:encoding:error:") = Id, NSString, UInt, Pointer[NSError];
overload selector(static "stringWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[UInt], Pointer[NSError];
overload selector(static "stringWithContentsOfURL:") = Id, NSURL;
overload selector(static "stringWithContentsOfURL:encoding:error:") = Id, NSURL, UInt, Pointer[NSError];
overload selector(static "stringWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[UInt], Pointer[NSError];
overload selector(static "stringWithFileSystemRepresentation:length:") = NSString, Pointer[CChar], UInt;
overload varargSelector(static "stringWithFormat:") = Id, NSString;
overload selector(static "stringWithSavedFrame") = NSString;
overload selector(static "stringWithString:") = Id, NSString;
overload selector(static "stringWithUTF8String:") = Id, Pointer[CChar];
overload selector(static "stringsByAppendingPaths:") = NSArray, NSArray;
overload selector(static "stroke") = Void;
overload selector(static "strokeColor") = CGColorRef;
overload selector(static "strokeLineFromPoint:toPoint:") = Void, NSPoint, NSPoint;
overload selector(static "strokeRect:") = Void, NSRect;
overload selector(static "style") = UInt;
overload selector(static "styleMask") = UInt;
overload selector(static "subarrayWithRange:") = NSArray, NSRange;
overload selector(static "subdataWithRange:") = NSData, NSRange;
overload selector(static "subentities") = NSArray;
overload selector(static "subentitiesByName") = NSDictionary;
overload selector(static "subgroups") = NSArray;
overload selector(static "subitems") = NSArray;
overload selector(static "sublayerTransform") = CATransform3D;
overload selector(static "sublayers") = NSArray;
overload selector(static "submenu") = NSMenu;
overload selector(static "submenuAction:") = Void, Id;
overload selector(static "subpathsAtPath:") = NSArray, NSString;
overload selector(static "subpathsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
overload selector(static "subpredicates") = NSArray;
overload selector(static "subrowIndexesForRow:") = NSIndexSet, Int;
overload selector(static "subrowsKeyPath") = NSString;
overload selector(static "subscript:") = Void, Id;
overload selector(static "subscriptRange:") = Void, NSRange;
overload selector(static "substituteFontForFont:") = NSFont, NSFont;
overload selector(static "substituteGlyphsInRange:withGlyphs:") = Void, NSRange, Pointer[UInt];
overload selector(static "substitutionsPanel") = NSPanel;
overload selector(static "substitutionsPanelAccessoryViewController") = NSViewController;
overload selector(static "substringFromIndex:") = NSString, UInt;
overload selector(static "substringToIndex:") = NSString, UInt;
overload selector(static "substringWithRange:") = NSString, NSRange;
overload selector(static "subtype") = Short;
overload selector(static "subviews") = NSArray;
overload selector(static "suggestedFilename") = NSString;
overload selector(static "suiteForAppleEventCode:") = NSString, CULong;
overload selector(static "suiteName") = NSString;
overload selector(static "suiteNames") = NSArray;
overload selector(static "superclass") = Id;
overload selector(static "superclassDescription") = NSScriptClassDescription;
overload selector(static "superentity") = NSEntityDescription;
overload selector(static "superlayer") = CALayer;
overload selector(static "supermenu") = NSMenu;
overload selector(static "superscript:") = Void, Id;
overload selector(static "superscriptRange:") = Void, NSRange;
overload selector(static "superview") = NSView;
overload selector(static "supportedWindowDepths") = Pointer[Int];
overload selector(static "supportsCommand:") = Bool, NSScriptCommandDescription;
overload selector(static "supportsMode:") = Bool, Int;
overload selector(static "supportsProperty:") = Bool, CULong;
overload selector(static "supportsUnicode") = Bool;
overload selector(static "suppressionButton") = NSButton;
overload selector(static "suspend") = Bool;
overload selector(static "suspendCurrentAppleEvent") = NSAppleEventManagerSuspensionID;
overload selector(static "suspendExecution") = Void;
overload selector(static "suspended") = Bool;
overload selector(static "swapWithMark:") = Void, Id;
overload selector(static "swipeWithEvent:") = Void, NSEvent;
overload selector(static "symbolCharacterSet") = Id;
overload selector(static "symbolicLinkDestination") = NSString;
overload selector(static "symbolicLinkDestinationURL") = NSURL;
overload selector(static "symbolicTraits") = UInt;
overload selector(static "synchronize") = Bool;
overload selector(static "synchronizeFile") = Void;
overload selector(static "synchronizeTitleAndSelectedItem") = Void;
overload selector(static "synchronizeWindowTitleWithDocumentName") = Void;
overload selector(static "systemDefaultPortNameServer") = NSPortNameServer;
overload selector(static "systemFontOfSize:") = NSFont, Float;
overload selector(static "systemFontSize") = Float;
overload selector(static "systemFontSizeForControlSize:") = Float, UInt;
overload selector(static "systemID") = NSString;
overload selector(static "systemLocale") = Id;
overload selector(static "systemStatusBar") = NSStatusBar;
overload selector(static "systemTabletID") = UInt;
overload selector(static "systemTimeZone") = NSTimeZone;
overload selector(static "systemUptime") = Double;
overload selector(static "systemVersion") = UInt;
overload selector(static "tabKeyTraversesCells") = Bool;
overload selector(static "tabState") = UInt;
overload selector(static "tabStopType") = UInt;
overload selector(static "tabStops") = NSArray;
overload selector(static "tabView") = NSTabView;
overload selector(static "tabView:didSelectTabViewItem:") = Void, NSTabView, NSTabViewItem;
overload selector(static "tabView:shouldSelectTabViewItem:") = Bool, NSTabView, NSTabViewItem;
overload selector(static "tabView:willSelectTabViewItem:") = Void, NSTabView, NSTabViewItem;
overload selector(static "tabViewDidChangeNumberOfTabViewItems:") = Void, NSTabView;
overload selector(static "tabViewItemAtIndex:") = NSTabViewItem, Int;
overload selector(static "tabViewItemAtPoint:") = NSTabViewItem, NSPoint;
overload selector(static "tabViewItems") = NSArray;
overload selector(static "tabViewType") = UInt;
overload selector(static "table") = NSTextTable;
overload selector(static "tableColumnWithIdentifier:") = NSTableColumn, Id;
overload selector(static "tableColumns") = NSArray;
overload selector(static "tableView") = NSTableView;
overload selector(static "tableView:acceptDrop:row:dropOperation:") = Bool, NSTableView, Id, Int, UInt;
overload selector(static "tableView:dataCellForTableColumn:row:") = NSCell, NSTableView, NSTableColumn, Int;
overload selector(static "tableView:didClickTableColumn:") = Void, NSTableView, NSTableColumn;
overload selector(static "tableView:didDragTableColumn:") = Void, NSTableView, NSTableColumn;
overload selector(static "tableView:heightOfRow:") = Float, NSTableView, Int;
overload selector(static "tableView:isGroupRow:") = Bool, NSTableView, Int;
overload selector(static "tableView:mouseDownInHeaderOfTableColumn:") = Void, NSTableView, NSTableColumn;
overload selector(static "tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:") = NSArray, NSTableView, NSURL, NSIndexSet;
overload selector(static "tableView:nextTypeSelectMatchFromRow:toRow:forString:") = Int, NSTableView, Int, Int, NSString;
overload selector(static "tableView:objectValueForTableColumn:row:") = Id, NSTableView, NSTableColumn, Int;
overload selector(static "tableView:selectionIndexesForProposedSelection:") = NSIndexSet, NSTableView, NSIndexSet;
overload selector(static "tableView:setObjectValue:forTableColumn:row:") = Void, NSTableView, Id, NSTableColumn, Int;
overload selector(static "tableView:shouldEditTableColumn:row:") = Bool, NSTableView, NSTableColumn, Int;
overload selector(static "tableView:shouldReorderColumn:toColumn:") = Bool, NSTableView, Int, Int;
overload selector(static "tableView:shouldSelectRow:") = Bool, NSTableView, Int;
overload selector(static "tableView:shouldSelectTableColumn:") = Bool, NSTableView, NSTableColumn;
overload selector(static "tableView:shouldShowCellExpansionForTableColumn:row:") = Bool, NSTableView, NSTableColumn, Int;
overload selector(static "tableView:shouldTrackCell:forTableColumn:row:") = Bool, NSTableView, NSCell, NSTableColumn, Int;
overload selector(static "tableView:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSTableView, NSEvent, NSString;
overload selector(static "tableView:sizeToFitWidthOfColumn:") = Float, NSTableView, Int;
overload selector(static "tableView:sortDescriptorsDidChange:") = Void, NSTableView, NSArray;
overload selector(static "tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:") = NSString, NSTableView, NSCell, NSRectPointer, NSTableColumn, Int, NSPoint;
overload selector(static "tableView:typeSelectStringForTableColumn:row:") = NSString, NSTableView, NSTableColumn, Int;
overload selector(static "tableView:validateDrop:proposedRow:proposedDropOperation:") = UInt, NSTableView, Id, Int, UInt;
overload selector(static "tableView:willDisplayCell:forTableColumn:row:") = Void, NSTableView, Id, NSTableColumn, Int;
overload selector(static "tableView:writeRows:toPasteboard:") = Bool, NSTableView, NSArray, NSPasteboard;
overload selector(static "tableView:writeRowsWithIndexes:toPasteboard:") = Bool, NSTableView, NSIndexSet, NSPasteboard;
overload selector(static "tableViewColumnDidMove:") = Void, NSNotification;
overload selector(static "tableViewColumnDidResize:") = Void, NSNotification;
overload selector(static "tableViewSelectionDidChange:") = Void, NSNotification;
overload selector(static "tableViewSelectionIsChanging:") = Void, NSNotification;
overload selector(static "tabletID") = UInt;
overload selector(static "tabletPoint:") = Void, NSEvent;
overload selector(static "tabletProximity:") = Void, NSEvent;
overload selector(static "tag") = Int;
overload selector(static "tagForSegment:") = Int, Int;
overload selector(static "tailIndent") = Float;
overload selector(static "takeColorFrom:") = Void, Id;
overload selector(static "takeDoubleValueFrom:") = Void, Id;
overload selector(static "takeFloatValueFrom:") = Void, Id;
overload selector(static "takeIntValueFrom:") = Void, Id;
overload selector(static "takeIntegerValueFrom:") = Void, Id;
overload selector(static "takeObjectValueFrom:") = Void, Id;
overload selector(static "takeSelectedTabViewItemFromSender:") = Void, Id;
overload selector(static "takeStoredValue:forKey:") = Void, Id, NSString;
overload selector(static "takeStringValueFrom:") = Void, Id;
overload selector(static "takeValue:forKey:") = Void, Id, NSString;
overload selector(static "takeValue:forKeyPath:") = Void, Id, NSString;
overload selector(static "takeValuesFromDictionary:") = Void, NSDictionary;
overload selector(static "takesTitleFromPreviousColumn") = Bool;
overload selector(static "tangentialPressure") = Float;
overload selector(static "target") = Id;
overload selector(static "targetForAction:") = Id, SelectorHandle;
overload selector(static "targetForAction:to:from:") = Id, SelectorHandle, Id, Id;
overload selector(static "tearOffMenuRepresentation") = Id;
overload selector(static "templateViews") = NSArray;
overload selector(static "templatesWithAttributeKeyPaths:inEntityDescription:") = NSArray, NSArray, NSEntityDescription;
overload selector(static "temporaryAttribute:atCharacterIndex:effectiveRange:") = Id, NSString, UInt, NSRangePointer;
overload selector(static "temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:") = Id, NSString, UInt, NSRangePointer, NSRange;
overload selector(static "temporaryAttributesAtCharacterIndex:effectiveRange:") = NSDictionary, UInt, NSRangePointer;
overload selector(static "temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:") = NSDictionary, UInt, NSRangePointer, NSRange;
overload selector(static "terminate") = Bool;
overload selector(static "terminate:") = Void, Id;
overload selector(static "terminationReason") = Int;
overload selector(static "terminationStatus") = Int;
overload selector(static "test") = NSScriptWhoseTest;
overload selector(static "testPart:") = UInt, NSPoint;
overload selector(static "textAttributesForNegativeInfinity") = NSDictionary;
overload selector(static "textAttributesForNegativeValues") = NSDictionary;
overload selector(static "textAttributesForNil") = NSDictionary;
overload selector(static "textAttributesForNotANumber") = NSDictionary;
overload selector(static "textAttributesForPositiveInfinity") = NSDictionary;
overload selector(static "textAttributesForPositiveValues") = NSDictionary;
overload selector(static "textAttributesForZero") = NSDictionary;
overload selector(static "textBackgroundColor") = NSColor;
overload selector(static "textBlocks") = NSArray;
overload selector(static "textColor") = NSColor;
overload selector(static "textContainer") = NSTextContainer;
overload selector(static "textContainerChangedGeometry:") = Void, NSTextContainer;
overload selector(static "textContainerChangedTextView:") = Void, NSTextContainer;
overload selector(static "textContainerForGlyphAtIndex:effectiveRange:") = NSTextContainer, UInt, NSRangePointer;
overload selector(static "textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSTextContainer, UInt, NSRangePointer, Bool;
overload selector(static "textContainerInset") = NSSize;
overload selector(static "textContainerOrigin") = NSPoint;
overload selector(static "textContainers") = NSArray;
overload selector(static "textDidBeginEditing:") = Void, NSNotification;
overload selector(static "textDidChange:") = Void, NSNotification;
overload selector(static "textDidEndEditing:") = Void, NSNotification;
overload selector(static "textEncodingName") = NSString;
overload selector(static "textFileTypes") = NSArray;
overload selector(static "textLists") = NSArray;
overload selector(static "textPasteboardTypes") = NSArray;
overload selector(static "textShouldBeginEditing:") = Bool, NSText;
overload selector(static "textShouldEndEditing:") = Bool, NSText;
overload selector(static "textStorage") = NSTextStorage;
overload selector(static "textStorage:edited:range:changeInLength:invalidatedRange:") = Void, NSTextStorage, UInt, NSRange, Int, NSRange;
overload selector(static "textStorageDidProcessEditing:") = Void, NSNotification;
overload selector(static "textStorageWillProcessEditing:") = Void, NSNotification;
overload selector(static "textTabForGlyphLocation:writingDirection:maxLocation:") = NSTextTab, Float, Int, Float;
overload selector(static "textTransform") = NSAffineTransform;
overload selector(static "textTypes") = NSArray;
overload selector(static "textUnfilteredFileTypes") = NSArray;
overload selector(static "textUnfilteredPasteboardTypes") = NSArray;
overload selector(static "textUnfilteredTypes") = NSArray;
overload selector(static "textView") = NSTextView;
overload selector(static "textView:clickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
overload selector(static "textView:clickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, UInt;
overload selector(static "textView:clickedOnLink:") = Bool, NSTextView, Id;
overload selector(static "textView:clickedOnLink:atIndex:") = Bool, NSTextView, Id, UInt;
overload selector(static "textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSTextView, NSArray, NSRange, Pointer[Int];
overload selector(static "textView:didCheckTextInRange:types:options:results:orthography:wordCount:") = NSArray, NSTextView, NSRange, UInt64, NSDictionary, NSArray, NSOrthography, Int;
overload selector(static "textView:doCommandBySelector:") = Bool, NSTextView, SelectorHandle;
overload selector(static "textView:doubleClickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
overload selector(static "textView:doubleClickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, UInt;
overload selector(static "textView:draggedCell:inRect:event:") = Void, NSTextView, Id, NSRect, NSEvent;
overload selector(static "textView:draggedCell:inRect:event:atIndex:") = Void, NSTextView, Id, NSRect, NSEvent, UInt;
overload selector(static "textView:menu:forEvent:atIndex:") = NSMenu, NSTextView, NSMenu, NSEvent, UInt;
overload selector(static "textView:shouldChangeTextInRange:replacementString:") = Bool, NSTextView, NSRange, NSString;
overload selector(static "textView:shouldChangeTextInRanges:replacementStrings:") = Bool, NSTextView, NSArray, NSArray;
overload selector(static "textView:shouldChangeTypingAttributes:toAttributes:") = NSDictionary, NSTextView, NSDictionary, NSDictionary;
overload selector(static "textView:shouldSetSpellingState:range:") = Int, NSTextView, Int, NSRange;
overload selector(static "textView:willChangeSelectionFromCharacterRange:toCharacterRange:") = NSRange, NSTextView, NSRange, NSRange;
overload selector(static "textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:") = NSArray, NSTextView, NSArray, NSArray;
overload selector(static "textView:willCheckTextInRange:options:types:") = NSDictionary, NSTextView, NSRange, NSDictionary, Pointer[UInt64];
overload selector(static "textView:willDisplayToolTip:forCharacterAtIndex:") = NSString, NSTextView, NSString, UInt;
overload selector(static "textView:writablePasteboardTypesForCell:atIndex:") = NSArray, NSTextView, Id, UInt;
overload selector(static "textView:writeCell:atIndex:toPasteboard:type:") = Bool, NSTextView, Id, UInt, NSPasteboard, NSString;
overload selector(static "textViewDidChangeSelection:") = Void, NSNotification;
overload selector(static "textViewDidChangeTypingAttributes:") = Void, NSNotification;
overload selector(static "textViewForBeginningOfSelection") = NSTextView;
overload selector(static "textWithStringValue:") = Id, NSString;
overload selector(static "textureInternalFormat") = UInt;
overload selector(static "textureMaxMipMapLevel") = Int;
overload selector(static "textureTarget") = UInt;
overload selector(static "thickness") = Float;
overload selector(static "thicknessRequiredInRuler") = Float;
overload selector(static "thousandSeparator") = NSString;
overload selector(static "threadDictionary") = NSMutableDictionary;
overload selector(static "threadPriority") = Double;
overload selector(static "tickMarkPosition") = UInt;
overload selector(static "tickMarkValueAtIndex:") = Double, Int;
overload selector(static "tightenKerning:") = Void, Id;
overload selector(static "tighteningFactorForTruncation") = Float;
overload selector(static "tile") = Void;
overload selector(static "tileSize") = CGSize;
overload selector(static "tilt") = NSPoint;
overload selector(static "timeInterval") = Double;
overload selector(static "timeIntervalSince1970") = Double;
overload selector(static "timeIntervalSinceDate:") = Double, NSDate;
overload selector(static "timeIntervalSinceNow") = Double;
overload selector(static "timeIntervalSinceReferenceDate") = Double;
overload selector(static "timeOffset") = Double;
overload selector(static "timeStyle") = UInt;
overload selector(static "timeZone") = NSTimeZone;
overload selector(static "timeZoneDataVersion") = NSString;
overload selector(static "timeZoneForSecondsFromGMT:") = Id, Int;
overload selector(static "timeZoneWithAbbreviation:") = Id, NSString;
overload selector(static "timeZoneWithName:") = Id, NSString;
overload selector(static "timeZoneWithName:data:") = Id, NSString, NSData;
overload selector(static "timeoutInterval") = Double;
overload selector(static "timerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
overload selector(static "timerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
overload selector(static "timestamp") = Double;
overload selector(static "timingFunction") = CAMediaTimingFunction;
overload selector(static "timingFunctions") = NSArray;
overload selector(static "title") = NSString;
overload selector(static "titleAlignment") = UInt;
overload selector(static "titleBarFontOfSize:") = NSFont, Float;
overload selector(static "titleBaseWritingDirection") = Int;
overload selector(static "titleCell") = Id;
overload selector(static "titleColor") = NSColor;
overload selector(static "titleFont") = NSFont;
overload selector(static "titleFrameOfColumn:") = NSRect, Int;
overload selector(static "titleHeight") = Float;
overload selector(static "titleOfColumn:") = NSString, Int;
overload selector(static "titleOfSelectedItem") = NSString;
overload selector(static "titlePosition") = UInt;
overload selector(static "titleRect") = NSRect;
overload selector(static "titleRectForBounds:") = NSRect, NSRect;
overload selector(static "titleWidth") = Float;
overload selector(static "titleWidth:") = Float, NSSize;
overload selector(static "toManyRelationshipKeys") = NSArray;
overload selector(static "toOneRelationshipKeys") = NSArray;
overload selector(static "toValue") = Id;
overload selector(static "toggle:") = Void, Id;
overload selector(static "toggleAutomaticDashSubstitution:") = Void, Id;
overload selector(static "toggleAutomaticDataDetection:") = Void, Id;
overload selector(static "toggleAutomaticLinkDetection:") = Void, Id;
overload selector(static "toggleAutomaticQuoteSubstitution:") = Void, Id;
overload selector(static "toggleAutomaticSpellingCorrection:") = Void, Id;
overload selector(static "toggleAutomaticTextReplacement:") = Void, Id;
overload selector(static "toggleBaseWritingDirection:") = Void, Id;
overload selector(static "toggleContinuousSpellChecking:") = Void, Id;
overload selector(static "toggleGrammarChecking:") = Void, Id;
overload selector(static "toggleRuler:") = Void, Id;
overload selector(static "toggleSmartInsertDelete:") = Void, Id;
overload selector(static "toggleToolbarShown:") = Void, Id;
overload selector(static "toggleTraditionalCharacterShape:") = Void, Id;
overload selector(static "tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:") = NSArray, NSTokenField, NSString, Int, Pointer[Int];
overload selector(static "tokenField:displayStringForRepresentedObject:") = NSString, NSTokenField, Id;
overload selector(static "tokenField:editingStringForRepresentedObject:") = NSString, NSTokenField, Id;
overload selector(static "tokenField:hasMenuForRepresentedObject:") = Bool, NSTokenField, Id;
overload selector(static "tokenField:menuForRepresentedObject:") = NSMenu, NSTokenField, Id;
overload selector(static "tokenField:readFromPasteboard:") = NSArray, NSTokenField, NSPasteboard;
overload selector(static "tokenField:representedObjectForEditingString:") = Id, NSTokenField, NSString;
overload selector(static "tokenField:shouldAddObjects:atIndex:") = NSArray, NSTokenField, NSArray, UInt;
overload selector(static "tokenField:styleForRepresentedObject:") = UInt, NSTokenField, Id;
overload selector(static "tokenField:writeRepresentedObjects:toPasteboard:") = Bool, NSTokenField, NSArray, NSPasteboard;
overload selector(static "tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:") = NSArray, NSTokenFieldCell, NSString, Int, Pointer[Int];
overload selector(static "tokenFieldCell:displayStringForRepresentedObject:") = NSString, NSTokenFieldCell, Id;
overload selector(static "tokenFieldCell:editingStringForRepresentedObject:") = NSString, NSTokenFieldCell, Id;
overload selector(static "tokenFieldCell:hasMenuForRepresentedObject:") = Bool, NSTokenFieldCell, Id;
overload selector(static "tokenFieldCell:menuForRepresentedObject:") = NSMenu, NSTokenFieldCell, Id;
overload selector(static "tokenFieldCell:readFromPasteboard:") = NSArray, NSTokenFieldCell, NSPasteboard;
overload selector(static "tokenFieldCell:representedObjectForEditingString:") = Id, NSTokenFieldCell, NSString;
overload selector(static "tokenFieldCell:shouldAddObjects:atIndex:") = NSArray, NSTokenFieldCell, NSArray, UInt;
overload selector(static "tokenFieldCell:styleForRepresentedObject:") = UInt, NSTokenFieldCell, Id;
overload selector(static "tokenFieldCell:writeRepresentedObjects:toPasteboard:") = Bool, NSTokenFieldCell, NSArray, NSPasteboard;
overload selector(static "tokenStyle") = UInt;
overload selector(static "tokenizingCharacterSet") = NSCharacterSet;
overload selector(static "toolTip") = NSString;
overload selector(static "toolTipForCell:") = NSString, NSCell;
overload selector(static "toolTipForSegment:") = NSString, Int;
overload selector(static "toolTipsFontOfSize:") = NSFont, Float;
overload selector(static "toolbar") = NSToolbar;
overload selector(static "toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:") = NSToolbarItem, NSToolbar, NSString, Bool;
overload selector(static "toolbarAllowedItemIdentifiers:") = NSArray, NSToolbar;
overload selector(static "toolbarDefaultItemIdentifiers:") = NSArray, NSToolbar;
overload selector(static "toolbarDidRemoveItem:") = Void, NSNotification;
overload selector(static "toolbarSelectableItemIdentifiers:") = NSArray, NSToolbar;
overload selector(static "toolbarWillAddItem:") = Void, NSNotification;
overload selector(static "topLevelObject") = Id;
overload selector(static "topMargin") = Float;
overload selector(static "totalCostLimit") = UInt;
overload selector(static "touchesBeganWithEvent:") = Void, NSEvent;
overload selector(static "touchesCancelledWithEvent:") = Void, NSEvent;
overload selector(static "touchesEndedWithEvent:") = Void, NSEvent;
overload selector(static "touchesMatchingPhase:inView:") = NSSet, UInt, NSView;
overload selector(static "touchesMovedWithEvent:") = Void, NSEvent;
overload selector(static "track") = QTTrack;
overload selector(static "trackAttributes") = NSDictionary;
overload selector(static "trackKnob:") = Void, NSEvent;
overload selector(static "trackMarker:withMouseEvent:") = Bool, NSRulerMarker, NSEvent;
overload selector(static "trackMouse:adding:") = Bool, NSEvent, Bool;
overload selector(static "trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, UInt, Bool;
overload selector(static "trackMouse:inRect:ofView:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, Bool;
overload selector(static "trackRect") = NSRect;
overload selector(static "trackScrollButtons:") = Void, NSEvent;
overload selector(static "trackWithEvent:") = Bool, NSEvent;
overload selector(static "trackWithQuickTimeTrack:error:") = Id, Track, Pointer[NSError];
overload selector(static "trackingArea") = NSTrackingArea;
overload selector(static "trackingAreas") = NSArray;
overload selector(static "trackingMode") = UInt;
overload selector(static "trackingNumber") = Int;
overload selector(static "tracks") = NSArray;
overload selector(static "tracksOfMediaType:") = NSArray, NSString;
overload selector(static "trailingOffset") = Float;
overload selector(static "traitsOfFont:") = UInt, NSFont;
overload selector(static "transactionID") = CLong;
overload selector(static "transform") = NSAffineTransform;
overload selector(static "transformBezierPath:") = NSBezierPath, NSBezierPath;
overload selector(static "transformBy:interior:") = CIFilterShape, CGAffineTransform, Bool;
overload selector(static "transformPoint:") = NSPoint, NSPoint;
overload selector(static "transformSize:") = NSSize, NSSize;
overload selector(static "transformStruct") = NSAffineTransformStruct;
overload selector(static "transformUsingAffineTransform:") = Void, NSAffineTransform;
overload selector(static "transformedValue:") = Id, Id;
overload selector(static "transformedValueClass") = Id;
overload selector(static "translateOriginToPoint:") = Void, NSPoint;
overload selector(static "translateRectsNeedingDisplayInRect:by:") = Void, NSRect, NSSize;
overload selector(static "translateXBy:yBy:") = Void, Float, Float;
overload selector(static "transpose:") = Void, Id;
overload selector(static "transposeWords:") = Void, Id;
overload selector(static "treatsFilePackagesAsDirectories") = Bool;
overload selector(static "treeNodeWithRepresentedObject:") = Id, Id;
overload selector(static "trim:") = Void, Id;
overload selector(static "truncateFileAtOffset:") = Void, UInt64;
overload selector(static "truncatesLastVisibleLine") = Bool;
overload selector(static "truncationMode") = NSString;
overload selector(static "tryLock") = Bool;
overload selector(static "tryLockWhenCondition:") = Bool, Int;
overload selector(static "tryToPerform:with:") = Bool, SelectorHandle, Id;
overload selector(static "turnOffKerning:") = Void, Id;
overload selector(static "turnOffLigatures:") = Void, Id;
overload selector(static "twoDigitStartDate") = NSDate;
overload selector(static "type") = NSString;
overload selector(static "type:conformsToType:") = Bool, NSString, NSString;
overload selector(static "typeCodeValue") = CULong;
overload selector(static "typeForArgumentWithName:") = NSString, NSString;
overload selector(static "typeForContentsOfURL:error:") = NSString, NSURL, Pointer[NSError];
overload selector(static "typeForKey:") = NSString, NSString;
overload selector(static "typeFromFileExtension:") = NSString, NSString;
overload selector(static "typeOfFile:error:") = NSString, NSString, Pointer[NSError];
overload selector(static "types") = NSArray;
overload selector(static "typesFilterableTo:") = NSArray, NSString;
overload selector(static "typesetter") = NSTypesetter;
overload selector(static "typesetterBehavior") = Int;
overload selector(static "typingAttributes") = NSDictionary;
overload selector(static "unableToSetNilForKey:") = Void, NSString;
overload selector(static "unarchiveObjectWithData:") = Id, NSData;
overload selector(static "unarchiveObjectWithFile:") = Id, NSString;
overload selector(static "unarchiver:cannotDecodeObjectOfClassName:originalClasses:") = Id, NSKeyedUnarchiver, NSString, NSArray;
overload selector(static "unarchiver:didDecodeObject:") = Id, NSKeyedUnarchiver, Id;
overload selector(static "unarchiver:willReplaceObject:withObject:") = Void, NSKeyedUnarchiver, Id, Id;
overload selector(static "unarchiverDidFinish:") = Void, NSKeyedUnarchiver;
overload selector(static "unarchiverWillFinish:") = Void, NSKeyedUnarchiver;
overload selector(static "unbind:") = Void, NSString;
overload selector(static "underline:") = Void, Id;
overload selector(static "underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, Int, NSRect, NSRange, NSPoint;
overload selector(static "underlinePosition") = Float;
overload selector(static "underlineThickness") = Float;
overload selector(static "undo") = Void;
overload selector(static "undoActionName") = NSString;
overload selector(static "undoManager") = NSUndoManager;
overload selector(static "undoManagerForTextView:") = NSUndoManager, NSTextView;
overload selector(static "undoMenuItemTitle") = NSString;
overload selector(static "undoMenuTitleForUndoActionName:") = NSString, NSString;
overload selector(static "undoNestedGroup") = Void;
overload selector(static "unhide") = Bool;
overload selector(static "unhide:") = Void, Id;
overload selector(static "unhideAllApplications:") = Void, Id;
overload selector(static "unhideWithoutActivation") = Void;
overload selector(static "unionHashTable:") = Void, NSHashTable;
overload selector(static "unionSet:") = Void, NSSet;
overload selector(static "unionWith:") = CIFilterShape, CIFilterShape;
overload selector(static "unionWithRect:") = CIFilterShape, CGRect;
overload selector(static "uniqueID") = Id;
overload selector(static "uniqueSpellDocumentTag") = Int;
overload selector(static "unlearnWord:") = Void, NSString;
overload selector(static "unload") = Bool;
overload selector(static "unlock") = Void;
overload selector(static "unlockFocus") = Void;
overload selector(static "unlockWithCondition:") = Void, Int;
overload selector(static "unmarkText") = Void;
overload selector(static "unmountAndEjectDeviceAtPath:") = Bool, NSString;
overload selector(static "unmountAndEjectDeviceAtURL:error:") = Bool, NSURL, Pointer[NSError];
overload selector(static "unregisterClass:") = Void, Id;
overload selector(static "unregisterDraggedTypes") = Void;
overload selector(static "unregisterImageRepClass:") = Void, Id;
overload selector(static "unregisterUserInterfaceItemSearchHandler:") = Void, Id;
overload selector(static "unscheduleFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector(static "unscript:") = Void, Id;
overload selector(static "unscriptRange:") = Void, NSRange;
overload selector(static "unsignedCharValue") = CUChar;
overload selector(static "unsignedIntValue") = UInt;
overload selector(static "unsignedIntegerValue") = UInt;
overload selector(static "unsignedLongLongValue") = UInt64;
overload selector(static "unsignedLongValue") = CULong;
overload selector(static "unsignedShortValue") = UShort;
overload selector(static "update") = Void;
overload selector(static "updateAttachmentsFromPath:") = Void, NSString;
overload selector(static "updateBounds") = CGRect;
overload selector(static "updateCacheNode:fromManagedObject:") = Void, NSAtomicStoreCacheNode, NSManagedObject;
overload selector(static "updateCell:") = Void, NSCell;
overload selector(static "updateCellInside:") = Void, NSCell;
overload selector(static "updateChangeCount:") = Void, UInt;
overload selector(static "updateDragTypeRegistration") = Void;
overload selector(static "updateFontPanel") = Void;
overload selector(static "updateFromPMPageFormat") = Void;
overload selector(static "updateFromPMPrintSettings") = Void;
overload selector(static "updateFromPath:") = Bool, NSString;
overload selector(static "updateFromPrintInfo") = Void;
overload selector(static "updateInsertionPointStateAndRestartTimer:") = Void, Bool;
overload selector(static "updateMovieFile") = Bool;
overload selector(static "updatePanels") = Void;
overload selector(static "updateRuler") = Void;
overload selector(static "updateScroller") = Void;
overload selector(static "updateSpellingPanelWithGrammarString:detail:") = Void, NSString, NSDictionary;
overload selector(static "updateSpellingPanelWithMisspelledWord:") = Void, NSString;
overload selector(static "updateTrackingAreas") = Void;
overload selector(static "updateWindows") = Void;
overload selector(static "updateWindowsItem:") = Void, NSWindow;
overload selector(static "updatedObjects") = NSSet;
overload selector(static "uppercaseLetterCharacterSet") = Id;
overload selector(static "uppercaseString") = NSString;
overload selector(static "uppercaseWord:") = Void, Id;
overload selector(static "url") = NSURL;
overload selector(static "usableParts") = UInt;
overload selector(static "useAllLigatures:") = Void, Id;
overload selector(static "useCredential:forAuthenticationChallenge:") = Void, NSURLCredential, NSURLAuthenticationChallenge;
overload selector(static "useFont:") = Void, NSString;
overload selector(static "useOptimizedDrawing:") = Void, Bool;
overload selector(static "useStandardKerning:") = Void, Id;
overload selector(static "useStandardLigatures:") = Void, Id;
overload selector(static "useStoredAccessor") = Bool;
overload selector(static "usedRectForTextContainer:") = NSRect, NSTextContainer;
overload selector(static "user") = NSString;
overload selector(static "userData") = RawPointer;
overload selector(static "userDefaultsChanged") = Bool;
overload selector(static "userFixedPitchFontOfSize:") = NSFont, Float;
overload selector(static "userFontOfSize:") = NSFont, Float;
overload selector(static "userInfo") = Id;
overload selector(static "userInterfaceLayoutDirection") = Int;
overload selector(static "userKeyEquivalent") = NSString;
overload selector(static "userPreferredLanguages") = NSArray;
overload selector(static "userQuotesArrayForLanguage:") = NSArray, NSString;
overload selector(static "userReplacementsDictionary") = NSDictionary;
overload selector(static "userSpaceScaleFactor") = Float;
overload selector(static "usesAlternatingRowBackgroundColors") = Bool;
overload selector(static "usesDataSource") = Bool;
overload selector(static "usesEPSOnResolutionMismatch") = Bool;
overload selector(static "usesFeedbackWindow") = Bool;
overload selector(static "usesFindPanel") = Bool;
overload selector(static "usesFontLeading") = Bool;
overload selector(static "usesFontPanel") = Bool;
overload selector(static "usesGroupingSeparator") = Bool;
overload selector(static "usesItemFromMenu") = Bool;
overload selector(static "usesLazyFetching") = Bool;
overload selector(static "usesRuler") = Bool;
overload selector(static "usesScreenFonts") = Bool;
overload selector(static "usesSignificantDigits") = Bool;
overload selector(static "usesSingleLineMode") = Bool;
overload selector(static "usesStrongWriteBarrier") = Bool;
overload selector(static "usesThreadedAnimation") = Bool;
overload selector(static "usesUserKeyEquivalents") = Bool;
overload selector(static "usesWeakReadAndWriteBarriers") = Bool;
overload selector(static "validAttributesForMarkedText") = NSArray;
overload selector(static "validModesForFontPanel:") = UInt, NSFontPanel;
overload selector(static "validRequestorForSendType:returnType:") = Id, NSString, NSString;
overload selector(static "validate") = Void;
overload selector(static "validateAndReturnError:") = Bool, Pointer[NSError];
overload selector(static "validateEditing") = Void;
overload selector(static "validateForDelete:") = Bool, Pointer[NSError];
overload selector(static "validateForInsert:") = Bool, Pointer[NSError];
overload selector(static "validateForUpdate:") = Bool, Pointer[NSError];
overload selector(static "validateMenuItem:") = Bool, NSMenuItem;
overload selector(static "validateToolbarItem:") = Bool, NSToolbarItem;
overload selector(static "validateUserInterfaceItem:") = Bool, Id;
overload selector(static "validateValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector(static "validateValue:forKeyPath:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector(static "validateVisibleColumns") = Void;
overload selector(static "validateVisibleItems") = Void;
overload selector(static "validationPredicates") = NSArray;
overload selector(static "validationWarnings") = NSArray;
overload selector(static "value") = Id;
overload selector(static "value:withObjCType:") = NSValue, RawPointer, Pointer[CChar];
overload selector(static "valueAtIndex:") = Float, CULong;
overload selector(static "valueAtIndex:inPropertyWithKey:") = Id, UInt, NSString;
overload selector(static "valueClassForBinding:") = Id, NSString;
overload selector(static "valueExpression") = NSExpression;
overload selector(static "valueForAttribute:") = Id, NSString;
overload selector(static "valueForDimension:") = Float, UInt;
overload selector(static "valueForHTTPHeaderField:") = NSString, NSString;
overload selector(static "valueForKey:") = Id, NSString;
overload selector(static "valueForKeyPath:") = Id, NSString;
overload selector(static "valueForProperty:") = Id, NSString;
overload selector(static "valueForUndefinedKey:") = Id, NSString;
overload selector(static "valueFunction") = CAValueFunction;
overload selector(static "valueListAttributes") = NSArray;
overload selector(static "valueLists") = NSDictionary;
overload selector(static "valueOfAttribute:forResultAtIndex:") = Id, NSString, UInt;
overload selector(static "valuePointerFunctions") = NSPointerFunctions;
overload selector(static "valueTransformerForName:") = NSValueTransformer, NSString;
overload selector(static "valueTransformerName") = NSString;
overload selector(static "valueTransformerNames") = NSArray;
overload selector(static "valueTypeForDimension:") = UInt, UInt;
overload selector(static "valueWithBytes:objCType:") = NSValue, RawPointer, Pointer[CChar];
overload selector(static "valueWithCATransform3D:") = NSValue, CATransform3D;
overload selector(static "valueWithName:inPropertyWithKey:") = Id, NSString, NSString;
overload selector(static "valueWithNonretainedObject:") = NSValue, Id;
overload selector(static "valueWithPoint:") = NSValue, NSPoint;
overload selector(static "valueWithPointer:") = NSValue, RawPointer;
overload selector(static "valueWithQTTime:") = NSValue, QTTime;
overload selector(static "valueWithQTTimeRange:") = NSValue, QTTimeRange;
overload selector(static "valueWithRange:") = NSValue, NSRange;
overload selector(static "valueWithRect:") = NSValue, NSRect;
overload selector(static "valueWithSMPTETime:") = NSValue, SMPTETime;
overload selector(static "valueWithSize:") = NSValue, NSSize;
overload selector(static "valueWithUniqueID:inPropertyWithKey:") = Id, Id, NSString;
overload selector(static "valueWraps") = Bool;
overload selector(static "values") = Id;
overload selector(static "valuesForAttributes:") = NSDictionary, NSArray;
overload selector(static "valuesForKeys:") = NSDictionary, NSArray;
overload selector(static "variable") = NSString;
overload selector(static "vectorWithString:") = CIVector, NSString;
overload selector(static "vectorWithValues:count:") = CIVector, Pointer[Float], CULong;
overload selector(static "vectorWithX:") = CIVector, Float;
overload selector(static "vectorWithX:Y:") = CIVector, Float, Float;
overload selector(static "vectorWithX:Y:Z:") = CIVector, Float, Float, Float;
overload selector(static "vectorWithX:Y:Z:W:") = CIVector, Float, Float, Float, Float;
overload selector(static "velocity") = Float;
overload selector(static "velocityRange") = Float;
overload selector(static "vendorDefined") = Id;
overload selector(static "vendorID") = UInt;
overload selector(static "vendorPointingDeviceType") = UInt;
overload selector(static "version") = Int;
overload selector(static "versionForClassName:") = Int, NSString;
overload selector(static "versionHash") = NSData;
overload selector(static "versionHashModifier") = NSString;
overload selector(static "versionIdentifiers") = NSSet;
overload selector(static "verticalAlignment") = UInt;
overload selector(static "verticalLineScroll") = Float;
overload selector(static "verticalMotionCanBeginDrag") = Bool;
overload selector(static "verticalPageScroll") = Float;
overload selector(static "verticalPagination") = UInt;
overload selector(static "verticalRulerView") = NSRulerView;
overload selector(static "verticalScroller") = NSScroller;
overload selector(static "veryShortMonthSymbols") = NSArray;
overload selector(static "veryShortStandaloneMonthSymbols") = NSArray;
overload selector(static "veryShortStandaloneWeekdaySymbols") = NSArray;
overload selector(static "veryShortWeekdaySymbols") = NSArray;
overload selector(static "videoPreviewConnection") = QTCaptureConnection;
overload selector(static "view") = Id;
overload selector(static "view:stringForToolTip:point:userData:") = NSString, NSView, Int, NSPoint, RawPointer;
overload selector(static "view:willDisplayImage:") = CIImage, QTMovieView, CIImage;
overload selector(static "viewAnimations") = NSArray;
overload selector(static "viewBoundsChanged:") = Void, NSNotification;
overload selector(static "viewDidEndLiveResize") = Void;
overload selector(static "viewDidHide") = Void;
overload selector(static "viewDidMoveToSuperview") = Void;
overload selector(static "viewDidMoveToWindow") = Void;
overload selector(static "viewDidUnhide") = Void;
overload selector(static "viewFrameChanged:") = Void, NSNotification;
overload selector(static "viewSizeChanged:") = Void, Id;
overload selector(static "viewWillDraw") = Void;
overload selector(static "viewWillMoveToSuperview:") = Void, NSView;
overload selector(static "viewWillMoveToWindow:") = Void, NSWindow;
overload selector(static "viewWillStartLiveResize") = Void;
overload selector(static "viewWithTag:") = Id, Int;
overload selector(static "viewsNeedDisplay") = Bool;
overload selector(static "visibilityPriority") = Int;
overload selector(static "visibleFrame") = NSRect;
overload selector(static "visibleItems") = NSArray;
overload selector(static "visibleRect") = NSRect;
overload selector(static "visualContext") = QTVisualContextRef;
overload selector(static "visualContextForConnection:") = QTVisualContextRef, QTCaptureConnection;
overload selector(static "voice") = NSString;
overload selector(static "volatileDomainForName:") = NSDictionary, NSString;
overload selector(static "volatileDomainNames") = NSArray;
overload selector(static "volume") = Float;
overload selector(static "wait") = Void;
overload selector(static "waitForDataInBackgroundAndNotify") = Void;
overload selector(static "waitForDataInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector(static "waitUntilAllOperationsAreFinished") = Void;
overload selector(static "waitUntilDate:") = Bool, NSDate;
overload selector(static "waitUntilExit") = Void;
overload selector(static "waitUntilFinished") = Void;
overload selector(static "wantsDefaultClipping") = Bool;
overload selector(static "wantsLayer") = Bool;
overload selector(static "wantsNotificationForMarkedText") = Bool;
overload selector(static "wantsPeriodicDraggingUpdates") = Bool;
overload selector(static "wantsRestingTouches") = Bool;
overload selector(static "wantsToDelayTextChangeNotifications") = Bool;
overload selector(static "wantsToHandleMouseEvents") = Bool;
overload selector(static "wantsToInterpretAllKeystrokes") = Bool;
overload selector(static "wantsToTrackMouse") = Bool;
overload selector(static "wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:") = Bool, NSEvent, NSRect, NSView, UInt;
overload selector(static "warningValue") = Double;
overload selector(static "week") = Int;
overload selector(static "weekday") = Int;
overload selector(static "weekdayOrdinal") = Int;
overload selector(static "weekdaySymbols") = NSArray;
overload selector(static "weightOfFont:") = Int, NSFont;
overload selector(static "whiteColor") = NSColor;
overload selector(static "whiteComponent") = Float;
overload selector(static "whitespaceAndNewlineCharacterSet") = Id;
overload selector(static "whitespaceCharacterSet") = Id;
overload selector(static "width") = Float;
overload selector(static "widthAdjustLimit") = Float;
overload selector(static "widthForLayer:edge:") = Float, Int, NSRectEdge;
overload selector(static "widthForSegment:") = Float, Int;
overload selector(static "widthOfColumn:") = Float, Int;
overload selector(static "widthOfString:") = Float, NSString;
overload selector(static "widthTracksTextView") = Bool;
overload selector(static "widthValueTypeForLayer:edge:") = UInt, Int, NSRectEdge;
overload selector(static "willAccessValueForKey:") = Void, NSString;
overload selector(static "willChange:valuesAtIndexes:forKey:") = Void, UInt, NSIndexSet, NSString;
overload selector(static "willChangeValueForKey:") = Void, NSString;
overload selector(static "willChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, UInt, NSSet;
overload selector(static "willPresentError:") = NSError, NSError;
overload selector(static "willRemoveCacheNodes:") = Void, NSSet;
overload selector(static "willRemoveFromPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
overload selector(static "willRemoveSubview:") = Void, NSView;
overload selector(static "willSave") = Void;
overload selector(static "willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRectPointer, NSRange, NSRectPointer, Pointer[Float];
overload selector(static "willTurnIntoFault") = Void;
overload selector(static "windingRule") = UInt;
overload selector(static "window") = Id;
overload selector(static "window:shouldDragDocumentWithEvent:from:withPasteboard:") = Bool, NSWindow, NSEvent, NSPoint, NSPasteboard;
overload selector(static "window:shouldPopUpDocumentPathMenu:") = Bool, NSWindow, NSMenu;
overload selector(static "window:willPositionSheet:usingRect:") = NSRect, NSWindow, NSWindow, NSRect;
overload selector(static "windowBackgroundColor") = NSColor;
overload selector(static "windowController") = Id;
overload selector(static "windowControllerDidLoadNib:") = Void, NSWindowController;
overload selector(static "windowControllerWillLoadNib:") = Void, NSWindowController;
overload selector(static "windowControllers") = NSArray;
overload selector(static "windowDidBecomeKey:") = Void, NSNotification;
overload selector(static "windowDidBecomeMain:") = Void, NSNotification;
overload selector(static "windowDidChangeScreen:") = Void, NSNotification;
overload selector(static "windowDidChangeScreenProfile:") = Void, NSNotification;
overload selector(static "windowDidDeminiaturize:") = Void, NSNotification;
overload selector(static "windowDidEndLiveResize:") = Void, NSNotification;
overload selector(static "windowDidEndSheet:") = Void, NSNotification;
overload selector(static "windowDidExpose:") = Void, NSNotification;
overload selector(static "windowDidLoad") = Void;
overload selector(static "windowDidMiniaturize:") = Void, NSNotification;
overload selector(static "windowDidMove:") = Void, NSNotification;
overload selector(static "windowDidResignKey:") = Void, NSNotification;
overload selector(static "windowDidResignMain:") = Void, NSNotification;
overload selector(static "windowDidResize:") = Void, NSNotification;
overload selector(static "windowDidUpdate:") = Void, NSNotification;
overload selector(static "windowForSheet") = NSWindow;
overload selector(static "windowFrameAutosaveName") = NSString;
overload selector(static "windowFrameColor") = NSColor;
overload selector(static "windowFrameTextColor") = NSColor;
overload selector(static "windowLevel") = Int;
overload selector(static "windowNibName") = NSString;
overload selector(static "windowNibPath") = NSString;
overload selector(static "windowNumber") = Int;
overload selector(static "windowNumberAtPoint:belowWindowWithWindowNumber:") = Int, NSPoint, Int;
overload selector(static "windowNumbersWithOptions:") = NSArray, UInt;
overload selector(static "windowRef") = RawPointer;
overload selector(static "windowShouldClose:") = Bool, Id;
overload selector(static "windowShouldZoom:toFrame:") = Bool, NSWindow, NSRect;
overload selector(static "windowTitleForDocumentDisplayName:") = NSString, NSString;
overload selector(static "windowWillBeginSheet:") = Void, NSNotification;
overload selector(static "windowWillClose:") = Void, NSNotification;
overload selector(static "windowWillLoad") = Void;
overload selector(static "windowWillMiniaturize:") = Void, NSNotification;
overload selector(static "windowWillMove:") = Void, NSNotification;
overload selector(static "windowWillResize:toSize:") = NSSize, NSWindow, NSSize;
overload selector(static "windowWillReturnFieldEditor:toObject:") = Id, NSWindow, Id;
overload selector(static "windowWillReturnUndoManager:") = NSUndoManager, NSWindow;
overload selector(static "windowWillStartLiveResize:") = Void, NSNotification;
overload selector(static "windowWillUseStandardFrame:defaultFrame:") = NSRect, NSWindow, NSRect;
overload selector(static "windowWithWindowNumber:") = NSWindow, Int;
overload selector(static "windows") = NSArray;
overload selector(static "windowsLocaleCodeFromLocaleIdentifier:") = UInt, NSString;
overload selector(static "windowsMenu") = NSMenu;
overload selector(static "words") = NSArray;
overload selector(static "worksWhenModal") = Bool;
overload selector(static "wraps") = Bool;
overload selector(static "writablePasteboardTypes") = NSArray;
overload selector(static "writableTypes") = NSArray;
overload selector(static "writableTypesForPasteboard:") = NSArray, NSPasteboard;
overload selector(static "writableTypesForSaveOperation:") = NSArray, UInt;
overload selector(static "write:maxLength:") = Int, Pointer[CUChar], UInt;
overload selector(static "writeBookmarkData:toURL:options:error:") = Bool, NSData, NSURL, UInt, Pointer[NSError];
overload selector(static "writeData:") = Bool, NSData;
overload selector(static "writeEPSInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
overload selector(static "writeFileContents:") = Bool, NSString;
overload selector(static "writeFileWrapper:") = Bool, NSFileWrapper;
overload selector(static "writeObjects:") = Bool, NSArray;
overload selector(static "writePDFInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
overload selector(static "writePrintInfo") = Void;
overload selector(static "writeProperty:forKey:") = Bool, Id, NSString;
overload selector(static "writePropertyList:toStream:format:options:error:") = Int, Id, NSOutputStream, UInt, UInt, Pointer[NSError];
overload selector(static "writeRTFDToFile:atomically:") = Bool, NSString, Bool;
overload selector(static "writeSafelyToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, UInt, Pointer[NSError];
overload selector(static "writeSelectionToPasteboard:type:") = Bool, NSPasteboard, NSString;
overload selector(static "writeSelectionToPasteboard:types:") = Bool, NSPasteboard, NSArray;
overload selector(static "writeToFile:") = Bool, NSString;
overload selector(static "writeToFile:atomically:") = Bool, NSString, Bool;
overload selector(static "writeToFile:atomically:encoding:error:") = Bool, NSString, Bool, UInt, Pointer[NSError];
overload selector(static "writeToFile:atomically:updateFilenames:") = Bool, NSString, Bool, Bool;
overload selector(static "writeToFile:ofType:") = Bool, NSString, NSString;
overload selector(static "writeToFile:ofType:originalFile:saveOperation:") = Bool, NSString, NSString, NSString, UInt;
overload selector(static "writeToFile:options:error:") = Bool, NSString, UInt, Pointer[NSError];
overload selector(static "writeToFile:withAttributes:") = Bool, NSString, NSDictionary;
overload selector(static "writeToFile:withAttributes:error:") = Bool, NSString, NSDictionary, Pointer[NSError];
overload selector(static "writeToPasteboard:") = Void, NSPasteboard;
overload selector(static "writeToURL:atomically:") = Bool, NSURL, Bool;
overload selector(static "writeToURL:atomically:encoding:error:") = Bool, NSURL, Bool, UInt, Pointer[NSError];
overload selector(static "writeToURL:ofType:") = Bool, NSURL, NSString;
overload selector(static "writeToURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
overload selector(static "writeToURL:ofType:forSaveOperation:originalContentsURL:error:") = Bool, NSURL, NSString, UInt, NSURL, Pointer[NSError];
overload selector(static "writeToURL:options:error:") = Bool, NSURL, UInt, Pointer[NSError];
overload selector(static "writeToURL:options:originalContentsURL:error:") = Bool, NSURL, UInt, NSURL, Pointer[NSError];
overload selector(static "writeWithBackupToFile:ofType:saveOperation:") = Bool, NSString, NSString, UInt;
overload selector(static "writingOptionsForType:pasteboard:") = UInt, NSString, NSPasteboard;
overload selector(static "xAcceleration") = Float;
overload selector(static "xHeight") = Float;
overload selector(static "yAcceleration") = Float;
overload selector(static "yank:") = Void, Id;
overload selector(static "year") = Int;
overload selector(static "yearOfCommonEra") = Int;
overload selector(static "years:months:days:hours:minutes:seconds:sinceDate:") = Void, Pointer[Int], Pointer[Int], Pointer[Int], Pointer[Int], Pointer[Int], Pointer[Int], NSCalendarDate;
overload selector(static "yellowColor") = NSColor;
overload selector(static "yellowComponent") = Float;
overload selector(static "zAcceleration") = Float;
overload selector(static "zPosition") = Float;
overload selector(static "zero") = NSDecimalNumber;
overload selector(static "zeroSymbol") = NSString;
overload selector(static "zone") = Pointer[NSZone];
overload selector(static "zoom:") = Void, Id;

overload externalInstanceMethod(static NSCoder, static "encodeQTTime:forKey:") = Void, QTTime, NSString;
overload externalInstanceMethod(static NSCoder, static "decodeQTTimeForKey:") = QTTime, NSString;
overload externalInstanceMethod(static NSCoder, static "encodeSMPTETime:forKey:") = Void, SMPTETime, NSString;
overload externalInstanceMethod(static NSCoder, static "decodeSMPTETimeForKey:") = SMPTETime, NSString;
overload externalInstanceMethod(static NSCoder, static "encodeQTTimeRange:forKey:") = Void, QTTimeRange, NSString;
overload externalInstanceMethod(static NSCoder, static "decodeQTTimeRangeForKey:") = QTTimeRange, NSString;

overload externalInstanceMethod(static NSObject, static "movie:linkToURL:") = Bool, QTMovie, NSURL;
overload externalInstanceMethod(static NSObject, static "movieShouldLoadData:") = Bool, Id;
overload externalInstanceMethod(static NSObject, static "movieShouldTask:") = Bool, Id;
overload externalInstanceMethod(static NSObject, static "externalMovie:") = QTMovie, NSDictionary;
overload externalInstanceMethod(static NSObject, static "movie:shouldContinueOperation:withPhase:atPercent:withAttributes:") = Bool, QTMovie, NSString, QTMovieOperationPhase, NSNumber, NSDictionary;
overload externalInstanceMethod(static NSObject, static "view:willDisplayImage:") = CIImage, QTMovieView, CIImage;
overload externalInstanceMethod(static NSObject, static "menuForEventDelegate:") = NSMenu, NSEvent;
overload externalInstanceMethod(static NSObject, static "captureOutput:didOutputSampleBuffer:fromConnection:") = Void, QTCaptureFileOutput, QTSampleBuffer, QTCaptureConnection;
overload externalInstanceMethod(static NSObject, static "captureOutput:willStartRecordingToOutputFileAtURL:forConnections:") = Void, QTCaptureFileOutput, NSURL, NSArray;
overload externalInstanceMethod(static NSObject, static "captureOutput:didStartRecordingToOutputFileAtURL:forConnections:") = Void, QTCaptureFileOutput, NSURL, NSArray;
overload externalInstanceMethod(static NSObject, static "captureOutput:shouldChangeOutputFileAtURL:forConnections:dueToError:") = Bool, QTCaptureFileOutput, NSURL, NSArray, NSError;
overload externalInstanceMethod(static NSObject, static "captureOutput:mustChangeOutputFileAtURL:forConnections:dueToError:") = Void, QTCaptureFileOutput, NSURL, NSArray, NSError;
overload externalInstanceMethod(static NSObject, static "captureOutput:willFinishRecordingToOutputFileAtURL:forConnections:dueToError:") = Void, QTCaptureFileOutput, NSURL, NSArray, NSError;
overload externalInstanceMethod(static NSObject, static "captureOutput:didFinishRecordingToOutputFileAtURL:forConnections:dueToError:") = Void, QTCaptureFileOutput, NSURL, NSArray, NSError;
overload externalInstanceMethod(static NSObject, static "captureOutput:didPauseRecordingToOutputFileAtURL:forConnections:") = Void, QTCaptureFileOutput, NSURL, NSArray;
overload externalInstanceMethod(static NSObject, static "captureOutput:didResumeRecordingToOutputFileAtURL:forConnections:") = Void, QTCaptureFileOutput, NSURL, NSArray;
overload externalInstanceMethod(static NSObject, static "view:willDisplayImage:") = CIImage, QTCaptureView, CIImage;
overload externalInstanceMethod(static NSObject, static "captureOutput:didOutputVideoFrame:withSampleBuffer:fromConnection:") = Void, QTCaptureOutput, CVImageBufferRef, QTSampleBuffer, QTCaptureConnection;
overload externalInstanceMethod(static NSObject, static "captureOutput:didOutputVideoFrame:withSampleBuffer:fromConnection:") = Void, QTCaptureOutput, CVImageBufferRef, QTSampleBuffer, QTCaptureConnection;
overload externalInstanceMethod(static NSObject, static "captureOutput:didDropVideoFrameWithSampleBuffer:fromConnection:") = Void, QTCaptureOutput, QTSampleBuffer, QTCaptureConnection;
overload externalInstanceMethod(static NSObject, static "captureOutput:didOutputAudioSampleBuffer:fromConnection:") = Void, QTCaptureOutput, QTSampleBuffer, QTCaptureConnection;

overload externalClassMethod(static NSValue, static "valueWithQTTime:") = NSValue, QTTime;
overload externalInstanceMethod(static NSValue, static "QTTimeValue") = QTTime;
overload externalClassMethod(static NSValue, static "valueWithSMPTETime:") = NSValue, SMPTETime;
overload externalInstanceMethod(static NSValue, static "SMPTETimeValue") = SMPTETime;
overload externalClassMethod(static NSValue, static "valueWithQTTimeRange:") = NSValue, QTTimeRange;
overload externalInstanceMethod(static NSValue, static "QTTimeRangeValue") = QTTimeRange;

record QTCaptureAudioPreviewOutput = externalClass(QTCaptureOutput);
overload externalInstanceMethod(static QTCaptureAudioPreviewOutput, static "outputDeviceUniqueID") = NSString;
overload externalInstanceMethod(static QTCaptureAudioPreviewOutput, static "setOutputDeviceUniqueID:") = Void, NSString;
overload externalInstanceMethod(static QTCaptureAudioPreviewOutput, static "volume") = Float;
overload externalInstanceMethod(static QTCaptureAudioPreviewOutput, static "setVolume:") = Void, Float;

record QTCaptureConnection = externalClass(NSObject);
overload externalInstanceMethod(static QTCaptureConnection, static "owner") = Id;
overload externalInstanceMethod(static QTCaptureConnection, static "mediaType") = NSString;
overload externalInstanceMethod(static QTCaptureConnection, static "formatDescription") = QTFormatDescription;
overload externalInstanceMethod(static QTCaptureConnection, static "isEnabled") = Bool;
overload externalInstanceMethod(static QTCaptureConnection, static "setEnabled:") = Void, Bool;
overload externalInstanceMethod(static QTCaptureConnection, static "connectionAttributes") = NSDictionary;
overload externalInstanceMethod(static QTCaptureConnection, static "setConnectionAttributes:") = Void, NSDictionary;
overload externalInstanceMethod(static QTCaptureConnection, static "attributeIsReadOnly:") = Bool, NSString;
overload externalInstanceMethod(static QTCaptureConnection, static "attributeForKey:") = Id, NSString;
overload externalInstanceMethod(static QTCaptureConnection, static "setAttribute:forKey:") = Void, Id, NSString;

record QTCaptureDecompressedAudioOutput = externalClass(QTCaptureOutput);
overload externalInstanceMethod(static QTCaptureDecompressedAudioOutput, static "delegate") = Id;
overload externalInstanceMethod(static QTCaptureDecompressedAudioOutput, static "setDelegate:") = Void, Id;
overload externalInstanceMethod(static QTCaptureDecompressedAudioOutput, static "outputAudioSampleBuffer:fromConnection:") = Void, QTSampleBuffer, QTCaptureConnection;

record QTCaptureDecompressedVideoOutput = externalClass(QTCaptureOutput);
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "pixelBufferAttributes") = NSDictionary;
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "setPixelBufferAttributes:") = Void, NSDictionary;
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "minimumVideoFrameInterval") = Double;
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "setMinimumVideoFrameInterval:") = Void, Double;
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "automaticallyDropsLateVideoFrames") = Bool;
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "setAutomaticallyDropsLateVideoFrames:") = Void, Bool;
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "delegate") = Id;
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "setDelegate:") = Void, Id;
overload externalInstanceMethod(static QTCaptureDecompressedVideoOutput, static "outputVideoFrame:withSampleBuffer:fromConnection:") = Void, CVImageBufferRef, QTSampleBuffer, QTCaptureConnection;

record QTCaptureDevice = externalClass(NSObject);
overload externalInstanceMethod(static QTCaptureDevice, static "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(static QTCaptureDevice, static "initWithCoder:") = Id, NSCoder;
overload externalClassMethod(static QTCaptureDevice, static "inputDevices") = NSArray;
overload externalClassMethod(static QTCaptureDevice, static "inputDevicesWithMediaType:") = NSArray, NSString;
overload externalClassMethod(static QTCaptureDevice, static "defaultInputDeviceWithMediaType:") = QTCaptureDevice, NSString;
overload externalClassMethod(static QTCaptureDevice, static "deviceWithUniqueID:") = QTCaptureDevice, NSString;
overload externalInstanceMethod(static QTCaptureDevice, static "uniqueID") = NSString;
overload externalInstanceMethod(static QTCaptureDevice, static "modelUniqueID") = NSString;
overload externalInstanceMethod(static QTCaptureDevice, static "localizedDisplayName") = NSString;
overload externalInstanceMethod(static QTCaptureDevice, static "formatDescriptions") = NSArray;
overload externalInstanceMethod(static QTCaptureDevice, static "hasMediaType:") = Bool, NSString;
overload externalInstanceMethod(static QTCaptureDevice, static "deviceAttributes") = NSDictionary;
overload externalInstanceMethod(static QTCaptureDevice, static "setDeviceAttributes:") = Void, NSDictionary;
overload externalInstanceMethod(static QTCaptureDevice, static "attributeIsReadOnly:") = Bool, NSString;
overload externalInstanceMethod(static QTCaptureDevice, static "attributeForKey:") = Id, NSString;
overload externalInstanceMethod(static QTCaptureDevice, static "setAttribute:forKey:") = Void, Id, NSString;
overload externalInstanceMethod(static QTCaptureDevice, static "isConnected") = Bool;
overload externalInstanceMethod(static QTCaptureDevice, static "isInUseByAnotherApplication") = Bool;
overload externalInstanceMethod(static QTCaptureDevice, static "isOpen") = Bool;
overload externalInstanceMethod(static QTCaptureDevice, static "open:") = Bool, Pointer[NSError];
overload externalInstanceMethod(static QTCaptureDevice, static "close") = Void;

record QTCaptureDeviceInput = externalClass(QTCaptureInput);
overload externalClassMethod(static QTCaptureDeviceInput, static "deviceInputWithDevice:") = Id, QTCaptureDevice;
overload externalInstanceMethod(static QTCaptureDeviceInput, static "initWithDevice:") = Id, QTCaptureDevice;
overload externalInstanceMethod(static QTCaptureDeviceInput, static "device") = QTCaptureDevice;

record QTCaptureFileOutput = externalClass(QTCaptureOutput);
overload externalInstanceMethod(static QTCaptureFileOutput, static "outputFileURL") = NSURL;
overload externalInstanceMethod(static QTCaptureFileOutput, static "recordToOutputFileURL:") = Void, NSURL;
overload externalInstanceMethod(static QTCaptureFileOutput, static "recordToOutputFileURL:bufferDestination:") = Void, NSURL, UInt;
overload externalInstanceMethod(static QTCaptureFileOutput, static "isRecordingPaused") = Bool;
overload externalInstanceMethod(static QTCaptureFileOutput, static "pauseRecording") = Void;
overload externalInstanceMethod(static QTCaptureFileOutput, static "resumeRecording") = Void;
overload externalInstanceMethod(static QTCaptureFileOutput, static "compressionOptionsForConnection:") = QTCompressionOptions, QTCaptureConnection;
overload externalInstanceMethod(static QTCaptureFileOutput, static "setCompressionOptions:forConnection:") = Void, QTCompressionOptions, QTCaptureConnection;
overload externalInstanceMethod(static QTCaptureFileOutput, static "maximumVideoSize") = NSSize;
overload externalInstanceMethod(static QTCaptureFileOutput, static "setMaximumVideoSize:") = Void, NSSize;
overload externalInstanceMethod(static QTCaptureFileOutput, static "minimumVideoFrameInterval") = Double;
overload externalInstanceMethod(static QTCaptureFileOutput, static "setMinimumVideoFrameInterval:") = Void, Double;
overload externalInstanceMethod(static QTCaptureFileOutput, static "recordedDuration") = QTTime;
overload externalInstanceMethod(static QTCaptureFileOutput, static "recordedFileSize") = UInt64;
overload externalInstanceMethod(static QTCaptureFileOutput, static "maximumRecordedDuration") = QTTime;
overload externalInstanceMethod(static QTCaptureFileOutput, static "setMaximumRecordedDuration:") = Void, QTTime;
overload externalInstanceMethod(static QTCaptureFileOutput, static "maximumRecordedFileSize") = UInt64;
overload externalInstanceMethod(static QTCaptureFileOutput, static "setMaximumRecordedFileSize:") = Void, UInt64;
overload externalInstanceMethod(static QTCaptureFileOutput, static "delegate") = Id;
overload externalInstanceMethod(static QTCaptureFileOutput, static "setDelegate:") = Void, Id;

record QTCaptureInput = externalClass(NSObject);
overload externalInstanceMethod(static QTCaptureInput, static "connections") = NSArray;

record QTCaptureLayer = externalClass(CALayer);
overload externalClassMethod(static QTCaptureLayer, static "layerWithSession:") = Id, QTCaptureSession;
overload externalInstanceMethod(static QTCaptureLayer, static "initWithSession:") = Id, QTCaptureSession;
overload externalInstanceMethod(static QTCaptureLayer, static "setSession:") = Void, QTCaptureSession;
overload externalInstanceMethod(static QTCaptureLayer, static "session") = QTCaptureSession;

record QTCaptureMovieFileOutput = externalClass(QTCaptureFileOutput);

record QTCaptureOutput = externalClass(NSObject);
overload externalInstanceMethod(static QTCaptureOutput, static "connections") = NSArray;

record QTCaptureSession = externalClass(NSObject);
overload externalInstanceMethod(static QTCaptureSession, static "inputs") = NSArray;
overload externalInstanceMethod(static QTCaptureSession, static "addInput:error:") = Bool, QTCaptureInput, Pointer[NSError];
overload externalInstanceMethod(static QTCaptureSession, static "removeInput:") = Void, QTCaptureInput;
overload externalInstanceMethod(static QTCaptureSession, static "outputs") = NSArray;
overload externalInstanceMethod(static QTCaptureSession, static "addOutput:error:") = Bool, QTCaptureOutput, Pointer[NSError];
overload externalInstanceMethod(static QTCaptureSession, static "removeOutput:") = Void, QTCaptureOutput;
overload externalInstanceMethod(static QTCaptureSession, static "isRunning") = Bool;
overload externalInstanceMethod(static QTCaptureSession, static "startRunning") = Void;
overload externalInstanceMethod(static QTCaptureSession, static "stopRunning") = Void;

record QTCaptureVideoPreviewOutput = externalClass(QTCaptureOutput);
overload externalInstanceMethod(static QTCaptureVideoPreviewOutput, static "pixelBufferAttributes") = NSDictionary;
overload externalInstanceMethod(static QTCaptureVideoPreviewOutput, static "setPixelBufferAttributes:") = Void, NSDictionary;
overload externalInstanceMethod(static QTCaptureVideoPreviewOutput, static "visualContextForConnection:") = QTVisualContextRef, QTCaptureConnection;
overload externalInstanceMethod(static QTCaptureVideoPreviewOutput, static "setVisualContext:forConnection:") = Void, QTVisualContextRef, QTCaptureConnection;
overload externalInstanceMethod(static QTCaptureVideoPreviewOutput, static "delegate") = Id;
overload externalInstanceMethod(static QTCaptureVideoPreviewOutput, static "setDelegate:") = Void, Id;
overload externalInstanceMethod(static QTCaptureVideoPreviewOutput, static "outputVideoFrame:withSampleBuffer:fromConnection:") = Void, CVImageBufferRef, QTSampleBuffer, QTCaptureConnection;

record QTCaptureView = externalClass(NSView);
overload externalInstanceMethod(static QTCaptureView, static "captureSession") = QTCaptureSession;
overload externalInstanceMethod(static QTCaptureView, static "setCaptureSession:") = Void, QTCaptureSession;
overload externalInstanceMethod(static QTCaptureView, static "availableVideoPreviewConnections") = NSArray;
overload externalInstanceMethod(static QTCaptureView, static "videoPreviewConnection") = QTCaptureConnection;
overload externalInstanceMethod(static QTCaptureView, static "setVideoPreviewConnection:") = Void, QTCaptureConnection;
overload externalInstanceMethod(static QTCaptureView, static "fillColor") = NSColor;
overload externalInstanceMethod(static QTCaptureView, static "setFillColor:") = Void, NSColor;
overload externalInstanceMethod(static QTCaptureView, static "preservesAspectRatio") = Bool;
overload externalInstanceMethod(static QTCaptureView, static "setPreservesAspectRatio:") = Void, Bool;
overload externalInstanceMethod(static QTCaptureView, static "previewBounds") = NSRect;
overload externalInstanceMethod(static QTCaptureView, static "delegate") = Id;
overload externalInstanceMethod(static QTCaptureView, static "setDelegate:") = Void, Id;

record QTCompressionOptions = externalClass(NSObject);
overload externalClassMethod(static QTCompressionOptions, static "compressionOptionsIdentifiersForMediaType:") = NSArray, NSString;
overload externalClassMethod(static QTCompressionOptions, static "compressionOptionsWithIdentifier:") = Id, NSString;
overload externalInstanceMethod(static QTCompressionOptions, static "mediaType") = NSString;
overload externalInstanceMethod(static QTCompressionOptions, static "localizedDisplayName") = NSString;
overload externalInstanceMethod(static QTCompressionOptions, static "localizedCompressionOptionsSummary") = NSString;
overload externalInstanceMethod(static QTCompressionOptions, static "isEqualToCompressionOptions:") = Bool, QTCompressionOptions;

record QTDataReference = externalClass(NSObject);
overload externalInstanceMethod(static QTDataReference, static "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(static QTDataReference, static "initWithCoder:") = Id, NSCoder;
overload externalClassMethod(static QTDataReference, static "dataReferenceWithDataRef:type:") = Id, Handle, NSString;
overload externalClassMethod(static QTDataReference, static "dataReferenceWithDataRefData:type:") = Id, NSData, NSString;
overload externalClassMethod(static QTDataReference, static "dataReferenceWithReferenceToFile:") = Id, NSString;
overload externalClassMethod(static QTDataReference, static "dataReferenceWithReferenceToURL:") = Id, NSURL;
overload externalClassMethod(static QTDataReference, static "dataReferenceWithReferenceToData:") = Id, NSData;
overload externalClassMethod(static QTDataReference, static "dataReferenceWithReferenceToData:name:MIMEType:") = Id, NSData, NSString, NSString;
overload externalInstanceMethod(static QTDataReference, static "initWithDataRef:type:") = Id, Handle, NSString;
overload externalInstanceMethod(static QTDataReference, static "initWithDataRefData:type:") = Id, NSData, NSString;
overload externalInstanceMethod(static QTDataReference, static "initWithReferenceToFile:") = Id, NSString;
overload externalInstanceMethod(static QTDataReference, static "initWithReferenceToURL:") = Id, NSURL;
overload externalInstanceMethod(static QTDataReference, static "initWithReferenceToData:") = Id, NSData;
overload externalInstanceMethod(static QTDataReference, static "initWithReferenceToData:name:MIMEType:") = Id, NSData, NSString, NSString;
overload externalInstanceMethod(static QTDataReference, static "dataRef") = Handle;
overload externalInstanceMethod(static QTDataReference, static "dataRefData") = NSData;
overload externalInstanceMethod(static QTDataReference, static "dataRefType") = NSString;
overload externalInstanceMethod(static QTDataReference, static "referenceFile") = NSString;
overload externalInstanceMethod(static QTDataReference, static "referenceURL") = NSURL;
overload externalInstanceMethod(static QTDataReference, static "referenceData") = NSData;
overload externalInstanceMethod(static QTDataReference, static "name") = NSString;
overload externalInstanceMethod(static QTDataReference, static "MIMEType") = NSString;
overload externalInstanceMethod(static QTDataReference, static "setDataRef:") = Void, Handle;
overload externalInstanceMethod(static QTDataReference, static "setDataRefType:") = Void, NSString;

record QTFormatDescription = externalClass(NSObject);
overload externalInstanceMethod(static QTFormatDescription, static "mediaType") = NSString;
overload externalInstanceMethod(static QTFormatDescription, static "formatType") = CULong;
overload externalInstanceMethod(static QTFormatDescription, static "localizedFormatSummary") = NSString;
overload externalInstanceMethod(static QTFormatDescription, static "quickTimeSampleDescription") = NSData;
overload externalInstanceMethod(static QTFormatDescription, static "formatDescriptionAttributes") = NSDictionary;
overload externalInstanceMethod(static QTFormatDescription, static "attributeForKey:") = Id, NSString;
overload externalInstanceMethod(static QTFormatDescription, static "isEqualToFormatDescription:") = Bool, QTFormatDescription;

record QTMedia = externalClass(NSObject);
overload externalClassMethod(static QTMedia, static "mediaWithQuickTimeMedia:error:") = Id, Media, Pointer[NSError];
overload externalInstanceMethod(static QTMedia, static "initWithQuickTimeMedia:error:") = Id, Media, Pointer[NSError];
overload externalInstanceMethod(static QTMedia, static "track") = QTTrack;
overload externalInstanceMethod(static QTMedia, static "mediaAttributes") = NSDictionary;
overload externalInstanceMethod(static QTMedia, static "setMediaAttributes:") = Void, NSDictionary;
overload externalInstanceMethod(static QTMedia, static "attributeForKey:") = Id, NSString;
overload externalInstanceMethod(static QTMedia, static "setAttribute:forKey:") = Void, Id, NSString;
overload externalInstanceMethod(static QTMedia, static "hasCharacteristic:") = Bool, NSString;
overload externalInstanceMethod(static QTMedia, static "quickTimeMedia") = Media;

record QTMovie = externalClass(NSObject);
overload externalInstanceMethod(static QTMovie, static "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(static QTMovie, static "initWithCoder:") = Id, NSCoder;
overload externalInstanceMethod(static QTMovie, static "copyWithZone:") = Id, Pointer[NSZone];
overload externalInstanceMethod(static QTMovie, static "duration") = QTTime;
overload externalClassMethod(static QTMovie, static "canInitWithPasteboard:") = Bool, NSPasteboard;
overload externalClassMethod(static QTMovie, static "canInitWithFile:") = Bool, NSString;
overload externalClassMethod(static QTMovie, static "canInitWithURL:") = Bool, NSURL;
overload externalClassMethod(static QTMovie, static "canInitWithDataReference:") = Bool, QTDataReference;
overload externalClassMethod(static QTMovie, static "movieFileTypes:") = NSArray, QTMovieFileTypeOptions;
overload externalClassMethod(static QTMovie, static "movieUnfilteredFileTypes") = NSArray;
overload externalClassMethod(static QTMovie, static "movieUnfilteredPasteboardTypes") = NSArray;
overload externalClassMethod(static QTMovie, static "movieTypesWithOptions:") = NSArray, QTMovieFileTypeOptions;
overload externalClassMethod(static QTMovie, static "movie") = Id;
overload externalClassMethod(static QTMovie, static "movieWithFile:error:") = Id, NSString, Pointer[NSError];
overload externalClassMethod(static QTMovie, static "movieWithURL:error:") = Id, NSURL, Pointer[NSError];
overload externalClassMethod(static QTMovie, static "movieWithDataReference:error:") = Id, QTDataReference, Pointer[NSError];
overload externalClassMethod(static QTMovie, static "movieWithPasteboard:error:") = Id, NSPasteboard, Pointer[NSError];
overload externalClassMethod(static QTMovie, static "movieWithData:error:") = Id, NSData, Pointer[NSError];
overload externalClassMethod(static QTMovie, static "movieWithQuickTimeMovie:disposeWhenDone:error:") = Id, Movie, Bool, Pointer[NSError];
overload externalClassMethod(static QTMovie, static "movieWithAttributes:error:") = Id, NSDictionary, Pointer[NSError];
overload externalClassMethod(static QTMovie, static "movieNamed:error:") = Id, NSString, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initWithFile:error:") = Id, NSString, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initWithURL:error:") = Id, NSURL, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initWithDataReference:error:") = Id, QTDataReference, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initWithPasteboard:error:") = Id, NSPasteboard, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initWithData:error:") = Id, NSData, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initWithMovie:timeRange:error:") = Id, QTMovie, QTTimeRange, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initWithQuickTimeMovie:disposeWhenDone:error:") = Id, Movie, Bool, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initWithAttributes:error:") = Id, NSDictionary, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "movieWithTimeRange:error:") = Id, QTTimeRange, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initToWritableFile:error:") = Id, NSString, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initToWritableData:error:") = Id, NSMutableData, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "initToWritableDataReference:error:") = Id, QTDataReference, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "invalidate") = Void;
overload externalInstanceMethod(static QTMovie, static "movieAttributes") = NSDictionary;
overload externalInstanceMethod(static QTMovie, static "setMovieAttributes:") = Void, NSDictionary;
overload externalInstanceMethod(static QTMovie, static "attributeForKey:") = Id, NSString;
overload externalInstanceMethod(static QTMovie, static "setAttribute:forKey:") = Void, Id, NSString;
overload externalInstanceMethod(static QTMovie, static "tracks") = NSArray;
overload externalInstanceMethod(static QTMovie, static "tracksOfMediaType:") = NSArray, NSString;
overload externalInstanceMethod(static QTMovie, static "posterImage") = NSImage;
overload externalInstanceMethod(static QTMovie, static "currentFrameImage") = NSImage;
overload externalInstanceMethod(static QTMovie, static "frameImageAtTime:") = NSImage, QTTime;
overload externalInstanceMethod(static QTMovie, static "frameImageAtTime:withAttributes:error:") = RawPointer, QTTime, NSDictionary, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "movieFormatRepresentation") = NSData;
overload externalInstanceMethod(static QTMovie, static "writeToFile:withAttributes:") = Bool, NSString, NSDictionary;
overload externalInstanceMethod(static QTMovie, static "writeToFile:withAttributes:error:") = Bool, NSString, NSDictionary, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "canUpdateMovieFile") = Bool;
overload externalInstanceMethod(static QTMovie, static "updateMovieFile") = Bool;
overload externalInstanceMethod(static QTMovie, static "autoplay") = Void;
overload externalInstanceMethod(static QTMovie, static "play") = Void;
overload externalInstanceMethod(static QTMovie, static "stop") = Void;
overload externalInstanceMethod(static QTMovie, static "currentTime") = QTTime;
overload externalInstanceMethod(static QTMovie, static "setCurrentTime:") = Void, QTTime;
overload externalInstanceMethod(static QTMovie, static "gotoBeginning") = Void;
overload externalInstanceMethod(static QTMovie, static "gotoEnd") = Void;
overload externalInstanceMethod(static QTMovie, static "gotoNextSelectionPoint") = Void;
overload externalInstanceMethod(static QTMovie, static "gotoPreviousSelectionPoint") = Void;
overload externalInstanceMethod(static QTMovie, static "gotoPosterTime") = Void;
overload externalInstanceMethod(static QTMovie, static "stepForward") = Void;
overload externalInstanceMethod(static QTMovie, static "stepBackward") = Void;
overload externalInstanceMethod(static QTMovie, static "rate") = Float;
overload externalInstanceMethod(static QTMovie, static "setRate:") = Void, Float;
overload externalInstanceMethod(static QTMovie, static "volume") = Float;
overload externalInstanceMethod(static QTMovie, static "setVolume:") = Void, Float;
overload externalInstanceMethod(static QTMovie, static "muted") = Bool;
overload externalInstanceMethod(static QTMovie, static "setMuted:") = Void, Bool;
overload externalInstanceMethod(static QTMovie, static "setSelection:") = Void, QTTimeRange;
overload externalInstanceMethod(static QTMovie, static "selectionStart") = QTTime;
overload externalInstanceMethod(static QTMovie, static "selectionEnd") = QTTime;
overload externalInstanceMethod(static QTMovie, static "selectionDuration") = QTTime;
overload externalInstanceMethod(static QTMovie, static "replaceSelectionWithSelectionFromMovie:") = Void, Id;
overload externalInstanceMethod(static QTMovie, static "appendSelectionFromMovie:") = Void, Id;
overload externalInstanceMethod(static QTMovie, static "insertSegmentOfMovie:timeRange:atTime:") = Void, QTMovie, QTTimeRange, QTTime;
overload externalInstanceMethod(static QTMovie, static "insertSegmentOfMovie:fromRange:scaledToRange:") = Void, QTMovie, QTTimeRange, QTTimeRange;
overload externalInstanceMethod(static QTMovie, static "insertEmptySegmentAt:") = Void, QTTimeRange;
overload externalInstanceMethod(static QTMovie, static "deleteSegment:") = Void, QTTimeRange;
overload externalInstanceMethod(static QTMovie, static "scaleSegment:newDuration:") = Void, QTTimeRange, QTTime;
overload externalInstanceMethod(static QTMovie, static "addImage:forDuration:withAttributes:") = Void, NSImage, QTTime, NSDictionary;
overload externalInstanceMethod(static QTMovie, static "insertSegmentOfTrack:timeRange:atTime:") = QTTrack, QTTrack, QTTimeRange, QTTime;
overload externalInstanceMethod(static QTMovie, static "insertSegmentOfTrack:fromRange:scaledToRange:") = QTTrack, QTTrack, QTTimeRange, QTTimeRange;
overload externalInstanceMethod(static QTMovie, static "removeTrack:") = Void, QTTrack;
overload externalInstanceMethod(static QTMovie, static "delegate") = Id;
overload externalInstanceMethod(static QTMovie, static "setDelegate:") = Void, Id;
overload externalInstanceMethod(static QTMovie, static "quickTimeMovie") = Movie;
overload externalInstanceMethod(static QTMovie, static "quickTimeMovieController") = MovieController;
overload externalInstanceMethod(static QTMovie, static "generateApertureModeDimensions") = Void;
overload externalInstanceMethod(static QTMovie, static "removeApertureModeDimensions") = Void;
overload externalInstanceMethod(static QTMovie, static "setVisualContext:") = Void, QTVisualContextRef;
overload externalInstanceMethod(static QTMovie, static "visualContext") = QTVisualContextRef;
overload externalClassMethod(static QTMovie, static "enterQTKitOnThread") = Void;
overload externalClassMethod(static QTMovie, static "enterQTKitOnThreadDisablingThreadSafetyProtection") = Void;
overload externalClassMethod(static QTMovie, static "exitQTKitOnThread") = Void;
overload externalInstanceMethod(static QTMovie, static "attachToCurrentThread") = Bool;
overload externalInstanceMethod(static QTMovie, static "detachFromCurrentThread") = Bool;
overload externalInstanceMethod(static QTMovie, static "setIdling:") = Void, Bool;
overload externalInstanceMethod(static QTMovie, static "isIdling") = Bool;
overload externalInstanceMethod(static QTMovie, static "hasChapters") = Bool;
overload externalInstanceMethod(static QTMovie, static "chapterCount") = Int;
overload externalInstanceMethod(static QTMovie, static "chapters") = NSArray;
overload externalInstanceMethod(static QTMovie, static "addChapters:withAttributes:error:") = Void, NSArray, NSDictionary, Pointer[NSError];
overload externalInstanceMethod(static QTMovie, static "removeChapters") = Bool;
overload externalInstanceMethod(static QTMovie, static "startTimeOfChapter:") = QTTime, Int;
overload externalInstanceMethod(static QTMovie, static "chapterIndexForTime:") = Int, QTTime;

record QTMovieLayer = externalClass(CALayer);
overload externalClassMethod(static QTMovieLayer, static "layerWithMovie:") = Id, QTMovie;
overload externalInstanceMethod(static QTMovieLayer, static "initWithMovie:") = Id, QTMovie;
overload externalInstanceMethod(static QTMovieLayer, static "setMovie:") = Void, QTMovie;
overload externalInstanceMethod(static QTMovieLayer, static "movie") = QTMovie;

record QTMovieView = externalClass(NSView);
overload externalInstanceMethod(static QTMovieView, static "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(static QTMovieView, static "initWithCoder:") = Id, NSCoder;
overload externalInstanceMethod(static QTMovieView, static "validateUserInterfaceItem:") = Bool, Id;
overload externalInstanceMethod(static QTMovieView, static "insertText:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "doCommandBySelector:") = Void, SelectorHandle;
overload externalInstanceMethod(static QTMovieView, static "setMarkedText:selectedRange:") = Void, Id, NSRange;
overload externalInstanceMethod(static QTMovieView, static "unmarkText") = Void;
overload externalInstanceMethod(static QTMovieView, static "hasMarkedText") = Bool;
overload externalInstanceMethod(static QTMovieView, static "conversationIdentifier") = Int;
overload externalInstanceMethod(static QTMovieView, static "attributedSubstringFromRange:") = NSAttributedString, NSRange;
overload externalInstanceMethod(static QTMovieView, static "markedRange") = NSRange;
overload externalInstanceMethod(static QTMovieView, static "selectedRange") = NSRange;
overload externalInstanceMethod(static QTMovieView, static "firstRectForCharacterRange:") = NSRect, NSRange;
overload externalInstanceMethod(static QTMovieView, static "characterIndexForPoint:") = UInt, NSPoint;
overload externalInstanceMethod(static QTMovieView, static "validAttributesForMarkedText") = NSArray;
overload externalInstanceMethod(static QTMovieView, static "movie") = QTMovie;
overload externalInstanceMethod(static QTMovieView, static "setMovie:") = Void, QTMovie;
overload externalInstanceMethod(static QTMovieView, static "preservesAspectRatio") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setPreservesAspectRatio:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "fillColor") = NSColor;
overload externalInstanceMethod(static QTMovieView, static "setFillColor:") = Void, NSColor;
overload externalInstanceMethod(static QTMovieView, static "isControllerVisible") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setControllerVisible:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "setShowsResizeIndicator:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "isBackButtonVisible") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setBackButtonVisible:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "isCustomButtonVisible") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setCustomButtonVisible:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "isHotSpotButtonVisible") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setHotSpotButtonVisible:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "areStepButtonsVisible") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setStepButtonsVisible:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "isTranslateButtonVisible") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setTranslateButtonVisible:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "isVolumeButtonVisible") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setVolumeButtonVisible:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "areZoomButtonsVisible") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setZoomButtonsVisible:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "movieBounds") = NSRect;
overload externalInstanceMethod(static QTMovieView, static "movieControllerBounds") = NSRect;
overload externalInstanceMethod(static QTMovieView, static "controllerBarHeight") = Float;
overload externalInstanceMethod(static QTMovieView, static "play:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "pause:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "gotoBeginning:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "gotoEnd:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "gotoNextSelectionPoint:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "gotoPreviousSelectionPoint:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "gotoPosterFrame:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "stepForward:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "stepBackward:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "isEditable") = Bool;
overload externalInstanceMethod(static QTMovieView, static "setEditable:") = Void, Bool;
overload externalInstanceMethod(static QTMovieView, static "cut:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "copy:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "paste:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "selectAll:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "selectNone:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "delete:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "add:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "addScaled:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "replace:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "trim:") = Void, Id;
overload externalInstanceMethod(static QTMovieView, static "delegate") = Id;
overload externalInstanceMethod(static QTMovieView, static "setDelegate:") = Void, Id;

record QTSampleBuffer = externalClass(NSObject);
overload externalInstanceMethod(static QTSampleBuffer, static "bytesForAllSamples") = RawPointer;
overload externalInstanceMethod(static QTSampleBuffer, static "lengthForAllSamples") = UInt;
overload externalInstanceMethod(static QTSampleBuffer, static "formatDescription") = QTFormatDescription;
overload externalInstanceMethod(static QTSampleBuffer, static "duration") = QTTime;
overload externalInstanceMethod(static QTSampleBuffer, static "decodeTime") = QTTime;
overload externalInstanceMethod(static QTSampleBuffer, static "presentationTime") = QTTime;
overload externalInstanceMethod(static QTSampleBuffer, static "numberOfSamples") = UInt;
overload externalInstanceMethod(static QTSampleBuffer, static "sampleBufferAttributes") = NSDictionary;
overload externalInstanceMethod(static QTSampleBuffer, static "attributeForKey:") = Id, NSString;
overload externalInstanceMethod(static QTSampleBuffer, static "sampleUseCount") = UInt;
overload externalInstanceMethod(static QTSampleBuffer, static "incrementSampleUseCount") = Void;
overload externalInstanceMethod(static QTSampleBuffer, static "decrementSampleUseCount") = Void;
overload externalInstanceMethod(static QTSampleBuffer, static "audioBufferListWithOptions:") = Pointer[AudioBufferList], UInt;
overload externalInstanceMethod(static QTSampleBuffer, static "getAudioStreamPacketDescriptions:inRange:") = Bool, Pointer[AudioStreamPacketDescription], NSRange;

record QTTrack = externalClass(NSObject);
overload externalClassMethod(static QTTrack, static "trackWithQuickTimeTrack:error:") = Id, Track, Pointer[NSError];
overload externalInstanceMethod(static QTTrack, static "initWithQuickTimeTrack:error:") = Id, Track, Pointer[NSError];
overload externalInstanceMethod(static QTTrack, static "movie") = QTMovie;
overload externalInstanceMethod(static QTTrack, static "media") = QTMedia;
overload externalInstanceMethod(static QTTrack, static "isEnabled") = Bool;
overload externalInstanceMethod(static QTTrack, static "setEnabled:") = Void, Bool;
overload externalInstanceMethod(static QTTrack, static "volume") = Float;
overload externalInstanceMethod(static QTTrack, static "setVolume:") = Void, Float;
overload externalInstanceMethod(static QTTrack, static "trackAttributes") = NSDictionary;
overload externalInstanceMethod(static QTTrack, static "setTrackAttributes:") = Void, NSDictionary;
overload externalInstanceMethod(static QTTrack, static "attributeForKey:") = Id, NSString;
overload externalInstanceMethod(static QTTrack, static "setAttribute:forKey:") = Void, Id, NSString;
overload externalInstanceMethod(static QTTrack, static "quickTimeTrack") = Track;
overload externalInstanceMethod(static QTTrack, static "insertSegmentOfTrack:timeRange:atTime:") = Void, QTTrack, QTTimeRange, QTTime;
overload externalInstanceMethod(static QTTrack, static "insertSegmentOfTrack:fromRange:scaledToRange:") = Void, QTTrack, QTTimeRange, QTTimeRange;
overload externalInstanceMethod(static QTTrack, static "insertEmptySegmentAt:") = Void, QTTimeRange;
overload externalInstanceMethod(static QTTrack, static "deleteSegment:") = Void, QTTimeRange;
overload externalInstanceMethod(static QTTrack, static "scaleSegment:newDuration:") = Void, QTTimeRange, QTTime;
overload externalInstanceMethod(static QTTrack, static "addImage:forDuration:withAttributes:") = Void, NSImage, QTTime, NSDictionary;
overload externalInstanceMethod(static QTTrack, static "apertureModeDimensionsForMode:") = NSSize, NSString;
overload externalInstanceMethod(static QTTrack, static "setApertureModeDimensions:forMode:") = Void, NSSize, NSString;
overload externalInstanceMethod(static QTTrack, static "generateApertureModeDimensions") = Void;
overload externalInstanceMethod(static QTTrack, static "removeApertureModeDimensions") = Void;


alias NSInteger2 = Int;

alias NSUInteger2 = UInt;

external QTKitErrorDomain : NSString;

external QTErrorCaptureInputKey : NSString;

external QTErrorCaptureOutputKey : NSString;

external QTErrorDeviceKey : NSString;

external QTErrorExcludingDeviceKey : NSString;

external QTErrorTimeKey : NSString;

external QTErrorFileSizeKey : NSString;

external QTErrorRecordingSuccesfullyFinishedKey : NSString;

alias QTErrorUnknown = 4294967295;
alias QTErrorIncompatibleInput = 1002;
alias QTErrorIncompatibleOutput = 1003;
alias QTErrorInvalidInputsOrOutputs = 1100;
alias QTErrorDeviceAlreadyUsedbyAnotherSession = 1101;
alias QTErrorNoDataCaptured = 1200;
alias QTErrorSessionConfigurationChanged = 1201;
alias QTErrorDiskFull = 1202;
alias QTErrorDeviceWasDisconnected = 1203;
alias QTErrorMediaChanged = 1204;
alias QTErrorMaximumDurationReached = 1205;
alias QTErrorMaximumFileSizeReached = 1206;
alias QTErrorMediaDiscontinuity = 1207;
alias QTErrorMaximumNumberOfSamplesForFileFormatReached = 1208;
alias QTErrorDeviceNotConnected = 1300;
alias QTErrorDeviceInUseByAnotherApplication = 1301;
alias QTErrorDeviceExcludedByAnotherDevice = 1302;

external QTDataReferenceTypeFile : NSString;

external QTDataReferenceTypeHandle : NSString;

external QTDataReferenceTypePointer : NSString;

external QTDataReferenceTypeResource : NSString;

external QTDataReferenceTypeURL : NSString;

alias kQTTimeIsIndefinite = 1;

record UnnamedStruct128 (
    timeValue : Int64,
    timeScale : CLong,
    flags : CLong,
);

alias QTTime = UnnamedStruct128;

external QTZeroTime : QTTime;

external QTIndefiniteTime : QTTime;

external QTMakeTimeWithTimeRecord(
    timeRecord : TimeRecord) : QTTime;

external QTMakeTimeWithTimeInterval(
    timeInterval : Double) : QTTime;

external QTMakeTime(
    timeValue : Int64,
    timeScale : CLong) : QTTime;

external QTMakeTimeScaled(
    time : QTTime,
    timeScale : CLong) : QTTime;

external QTGetTimeRecord(
    time : QTTime,
    timeRecord : Pointer[TimeRecord]) : Bool;

external QTGetTimeInterval(
    time : QTTime,
    timeInterval : Pointer[Double]) : Bool;

external QTTimeCompare(
    time : QTTime,
    otherTime : QTTime) : Int;

external QTTimeIncrement(
    time : QTTime,
    increment : QTTime) : QTTime;

external QTTimeDecrement(
    time : QTTime,
    decrement : QTTime) : QTTime;

external QTStringFromTime(
    time : QTTime) : NSString;

external QTTimeFromString(
    string : NSString) : QTTime;

external QTTimeIsIndefinite(
    time : QTTime) : Bool;

external QTStringFromSMPTETime(
    time : SMPTETime) : NSString;

record UnnamedStruct129 (
    time : QTTime,
    duration : QTTime,
);

alias QTTimeRange = UnnamedStruct129;

external QTMakeTimeRange(
    time : QTTime,
    duration : QTTime) : QTTimeRange;

external QTTimeInTimeRange(
    time : QTTime,
    range : QTTimeRange) : Bool;

external QTEqualTimeRanges(
    range : QTTimeRange,
    range2 : QTTimeRange) : Bool;

external QTTimeRangeEnd(
    range : QTTimeRange) : QTTime;

external QTUnionTimeRange(
    range1 : QTTimeRange,
    range2 : QTTimeRange) : QTTimeRange;

external QTIntersectionTimeRange(
    range1 : QTTimeRange,
    range2 : QTTimeRange) : QTTimeRange;

external QTStringFromTimeRange(
    range : QTTimeRange) : NSString;

external QTTimeRangeFromString(
    string : NSString) : QTTimeRange;

external QTMoviePasteboardType : NSString;

external QTMovieEditabilityDidChangeNotification : NSString;

external QTMovieEditedNotification : NSString;

external QTMovieLoadStateDidChangeNotification : NSString;

external QTMovieLoopModeDidChangeNotification : NSString;

external QTMovieMessageStringPostedNotification : NSString;

external QTMovieRateDidChangeNotification : NSString;

external QTMovieSelectionDidChangeNotification : NSString;

external QTMovieNaturalSizeDidChangeNotification : NSString;

external QTMovieSizeDidChangeNotification : NSString;

external QTMovieStatusStringPostedNotification : NSString;

external QTMovieTimeDidChangeNotification : NSString;

external QTMovieVolumeDidChangeNotification : NSString;

external QTMovieDidEndNotification : NSString;

external QTMovieChapterDidChangeNotification : NSString;

external QTMovieChapterListDidChangeNotification : NSString;

external QTMovieEnterFullScreenRequestNotification : NSString;

external QTMovieExitFullScreenRequestNotification : NSString;

external QTMovieCloseWindowRequestNotification : NSString;

external QTMovieApertureModeDidChangeNotification : NSString;

external QTMovieMessageNotificationParameter : NSString;

external QTMovieRateDidChangeNotificationParameter : NSString;

external QTMovieStatusFlagsNotificationParameter : NSString;

external QTMovieStatusCodeNotificationParameter : NSString;

external QTMovieStatusStringNotificationParameter : NSString;

external QTMovieTargetIDNotificationParameter : NSString;

external QTMovieTargetNameNotificationParameter : NSString;

external QTMovieExport : NSString;

external QTMovieExportType : NSString;

external QTMovieFlatten : NSString;

external QTMovieExportSettings : NSString;

external QTMovieExportManufacturer : NSString;

external QTAddImageCodecType : NSString;

external QTAddImageCodecQuality : NSString;

external QTMovieDataReferenceAttribute : NSString;

external QTMoviePasteboardAttribute : NSString;

external QTMovieDataAttribute : NSString;

external QTMovieFileOffsetAttribute : NSString;

external QTMovieDontInteractWithUserAttribute : NSString;

external QTMovieResolveDataRefsAttribute : NSString;

external QTMovieAskUnresolvedDataRefsAttribute : NSString;

external QTMovieOpenAsyncOKAttribute : NSString;

external QTMovieOpenAsyncRequiredAttribute : NSString;

external QTMovieOpenForPlaybackAttribute : NSString;

external QTMovieApertureModeAttribute : NSString;

external QTMovieActiveSegmentAttribute : NSString;

external QTMovieAutoAlternatesAttribute : NSString;

external QTMovieCopyrightAttribute : NSString;

external QTMovieCreationTimeAttribute : NSString;

external QTMovieCurrentSizeAttribute : NSString;

external QTMovieCurrentTimeAttribute : NSString;

external QTMovieDataSizeAttribute : NSString;

external QTMovieDelegateAttribute : NSString;

external QTMovieDisplayNameAttribute : NSString;

external QTMovieDurationAttribute : NSString;

external QTMovieEditableAttribute : NSString;

external QTMovieFileNameAttribute : NSString;

external QTMovieHasApertureModeDimensionsAttribute : NSString;

external QTMovieHasAudioAttribute : NSString;

external QTMovieHasDurationAttribute : NSString;

external QTMovieHasVideoAttribute : NSString;

external QTMovieIsActiveAttribute : NSString;

external QTMovieIsInteractiveAttribute : NSString;

external QTMovieIsLinearAttribute : NSString;

external QTMovieIsSteppableAttribute : NSString;

external QTMovieLoadStateAttribute : NSString;

external QTMovieLoadStateErrorAttribute : NSString;

external QTMovieLoopsAttribute : NSString;

external QTMovieLoopsBackAndForthAttribute : NSString;

external QTMovieModificationTimeAttribute : NSString;

external QTMovieMutedAttribute : NSString;

external QTMovieNaturalSizeAttribute : NSString;

external QTMoviePlaysAllFramesAttribute : NSString;

external QTMoviePlaysSelectionOnlyAttribute : NSString;

external QTMoviePosterTimeAttribute : NSString;

external QTMoviePreferredMutedAttribute : NSString;

external QTMoviePreferredRateAttribute : NSString;

external QTMoviePreferredVolumeAttribute : NSString;

external QTMoviePreviewModeAttribute : NSString;

external QTMoviePreviewRangeAttribute : NSString;

external QTMovieRateAttribute : NSString;

external QTMovieSelectionAttribute : NSString;

external QTMovieTimeScaleAttribute : NSString;

external QTMovieURLAttribute : NSString;

external QTMovieVolumeAttribute : NSString;

external QTMovieRateChangesPreservePitchAttribute : NSString;

external QTMovieApertureModeClassic : NSString;

external QTMovieApertureModeClean : NSString;

external QTMovieApertureModeProduction : NSString;

external QTMovieApertureModeEncodedPixels : NSString;

external QTMovieFrameImageSize : NSString;

external QTMovieFrameImageType : NSString;

external QTMovieFrameImageTypeNSImage : NSString;

external QTMovieFrameImageTypeCGImageRef : NSString;

external QTMovieFrameImageTypeCIImage : NSString;

external QTMovieFrameImageTypeCVPixelBufferRef : NSString;

external QTMovieFrameImageTypeCVOpenGLTextureRef : NSString;

external QTMovieFrameImageOpenGLContext : NSString;

external QTMovieFrameImagePixelFormat : NSString;

external QTMovieFrameImageRepresentationsType : NSString;

external QTMovieFrameImageDeinterlaceFields : NSString;

external QTMovieFrameImageHighQuality : NSString;

external QTMovieFrameImageSingleField : NSString;

external QTMovieFrameImageSessionMode : NSString;

external QTMovieUneditableException : NSString;

external QTDisallowedForInitializationPurposeException : NSString;

external QTMovieChapterName : NSString;

external QTMovieChapterStartTime : NSString;

external QTMovieChapterTargetTrackAttribute : NSString;

alias QTIncludeStillImageTypes = 1;
alias QTIncludeTranslatableTypes = 2;
alias QTIncludeAggressiveTypes = 4;
alias QTIncludeDynamicTypes = 8;
alias QTIncludeCommonTypes = 0;
alias QTIncludeAllTypes = 65535;

alias QTMovieFileTypeOptions = Int;

alias QTMovieOperationBeginPhase = 0;
alias QTMovieOperationUpdatePercentPhase = 1;
alias QTMovieOperationEndPhase = 2;

alias QTMovieOperationPhase = Int;

alias QTMovieLoadStateError = 4294967295;
alias QTMovieLoadStateLoading = 1000;
alias QTMovieLoadStateLoaded = 2000;
alias QTMovieLoadStatePlayable = 10000;
alias QTMovieLoadStatePlaythroughOK = 20000;
alias QTMovieLoadStateComplete = 100000;

alias QTMovieLoadState = Int;

external QTTrackBoundsAttribute : NSString;

external QTTrackCreationTimeAttribute : NSString;

external QTTrackDimensionsAttribute : NSString;

external QTTrackDisplayNameAttribute : NSString;

external QTTrackEnabledAttribute : NSString;

external QTTrackFormatSummaryAttribute : NSString;

external QTTrackIsChapterTrackAttribute : NSString;

external QTTrackHasApertureModeDimensionsAttribute : NSString;

external QTTrackIDAttribute : NSString;

external QTTrackLayerAttribute : NSString;

external QTTrackMediaTypeAttribute : NSString;

external QTTrackModificationTimeAttribute : NSString;

external QTTrackRangeAttribute : NSString;

external QTTrackTimeScaleAttribute : NSString;

external QTTrackUsageInMovieAttribute : NSString;

external QTTrackUsageInPosterAttribute : NSString;

external QTTrackUsageInPreviewAttribute : NSString;

external QTTrackVolumeAttribute : NSString;

external QTMediaTypeVideo : NSString;

external QTMediaTypeSound : NSString;

external QTMediaTypeText : NSString;

external QTMediaTypeBase : NSString;

external QTMediaTypeMPEG : NSString;

external QTMediaTypeMusic : NSString;

external QTMediaTypeTimeCode : NSString;

external QTMediaTypeSprite : NSString;

external QTMediaTypeFlash : NSString;

external QTMediaTypeMovie : NSString;

external QTMediaTypeTween : NSString;

external QTMediaType3D : NSString;

external QTMediaTypeSkin : NSString;

external QTMediaTypeQTVR : NSString;

external QTMediaTypeHint : NSString;

external QTMediaTypeStream : NSString;

external QTMediaTypeMuxed : NSString;

external QTMediaTypeQuartzComposer : NSString;

external QTMediaTypeSubtitle : NSString;

external QTMediaTypeClosedCaption : NSString;

external QTMediaCharacteristicVisual : NSString;

external QTMediaCharacteristicAudio : NSString;

external QTMediaCharacteristicCanSendVideo : NSString;

external QTMediaCharacteristicProvidesActions : NSString;

external QTMediaCharacteristicNonLinear : NSString;

external QTMediaCharacteristicCanStep : NSString;

external QTMediaCharacteristicHasNoDuration : NSString;

external QTMediaCharacteristicHasSkinData : NSString;

external QTMediaCharacteristicProvidesKeyFocus : NSString;

external QTMediaCharacteristicHasVideoFrameRate : NSString;

external QTMediaCreationTimeAttribute : NSString;

external QTMediaDurationAttribute : NSString;

external QTMediaModificationTimeAttribute : NSString;

external QTMediaSampleCountAttribute : NSString;

external QTMediaQualityAttribute : NSString;

external QTMediaTimeScaleAttribute : NSString;

external QTMediaTypeAttribute : NSString;

external QTMovieViewMovieBinding : NSString;

external QTMovieViewControllerVisibleBinding : NSString;

external QTMovieViewPreservesAspectRatioBinding : NSString;

external QTMovieViewFillColorBinding : NSString;

external QTStringForOSType(
    type : CULong) : NSString;

external QTOSTypeForString(
    string : NSString) : CULong;

external QTCaptureSessionRuntimeErrorNotification : NSString;

external QTCaptureSessionErrorKey : NSString;

external QTCaptureConnectionFormatDescriptionWillChangeNotification : NSString;

external QTCaptureConnectionFormatDescriptionDidChangeNotification : NSString;

external QTCaptureConnectionAttributeWillChangeNotification : NSString;

external QTCaptureConnectionAttributeDidChangeNotification : NSString;

external QTCaptureConnectionChangedAttributeKey : NSString;

external QTCaptureConnectionAudioAveragePowerLevelsAttribute : NSString;

external QTCaptureConnectionAudioPeakHoldLevelsAttribute : NSString;

external QTCaptureConnectionAudioMasterVolumeAttribute : NSString;

external QTCaptureConnectionAudioVolumesAttribute : NSString;

external QTCaptureConnectionEnabledAudioChannelsAttribute : NSString;

alias QTCaptureFileOutputBufferDestinationNewFile = 1;
alias QTCaptureFileOutputBufferDestinationOldFile = 2;

alias QTCaptureFileOutputBufferDestination = UInt;

external QTCaptureDeviceWasConnectedNotification : NSString;

external QTCaptureDeviceWasDisconnectedNotification : NSString;

external QTCaptureDeviceFormatDescriptionsWillChangeNotification : NSString;

external QTCaptureDeviceFormatDescriptionsDidChangeNotification : NSString;

external QTCaptureDeviceAttributeWillChangeNotification : NSString;

external QTCaptureDeviceAttributeDidChangeNotification : NSString;

external QTCaptureDeviceChangedAttributeKey : NSString;

external QTCaptureDeviceSuspendedAttribute : NSString;

external QTCaptureDeviceLinkedDevicesAttribute : NSString;

external QTCaptureDeviceAvailableInputSourcesAttribute : NSString;

external QTCaptureDeviceInputSourceIdentifierAttribute : NSString;

external QTCaptureDeviceInputSourceIdentifierKey : NSString;

external QTCaptureDeviceInputSourceLocalizedDisplayNameKey : NSString;

external QTCaptureDeviceLegacySequenceGrabberAttribute : NSString;

external QTCaptureDeviceAVCTransportControlsAttribute : NSString;

external QTCaptureDeviceAVCTransportControlsPlaybackModeKey : NSString;

external QTCaptureDeviceAVCTransportControlsSpeedKey : NSString;

alias QTCaptureDeviceAVCTransportControlsNotPlayingMode = 0;
alias QTCaptureDeviceAVCTransportControlsPlayingMode = 1;

alias QTCaptureDeviceAVCTransportControlsPlaybackMode = UInt;

alias QTCaptureDeviceAVCTransportControlsFastestReverseSpeed = 4294948296;
alias QTCaptureDeviceAVCTransportControlsVeryFastReverseSpeed = 4294951296;
alias QTCaptureDeviceAVCTransportControlsFastReverseSpeed = 4294954296;
alias QTCaptureDeviceAVCTransportControlsNormalReverseSpeed = 4294957296;
alias QTCaptureDeviceAVCTransportControlsSlowReverseSpeed = 4294960296;
alias QTCaptureDeviceAVCTransportControlsVerySlowReverseSpeed = 4294963296;
alias QTCaptureDeviceAVCTransportControlsSlowestReverseSpeed = 4294966296;
alias QTCaptureDeviceAVCTransportControlsStoppedSpeed = 0;
alias QTCaptureDeviceAVCTransportControlsSlowestForwardSpeed = 1000;
alias QTCaptureDeviceAVCTransportControlsVerySlowForwardSpeed = 4000;
alias QTCaptureDeviceAVCTransportControlsSlowForwardSpeed = 7000;
alias QTCaptureDeviceAVCTransportControlsNormalForwardSpeed = 10000;
alias QTCaptureDeviceAVCTransportControlsFastForwardSpeed = 13000;
alias QTCaptureDeviceAVCTransportControlsVeryFastForwardSpeed = 16000;
alias QTCaptureDeviceAVCTransportControlsFastestForwardSpeed = 19000;

alias QTCaptureDeviceAVCTransportControlsSpeed = Int;

external QTFormatDescriptionAudioStreamBasicDescriptionAttribute : NSString;

external QTFormatDescriptionAudioMagicCookieAttribute : NSString;

external QTFormatDescriptionAudioChannelLayoutAttribute : NSString;

external QTFormatDescriptionVideoCleanApertureDisplaySizeAttribute : NSString;

external QTFormatDescriptionVideoProductionApertureDisplaySizeAttribute : NSString;

external QTFormatDescriptionVideoEncodedPixelsSizeAttribute : NSString;

external QTSampleBufferSMPTETimeAttribute : NSString;

external QTSampleBufferDateRecordedAttribute : NSString;

external QTSampleBufferHostTimeAttribute : NSString;

external QTSampleBufferSceneChangeTypeAttribute : NSString;

external QTSampleBufferExplicitSceneChange : NSString;

external QTSampleBufferTimeStampDiscontinuitySceneChange : NSString;

alias QTSampleBufferAudioBufferListOptionAssure16ByteAlignment = 1;

alias QTSampleBufferAudioBufferListOptions = UInt;
