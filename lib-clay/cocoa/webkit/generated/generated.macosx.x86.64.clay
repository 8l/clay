// Automatically generated by clay-bindgen
// language: objective-c

import cocoa.objc.*;

import libc.*;
import cocoa.corefoundation.*;
import cocoa.applicationservices.*;
import cocoa.foundation.*;
import cocoa.quartzcore.*;
import cocoa.appkit.*;

private alias OpaquePointer = RawPointer;
private alias UnknownType = Int;
private alias AUnionType = Int;


overload selector("AMSymbol") = NSString;
overload selector("CATransform3DValue") = CATransform3D;
overload selector("CGColorSpace") = CGColorSpaceRef;
overload selector("CGEvent") = CGEventRef;
overload selector("CGImage") = CGImageRef;
overload selector("CGImageForProposedRect:context:hints:") = CGImageRef, Pointer[NSRect], NSGraphicsContext, NSDictionary;
overload selector("CGLContextObj") = RawPointer;
overload selector("CGLPBufferObj") = RawPointer;
overload selector("CGLPixelFormatObj") = RawPointer;
overload selector("CIContext") = CIContext;
overload selector("CIImage") = CIImage;
overload selector("DOMDocument") = DOMDocument;
overload selector("DTD") = NSXMLDTD;
overload selector("DTDKind") = CULong;
overload selector("DTDNodeWithXMLString:") = Id, NSString;
overload selector("EPSOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
overload selector("EPSOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
overload selector("EPSOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
overload selector("EPSRepresentation") = NSData;
overload selector("HTTPBody") = NSData;
overload selector("HTTPBodyStream") = NSInputStream;
overload selector("HTTPMethod") = NSString;
overload selector("HTTPShouldHandleCookies") = Bool;
overload selector("IBeamCursor") = NSCursor;
overload selector("ICCProfileData") = NSData;
overload selector("ISOCountryCodes") = NSArray;
overload selector("ISOCurrencyCodes") = NSArray;
overload selector("ISOLanguageCodes") = NSArray;
overload selector("JSObject") = JSObjectRef;
overload selector("MIMEType") = NSString;
overload selector("MIMETypesShownAsHTML") = NSArray;
overload selector("PDFOperationWithView:insideRect:toData:") = NSPrintOperation, NSView, NSRect, NSMutableData;
overload selector("PDFOperationWithView:insideRect:toData:printInfo:") = NSPrintOperation, NSView, NSRect, NSMutableData, NSPrintInfo;
overload selector("PDFOperationWithView:insideRect:toPath:printInfo:") = NSPrintOperation, NSView, NSRect, NSString, NSPrintInfo;
overload selector("PDFRepresentation") = NSData;
overload selector("PICTRepresentation") = NSData;
overload selector("PMPageFormat") = RawPointer;
overload selector("PMPrintSession") = RawPointer;
overload selector("PMPrintSettings") = RawPointer;
overload selector("PMSymbol") = NSString;
overload selector("QTMovie") = QTMovie;
overload selector("RTFDFileWrapperFromRange:documentAttributes:") = NSFileWrapper, NSRange, NSDictionary;
overload selector("RTFDFromRange:") = NSData, NSRange;
overload selector("RTFDFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
overload selector("RTFFromRange:") = NSData, NSRange;
overload selector("RTFFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
overload selector("TIFFRepresentation") = NSData;
overload selector("TIFFRepresentationOfImageRepsInArray:") = NSData, NSArray;
overload selector("TIFFRepresentationOfImageRepsInArray:usingCompression:factor:") = NSData, NSArray, CULong, Float;
overload selector("TIFFRepresentationUsingCompression:factor:") = NSData, CULong, Float;
overload selector("TXTRecordData") = NSData;
overload selector("UIDelegate") = Id;
overload selector("URI") = NSString;
overload selector("URIRepresentation") = NSURL;
overload selector("URL") = Id;
overload selector("URL:resourceDataDidBecomeAvailable:") = Void, NSURL, NSData;
overload selector("URL:resourceDidFailLoadingWithReason:") = Void, NSURL, NSString;
overload selector("URLAtIndex:effectiveRange:") = NSURL, CULong, NSRangePointer;
overload selector("URLByAppendingPathComponent:") = NSURL, NSString;
overload selector("URLByAppendingPathExtension:") = NSURL, NSString;
overload selector("URLByDeletingLastPathComponent") = NSURL;
overload selector("URLByDeletingPathExtension") = NSURL;
overload selector("URLByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, CULong, NSURL, Pointer[Bool], Pointer[NSError];
overload selector("URLByResolvingSymlinksInPath") = NSURL;
overload selector("URLByStandardizingPath") = NSURL;
overload selector("URLForApplicationToOpenURL:") = NSURL, NSURL;
overload selector("URLForApplicationWithBundleIdentifier:") = NSURL, NSString;
overload selector("URLForAuxiliaryExecutable:") = NSURL, NSString;
overload selector("URLForDirectory:inDomain:appropriateForURL:create:error:") = NSURL, CULong, CULong, NSURL, Bool, Pointer[NSError];
overload selector("URLForImageResource:") = NSURL, NSString;
overload selector("URLForKey:") = NSURL, NSString;
overload selector("URLForPersistentStore:") = NSURL, NSPersistentStore;
overload selector("URLForResource:withExtension:") = NSURL, NSString, NSString;
overload selector("URLForResource:withExtension:subdirectory:") = NSURL, NSString, NSString, NSString;
overload selector("URLForResource:withExtension:subdirectory:inBundleWithURL:") = NSURL, NSString, NSString, NSString, NSURL;
overload selector("URLForResource:withExtension:subdirectory:localization:") = NSURL, NSString, NSString, NSString, NSString;
overload selector("URLFromPasteboard:") = NSURL, NSPasteboard;
overload selector("URLHandle:resourceDataDidBecomeAvailable:") = Void, NSURLHandle, NSData;
overload selector("URLHandle:resourceDidFailLoadingWithReason:") = Void, NSURLHandle, NSString;
overload selector("URLHandleClassForURL:") = Id, NSURL;
overload selector("URLHandleResourceDidBeginLoading:") = Void, NSURLHandle;
overload selector("URLHandleResourceDidCancelLoading:") = Void, NSURLHandle;
overload selector("URLHandleResourceDidFinishLoading:") = Void, NSURLHandle;
overload selector("URLHandleUsingCache:") = NSURLHandle, Bool;
overload selector("URLProtocol:cachedResponseIsValid:") = Void, NSURLProtocol, NSCachedURLResponse;
overload selector("URLProtocol:didCancelAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
overload selector("URLProtocol:didFailWithError:") = Void, NSURLProtocol, NSError;
overload selector("URLProtocol:didLoadData:") = Void, NSURLProtocol, NSData;
overload selector("URLProtocol:didReceiveAuthenticationChallenge:") = Void, NSURLProtocol, NSURLAuthenticationChallenge;
overload selector("URLProtocol:didReceiveResponse:cacheStoragePolicy:") = Void, NSURLProtocol, NSURLResponse, CULong;
overload selector("URLProtocol:wasRedirectedToRequest:redirectResponse:") = Void, NSURLProtocol, NSURLRequest, NSURLResponse;
overload selector("URLProtocolDidFinishLoading:") = Void, NSURLProtocol;
overload selector("URLResourceDidCancelLoading:") = Void, NSURL;
overload selector("URLResourceDidFinishLoading:") = Void, NSURL;
overload selector("URLString") = NSString;
overload selector("URLTitleFromPasteboard:") = NSString, NSPasteboard;
overload selector("URLWithAttributeString:") = NSURL, NSString;
overload selector("URLWithString:") = Id, NSString;
overload selector("URLWithString:relativeToURL:") = Id, NSString, NSURL;
overload selector("URLs") = NSArray;
overload selector("URLsForDirectory:inDomains:") = NSArray, CULong, CULong;
overload selector("URLsForResourcesWithExtension:subdirectory:") = NSArray, NSString, NSString;
overload selector("URLsForResourcesWithExtension:subdirectory:inBundleWithURL:") = NSArray, NSString, NSString, NSURL;
overload selector("URLsForResourcesWithExtension:subdirectory:localization:") = NSArray, NSString, NSString, NSString;
overload selector("URLsFromRunningOpenPanel") = NSArray;
overload selector("UTF8String") = Pointer[CChar];
overload selector("W") = Double;
overload selector("X") = Double;
overload selector("XMLData") = NSData;
overload selector("XMLDataWithOptions:") = NSData, CULong;
overload selector("XMLString") = NSString;
overload selector("XMLStringWithOptions:") = NSString, CULong;
overload selector("XPath") = NSString;
overload selector("Y") = Double;
overload selector("Z") = Double;
overload selector("aLink") = NSString;
overload selector("abbr") = NSString;
overload selector("abbreviation") = NSString;
overload selector("abbreviationDictionary") = NSDictionary;
overload selector("abbreviationForDate:") = NSString, NSDate;
overload selector("abortEditing") = Bool;
overload selector("abortModal") = Void;
overload selector("abortParsing") = Void;
overload selector("absoluteImageURL") = NSURL;
overload selector("absoluteLinkURL") = NSURL;
overload selector("absolutePathForAppBundleWithIdentifier:") = NSString, NSString;
overload selector("absoluteString") = NSString;
overload selector("absoluteURL") = NSURL;
overload selector("absoluteX") = CLong;
overload selector("absoluteY") = CLong;
overload selector("absoluteZ") = CLong;
overload selector("accept") = NSString;
overload selector("acceptCharset") = NSString;
overload selector("acceptConnectionInBackgroundAndNotify") = Void;
overload selector("acceptConnectionInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector("acceptInputForMode:beforeDate:") = Void, NSString, NSDate;
overload selector("acceptNode:") = Short, DOMNode;
overload selector("acceptableDragTypes") = NSArray;
overload selector("acceptsArrowKeys") = Bool;
overload selector("acceptsBinary") = Bool;
overload selector("acceptsFirstMouse:") = Bool, NSEvent;
overload selector("acceptsFirstResponder") = Bool;
overload selector("acceptsGlyphInfo") = Bool;
overload selector("acceptsMouseMovedEvents") = Bool;
overload selector("acceptsTouchEvents") = Bool;
overload selector("accessInstanceVariablesDirectly") = Bool;
overload selector("accessKey") = NSString;
overload selector("accessibilityActionDescription:") = NSString, NSString;
overload selector("accessibilityActionNames") = NSArray;
overload selector("accessibilityArrayAttributeCount:") = CULong, NSString;
overload selector("accessibilityArrayAttributeValues:index:maxCount:") = NSArray, NSString, CULong, CULong;
overload selector("accessibilityAttributeNames") = NSArray;
overload selector("accessibilityAttributeValue:") = Id, NSString;
overload selector("accessibilityAttributeValue:forParameter:") = Id, NSString, Id;
overload selector("accessibilityDescription") = NSString;
overload selector("accessibilityFocusedUIElement") = Id;
overload selector("accessibilityHitTest:") = Id, NSPoint;
overload selector("accessibilityIndexOfChild:") = CULong, Id;
overload selector("accessibilityIsAttributeSettable:") = Bool, NSString;
overload selector("accessibilityIsIgnored") = Bool;
overload selector("accessibilityParameterizedAttributeNames") = NSArray;
overload selector("accessibilityPerformAction:") = Void, NSString;
overload selector("accessibilitySetOverrideValue:forAttribute:") = Bool, Id, NSString;
overload selector("accessibilitySetValue:forAttribute:") = Void, Id, NSString;
overload selector("accessoryControllers") = NSArray;
overload selector("accessoryView") = NSView;
overload selector("acquireFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]],CChar],[RawPointer]];
overload selector("action") = NSString;
overload selector("actionForControlCharacterAtIndex:") = CULong, CULong;
overload selector("actionForKey:") = Id, NSString;
overload selector("actionForLayer:forKey:") = Id, CALayer, NSString;
overload selector("actions") = NSDictionary;
overload selector("activate") = Void;
overload selector("activate:") = Void, Bool;
overload selector("activateContextHelpMode:") = Void, Id;
overload selector("activateFileViewerSelectingURLs:") = Void, NSArray;
overload selector("activateIgnoringOtherApps:") = Void, Bool;
overload selector("activateWithOptions:") = Bool, CULong;
overload selector("activationPolicy") = CLong;
overload selector("activeApplication") = NSDictionary;
overload selector("activeConversationChanged:toNewConversation:") = Void, Id, CLong;
overload selector("activeConversationWillChange:fromOldConversation:") = Void, Id, CLong;
overload selector("activeElement") = DOMElement;
overload selector("activeProcessorCount") = CULong;
overload selector("add:") = Void, Id;
overload selector("add::") = Void, DOMHTMLElement, DOMHTMLElement;
overload selector("add:before:") = Void, DOMHTMLElement, DOMHTMLElement;
overload selector("add:index:") = Void, DOMHTMLOptionElement, UInt;
overload selector("addAccessoryController:") = Void, NSViewController;
overload selector("addAnimation:forKey:") = Void, CAAnimation, NSString;
overload selector("addAttribute:") = Void, NSXMLNode;
overload selector("addAttribute:value:range:") = Void, NSString, Id, NSRange;
overload selector("addAttributes:range:") = Void, NSDictionary, NSRange;
overload selector("addButtonWithTitle:") = NSButton, NSString;
overload selector("addCacheNodes:") = Void, NSSet;
overload selector("addCharactersInRange:") = Void, NSRange;
overload selector("addCharactersInString:") = Void, NSString;
overload selector("addChild:") = Void, NSXMLNode;
overload selector("addChildWindow:ordered:") = Void, NSWindow, CLong;
overload selector("addClient:") = Void, Id;
overload selector("addClip") = Void;
overload selector("addCollection:options:") = Bool, NSString, CLong;
overload selector("addColumn") = Void;
overload selector("addColumnWithCells:") = Void, NSArray;
overload selector("addConnection:toRunLoop:forMode:") = Void, NSConnection, NSRunLoop, NSString;
overload selector("addCursorRect:cursor:") = Void, NSRect, NSCursor;
overload selector("addDependency:") = Void, NSOperation;
overload selector("addDocument:") = Void, NSDocument;
overload selector("addEntriesFromDictionary:") = Void, NSDictionary;
overload selector("addEntry:") = NSFormCell, NSString;
overload selector("addEventListener:::") = Void, NSString, Id, Bool;
overload selector("addEventListener:listener:useCapture:") = Void, NSString, Id, Bool;
overload selector("addExecutionBlock:") = Void, UnknownType;
overload selector("addFileWithPath:") = NSString, NSString;
overload selector("addFileWrapper:") = NSString, NSFileWrapper;
overload selector("addFontDescriptors:toCollection:") = Void, NSArray, NSString;
overload selector("addFontTrait:") = Void, Id;
overload selector("addGlobalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
overload selector("addIndex:") = Void, CULong;
overload selector("addIndexes:") = Void, NSIndexSet;
overload selector("addIndexesInRange:") = Void, NSRange;
overload selector("addItem:") = Void, WebHistoryItem;
overload selector("addItemWithObjectValue:") = Void, Id;
overload selector("addItemWithTitle:") = Void, NSString;
overload selector("addItemWithTitle:action:keyEquivalent:") = NSMenuItem, NSString, SelectorHandle, NSString;
overload selector("addItems:") = Void, NSArray;
overload selector("addItemsWithObjectValues:") = Void, NSArray;
overload selector("addItemsWithTitles:") = Void, NSArray;
overload selector("addLayoutManager:") = Void, NSLayoutManager;
overload selector("addLocalMonitorForEventsMatchingMask:handler:") = Id, UInt64, UnknownType;
overload selector("addMarker:") = Void, NSRulerMarker;
overload selector("addNamespace:") = Void, NSXMLNode;
overload selector("addObject:") = Void, Id;
overload selector("addObjects:") = Void, NSArray;
overload selector("addObjectsFromArray:") = Void, NSArray;
overload selector("addObserver:forKeyPath:options:context:") = Void, NSObject, NSString, CULong, RawPointer;
overload selector("addObserver:selector:name:object:") = Void, Id, SelectorHandle, NSString, Id;
overload selector("addObserver:selector:name:object:suspensionBehavior:") = Void, Id, SelectorHandle, NSString, NSString, CULong;
overload selector("addObserver:toObjectsAtIndexes:forKeyPath:options:context:") = Void, NSObject, NSIndexSet, NSString, CULong, RawPointer;
overload selector("addObserverForName:object:queue:usingBlock:") = Id, NSString, Id, NSOperationQueue, UnknownType;
overload selector("addOperation:") = Void, NSOperation;
overload selector("addOperationWithBlock:") = Void, UnknownType;
overload selector("addOperations:waitUntilFinished:") = Void, NSArray, Bool;
overload selector("addPersistentStoreWithType:configuration:URL:options:error:") = NSPersistentStore, NSString, NSString, NSURL, NSDictionary, Pointer[NSError];
overload selector("addPointer:") = Void, RawPointer;
overload selector("addPort:forMode:") = Void, NSPort, NSString;
overload selector("addProgressMark:") = Void, Float;
overload selector("addRegularFileWithContents:preferredFilename:") = NSString, NSData, NSString;
overload selector("addRepresentation:") = Void, NSImageRep;
overload selector("addRepresentations:") = Void, NSArray;
overload selector("addRequestMode:") = Void, NSString;
overload selector("addRow") = Void;
overload selector("addRow:") = Void, Id;
overload selector("addRowWithCells:") = Void, NSArray;
overload selector("addRule:style:index:") = Int, NSString, NSString, UInt;
overload selector("addRunLoop:") = Void, NSRunLoop;
overload selector("addSelectedObjects:") = Bool, NSArray;
overload selector("addSelectionIndexPaths:") = Bool, NSArray;
overload selector("addSelectionIndexes:") = Bool, NSIndexSet;
overload selector("addSpeechDictionary:") = Void, NSDictionary;
overload selector("addSublayer:") = Void, CALayer;
overload selector("addSubresource:") = Void, WebResource;
overload selector("addSubview:") = Void, NSView;
overload selector("addSubview:positioned:relativeTo:") = Void, NSView, CLong, NSView;
overload selector("addSuiteNamed:") = Void, NSString;
overload selector("addSymbolicLinkWithDestination:preferredFilename:") = NSString, NSString, NSString;
overload selector("addTabStop:") = Void, NSTextTab;
overload selector("addTabViewItem:") = Void, NSTabViewItem;
overload selector("addTableColumn:") = Void, NSTableColumn;
overload selector("addTemporaryAttribute:value:forCharacterRange:") = Void, NSString, Id, NSRange;
overload selector("addTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
overload selector("addTextContainer:") = Void, NSTextContainer;
overload selector("addTimeInterval:") = Id, Double;
overload selector("addTimer:forMode:") = Void, NSTimer, NSString;
overload selector("addToolTipRect:owner:userData:") = CLong, NSRect, Id, RawPointer;
overload selector("addTrackingArea:") = Void, NSTrackingArea;
overload selector("addTrackingRect:owner:userData:assumeInside:") = CLong, NSRect, Id, RawPointer, Bool;
overload selector("addTypes:owner:") = CLong, NSArray, Id;
overload selector("addValue:forHTTPHeaderField:") = Void, NSString, NSString;
overload selector("addWindowController:") = Void, NSWindowController;
overload selector("addWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
overload selector("address") = Id;
overload selector("addressCheckingResultWithRange:components:") = NSTextCheckingResult, NSRange, NSDictionary;
overload selector("addressComponents") = NSDictionary;
overload selector("addresses") = NSArray;
overload selector("adjustPageHeightNew:top:bottom:limit:") = Void, Pointer[Double], Double, Double, Double;
overload selector("adjustPageWidthNew:left:right:limit:") = Void, Pointer[Double], Double, Double, Double;
overload selector("adjustScroll:") = NSRect, NSRect;
overload selector("adjustSubviews") = Void;
overload selector("adobeRGB1998ColorSpace") = NSColorSpace;
overload selector("adoptNode:") = DOMNode, DOMNode;
overload selector("advancementForGlyph:") = NSSize, UInt;
overload selector("aeDesc") = Pointer[AEDesc];
overload selector("aeteResource:") = NSData, NSString;
overload selector("affectedStores") = NSArray;
overload selector("affineTransform") = CGAffineTransform;
overload selector("alertShowHelp:") = Bool, NSAlert;
overload selector("alertStyle") = CULong;
overload selector("alertWithError:") = NSAlert, NSError;
overload varargSelector("alertWithMessageText:defaultButton:alternateButton:otherButton:informativeTextWithFormat:") = NSAlert, NSString, NSString, NSString, NSString, NSString;
overload selector("align") = NSString;
overload selector("alignCenter:") = Void, Id;
overload selector("alignJustified:") = Void, Id;
overload selector("alignLeft:") = Void, Id;
overload selector("alignRight:") = Void, Id;
overload selector("alignment") = CULong;
overload selector("alignmentRect") = NSRect;
overload selector("alinkColor") = NSString;
overload selector("allBundles") = NSArray;
overload selector("allConnections") = NSArray;
overload selector("allCredentials") = NSDictionary;
overload selector("allFrameworks") = NSArray;
overload selector("allHTTPHeaderFields") = NSDictionary;
overload selector("allHeaderFields") = NSDictionary;
overload selector("allKeys") = NSArray;
overload selector("allKeysForObject:") = NSArray, Id;
overload selector("allLanguages") = NSArray;
overload selector("allObjects") = NSArray;
overload selector("allScripts") = NSArray;
overload selector("allValues") = NSArray;
overload selector("alloc") = Id;
overload selector("allocWithZone:") = Id, Pointer[NSZone];
overload selector("allocateGState") = Void;
overload selector("allowedFileTypes") = NSArray;
overload selector("allowedInputSourceLocales") = NSArray;
overload selector("allowedTypes") = NSArray;
overload selector("allowsAnimatedImageLooping") = Bool;
overload selector("allowsAnimatedImages") = Bool;
overload selector("allowsBranchSelection") = Bool;
overload selector("allowsColumnReordering") = Bool;
overload selector("allowsColumnResizing") = Bool;
overload selector("allowsColumnSelection") = Bool;
overload selector("allowsConcurrentViewDrawing") = Bool;
overload selector("allowsContextMenuPlugIns") = Bool;
overload selector("allowsCutCopyPaste") = Bool;
overload selector("allowsDocumentBackgroundColorChange") = Bool;
overload selector("allowsDuplicatesInToolbar") = Bool;
overload selector("allowsEditingTextAttributes") = Bool;
overload selector("allowsEmptySelection") = Bool;
overload selector("allowsFloats") = Bool;
overload selector("allowsImageEditing") = Bool;
overload selector("allowsKeyedCoding") = Bool;
overload selector("allowsMixedState") = Bool;
overload selector("allowsMultipleSelection") = Bool;
overload selector("allowsNaturalLanguage") = Bool;
overload selector("allowsNonContiguousLayout") = Bool;
overload selector("allowsOtherFileTypes") = Bool;
overload selector("allowsReverseTransformation") = Bool;
overload selector("allowsScrolling") = Bool;
overload selector("allowsTickMarkValuesOnly") = Bool;
overload selector("allowsToolTipsWhenApplicationIsInactive") = Bool;
overload selector("allowsTruncatedLabels") = Bool;
overload selector("allowsTypeSelect") = Bool;
overload selector("allowsUndo") = Bool;
overload selector("allowsUserCustomization") = Bool;
overload selector("alpha") = DOMCSSPrimitiveValue;
overload selector("alphaComponent") = Double;
overload selector("alphaControlAddedOrRemoved:") = Void, Id;
overload selector("alphaValue") = Double;
overload selector("alphanumericCharacterSet") = Id;
overload selector("alt") = NSString;
overload selector("altDisplayString") = NSString;
overload selector("altGraphKey") = Bool;
overload selector("altIncrementValue") = Double;
overload selector("altKey") = Bool;
overload selector("alternateImage") = NSImage;
overload selector("alternateMnemonic") = NSString;
overload selector("alternateMnemonicLocation") = CULong;
overload selector("alternateSelectedControlColor") = NSColor;
overload selector("alternateSelectedControlTextColor") = NSColor;
overload selector("alternateTitle") = NSString;
overload selector("altersStateOfSelectedItem") = Bool;
overload selector("alwaysShowsDecimalSeparator") = Bool;
overload selector("alwaysUsesMultipleValuesMarker") = Bool;
overload selector("ancestorSharedWithView:") = NSView, NSView;
overload selector("anchorPoint") = CGPoint;
overload selector("anchorPointZ") = Double;
overload selector("anchors") = DOMHTMLCollection;
overload selector("andPredicateWithSubpredicates:") = NSPredicate, NSArray;
overload selector("animate:") = Void, Id;
overload selector("animates") = Bool;
overload selector("animation:didReachProgressMark:") = Void, NSAnimation, Float;
overload selector("animation:valueForProgress:") = Float, NSAnimation, Float;
overload selector("animationBlockingMode") = CULong;
overload selector("animationCurve") = CULong;
overload selector("animationDelay") = Double;
overload selector("animationDidEnd:") = Void, NSAnimation;
overload selector("animationDidStop:") = Void, NSAnimation;
overload selector("animationForKey:") = Id, NSString;
overload selector("animationKeys") = NSArray;
overload selector("animationResizeTime:") = Double, NSRect;
overload selector("animationShouldStart:") = Bool, NSAnimation;
overload selector("animations") = NSDictionary;
overload selector("animator") = Id;
overload selector("anyObject") = Id;
overload selector("appendAttributedString:") = Void, NSAttributedString;
overload selector("appendBezierPath:") = Void, NSBezierPath;
overload selector("appendBezierPathWithArcFromPoint:toPoint:radius:") = Void, NSPoint, NSPoint, Double;
overload selector("appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:") = Void, NSPoint, Double, Double, Double;
overload selector("appendBezierPathWithArcWithCenter:radius:startAngle:endAngle:clockwise:") = Void, NSPoint, Double, Double, Double, Bool;
overload selector("appendBezierPathWithGlyph:inFont:") = Void, UInt, NSFont;
overload selector("appendBezierPathWithGlyphs:count:inFont:") = Void, Pointer[UInt], CLong, NSFont;
overload selector("appendBezierPathWithOvalInRect:") = Void, NSRect;
overload selector("appendBezierPathWithPackedGlyphs:") = Void, Pointer[CChar];
overload selector("appendBezierPathWithPoints:count:") = Void, NSPointArray, CLong;
overload selector("appendBezierPathWithRect:") = Void, NSRect;
overload selector("appendBezierPathWithRoundedRect:xRadius:yRadius:") = Void, NSRect, Double, Double;
overload selector("appendBytes:length:") = Void, RawPointer, CULong;
overload selector("appendChild:") = DOMNode, DOMNode;
overload selector("appendData:") = Void, NSData;
overload varargSelector("appendFormat:") = Void, NSString;
overload selector("appendMedium:") = Void, NSString;
overload selector("appendString:") = Void, NSString;
overload selector("appendTransform:") = Void, NSAffineTransform;
overload selector("appleEvent") = NSAppleEventDescriptor;
overload selector("appleEventClassCode") = UInt;
overload selector("appleEventCode") = UInt;
overload selector("appleEventCodeForArgumentWithName:") = UInt, NSString;
overload selector("appleEventCodeForKey:") = UInt, NSString;
overload selector("appleEventCodeForReturnType") = UInt;
overload selector("appleEventCodeForSuite:") = UInt, NSString;
overload selector("appleEventForSuspensionID:") = NSAppleEventDescriptor, NSAppleEventManagerSuspensionID;
overload selector("appleEventWithEventClass:eventID:targetDescriptor:returnID:transactionID:") = NSAppleEventDescriptor, UInt, UInt, NSAppleEventDescriptor, Short, Int;
overload selector("applets") = DOMHTMLCollection;
overload selector("application:delegateHandlesKey:") = Bool, NSApplication, NSString;
overload selector("application:openFile:") = Bool, NSApplication, NSString;
overload selector("application:openFileWithoutUI:") = Bool, Id, NSString;
overload selector("application:openFiles:") = Void, NSApplication, NSArray;
overload selector("application:openTempFile:") = Bool, NSApplication, NSString;
overload selector("application:printFile:") = Bool, NSApplication, NSString;
overload selector("application:printFiles:") = Void, NSApplication, NSArray;
overload selector("application:printFiles:withSettings:showPrintPanels:") = CULong, NSApplication, NSArray, NSDictionary, Bool;
overload selector("application:willPresentError:") = NSError, NSApplication, NSError;
overload selector("applicationDidBecomeActive:") = Void, NSNotification;
overload selector("applicationDidChangeScreenParameters:") = Void, NSNotification;
overload selector("applicationDidFinishLaunching:") = Void, NSNotification;
overload selector("applicationDidHide:") = Void, NSNotification;
overload selector("applicationDidResignActive:") = Void, NSNotification;
overload selector("applicationDidUnhide:") = Void, NSNotification;
overload selector("applicationDidUpdate:") = Void, NSNotification;
overload selector("applicationDockMenu:") = NSMenu, NSApplication;
overload selector("applicationIconImage") = NSImage;
overload selector("applicationNameForUserAgent") = NSString;
overload selector("applicationOpenUntitledFile:") = Bool, NSApplication;
overload selector("applicationShouldHandleReopen:hasVisibleWindows:") = Bool, NSApplication, Bool;
overload selector("applicationShouldOpenUntitledFile:") = Bool, NSApplication;
overload selector("applicationShouldTerminate:") = CULong, NSApplication;
overload selector("applicationShouldTerminateAfterLastWindowClosed:") = Bool, NSApplication;
overload selector("applicationWillBecomeActive:") = Void, NSNotification;
overload selector("applicationWillFinishLaunching:") = Void, NSNotification;
overload selector("applicationWillHide:") = Void, NSNotification;
overload selector("applicationWillResignActive:") = Void, NSNotification;
overload selector("applicationWillTerminate:") = Void, NSNotification;
overload selector("applicationWillUnhide:") = Void, NSNotification;
overload selector("applicationWillUpdate:") = Void, NSNotification;
overload selector("appliesImmediately") = Bool;
overload selector("applyFontTraits:range:") = Void, CULong, NSRange;
overload selector("applyStyle:") = Void, DOMCSSStyleDeclaration;
overload selector("archive") = NSString;
overload selector("archiveRootObject:toFile:") = Bool, Id, NSString;
overload selector("archivedDataWithRootObject:") = NSData, Id;
overload selector("archiver:didEncodeObject:") = Void, NSKeyedArchiver, Id;
overload selector("archiver:willEncodeObject:") = Id, NSKeyedArchiver, Id;
overload selector("archiver:willReplaceObject:withObject:") = Void, NSKeyedArchiver, Id, Id;
overload selector("archiverData") = NSMutableData;
overload selector("archiverDidFinish:") = Void, NSKeyedArchiver;
overload selector("archiverWillFinish:") = Void, NSKeyedArchiver;
overload selector("areCursorRectsEnabled") = Bool;
overload selector("arePlugInsEnabled") = Bool;
overload selector("areas") = DOMHTMLCollection;
overload selector("argumentNames") = NSArray;
overload selector("arguments") = Id;
overload selector("argumentsRetained") = Bool;
overload selector("arrangeInFront:") = Void, Id;
overload selector("arrangeObjects:") = NSArray, NSArray;
overload selector("arrangedObjects") = Id;
overload selector("array") = Id;
overload selector("arrayByAddingObject:") = NSArray, Id;
overload selector("arrayByAddingObjectsFromArray:") = NSArray, NSArray;
overload selector("arrayForKey:") = NSArray, NSString;
overload selector("arrayWithArray:") = Id, NSArray;
overload selector("arrayWithCapacity:") = Id, CULong;
overload selector("arrayWithContentsOfFile:") = Id, NSString;
overload selector("arrayWithContentsOfURL:") = Id, NSURL;
overload selector("arrayWithObject:") = Id, Id;
overload varargSelector("arrayWithObjects:") = Id, Id;
overload selector("arrayWithObjects:count:") = Id, Pointer[Id], CULong;
overload selector("arrowCursor") = NSCursor;
overload selector("arrowPosition") = CULong;
overload selector("arrowsPosition") = CULong;
overload selector("ascender") = Double;
overload selector("ascending") = Bool;
overload selector("aspectRatio") = NSSize;
overload selector("assignObject:toPersistentStore:") = Void, Id, NSPersistentStore;
overload selector("associateSourceInstance:withDestinationInstance:forEntityMapping:") = Void, NSManagedObject, NSManagedObject, NSEntityMapping;
overload selector("attachColorList:") = Void, NSColorList;
overload selector("attachPopUpWithFrame:inView:") = Void, NSRect, NSView;
overload selector("attachedMenu") = NSMenu;
overload selector("attachedSheet") = NSWindow;
overload selector("attachment") = NSTextAttachment;
overload selector("attachmentCell") = Id;
overload selector("attachmentSizeForGlyphAtIndex:") = NSSize, CULong;
overload selector("attemptRecoveryFromError:optionIndex:") = Bool, NSError, CULong;
overload selector("attemptRecoveryFromError:optionIndex:delegate:didRecoverSelector:contextInfo:") = Void, NSError, CULong, Id, SelectorHandle, RawPointer;
overload selector("attrChange") = UShort;
overload selector("attrName") = NSString;
overload selector("attribute") = NSString;
overload selector("attribute:atIndex:effectiveRange:") = Id, NSString, CULong, NSRangePointer;
overload selector("attribute:atIndex:longestEffectiveRange:inRange:") = Id, NSString, CULong, NSRangePointer, NSRange;
overload selector("attributeDeclarationForName:elementName:") = NSXMLDTDNode, NSString, NSString;
overload selector("attributeDescriptorForKeyword:") = NSAppleEventDescriptor, UInt;
overload selector("attributeForLocalName:URI:") = NSXMLNode, NSString, NSString;
overload selector("attributeForName:") = NSXMLNode, NSString;
overload selector("attributeKeys") = NSArray;
overload selector("attributeMappings") = NSArray;
overload selector("attributeRuns") = NSArray;
overload selector("attributeType") = CULong;
overload selector("attributeValueClassName") = NSString;
overload selector("attributeWithName:URI:stringValue:") = Id, NSString, NSString, NSString;
overload selector("attributeWithName:stringValue:") = Id, NSString, NSString;
overload selector("attributedAlternateTitle") = NSAttributedString;
overload selector("attributedString") = NSAttributedString;
overload selector("attributedStringForNil") = NSAttributedString;
overload selector("attributedStringForNotANumber") = NSAttributedString;
overload selector("attributedStringForObjectValue:withDefaultAttributes:") = NSAttributedString, Id, NSDictionary;
overload selector("attributedStringForZero") = NSAttributedString;
overload selector("attributedStringValue") = NSAttributedString;
overload selector("attributedStringWithAttachment:") = NSAttributedString, NSTextAttachment;
overload selector("attributedSubstringForProposedRange:actualRange:") = NSAttributedString, NSRange, NSRangePointer;
overload selector("attributedSubstringFromRange:") = NSAttributedString, NSRange;
overload selector("attributedTitle") = NSAttributedString;
overload selector("attributes") = Id;
overload selector("attributesAtIndex:effectiveRange:") = NSDictionary, CULong, NSRangePointer;
overload selector("attributesAtIndex:longestEffectiveRange:inRange:") = NSDictionary, CULong, NSRangePointer, NSRange;
overload selector("attributesByName") = NSDictionary;
overload selector("attributesForExtraLineFragment") = NSDictionary;
overload selector("attributesForVoice:") = NSDictionary, NSString;
overload selector("attributesOfFileSystemForPath:error:") = NSDictionary, NSString, Pointer[NSError];
overload selector("attributesOfItemAtPath:error:") = NSDictionary, NSString, Pointer[NSError];
overload selector("authenticateComponents:withData:") = Bool, NSArray, NSData;
overload selector("authenticationDataForComponents:") = NSData, NSArray;
overload selector("authenticationMethod") = NSString;
overload selector("autoContentAccessingProxy") = Id;
overload selector("autoenablesItems") = Bool;
overload selector("autofocus") = Bool;
overload selector("autohidesScroller") = Bool;
overload selector("autohidesScrollers") = Bool;
overload selector("automaticRearrangementKeyPaths") = NSArray;
overload selector("automaticallyIdentifiesLanguages") = Bool;
overload selector("automaticallyNotifiesObserversForKey:") = Bool, NSString;
overload selector("automaticallyPreparesContent") = Bool;
overload selector("automaticallyRearrangesObjects") = Bool;
overload selector("autorecalculatesContentBorderThicknessForEdge:") = Bool, CULong;
overload selector("autorecalculatesKeyViewLoop") = Bool;
overload selector("autorelease") = Id;
overload selector("autorepeat") = Bool;
overload selector("autoresizesAllColumnsToFit") = Bool;
overload selector("autoresizesOutlineColumn") = Bool;
overload selector("autoresizesSubviews") = Bool;
overload selector("autoresizingMask") = CULong;
overload selector("autoreverses") = Bool;
overload selector("autosaveDocumentWithDelegate:didAutosaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector("autosaveExpandedItems") = Bool;
overload selector("autosaveName") = NSString;
overload selector("autosaveTableColumns") = Bool;
overload selector("autosavedContentsFileURL") = NSURL;
overload selector("autosaves") = Bool;
overload selector("autosavesConfiguration") = Bool;
overload selector("autosavingDelay") = Double;
overload selector("autosavingFileType") = NSString;
overload selector("autoscroll:") = Bool, NSEvent;
overload selector("autosizesCells") = Bool;
overload selector("autoupdatingCurrentCalendar") = Id;
overload selector("autoupdatingCurrentLocale") = Id;
overload selector("autovalidates") = Bool;
overload selector("availableColorLists") = NSArray;
overload selector("availableColorSpacesWithModel:") = NSArray, CLong;
overload selector("availableData") = NSData;
overload selector("availableFontFamilies") = NSArray;
overload selector("availableFontNamesMatchingFontDescriptor:") = NSArray, NSFontDescriptor;
overload selector("availableFontNamesWithTraits:") = NSArray, CULong;
overload selector("availableFonts") = NSArray;
overload selector("availableLanguages") = NSArray;
overload selector("availableLocaleIdentifiers") = NSArray;
overload selector("availableMembersOfFontFamily:") = NSArray, NSString;
overload selector("availableResourceData") = NSData;
overload selector("availableStringEncodings") = Pointer[CULong];
overload selector("availableTypeFromArray:") = NSString, NSArray;
overload selector("availableVoices") = NSArray;
overload selector("avoidsEmptySelection") = Bool;
overload selector("awakeAfterUsingCoder:") = Id, NSCoder;
overload selector("awakeFromFetch") = Void;
overload selector("awakeFromInsert") = Void;
overload selector("awakeFromNib") = Void;
overload selector("awakeFromSnapshotEvents:") = Void, CULong;
overload selector("axis") = NSString;
overload selector("azimuth") = NSString;
overload selector("backForwardList") = WebBackForwardList;
overload selector("backItem") = WebHistoryItem;
overload selector("backListCount") = Int;
overload selector("backListWithLimit:") = NSArray, Int;
overload selector("background") = NSString;
overload selector("backgroundAttachment") = NSString;
overload selector("backgroundColor") = Id;
overload selector("backgroundColors") = NSArray;
overload selector("backgroundFilters") = NSArray;
overload selector("backgroundImage") = NSString;
overload selector("backgroundLayoutEnabled") = Bool;
overload selector("backgroundLoadDidFailWithReason:") = Void, NSString;
overload selector("backgroundPosition") = NSString;
overload selector("backgroundRepeat") = NSString;
overload selector("backgroundStyle") = CLong;
overload selector("backingLocation") = CULong;
overload selector("backingType") = CULong;
overload selector("badgeLabel") = NSString;
overload selector("baseSpecifier") = NSScriptObjectSpecifier;
overload selector("baseURI") = NSString;
overload selector("baseURL") = NSURL;
overload selector("baseWritingDirection") = CLong;
overload selector("baselineDeltaForCharacterAtIndex:") = Double, CULong;
overload selector("baselineLocation") = Double;
overload selector("baselineOffsetInLayoutManager:glyphIndex:") = Double, NSLayoutManager, CULong;
overload selector("becomeFirstResponder") = Bool;
overload selector("becomeKeyWindow") = Void;
overload selector("becomeMainWindow") = Void;
overload selector("becomesKeyOnlyIfNeeded") = Bool;
overload selector("beginContentAccess") = Bool;
overload selector("beginDocument") = Void;
overload selector("beginEditing") = Void;
overload selector("beginEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector("beginForDirectory:file:types:modelessDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, Id, SelectorHandle, RawPointer;
overload selector("beginGestureWithEvent:") = Void, NSEvent;
overload selector("beginGrouping") = Void;
overload selector("beginLineWithGlyphAtIndex:") = Void, CULong;
overload selector("beginLoadInBackground") = Void;
overload selector("beginModalSessionForWindow:") = NSModalSession, NSWindow;
overload selector("beginModalSessionForWindow:relativeToWindow:") = NSModalSession, NSWindow, NSWindow;
overload selector("beginPageInRect:atPlacement:") = Void, NSRect, NSPoint;
overload selector("beginParagraph") = Void;
overload selector("beginSheet:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, NSWindow, Id, SelectorHandle, RawPointer;
overload selector("beginSheetForDirectory:file:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSWindow, Id, SelectorHandle, RawPointer;
overload selector("beginSheetForDirectory:file:types:modalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSString, NSString, NSArray, NSWindow, Id, SelectorHandle, RawPointer;
overload selector("beginSheetModalForWindow:completionHandler:") = Void, NSWindow, UnknownType;
overload selector("beginSheetModalForWindow:modalDelegate:didEndSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
overload selector("beginSheetWithPrintInfo:modalForWindow:delegate:didEndSelector:contextInfo:") = Void, NSPrintInfo, NSWindow, Id, SelectorHandle, RawPointer;
overload selector("beginTime") = Double;
overload selector("beginUndoGrouping") = Void;
overload selector("beginWithCompletionHandler:") = Void, UnknownType;
overload selector("bestRepresentationForDevice:") = NSImageRep, NSDictionary;
overload selector("bestRepresentationForRect:context:hints:") = NSImageRep, NSRect, NSGraphicsContext, NSDictionary;
overload selector("bezelStyle") = CULong;
overload selector("bezierPath") = NSBezierPath;
overload selector("bezierPathByFlatteningPath") = NSBezierPath;
overload selector("bezierPathByReversingPath") = NSBezierPath;
overload selector("bezierPathWithOvalInRect:") = NSBezierPath, NSRect;
overload selector("bezierPathWithRect:") = NSBezierPath, NSRect;
overload selector("bezierPathWithRoundedRect:xRadius:yRadius:") = NSBezierPath, NSRect, Double, Double;
overload selector("bgColor") = NSString;
overload selector("bidiProcessingEnabled") = Bool;
overload selector("bind:toObject:withKeyPath:options:") = Void, NSString, Id, NSString, NSDictionary;
overload selector("bitmapData") = Pointer[CUChar];
overload selector("bitmapFormat") = CULong;
overload selector("bitmapImageRepByConvertingToColorSpace:renderingIntent:") = NSBitmapImageRep, NSColorSpace, CLong;
overload selector("bitmapImageRepByRetaggingWithColorSpace:") = NSBitmapImageRep, NSColorSpace;
overload selector("bitmapImageRepForCachingDisplayInRect:") = NSBitmapImageRep, NSRect;
overload selector("bitmapRepresentation") = NSData;
overload selector("bitsPerPixel") = CLong;
overload selector("bitsPerSample") = CLong;
overload selector("blackColor") = NSColor;
overload selector("blackComponent") = Double;
overload selector("blendedColorWithFraction:ofColor:") = NSColor, Double, NSColor;
overload selector("blockOperationWithBlock:") = Id, UnknownType;
overload selector("blocksOtherRecognizers") = Bool;
overload selector("blue") = DOMCSSPrimitiveValue;
overload selector("blueColor") = NSColor;
overload selector("blueComponent") = Double;
overload selector("blur") = Void;
overload selector("body") = DOMHTMLElement;
overload selector("boldSystemFontOfSize:") = NSFont, Double;
overload selector("bookmarkDataWithContentsOfURL:error:") = NSData, NSURL, Pointer[NSError];
overload selector("bookmarkDataWithOptions:includingResourceValuesForKeys:relativeToURL:error:") = NSData, CULong, NSArray, NSURL, Pointer[NSError];
overload selector("boolForKey:") = Bool, NSString;
overload selector("boolValue") = Bool;
overload selector("booleanForKey:inTable:") = Bool, NSString, NSString;
overload selector("booleanValue") = CUChar;
overload selector("border") = NSString;
overload selector("borderBottom") = NSString;
overload selector("borderBottomColor") = NSString;
overload selector("borderBottomStyle") = NSString;
overload selector("borderBottomWidth") = NSString;
overload selector("borderCollapse") = NSString;
overload selector("borderColor") = Id;
overload selector("borderColorForEdge:") = NSColor, CULong;
overload selector("borderLeft") = NSString;
overload selector("borderLeftColor") = NSString;
overload selector("borderLeftStyle") = NSString;
overload selector("borderLeftWidth") = NSString;
overload selector("borderRect") = NSRect;
overload selector("borderRight") = NSString;
overload selector("borderRightColor") = NSString;
overload selector("borderRightStyle") = NSString;
overload selector("borderRightWidth") = NSString;
overload selector("borderSpacing") = NSString;
overload selector("borderStyle") = NSString;
overload selector("borderTop") = NSString;
overload selector("borderTopColor") = NSString;
overload selector("borderTopStyle") = NSString;
overload selector("borderTopWidth") = NSString;
overload selector("borderType") = CULong;
overload selector("borderWidth") = NSString;
overload selector("bottom") = Id;
overload selector("bottomMargin") = Double;
overload selector("boundingBox") = NSRect;
overload selector("boundingBoxForControlGlyphAtIndex:forTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, CULong, NSTextContainer, NSRect, NSPoint, CULong;
overload selector("boundingRectForFont") = NSRect;
overload selector("boundingRectForGlyph:") = NSRect, UInt;
overload selector("boundingRectForGlyphRange:inTextContainer:") = NSRect, NSRange, NSTextContainer;
overload selector("boundingRectWithSize:options:") = NSRect, NSSize, CLong;
overload selector("boundingRectWithSize:options:attributes:") = NSRect, NSSize, CLong, NSDictionary;
overload selector("bounds") = NSRect;
overload selector("boundsRectForBlock:contentRect:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSRect, NSRect, NSTextContainer, NSRange;
overload selector("boundsRectForContentRect:inRect:textContainer:characterRange:") = NSRect, NSRect, NSRect, NSTextContainer, NSRange;
overload selector("boundsRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, CULong, NSRangePointer;
overload selector("boundsRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
overload selector("boundsRotation") = Double;
overload selector("boxType") = CULong;
overload selector("branchImage") = NSImage;
overload selector("breakLock") = Void;
overload selector("breakUndoCoalescing") = Void;
overload selector("brightnessComponent") = Double;
overload selector("broadcast") = Void;
overload selector("brownColor") = NSColor;
overload selector("browser:acceptDrop:atRow:column:dropOperation:") = Bool, NSBrowser, Id, CLong, CLong, CULong;
overload selector("browser:canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSBrowser, NSIndexSet, CLong, NSEvent;
overload selector("browser:child:ofItem:") = Id, NSBrowser, CLong, Id;
overload selector("browser:createRowsForColumn:inMatrix:") = Void, NSBrowser, CLong, NSMatrix;
overload selector("browser:didChangeLastColumn:toColumn:") = Void, NSBrowser, CLong, CLong;
overload selector("browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSBrowser, NSIndexSet, CLong, NSEvent, NSPointPointer;
overload selector("browser:headerViewControllerForItem:") = NSViewController, NSBrowser, Id;
overload selector("browser:heightOfRow:inColumn:") = Double, NSBrowser, CLong, CLong;
overload selector("browser:isColumnValid:") = Bool, NSBrowser, CLong;
overload selector("browser:isLeafItem:") = Bool, NSBrowser, Id;
overload selector("browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:") = NSArray, NSBrowser, NSURL, NSIndexSet, CLong;
overload selector("browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:") = CLong, NSBrowser, CLong, CLong, CLong, NSString;
overload selector("browser:numberOfChildrenOfItem:") = CLong, NSBrowser, Id;
overload selector("browser:numberOfRowsInColumn:") = CLong, NSBrowser, CLong;
overload selector("browser:objectValueForItem:") = Id, NSBrowser, Id;
overload selector("browser:previewViewControllerForLeafItem:") = NSViewController, NSBrowser, Id;
overload selector("browser:selectCellWithString:inColumn:") = Bool, NSBrowser, NSString, CLong;
overload selector("browser:selectRow:inColumn:") = Bool, NSBrowser, CLong, CLong;
overload selector("browser:selectionIndexesForProposedSelection:inColumn:") = NSIndexSet, NSBrowser, NSIndexSet, CLong;
overload selector("browser:setObjectValue:forItem:") = Void, NSBrowser, Id, Id;
overload selector("browser:shouldEditItem:") = Bool, NSBrowser, Id;
overload selector("browser:shouldShowCellExpansionForRow:column:") = Bool, NSBrowser, CLong, CLong;
overload selector("browser:shouldSizeColumn:forUserResize:toWidth:") = Double, NSBrowser, CLong, Bool, Double;
overload selector("browser:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSBrowser, NSEvent, NSString;
overload selector("browser:sizeToFitWidthOfColumn:") = Double, NSBrowser, CLong;
overload selector("browser:titleOfColumn:") = NSString, NSBrowser, CLong;
overload selector("browser:typeSelectStringForRow:inColumn:") = NSString, NSBrowser, CLong, CLong;
overload selector("browser:validateDrop:proposedRow:column:dropOperation:") = CULong, NSBrowser, Id, Pointer[CLong], Pointer[CLong], Pointer[CULong];
overload selector("browser:willDisplayCell:atRow:column:") = Void, NSBrowser, Id, CLong, CLong;
overload selector("browser:writeRowsWithIndexes:inColumn:toPasteboard:") = Bool, NSBrowser, NSIndexSet, CLong, NSPasteboard;
overload selector("browserColumnConfigurationDidChange:") = Void, NSNotification;
overload selector("browserDidScroll:") = Void, NSBrowser;
overload selector("browserWillScroll:") = Void, NSBrowser;
overload selector("bubbles") = Bool;
overload selector("builtInPlugInsPath") = NSString;
overload selector("builtInPlugInsURL") = NSURL;
overload selector("bundleForClass:") = NSBundle, Id;
overload selector("bundleForSuite:") = NSBundle, NSString;
overload selector("bundleIdentifier") = NSString;
overload selector("bundlePath") = NSString;
overload selector("bundleURL") = NSURL;
overload selector("bundleWithIdentifier:") = NSBundle, NSString;
overload selector("bundleWithPath:") = NSBundle, NSString;
overload selector("bundleWithURL:") = NSBundle, NSURL;
overload selector("button") = UShort;
overload selector("buttonMask") = CULong;
overload selector("buttonNumber") = CLong;
overload selector("buttonToolTip") = NSString;
overload selector("buttons") = NSArray;
overload selector("bytes") = RawPointer;
overload selector("bytesPerPlane") = CLong;
overload selector("bytesPerRow") = CLong;
overload selector("cString") = Pointer[CChar];
overload selector("cStringLength") = CULong;
overload selector("cStringUsingEncoding:") = Pointer[CChar], CULong;
overload selector("cache:willEvictObject:") = Void, NSCache, Id;
overload selector("cacheDepthMatchesImageDepth") = Bool;
overload selector("cacheDisplayInRect:toBitmapImageRep:") = Void, NSRect, NSBitmapImageRep;
overload selector("cacheImageInRect:") = Void, NSRect;
overload selector("cacheMode") = CULong;
overload selector("cacheModel") = CULong;
overload selector("cacheNodeForObjectID:") = NSAtomicStoreCacheNode, NSManagedObjectID;
overload selector("cacheNodes") = NSSet;
overload selector("cachePolicy") = CULong;
overload selector("cachedHandleForURL:") = NSURLHandle, NSURL;
overload selector("cachedResponse") = NSCachedURLResponse;
overload selector("cachedResponseForRequest:") = NSCachedURLResponse, NSURLRequest;
overload selector("cachesBezierPath") = Bool;
overload selector("calcDrawInfo:") = Void, NSRect;
overload selector("calcSize") = Void;
overload selector("calendar") = NSCalendar;
overload selector("calendarDate") = Id;
overload selector("calendarFormat") = NSString;
overload selector("calendarIdentifier") = NSString;
overload selector("callStackReturnAddresses") = NSArray;
overload selector("callStackSymbols") = NSArray;
overload selector("callWebScriptMethod:withArguments:") = Id, NSString, NSArray;
overload selector("canAdd") = Bool;
overload selector("canAddChild") = Bool;
overload selector("canBeCompressedUsing:") = Bool, CULong;
overload selector("canBeConvertedToEncoding:") = Bool, CULong;
overload selector("canBeDisabled") = Bool;
overload selector("canBeVisibleOnAllSpaces") = Bool;
overload selector("canBecomeKeyView") = Bool;
overload selector("canBecomeKeyWindow") = Bool;
overload selector("canBecomeMainWindow") = Bool;
overload selector("canBecomeVisibleWithoutLogin") = Bool;
overload selector("canChooseDirectories") = Bool;
overload selector("canChooseFiles") = Bool;
overload selector("canCloseDocumentWithDelegate:shouldCloseSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector("canConcurrentlyReadDocumentsOfType:") = Bool, NSString;
overload selector("canCreateDirectories") = Bool;
overload selector("canDragRowsWithIndexes:atPoint:") = Bool, NSIndexSet, NSPoint;
overload selector("canDragRowsWithIndexes:inColumn:withEvent:") = Bool, NSIndexSet, CLong, NSEvent;
overload selector("canDraw") = Bool;
overload selector("canDrawConcurrently") = Bool;
overload selector("canDrawInCGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, CGLContextObj, CGLPixelFormatObj, Double, Pointer[CVTimeStamp];
overload selector("canDrawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Bool, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
overload selector("canGoBack") = Bool;
overload selector("canGoForward") = Bool;
overload selector("canHandleRequest:") = Bool, NSURLRequest;
overload selector("canHide") = Bool;
overload selector("canInitWithData:") = Bool, NSData;
overload selector("canInitWithPasteboard:") = Bool, NSPasteboard;
overload selector("canInitWithRequest:") = Bool, NSURLRequest;
overload selector("canInitWithURL:") = Bool, NSURL;
overload selector("canInsert") = Bool;
overload selector("canInsertChild") = Bool;
overload selector("canMakeTextLarger") = Bool;
overload selector("canMakeTextSmaller") = Bool;
overload selector("canMakeTextStandardSize") = Bool;
overload selector("canPrintHeadersAndFooters") = Bool;
overload selector("canProvideDocumentSource") = Bool;
overload selector("canReadItemWithDataConformingToTypes:") = Bool, NSArray;
overload selector("canReadObjectForClasses:options:") = Bool, NSArray, NSDictionary;
overload selector("canRedo") = Bool;
overload selector("canRemove") = Bool;
overload selector("canRemoveAllRows") = Bool;
overload selector("canResumeDownloadDecodedWithEncodingMIMEType:") = Bool, NSString;
overload selector("canSelectHiddenExtension") = Bool;
overload selector("canSelectNext") = Bool;
overload selector("canSelectPrevious") = Bool;
overload selector("canShowMIMEType:") = Bool, NSString;
overload selector("canShowMIMETypeAsHTML:") = Bool, NSString;
overload selector("canSpawnSeparateThread") = Bool;
overload selector("canStoreColor") = Bool;
overload selector("canUndo") = Bool;
overload selector("cancel") = Void;
overload selector("cancel:") = Void, Id;
overload selector("cancelAllOperations") = Void;
overload selector("cancelAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
overload selector("cancelBubble") = Bool;
overload selector("cancelButtonCell") = NSButtonCell;
overload selector("cancelButtonRectForBounds:") = NSRect, NSRect;
overload selector("cancelIncrementalLoad") = Void;
overload selector("cancelLoadInBackground") = Void;
overload selector("cancelMigrationWithError:") = Void, NSError;
overload selector("cancelOperation:") = Void, Id;
overload selector("cancelPerformSelector:target:argument:") = Void, SelectorHandle, Id, Id;
overload selector("cancelPerformSelectorsWithTarget:") = Void, Id;
overload selector("cancelPreviousPerformRequestsWithTarget:") = Void, Id;
overload selector("cancelPreviousPerformRequestsWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
overload selector("cancelTracking") = Void;
overload selector("cancelTrackingWithoutAnimation") = Void;
overload selector("cancelUserAttentionRequest:") = Void, CLong;
overload selector("cancelable") = Bool;
overload selector("canonicalLanguageIdentifierFromString:") = NSString, NSString;
overload selector("canonicalLocaleIdentifierFromString:") = NSString, NSString;
overload selector("canonicalRequestForRequest:") = NSURLRequest, NSURLRequest;
overload selector("canonicalXMLStringPreservingComments:") = NSString, Bool;
overload selector("capHeight") = Double;
overload selector("capabilityMask") = CULong;
overload selector("capacity") = Int;
overload selector("capitalizeWord:") = Void, Id;
overload selector("capitalizedLetterCharacterSet") = Id;
overload selector("capitalizedString") = NSString;
overload selector("caption") = DOMHTMLTableCaptionElement;
overload selector("captionSide") = NSString;
overload selector("captureEvents") = Void;
overload selector("cascadeTopLeftFromPoint:") = NSPoint, NSPoint;
overload selector("caseInsensitiveCompare:") = CLong, NSString;
overload selector("caseSensitive") = Bool;
overload selector("catalogNameComponent") = NSString;
overload selector("cell") = Id;
overload selector("cellAtIndex:") = Id, CLong;
overload selector("cellAtRow:column:") = Id, CLong, CLong;
overload selector("cellAttribute:") = CLong, CULong;
overload selector("cellBackgroundColor") = NSColor;
overload selector("cellBaselineOffset") = NSPoint;
overload selector("cellClass") = Id;
overload selector("cellFrameAtRow:column:") = NSRect, CLong, CLong;
overload selector("cellFrameForTextContainer:proposedLineFragment:glyphPosition:characterIndex:") = NSRect, NSTextContainer, NSRect, NSPoint, CULong;
overload selector("cellIndex") = Int;
overload selector("cellPadding") = NSString;
overload selector("cellPrototype") = Id;
overload selector("cellSize") = NSSize;
overload selector("cellSizeForBounds:") = NSSize, NSRect;
overload selector("cellSpacing") = NSString;
overload selector("cellWithTag:") = Id, CLong;
overload selector("cells") = Id;
overload selector("center") = Void;
overload selector("centerScanRect:") = NSRect, NSRect;
overload selector("centerSelectionInVisibleArea:") = Void, Id;
overload selector("certificates") = NSArray;
overload selector("ch") = NSString;
overload selector("chOff") = NSString;
overload selector("changeAttributes:") = Void, Id;
overload selector("changeCaseOfLetter:") = Void, Id;
overload selector("changeColor:") = Void, Id;
overload selector("changeCount") = CLong;
overload selector("changeCurrentDirectoryPath:") = Bool, NSString;
overload selector("changeDocumentBackgroundColor:") = Void, Id;
overload selector("changeFileAttributes:atPath:") = Bool, NSDictionary, NSString;
overload selector("changeFont:") = Void, Id;
overload selector("changeInLength") = CLong;
overload selector("changeSpelling:") = Void, Id;
overload selector("changeWindowsItem:title:filename:") = Void, NSWindow, NSString, Bool;
overload selector("changedValues") = NSDictionary;
overload selector("channelMapping") = NSArray;
overload selector("charCode") = Int;
overload selector("charValue") = CChar;
overload selector("characterAtIndex:") = UShort, CULong;
overload selector("characterCollection") = CULong;
overload selector("characterDirectionForLanguage:") = CULong, NSString;
overload selector("characterEncoding") = NSString;
overload selector("characterIdentifier") = CULong;
overload selector("characterIndexForGlyphAtIndex:") = CULong, CULong;
overload selector("characterIndexForInsertionAtPoint:") = CULong, NSPoint;
overload selector("characterIndexForPoint:") = CULong, NSPoint;
overload selector("characterIndexForPoint:inTextContainer:fractionOfDistanceBetweenInsertionPoints:") = CULong, NSPoint, NSTextContainer, Pointer[Double];
overload selector("characterIsMember:") = Bool, UShort;
overload selector("characterRangeForGlyphRange:actualGlyphRange:") = NSRange, NSRange, NSRangePointer;
overload selector("characterSet") = NSString;
overload selector("characterSetWithBitmapRepresentation:") = Id, NSData;
overload selector("characterSetWithCharactersInString:") = Id, NSString;
overload selector("characterSetWithContentsOfFile:") = Id, NSString;
overload selector("characterSetWithRange:") = Id, NSRange;
overload selector("characters") = Id;
overload selector("charactersIgnoringModifiers") = NSString;
overload selector("charactersToBeSkipped") = NSCharacterSet;
overload selector("charset") = NSString;
overload selector("checkForRemovableMedia") = Void;
overload selector("checkGrammarOfString:startingAt:language:wrap:inSpellDocumentWithTag:details:") = NSRange, NSString, CLong, NSString, Bool, CLong, Pointer[NSArray];
overload selector("checkResourceIsReachableAndReturnError:") = Bool, Pointer[NSError];
overload selector("checkSpaceForParts") = Void;
overload selector("checkSpelling:") = Void, Id;
overload selector("checkSpellingOfString:startingAt:") = NSRange, NSString, CLong;
overload selector("checkSpellingOfString:startingAt:language:wrap:inSpellDocumentWithTag:wordCount:") = NSRange, NSString, CLong, NSString, Bool, CLong, Pointer[CLong];
overload selector("checkString:range:types:options:inSpellDocumentWithTag:orthography:wordCount:") = NSArray, NSString, NSRange, UInt64, NSDictionary, CLong, Pointer[NSOrthography], Pointer[CLong];
overload selector("checkTextInDocument:") = Void, Id;
overload selector("checkTextInRange:types:options:") = Void, NSRange, UInt64, NSDictionary;
overload selector("checkTextInSelection:") = Void, Id;
overload selector("checked") = Bool;
overload selector("childAtIndex:") = NSXMLNode, CULong;
overload selector("childCount") = CULong;
overload selector("childElementCount") = UInt;
overload selector("childFrames") = NSArray;
overload selector("childNodes") = Id;
overload selector("childSpecifier") = NSScriptObjectSpecifier;
overload selector("childWindows") = NSArray;
overload selector("children") = Id;
overload selector("childrenKeyPath") = NSString;
overload selector("childrenKeyPathForNode:") = NSString, NSTreeNode;
overload selector("chooseFilename:") = Void, NSString;
overload selector("chooseFilenames:") = Void, NSArray;
overload selector("cite") = NSString;
overload selector("class") = Id;
overload selector("classCode") = UInt;
overload selector("classDescription") = NSClassDescription;
overload selector("classDescriptionForClass:") = Id, Id;
overload selector("classDescriptionForKey:") = NSScriptClassDescription, NSString;
overload selector("classDescriptionWithAppleEventCode:") = NSScriptClassDescription, UInt;
overload selector("classDescriptionsInSuite:") = NSDictionary, NSString;
overload selector("classFallbacksForKeyedArchiver") = NSArray;
overload selector("classForArchiver") = Id;
overload selector("classForClassName:") = Id, NSString;
overload selector("classForCoder") = Id;
overload selector("classForKeyedArchiver") = Id;
overload selector("classForKeyedUnarchiver") = Id;
overload selector("classForPortCoder") = Id;
overload selector("className") = NSString;
overload selector("classNameDecodedForArchiveClassName:") = NSString, NSString;
overload selector("classNameEncodedForTrueClassName:") = NSString, NSString;
overload selector("classNameForClass:") = NSString, Id;
overload selector("classNamed:") = Id, NSString;
overload selector("cleanUpAfterDragOperation") = Void;
overload selector("cleanUpOperation") = Void;
overload selector("clear") = NSString;
overload selector("clearColor") = NSColor;
overload selector("clearContents") = CLong;
overload selector("clearCurrentContext") = Void;
overload selector("clearDrawable") = Void;
overload selector("clearGLContext") = Void;
overload selector("clearRecentDocuments:") = Void, Id;
overload selector("clearStartAnimation") = Void;
overload selector("clearStopAnimation") = Void;
overload selector("clearsFilterPredicateOnInsertion") = Bool;
overload selector("click") = Void;
overload selector("clickCount") = CLong;
overload selector("clickedColumn") = CLong;
overload selector("clickedOnLink:atIndex:") = Void, Id, CULong;
overload selector("clickedPathComponentCell") = NSPathComponentCell;
overload selector("clickedRow") = CLong;
overload selector("client") = Id;
overload selector("clientHeight") = Int;
overload selector("clientLeft") = Int;
overload selector("clientTop") = Int;
overload selector("clientView") = NSView;
overload selector("clientWidth") = Int;
overload selector("clientX") = Int;
overload selector("clientY") = Int;
overload selector("clip") = NSString;
overload selector("clipRect:") = Void, NSRect;
overload selector("cloneContents") = DOMDocumentFragment;
overload selector("cloneNode:") = DOMNode, Bool;
overload selector("cloneRange") = DOMRange;
overload selector("close") = Void;
overload selector("close:") = Void, Id;
overload selector("closeAllDocumentsWithDelegate:didCloseAllSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector("closeFile") = Void;
overload selector("closePath") = Void;
overload selector("closeSpellDocumentWithTag:") = Void, CLong;
overload selector("closedHandCursor") = NSCursor;
overload selector("closestTickMarkValueToValue:") = Double, Double;
overload selector("code") = CLong;
overload selector("codeBase") = NSString;
overload selector("codeType") = NSString;
overload selector("coerceToDescriptorType:") = NSAppleEventDescriptor, UInt;
overload selector("coerceValue:forKey:") = Id, Id, NSString;
overload selector("coerceValue:toClass:") = Id, Id, Id;
overload selector("colSpan") = Int;
overload selector("collapse:") = Void, Bool;
overload selector("collapseItem:") = Void, Id;
overload selector("collapseItem:collapseChildren:") = Void, Id, Bool;
overload selector("collapsed") = Bool;
overload selector("collapsesBorders") = Bool;
overload selector("collectExhaustively") = Void;
overload selector("collectIfNeeded") = Void;
overload selector("collection") = Id;
overload selector("collectionBehavior") = CULong;
overload selector("collectionNames") = NSArray;
overload selector("collectionView") = NSCollectionView;
overload selector("collectionView:acceptDrop:index:dropOperation:") = Bool, NSCollectionView, Id, CLong, CLong;
overload selector("collectionView:canDragItemsAtIndexes:withEvent:") = Bool, NSCollectionView, NSIndexSet, NSEvent;
overload selector("collectionView:draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSCollectionView, NSIndexSet, NSEvent, NSPointPointer;
overload selector("collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:") = NSArray, NSCollectionView, NSURL, NSIndexSet;
overload selector("collectionView:validateDrop:proposedIndex:dropOperation:") = CULong, NSCollectionView, Id, Pointer[CLong], Pointer[CLong];
overload selector("collectionView:writeItemsAtIndexes:toPasteboard:") = Bool, NSCollectionView, NSIndexSet, NSPasteboard;
overload selector("color") = Id;
overload selector("colorAtX:y:") = NSColor, CLong, CLong;
overload selector("colorForControlTint:") = NSColor, CULong;
overload selector("colorFromPasteboard:") = NSColor, NSPasteboard;
overload selector("colorListNamed:") = NSColorList, NSString;
overload selector("colorNameComponent") = NSString;
overload selector("colorPanel") = NSColorPanel;
overload selector("colorRenderingIntent") = CLong;
overload selector("colorSpace") = NSColorSpace;
overload selector("colorSpaceModel") = CLong;
overload selector("colorSpaceName") = NSString;
overload selector("colorSyncProfile") = RawPointer;
overload selector("colorUsingColorSpace:") = NSColor, NSColorSpace;
overload selector("colorUsingColorSpaceName:") = NSColor, NSString;
overload selector("colorUsingColorSpaceName:device:") = NSColor, NSString, NSDictionary;
overload selector("colorWithAlphaComponent:") = NSColor, Double;
overload selector("colorWithCGColor:") = CIColor, CGColorRef;
overload selector("colorWithCIColor:") = NSColor, CIColor;
overload selector("colorWithCalibratedHue:saturation:brightness:alpha:") = NSColor, Double, Double, Double, Double;
overload selector("colorWithCalibratedRed:green:blue:alpha:") = NSColor, Double, Double, Double, Double;
overload selector("colorWithCalibratedWhite:alpha:") = NSColor, Double, Double;
overload selector("colorWithCatalogName:colorName:") = NSColor, NSString, NSString;
overload selector("colorWithColorSpace:components:count:") = NSColor, NSColorSpace, Pointer[Double], CLong;
overload selector("colorWithDeviceCyan:magenta:yellow:black:alpha:") = NSColor, Double, Double, Double, Double, Double;
overload selector("colorWithDeviceHue:saturation:brightness:alpha:") = NSColor, Double, Double, Double, Double;
overload selector("colorWithDeviceRed:green:blue:alpha:") = NSColor, Double, Double, Double, Double;
overload selector("colorWithDeviceWhite:alpha:") = NSColor, Double, Double;
overload selector("colorWithKey:") = NSColor, NSString;
overload selector("colorWithPatternImage:") = NSColor, NSImage;
overload selector("colorWithRed:green:blue:") = CIColor, Double, Double, Double;
overload selector("colorWithRed:green:blue:alpha:") = CIColor, Double, Double, Double, Double;
overload selector("colorWithString:") = CIColor, NSString;
overload selector("colorizeByMappingGray:toColor:blackMapping:whiteMapping:") = Void, Double, NSColor, NSColor, NSColor;
overload selector("cols") = NSString;
overload selector("columnAtPoint:") = CLong, NSPoint;
overload selector("columnAutoresizingStyle") = CULong;
overload selector("columnContentWidthForColumnWidth:") = Double, Double;
overload selector("columnIndexesInRect:") = NSIndexSet, NSRect;
overload selector("columnNumber") = CLong;
overload selector("columnOfMatrix:") = CLong, NSMatrix;
overload selector("columnResizingType") = CULong;
overload selector("columnSpan") = CLong;
overload selector("columnWidthForColumnContentWidth:") = Double, Double;
overload selector("columnWithIdentifier:") = CLong, Id;
overload selector("columnsAutosaveName") = NSString;
overload selector("columnsInRect:") = NSRange, NSRect;
overload selector("comboBox:completedString:") = NSString, NSComboBox, NSString;
overload selector("comboBox:indexOfItemWithStringValue:") = CULong, NSComboBox, NSString;
overload selector("comboBox:objectValueForItemAtIndex:") = Id, NSComboBox, CLong;
overload selector("comboBoxCell:completedString:") = NSString, NSComboBoxCell, NSString;
overload selector("comboBoxCell:indexOfItemWithStringValue:") = CULong, NSComboBoxCell, NSString;
overload selector("comboBoxCell:objectValueForItemAtIndex:") = Id, NSComboBoxCell, CLong;
overload selector("comboBoxSelectionDidChange:") = Void, NSNotification;
overload selector("comboBoxSelectionIsChanging:") = Void, NSNotification;
overload selector("comboBoxWillDismiss:") = Void, NSNotification;
overload selector("comboBoxWillPopUp:") = Void, NSNotification;
overload selector("commandClassName") = NSString;
overload selector("commandDescription") = NSScriptCommandDescription;
overload selector("commandDescriptionWithAppleEventClass:andAppleEventCode:") = NSScriptCommandDescription, UInt, UInt;
overload selector("commandDescriptionsInSuite:") = NSDictionary, NSString;
overload selector("commandName") = NSString;
overload selector("commands") = NSArray;
overload selector("comment") = NSString;
overload selector("commentURL") = NSURL;
overload selector("commentWithStringValue:") = Id, NSString;
overload selector("commitEditing") = Bool;
overload selector("commitEditingWithDelegate:didCommitSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector("committedValuesForKeys:") = NSDictionary, NSArray;
overload selector("commonAncestorContainer") = DOMNode;
overload selector("commonISOCurrencyCodes") = NSArray;
overload selector("commonPrefixWithString:options:") = NSString, NSString, CULong;
overload selector("compact") = Bool;
overload selector("comparator") = NSComparator;
overload selector("compare:") = CLong, NSNumber;
overload selector("compare:options:") = CLong, NSString, CULong;
overload selector("compare:options:range:") = CLong, NSString, CULong, NSRange;
overload selector("compare:options:range:locale:") = CLong, NSString, CULong, NSRange, Id;
overload selector("compareBoundaryPoints::") = Short, UShort, DOMRange;
overload selector("compareBoundaryPoints:sourceRange:") = Short, UShort, DOMRange;
overload selector("compareDocumentPosition:") = UShort, DOMNode;
overload selector("compareNode:") = Short, DOMNode;
overload selector("compareObject:toObject:") = CLong, Id, Id;
overload selector("comparePoint:offset:") = Short, DOMNode, Int;
overload selector("comparisonPredicateModifier") = CULong;
overload selector("compatMode") = NSString;
overload selector("compileAndReturnError:") = Bool, Pointer[NSDictionary];
overload selector("complete") = Bool;
overload selector("complete:") = Void, Id;
overload selector("completePathIntoString:caseSensitive:matchesIntoArray:filterTypes:") = CULong, Pointer[NSString], Bool, Pointer[NSArray], NSArray;
overload selector("completedString:") = NSString, NSString;
overload selector("completes") = Bool;
overload selector("completionBlock") = UnknownType;
overload selector("completionDelay") = Double;
overload selector("completionsForPartialWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, CLong;
overload selector("completionsForPartialWordRange:indexOfSelectedItem:") = NSArray, NSRange, Pointer[CLong];
overload selector("components") = NSArray;
overload selector("components:fromDate:") = NSDateComponents, CULong, NSDate;
overload selector("components:fromDate:toDate:options:") = NSDateComponents, CULong, NSDate, NSDate, CULong;
overload selector("componentsFromLocaleIdentifier:") = NSDictionary, NSString;
overload selector("componentsJoinedByString:") = NSString, NSString;
overload selector("componentsSeparatedByCharactersInSet:") = NSArray, NSCharacterSet;
overload selector("componentsSeparatedByString:") = NSArray, NSString;
overload selector("componentsToDisplayForPath:") = NSArray, NSString;
overload selector("compositeToPoint:fromRect:operation:") = Void, NSPoint, NSRect, CULong;
overload selector("compositeToPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;
overload selector("compositeToPoint:operation:") = Void, NSPoint, CULong;
overload selector("compositeToPoint:operation:fraction:") = Void, NSPoint, CULong, Double;
overload selector("compositingFilter") = Id;
overload selector("compositingOperation") = CULong;
overload selector("compoundPredicateType") = CULong;
overload selector("compoundTypes") = NSArray;
overload selector("computedStyleForElement:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload selector("concat") = Void;
overload selector("concludeDragOperation:") = Void, Id;
overload selector("condition") = CLong;
overload selector("configurationDictionary") = NSDictionary;
overload selector("configurationName") = NSString;
overload selector("configurations") = NSArray;
overload selector("configureAsServer") = Void;
overload selector("configurePersistentStoreCoordinatorForURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
overload selector("configurePersistentStoreCoordinatorForURL:ofType:modelConfiguration:storeOptions:error:") = Bool, NSURL, NSString, NSString, NSDictionary, Pointer[NSError];
overload selector("confinementRectForMenu:onScreen:") = NSRect, NSMenu, NSScreen;
overload selector("conformsToProtocol:") = Bool, Id;
overload selector("connection") = NSConnection;
overload selector("connection:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLConnection, NSURLProtectionSpace;
overload selector("connection:didCancelAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
overload selector("connection:didFailWithError:") = Void, NSURLConnection, NSError;
overload selector("connection:didReceiveAuthenticationChallenge:") = Void, NSURLConnection, NSURLAuthenticationChallenge;
overload selector("connection:didReceiveData:") = Void, NSURLConnection, NSData;
overload selector("connection:didReceiveResponse:") = Void, NSURLConnection, NSURLResponse;
overload selector("connection:didSendBodyData:totalBytesWritten:totalBytesExpectedToWrite:") = Void, NSURLConnection, CLong, CLong, CLong;
overload selector("connection:handleRequest:") = Bool, NSConnection, NSDistantObjectRequest;
overload selector("connection:needNewBodyStream:") = NSInputStream, NSURLConnection, NSURLRequest;
overload selector("connection:shouldMakeNewConnection:") = Bool, NSConnection, NSConnection;
overload selector("connection:willCacheResponse:") = NSCachedURLResponse, NSURLConnection, NSCachedURLResponse;
overload selector("connection:willSendRequest:redirectResponse:") = NSURLRequest, NSURLConnection, NSURLRequest, NSURLResponse;
overload selector("connectionDidFinishLoading:") = Void, NSURLConnection;
overload selector("connectionForProxy") = NSConnection;
overload selector("connectionShouldUseCredentialStorage:") = Bool, NSURLConnection;
overload selector("connectionWithReceivePort:sendPort:") = Id, NSPort, NSPort;
overload selector("connectionWithRegisteredName:host:") = Id, NSString, NSString;
overload selector("connectionWithRegisteredName:host:usingNameServer:") = Id, NSString, NSString, NSPortNameServer;
overload selector("connectionWithRequest:delegate:") = NSURLConnection, NSURLRequest, Id;
overload selector("constantValue") = Id;
overload selector("constrainFrameRect:toScreen:") = NSRect, NSRect, NSScreen;
overload selector("constrainScrollPoint:") = NSPoint, NSPoint;
overload selector("containerClassDescription") = NSScriptClassDescription;
overload selector("containerIsObjectBeingTested") = Bool;
overload selector("containerIsRangeContainerObject") = Bool;
overload selector("containerSize") = NSSize;
overload selector("containerSpecifier") = NSScriptObjectSpecifier;
overload selector("contains:") = Bool, DOMElement;
overload selector("containsAttachments") = Bool;
overload selector("containsIndex:") = Bool, CULong;
overload selector("containsIndexes:") = Bool, NSIndexSet;
overload selector("containsIndexesInRange:") = Bool, NSRange;
overload selector("containsItem:") = Bool, WebHistoryItem;
overload selector("containsObject:") = Bool, Id;
overload selector("containsPoint:") = Bool, NSPoint;
overload selector("containsValueForKey:") = Bool, NSString;
overload selector("content") = Id;
overload selector("contentAspectRatio") = NSSize;
overload selector("contentBorderThicknessForEdge:") = Double, CULong;
overload selector("contentDocument") = DOMDocument;
overload selector("contentEditable") = NSString;
overload selector("contentFilters") = NSArray;
overload selector("contentFrame") = WebFrame;
overload selector("contentMaxSize") = NSSize;
overload selector("contentMinSize") = NSSize;
overload selector("contentRect") = NSRect;
overload selector("contentRectForFrameRect:") = NSRect, NSRect;
overload selector("contentRectForFrameRect:styleMask:") = NSRect, NSRect, CULong;
overload selector("contentResizeIncrements") = NSSize;
overload selector("contentSize") = NSSize;
overload selector("contentSizeForFrameSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, CULong;
overload selector("contentView") = Id;
overload selector("contentViewMargins") = NSSize;
overload selector("contentWidth") = Double;
overload selector("contentWidthValueType") = CULong;
overload selector("contentWindow") = DOMAbstractView;
overload selector("contents") = Id;
overload selector("contentsAreFlipped") = Bool;
overload selector("contentsAtPath:") = NSData, NSString;
overload selector("contentsCenter") = CGRect;
overload selector("contentsEqualAtPath:andPath:") = Bool, NSString, NSString;
overload selector("contentsGravity") = NSString;
overload selector("contentsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
overload selector("contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:") = NSArray, NSURL, NSArray, CULong, Pointer[NSError];
overload selector("contentsRect") = CGRect;
overload selector("context") = NSGraphicsContext;
overload selector("contextExpression") = NSExpression;
overload selector("contextHelpForKey:") = NSAttributedString, NSString;
overload selector("contextHelpForObject:") = NSAttributedString, Id;
overload selector("contextMenuRepresentation") = Id;
overload selector("contextShouldIgnoreUnmodeledPropertyChanges") = Bool;
overload selector("contextualMenuCursor") = NSCursor;
overload selector("continueSpeaking") = Void;
overload selector("continueTracking:at:inView:") = Bool, NSPoint, NSPoint, NSView;
overload selector("continueWithoutCredentialForAuthenticationChallenge:") = Void, NSURLAuthenticationChallenge;
overload selector("control:didFailToFormatString:errorDescription:") = Bool, NSControl, NSString, NSString;
overload selector("control:didFailToValidatePartialString:errorDescription:") = Void, NSControl, NSString, NSString;
overload selector("control:isValidObject:") = Bool, NSControl, Id;
overload selector("control:textShouldBeginEditing:") = Bool, NSControl, NSText;
overload selector("control:textShouldEndEditing:") = Bool, NSControl, NSText;
overload selector("control:textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSControl, NSTextView, NSArray, NSRange, Pointer[CLong];
overload selector("control:textView:doCommandBySelector:") = Bool, NSControl, NSTextView, SelectorHandle;
overload selector("controlAlternatingRowBackgroundColors") = NSArray;
overload selector("controlBackgroundColor") = NSColor;
overload selector("controlCharacterSet") = Id;
overload selector("controlColor") = NSColor;
overload selector("controlContentFontOfSize:") = NSFont, Double;
overload selector("controlDarkShadowColor") = NSColor;
overload selector("controlHighlightColor") = NSColor;
overload selector("controlLightHighlightColor") = NSColor;
overload selector("controlPointBounds") = NSRect;
overload selector("controlShadowColor") = NSColor;
overload selector("controlSize") = CULong;
overload selector("controlTextColor") = NSColor;
overload selector("controlTextDidBeginEditing:") = Void, NSNotification;
overload selector("controlTextDidChange:") = Void, NSNotification;
overload selector("controlTextDidEndEditing:") = Void, NSNotification;
overload selector("controlTint") = CULong;
overload selector("controlView") = NSView;
overload selector("conversation") = Id;
overload selector("conversationIdentifier") = CLong;
overload selector("convertAttributes:") = NSDictionary, NSDictionary;
overload selector("convertBaseToScreen:") = NSPoint, NSPoint;
overload selector("convertFont:") = NSFont, NSFont;
overload selector("convertFont:toFace:") = NSFont, NSFont, NSString;
overload selector("convertFont:toFamily:") = NSFont, NSFont, NSString;
overload selector("convertFont:toHaveTrait:") = NSFont, NSFont, CULong;
overload selector("convertFont:toNotHaveTrait:") = NSFont, NSFont, CULong;
overload selector("convertFont:toSize:") = NSFont, NSFont, Double;
overload selector("convertFontTraits:") = CULong, CULong;
overload selector("convertPoint:fromLayer:") = CGPoint, CGPoint, CALayer;
overload selector("convertPoint:fromView:") = NSPoint, NSPoint, NSView;
overload selector("convertPoint:toLayer:") = CGPoint, CGPoint, CALayer;
overload selector("convertPoint:toView:") = NSPoint, NSPoint, NSView;
overload selector("convertPointFromBase:") = NSPoint, NSPoint;
overload selector("convertPointToBase:") = NSPoint, NSPoint;
overload selector("convertRect:fromLayer:") = CGRect, CGRect, CALayer;
overload selector("convertRect:fromView:") = NSRect, NSRect, NSView;
overload selector("convertRect:toLayer:") = CGRect, CGRect, CALayer;
overload selector("convertRect:toView:") = NSRect, NSRect, NSView;
overload selector("convertRectFromBase:") = NSRect, NSRect;
overload selector("convertRectToBase:") = NSRect, NSRect;
overload selector("convertScreenToBase:") = NSPoint, NSPoint;
overload selector("convertSize:fromView:") = NSSize, NSSize, NSView;
overload selector("convertSize:toView:") = NSSize, NSSize, NSView;
overload selector("convertSizeFromBase:") = NSSize, NSSize;
overload selector("convertSizeToBase:") = NSSize, NSSize;
overload selector("convertTime:fromLayer:") = Double, Double, CALayer;
overload selector("convertTime:toLayer:") = Double, Double, CALayer;
overload selector("convertWeight:ofFont:") = NSFont, Bool, NSFont;
overload selector("cookie") = NSString;
overload selector("cookieAcceptPolicy") = CULong;
overload selector("cookieWithProperties:") = Id, NSDictionary;
overload selector("cookies") = NSArray;
overload selector("cookiesForURL:") = NSArray, NSURL;
overload selector("cookiesWithResponseHeaderFields:forURL:") = NSArray, NSDictionary, NSURL;
overload selector("coords") = NSString;
overload selector("copiesOnScroll") = Bool;
overload selector("copy") = Id;
overload selector("copy:") = Void, Id;
overload selector("copyAttributesFromContext:withMask:") = Void, NSOpenGLContext, UInt;
overload selector("copyCGLContextForPixelFormat:") = CGLContextObj, CGLPixelFormatObj;
overload selector("copyCGLPixelFormatForDisplayMask:") = CGLPixelFormatObj, UInt;
overload selector("copyFont:") = Void, Id;
overload selector("copyItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector("copyItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector("copyPath:toPath:handler:") = Bool, NSString, NSString, Id;
overload selector("copyRuler:") = Void, Id;
overload selector("copyScriptingValue:forKey:withProperties:") = Id, Id, NSString, NSDictionary;
overload selector("copyWithZone:") = Id, Pointer[NSZone];
overload selector("cornerRadius") = Double;
overload selector("cornerView") = NSView;
overload selector("correctionCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector("count") = CULong;
overload selector("countByEnumeratingWithState:objects:count:") = CULong, Pointer[NSFastEnumerationState], Pointer[Id], CULong;
overload selector("countForFetchRequest:error:") = CULong, NSFetchRequest, Pointer[NSError];
overload selector("countForObject:") = CULong, Id;
overload selector("countKeyPath") = NSString;
overload selector("countKeyPathForNode:") = NSString, NSTreeNode;
overload selector("countLimit") = CULong;
overload selector("countOfIndexesInRange:") = CULong, NSRange;
overload selector("countWordsInString:language:") = CLong, NSString, NSString;
overload selector("counterIncrement") = NSString;
overload selector("counterReset") = NSString;
overload selector("coveredCharacterSet") = NSCharacterSet;
overload selector("createAttribute:") = DOMAttr, NSString;
overload selector("createAttributeNS::") = DOMAttr, NSString, NSString;
overload selector("createAttributeNS:qualifiedName:") = DOMAttr, NSString, NSString;
overload selector("createCDATASection:") = DOMCDATASection, NSString;
overload selector("createCSSStyleDeclaration") = DOMCSSStyleDeclaration;
overload selector("createCSSStyleSheet::") = DOMCSSStyleSheet, NSString, NSString;
overload selector("createCSSStyleSheet:media:") = DOMCSSStyleSheet, NSString, NSString;
overload selector("createCaption") = DOMHTMLElement;
overload selector("createClassDescription") = NSScriptClassDescription;
overload selector("createCommandInstance") = NSScriptCommand;
overload selector("createCommandInstanceWithZone:") = NSScriptCommand, Pointer[NSZone];
overload selector("createComment:") = DOMComment, NSString;
overload selector("createContext") = NSGraphicsContext;
overload selector("createContextualFragment:") = DOMDocumentFragment, NSString;
overload selector("createConversationForConnection:") = Id, NSConnection;
overload selector("createDestinationInstancesForSourceInstance:entityMapping:manager:error:") = Bool, NSManagedObject, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector("createDirectoryAtPath:attributes:") = Bool, NSString, NSDictionary;
overload selector("createDirectoryAtPath:withIntermediateDirectories:attributes:error:") = Bool, NSString, Bool, NSDictionary, Pointer[NSError];
overload selector("createDocument:::") = DOMDocument, NSString, NSString, DOMDocumentType;
overload selector("createDocument:qualifiedName:doctype:") = DOMDocument, NSString, NSString, DOMDocumentType;
overload selector("createDocumentFragment") = DOMDocumentFragment;
overload selector("createDocumentFragmentWithMarkupString:baseURL:") = DOMDocumentFragment, NSString, NSURL;
overload selector("createDocumentFragmentWithText:") = DOMDocumentFragment, NSString;
overload selector("createDocumentType:::") = DOMDocumentType, NSString, NSString, NSString;
overload selector("createDocumentType:publicId:systemId:") = DOMDocumentType, NSString, NSString, NSString;
overload selector("createElement:") = DOMElement, NSString;
overload selector("createElementNS::") = DOMElement, NSString, NSString;
overload selector("createElementNS:qualifiedName:") = DOMElement, NSString, NSString;
overload selector("createEntityReference:") = DOMEntityReference, NSString;
overload selector("createEvent:") = DOMEvent, NSString;
overload selector("createExpression::") = DOMXPathExpression, NSString, Id;
overload selector("createExpression:resolver:") = DOMXPathExpression, NSString, Id;
overload selector("createFileAtPath:contents:attributes:") = Bool, NSString, NSData, NSDictionary;
overload selector("createHTMLDocument:") = DOMHTMLDocument, NSString;
overload selector("createNSResolver:") = Id, DOMNode;
overload selector("createNodeIterator::::") = DOMNodeIterator, DOMNode, UInt, Id, Bool;
overload selector("createNodeIterator:whatToShow:filter:expandEntityReferences:") = DOMNodeIterator, DOMNode, UInt, Id, Bool;
overload selector("createProcessingInstruction::") = DOMProcessingInstruction, NSString, NSString;
overload selector("createProcessingInstruction:data:") = DOMProcessingInstruction, NSString, NSString;
overload selector("createRange") = DOMRange;
overload selector("createRelationshipsForDestinationInstance:entityMapping:manager:error:") = Bool, NSManagedObject, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector("createSymbolicLinkAtPath:pathContent:") = Bool, NSString, NSString;
overload selector("createSymbolicLinkAtPath:withDestinationPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector("createTFoot") = DOMHTMLElement;
overload selector("createTHead") = DOMHTMLElement;
overload selector("createTextNode:") = DOMText, NSString;
overload selector("createTexture:fromView:internalFormat:") = Void, UInt, NSView, UInt;
overload selector("createTreeWalker::::") = DOMTreeWalker, DOMNode, UInt, Id, Bool;
overload selector("createTreeWalker:whatToShow:filter:expandEntityReferences:") = DOMTreeWalker, DOMNode, UInt, Id, Bool;
overload selector("credentialForTrust:") = NSURLCredential, SecTrustRef;
overload selector("credentialWithIdentity:certificates:persistence:") = NSURLCredential, SecIdentityRef, NSArray, CULong;
overload selector("credentialWithUser:password:persistence:") = NSURLCredential, NSString, NSString, CULong;
overload selector("credentialsForProtectionSpace:") = NSDictionary, NSURLProtectionSpace;
overload selector("criteriaForRow:") = NSArray, CLong;
overload selector("criteriaKeyPath") = NSString;
overload selector("criticalValue") = Double;
overload selector("crosshairCursor") = NSCursor;
overload selector("cssFloat") = NSString;
overload selector("cssRules") = DOMCSSRuleList;
overload selector("cssText") = NSString;
overload selector("cssValueType") = UShort;
overload selector("ctrlKey") = Bool;
overload selector("cue") = NSString;
overload selector("cueAfter") = NSString;
overload selector("cueBefore") = NSString;
overload selector("currencyCode") = NSString;
overload selector("currencyDecimalSeparator") = NSString;
overload selector("currencyGroupingSeparator") = NSString;
overload selector("currencySymbol") = NSString;
overload selector("currentAppleEvent") = NSAppleEventDescriptor;
overload selector("currentApplication") = NSRunningApplication;
overload selector("currentCalendar") = Id;
overload selector("currentCommand") = NSScriptCommand;
overload selector("currentContext") = Id;
overload selector("currentContextDrawingToScreen") = Bool;
overload selector("currentControlTint") = CULong;
overload selector("currentConversation") = Id;
overload selector("currentCursor") = NSCursor;
overload selector("currentDirectory") = NSString;
overload selector("currentDirectoryPath") = NSString;
overload selector("currentDiskUsage") = CULong;
overload selector("currentDocument") = Id;
overload selector("currentEditor") = NSText;
overload selector("currentEntityMapping") = NSEntityMapping;
overload selector("currentEvent") = NSEvent;
overload selector("currentFontAction") = CULong;
overload selector("currentHandler") = NSAssertionHandler;
overload selector("currentHost") = NSHost;
overload selector("currentInputContext") = NSTextInputContext;
overload selector("currentInputManager") = NSInputManager;
overload selector("currentItem") = WebHistoryItem;
overload selector("currentLocale") = Id;
overload selector("currentMemoryUsage") = CULong;
overload selector("currentMode") = NSString;
overload selector("currentNode") = DOMNode;
overload selector("currentOperation") = NSPrintOperation;
overload selector("currentPage") = CLong;
overload selector("currentParagraphStyle") = NSParagraphStyle;
overload selector("currentPoint") = NSPoint;
overload selector("currentProgress") = Float;
overload selector("currentQueue") = Id;
overload selector("currentReplyAppleEvent") = NSAppleEventDescriptor;
overload selector("currentRunLoop") = NSRunLoop;
overload selector("currentSystemCursor") = NSCursor;
overload selector("currentSystemPresentationOptions") = CULong;
overload selector("currentTarget") = Id;
overload selector("currentTextContainer") = NSTextContainer;
overload selector("currentThread") = NSThread;
overload selector("currentTime") = Double;
overload selector("currentValue") = Float;
overload selector("currentVirtualScreen") = Int;
overload selector("cursiveFontFamily") = NSString;
overload selector("cursor") = NSString;
overload selector("cursorUpdate:") = Void, NSEvent;
overload selector("curveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
overload selector("customSelector") = SelectorHandle;
overload selector("customTextEncodingName") = NSString;
overload selector("customUserAgent") = NSString;
overload selector("customizationPaletteIsRunning") = Bool;
overload selector("cut:") = Void, Id;
overload selector("cyanColor") = NSColor;
overload selector("cyanComponent") = Double;
overload selector("cycleToNextInputLanguage:") = Void, Id;
overload selector("cycleToNextInputServerInLanguage:") = Void, Id;
overload selector("darkGrayColor") = NSColor;
overload selector("dashCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector("data") = Id;
overload selector("data1") = CLong;
overload selector("data2") = CLong;
overload selector("dataCell") = Id;
overload selector("dataCellForRow:") = Id, CLong;
overload selector("dataForKey:") = NSData, NSString;
overload selector("dataForType:") = NSData, NSString;
overload selector("dataFromPropertyList:format:errorDescription:") = NSData, Id, CULong, Pointer[NSString];
overload selector("dataFromRange:documentAttributes:error:") = NSData, NSRange, NSDictionary, Pointer[NSError];
overload selector("dataFromTXTRecordDictionary:") = NSData, NSDictionary;
overload selector("dataOfType:error:") = NSData, NSString, Pointer[NSError];
overload selector("dataRepresentationOfType:") = NSData, NSString;
overload selector("dataSource") = Id;
overload selector("dataSourceUpdated:") = Void, WebDataSource;
overload selector("dataUsingEncoding:") = NSData, CULong;
overload selector("dataUsingEncoding:allowLossyConversion:") = NSData, CULong, Bool;
overload selector("dataWithBytes:length:") = Id, RawPointer, CULong;
overload selector("dataWithBytesNoCopy:length:") = Id, RawPointer, CULong;
overload selector("dataWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, CULong, Bool;
overload selector("dataWithCapacity:") = Id, CULong;
overload selector("dataWithContentsOfFile:") = Id, NSString;
overload selector("dataWithContentsOfFile:options:error:") = Id, NSString, CULong, Pointer[NSError];
overload selector("dataWithContentsOfMappedFile:") = Id, NSString;
overload selector("dataWithContentsOfURL:") = Id, NSURL;
overload selector("dataWithContentsOfURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
overload selector("dataWithData:") = Id, NSData;
overload selector("dataWithEPSInsideRect:") = NSData, NSRect;
overload selector("dataWithLength:") = Id, CULong;
overload selector("dataWithPDFInsideRect:") = NSData, NSRect;
overload selector("dataWithPropertyList:format:options:error:") = NSData, Id, CULong, CULong, Pointer[NSError];
overload selector("date") = Id;
overload selector("dateByAddingComponents:toDate:options:") = NSDate, NSDateComponents, NSDate, CULong;
overload selector("dateByAddingTimeInterval:") = Id, Double;
overload selector("dateByAddingYears:months:days:hours:minutes:seconds:") = NSCalendarDate, CLong, CLong, CLong, CLong, CLong, CLong;
overload selector("dateCheckingResultWithRange:date:") = NSTextCheckingResult, NSRange, NSDate;
overload selector("dateCheckingResultWithRange:date:timeZone:duration:") = NSTextCheckingResult, NSRange, NSDate, NSTimeZone, Double;
overload selector("dateFormat") = NSString;
overload selector("dateFormatFromTemplate:options:locale:") = NSString, NSString, CULong, NSLocale;
overload selector("dateFromComponents:") = NSDate, NSDateComponents;
overload selector("dateFromString:") = NSDate, NSString;
overload selector("datePickerCell:validateProposedDateValue:timeInterval:") = Void, NSDatePickerCell, Pointer[NSDate], Pointer[Double];
overload selector("datePickerElements") = CULong;
overload selector("datePickerMode") = CULong;
overload selector("datePickerStyle") = CULong;
overload selector("dateStyle") = CULong;
overload selector("dateTime") = NSString;
overload selector("dateValue") = NSDate;
overload selector("dateWithCalendarFormat:timeZone:") = NSCalendarDate, NSString, NSTimeZone;
overload selector("dateWithNaturalLanguageString:") = Id, NSString;
overload selector("dateWithNaturalLanguageString:locale:") = Id, NSString, Id;
overload selector("dateWithString:") = Id, NSString;
overload selector("dateWithString:calendarFormat:") = Id, NSString, NSString;
overload selector("dateWithString:calendarFormat:locale:") = Id, NSString, NSString, Id;
overload selector("dateWithTimeInterval:sinceDate:") = Id, Double, NSDate;
overload selector("dateWithTimeIntervalSince1970:") = Id, Double;
overload selector("dateWithTimeIntervalSinceNow:") = Id, Double;
overload selector("dateWithTimeIntervalSinceReferenceDate:") = Id, Double;
overload selector("dateWithYear:month:day:hour:minute:second:timeZone:") = Id, CLong, CULong, CULong, CULong, CULong, CULong, NSTimeZone;
overload selector("day") = CLong;
overload selector("dayOfCommonEra") = CLong;
overload selector("dayOfMonth") = CLong;
overload selector("dayOfWeek") = CLong;
overload selector("dayOfYear") = CLong;
overload selector("daylightSavingTimeOffset") = Double;
overload selector("daylightSavingTimeOffsetForDate:") = Double, NSDate;
overload selector("deactivate") = Void;
overload selector("dealloc") = Void;
overload selector("decimalDigitCharacterSet") = Id;
overload selector("decimalNumberByAdding:") = NSDecimalNumber, NSDecimalNumber;
overload selector("decimalNumberByAdding:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector("decimalNumberByDividingBy:") = NSDecimalNumber, NSDecimalNumber;
overload selector("decimalNumberByDividingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector("decimalNumberByMultiplyingBy:") = NSDecimalNumber, NSDecimalNumber;
overload selector("decimalNumberByMultiplyingBy:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector("decimalNumberByMultiplyingByPowerOf10:") = NSDecimalNumber, Short;
overload selector("decimalNumberByMultiplyingByPowerOf10:withBehavior:") = NSDecimalNumber, Short, Id;
overload selector("decimalNumberByRaisingToPower:") = NSDecimalNumber, CULong;
overload selector("decimalNumberByRaisingToPower:withBehavior:") = NSDecimalNumber, CULong, Id;
overload selector("decimalNumberByRoundingAccordingToBehavior:") = NSDecimalNumber, Id;
overload selector("decimalNumberBySubtracting:") = NSDecimalNumber, NSDecimalNumber;
overload selector("decimalNumberBySubtracting:withBehavior:") = NSDecimalNumber, NSDecimalNumber, Id;
overload selector("decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, CULong, Short, Bool, Bool, Bool, Bool;
overload selector("decimalNumberWithDecimal:") = NSDecimalNumber, NSDecimal;
overload selector("decimalNumberWithMantissa:exponent:isNegative:") = NSDecimalNumber, UInt64, Short, Bool;
overload selector("decimalNumberWithString:") = NSDecimalNumber, NSString;
overload selector("decimalNumberWithString:locale:") = NSDecimalNumber, NSString, Id;
overload selector("decimalSeparator") = NSString;
overload selector("decimalValue") = NSDecimal;
overload selector("declare") = Bool;
overload selector("declareTypes:owner:") = CLong, NSArray, Id;
overload selector("decodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], CULong, RawPointer;
overload selector("decodeBoolForKey:") = Bool, NSString;
overload selector("decodeBytesForKey:returnedLength:") = Pointer[CUChar], NSString, Pointer[CULong];
overload selector("decodeBytesWithReturnedLength:") = RawPointer, Pointer[CULong];
overload selector("decodeClassName:asClassName:") = Void, NSString, NSString;
overload selector("decodeDataObject") = NSData;
overload selector("decodeDoubleForKey:") = Double, NSString;
overload selector("decodeFloatForKey:") = Float, NSString;
overload selector("decodeInt32ForKey:") = Int, NSString;
overload selector("decodeInt64ForKey:") = Int64, NSString;
overload selector("decodeIntForKey:") = Int, NSString;
overload selector("decodeIntegerForKey:") = CLong, NSString;
overload selector("decodeNXColor") = NSColor;
overload selector("decodeNXObject") = Id;
overload selector("decodeObject") = Id;
overload selector("decodeObjectForKey:") = Id, NSString;
overload selector("decodePoint") = NSPoint;
overload selector("decodePointForKey:") = NSPoint, NSString;
overload selector("decodePortObject") = NSPort;
overload selector("decodePropertyList") = Id;
overload selector("decodeRect") = NSRect;
overload selector("decodeRectForKey:") = NSRect, NSString;
overload selector("decodeSize") = NSSize;
overload selector("decodeSizeForKey:") = NSSize, NSString;
overload selector("decodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
overload varargSelector("decodeValuesOfObjCTypes:") = Void, Pointer[CChar];
overload selector("decomposableCharacterSet") = Id;
overload selector("decomposedStringWithCanonicalMapping") = NSString;
overload selector("decomposedStringWithCompatibilityMapping") = NSString;
overload selector("deepestScreen") = NSScreen;
overload selector("defaultActionForKey:") = Id, NSString;
overload selector("defaultAnimationForKey:") = Id, NSString;
overload selector("defaultAttachmentScaling") = CULong;
overload selector("defaultBaselineOffsetForFont:") = Double, NSFont;
overload selector("defaultBehavior") = Id;
overload selector("defaultButtonCell") = NSButtonCell;
overload selector("defaultButtonTitle") = NSString;
overload selector("defaultCStringEncoding") = CULong;
overload selector("defaultCenter") = Id;
overload selector("defaultCharset") = NSString;
overload selector("defaultChecked") = Bool;
overload selector("defaultCollector") = Id;
overload selector("defaultColumnWidth") = Double;
overload selector("defaultCompletionDelay") = Double;
overload selector("defaultConnection") = NSConnection;
overload selector("defaultCredentialForProtectionSpace:") = NSURLCredential, NSURLProtectionSpace;
overload selector("defaultDate") = NSDate;
overload selector("defaultDecimalNumberHandler") = Id;
overload selector("defaultDepthLimit") = Int;
overload selector("defaultFetchRequest") = NSFetchRequest;
overload selector("defaultFixedFontSize") = Int;
overload selector("defaultFlatness") = Double;
overload selector("defaultFocusRingType") = CULong;
overload selector("defaultFontSize") = Int;
overload selector("defaultFormatterBehavior") = CULong;
overload selector("defaultLineCapStyle") = CULong;
overload selector("defaultLineHeightForFont:") = Double, NSFont;
overload selector("defaultLineJoinStyle") = CULong;
overload selector("defaultLineWidth") = Double;
overload selector("defaultManager") = NSFileManager;
overload selector("defaultMenu") = NSMenu;
overload selector("defaultMiterLimit") = Double;
overload selector("defaultNameServerPortNumber") = UShort;
overload selector("defaultParagraphStyle") = NSParagraphStyle;
overload selector("defaultPixelFormat") = NSOpenGLPixelFormat;
overload selector("defaultPlaceholderForMarker:withBinding:") = Id, Id, NSString;
overload selector("defaultPrinter") = NSPrinter;
overload selector("defaultQueue") = Id;
overload selector("defaultSelected") = Bool;
overload selector("defaultSubcontainerAttributeKey") = NSString;
overload selector("defaultTabInterval") = Double;
overload selector("defaultTextEncodingName") = NSString;
overload selector("defaultTimeZone") = NSTimeZone;
overload selector("defaultTokenizingCharacterSet") = NSCharacterSet;
overload selector("defaultType") = NSString;
overload selector("defaultTypesetterBehavior") = CLong;
overload selector("defaultValue") = Id;
overload selector("defaultValueForKey:") = Id, NSString;
overload selector("defaultView") = DOMAbstractView;
overload selector("defaultVoice") = NSString;
overload selector("defaultWindingRule") = CULong;
overload selector("defaultWritingDirectionForLanguage:") = CLong, NSString;
overload selector("defaults") = NSUserDefaults;
overload selector("defer") = Bool;
overload selector("definition") = CIFilterShape;
overload selector("delegate") = Id;
overload selector("delete:") = Void, Id;
overload selector("deleteBackward:") = Void, Id;
overload selector("deleteBackwardByDecomposingPreviousCharacter:") = Void, Id;
overload selector("deleteCaption") = Void;
overload selector("deleteCell:") = Void, Int;
overload selector("deleteCharactersInRange:") = Void, NSRange;
overload selector("deleteContents") = Void;
overload selector("deleteCookie:") = Void, NSHTTPCookie;
overload selector("deleteData::") = Void, UInt, UInt;
overload selector("deleteData:length:") = Void, UInt, UInt;
overload selector("deleteForward:") = Void, Id;
overload selector("deleteGlyphsInRange:") = Void, NSRange;
overload selector("deleteMedium:") = Void, NSString;
overload selector("deleteObject:") = Void, NSManagedObject;
overload selector("deleteRow:") = Void, Int;
overload selector("deleteRule") = CULong;
overload selector("deleteRule:") = Void, UInt;
overload selector("deleteSelection") = Void;
overload selector("deleteTFoot") = Void;
overload selector("deleteTHead") = Void;
overload selector("deleteToBeginningOfLine:") = Void, Id;
overload selector("deleteToBeginningOfParagraph:") = Void, Id;
overload selector("deleteToEndOfLine:") = Void, Id;
overload selector("deleteToEndOfParagraph:") = Void, Id;
overload selector("deleteToMark:") = Void, Id;
overload selector("deleteWordBackward:") = Void, Id;
overload selector("deleteWordForward:") = Void, Id;
overload selector("deletedObjects") = NSSet;
overload selector("deletesFileUponFailure") = Bool;
overload selector("deliverResult") = Bool;
overload selector("deltaX") = Double;
overload selector("deltaY") = Double;
overload selector("deltaZ") = Double;
overload selector("deminiaturize:") = Void, Id;
overload selector("dependencies") = NSArray;
overload selector("depth") = Int;
overload selector("depthLimit") = Int;
overload selector("dequeueNotificationsMatching:coalesceMask:") = Void, NSNotification, CULong;
overload selector("descendantNodeAtIndexPath:") = NSTreeNode, NSIndexPath;
overload selector("descender") = Double;
overload selector("description") = NSString;
overload selector("descriptionFunction") = CCodePointer[[RawPointer],[NSString]];
overload selector("descriptionInStringsFileFormat") = NSString;
overload selector("descriptionWithCalendarFormat:") = NSString, NSString;
overload selector("descriptionWithCalendarFormat:locale:") = NSString, NSString, Id;
overload selector("descriptionWithCalendarFormat:timeZone:locale:") = NSString, NSString, NSTimeZone, Id;
overload selector("descriptionWithLocale:") = NSString, Id;
overload selector("descriptionWithLocale:indent:") = NSString, Id, CULong;
overload selector("descriptor") = NSAppleEventDescriptor;
overload selector("descriptorAtIndex:") = NSAppleEventDescriptor, CLong;
overload selector("descriptorForKeyword:") = NSAppleEventDescriptor, UInt;
overload selector("descriptorType") = UInt;
overload selector("descriptorWithBoolean:") = NSAppleEventDescriptor, CUChar;
overload selector("descriptorWithDescriptorType:bytes:length:") = NSAppleEventDescriptor, UInt, RawPointer, CULong;
overload selector("descriptorWithDescriptorType:data:") = NSAppleEventDescriptor, UInt, NSData;
overload selector("descriptorWithEnumCode:") = NSAppleEventDescriptor, UInt;
overload selector("descriptorWithInt32:") = NSAppleEventDescriptor, Int;
overload selector("descriptorWithString:") = NSAppleEventDescriptor, NSString;
overload selector("descriptorWithTypeCode:") = NSAppleEventDescriptor, UInt;
overload selector("deselectAll") = Void;
overload selector("deselectAll:") = Void, Id;
overload selector("deselectAllCells") = Void;
overload selector("deselectColumn:") = Void, CLong;
overload selector("deselectItemAtIndex:") = Void, CLong;
overload selector("deselectRow:") = Void, CLong;
overload selector("deselectSelectedCell") = Void;
overload selector("designMode") = NSString;
overload selector("desktopImageOptionsForScreen:") = NSDictionary, NSScreen;
overload selector("desktopImageURLForScreen:") = NSURL, NSScreen;
overload selector("destinationContext") = NSManagedObjectContext;
overload selector("destinationEntity") = NSEntityDescription;
overload selector("destinationEntityForEntityMapping:") = NSEntityDescription, NSEntityMapping;
overload selector("destinationEntityName") = NSString;
overload selector("destinationEntityVersionHash") = NSData;
overload selector("destinationInstancesForEntityMappingNamed:sourceInstances:") = NSArray, NSString, NSArray;
overload selector("destinationModel") = NSManagedObjectModel;
overload selector("destinationOfSymbolicLinkAtPath:error:") = NSString, NSString, Pointer[NSError];
overload selector("destroyContext") = Void;
overload selector("detach") = Void;
overload selector("detachColorList:") = Void, NSColorList;
overload selector("detachDrawingThread:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
overload selector("detachNewThreadSelector:toTarget:withObject:") = Void, SelectorHandle, Id, Id;
overload selector("detail") = Int;
overload selector("detectConflictsForObject:") = Void, NSManagedObject;
overload selector("developmentLocalization") = NSString;
overload selector("device") = Id;
overload selector("deviceCMYKColorSpace") = NSColorSpace;
overload selector("deviceDescription") = NSDictionary;
overload selector("deviceGrayColorSpace") = NSColorSpace;
overload selector("deviceID") = CULong;
overload selector("deviceRGBColorSpace") = NSColorSpace;
overload selector("deviceSize") = NSSize;
overload selector("dictionary") = Id;
overload selector("dictionaryForKey:") = NSDictionary, NSString;
overload selector("dictionaryFromTXTRecordData:") = NSDictionary, NSData;
overload selector("dictionaryRepresentation") = NSDictionary;
overload selector("dictionaryWithCapacity:") = Id, CULong;
overload selector("dictionaryWithContentsOfFile:") = Id, NSString;
overload selector("dictionaryWithContentsOfURL:") = Id, NSURL;
overload selector("dictionaryWithDictionary:") = Id, NSDictionary;
overload selector("dictionaryWithObject:forKey:") = Id, Id, Id;
overload selector("dictionaryWithObjects:forKeys:") = Id, NSArray, NSArray;
overload selector("dictionaryWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], CULong;
overload varargSelector("dictionaryWithObjectsAndKeys:") = Id, Id;
overload selector("dictionaryWithValuesForKeys:") = NSDictionary, NSArray;
overload selector("didAccessValueForKey:") = Void, NSString;
overload selector("didAddSubview:") = Void, NSView;
overload selector("didAddToPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
overload selector("didChange:valuesAtIndexes:forKey:") = Void, CULong, NSIndexSet, NSString;
overload selector("didChangeArrangementCriteria") = Void;
overload selector("didChangeText") = Void;
overload selector("didChangeValueForKey:") = Void, NSString;
overload selector("didChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, CULong, NSSet;
overload selector("didLoadBytes:loadComplete:") = Void, NSData, Bool;
overload selector("didSave") = Void;
overload selector("didTurnIntoFault") = Void;
overload selector("dir") = NSString;
overload selector("directParameter") = Id;
overload selector("direction") = NSString;
overload selector("directory") = NSString;
overload selector("directoryAttributes") = NSDictionary;
overload selector("directoryContentsAtPath:") = NSArray, NSString;
overload selector("directoryURL") = NSURL;
overload selector("disable") = Void;
overload selector("disableCollectorForPointer:") = Void, RawPointer;
overload selector("disableCursorRects") = Void;
overload selector("disableFlushWindow") = Void;
overload selector("disableKeyEquivalentForDefaultButtonCell") = Void;
overload selector("disableScreenUpdatesUntilFlush") = Void;
overload selector("disableSuddenTermination") = Void;
overload selector("disableUndoRegistration") = Void;
overload selector("disableUpdates") = Void;
overload selector("disabled") = Bool;
overload selector("disabledControlTextColor") = NSColor;
overload selector("disappearingItemCursor") = NSCursor;
overload selector("discardCachedImage") = Void;
overload selector("discardContentIfPossible") = Void;
overload selector("discardCursorRects") = Void;
overload selector("discardEditing") = Void;
overload selector("discardEventsMatchingMask:beforeEvent:") = Void, CULong, NSEvent;
overload selector("discardMarkedText") = Void;
overload selector("diskCapacity") = CULong;
overload selector("dismissPopUp") = Void;
overload selector("dispatch") = Void;
overload selector("dispatchEvent:") = Bool, DOMEvent;
overload selector("dispatchRawAppleEvent:withRawReply:handlerRefCon:") = Short, Pointer[AppleEvent], Pointer[AppleEvent], SRefCon;
overload selector("display") = NSString;
overload selector("displayAllColumns") = Void;
overload selector("displayColumn:") = Void, CLong;
overload selector("displayIfNeeded") = Void;
overload selector("displayIfNeededIgnoringOpacity") = Void;
overload selector("displayIfNeededInRect:") = Void, NSRect;
overload selector("displayIfNeededInRectIgnoringOpacity:") = Void, NSRect;
overload selector("displayLayer:") = Void, CALayer;
overload selector("displayMode") = CULong;
overload selector("displayName") = NSString;
overload selector("displayNameAtPath:") = NSString, NSString;
overload selector("displayNameForKey:value:") = NSString, Id, Id;
overload selector("displayNameForType:") = NSString, NSString;
overload selector("displayRect:") = Void, NSRect;
overload selector("displayRectIgnoringOpacity:") = Void, NSRect;
overload selector("displayRectIgnoringOpacity:inContext:") = Void, NSRect, NSGraphicsContext;
overload selector("displayValuesForRow:") = NSArray, CLong;
overload selector("displayValuesKeyPath") = NSString;
overload selector("displayableSubpredicatesOfPredicate:") = NSArray, NSPredicate;
overload selector("displayedCommandsTitle") = NSString;
overload selector("displaysLinkToolTips") = Bool;
overload selector("displaysWhenScreenProfileChanges") = Bool;
overload selector("dissolveToPoint:fraction:") = Void, NSPoint, Double;
overload selector("dissolveToPoint:fromRect:fraction:") = Void, NSPoint, NSRect, Double;
overload selector("distantFuture") = Id;
overload selector("distantPast") = Id;
overload selector("distinguishedNames") = NSArray;
overload selector("dividerColor") = NSColor;
overload selector("dividerStyle") = CLong;
overload selector("dividerThickness") = Double;
overload selector("doClick:") = Void, Id;
overload selector("doCommandBySelector:") = Void, SelectorHandle;
overload selector("doCommandBySelector:client:") = Void, SelectorHandle, Id;
overload selector("doDoubleClick:") = Void, Id;
overload selector("docFormatFromRange:documentAttributes:") = NSData, NSRange, NSDictionary;
overload selector("dockMenu") = NSMenu;
overload selector("dockTile") = NSDockTile;
overload selector("doctype") = DOMDocumentType;
overload selector("document") = Id;
overload selector("documentClassForType:") = Id, NSString;
overload selector("documentClassNames") = NSArray;
overload selector("documentContentKind") = CULong;
overload selector("documentCursor") = NSCursor;
overload selector("documentElement") = DOMElement;
overload selector("documentForFileName:") = Id, NSString;
overload selector("documentForURL:") = Id, NSURL;
overload selector("documentForWindow:") = Id, NSWindow;
overload selector("documentRect") = NSRect;
overload selector("documentSource") = NSString;
overload selector("documentURI") = NSString;
overload selector("documentView") = Id;
overload selector("documentViewShouldHandlePrint") = Bool;
overload selector("documentVisibleRect") = NSRect;
overload selector("documentWithRootElement:") = Id, NSXMLElement;
overload selector("documents") = NSArray;
overload selector("doesContain:") = Bool, Id;
overload selector("doesNotRecognizeSelector:") = Void, SelectorHandle;
overload selector("doesRelativeDateFormatting") = Bool;
overload selector("domain") = NSString;
overload selector("dominantLanguage") = NSString;
overload selector("dominantLanguageForScript:") = NSString, NSString;
overload selector("dominantScript") = NSString;
overload selector("doubleAction") = SelectorHandle;
overload selector("doubleClickAtIndex:") = NSRange, CULong;
overload selector("doubleClickInterval") = Double;
overload selector("doubleForKey:") = Double, NSString;
overload selector("doubleValue") = Double;
overload selector("download") = Void;
overload selector("download:canAuthenticateAgainstProtectionSpace:") = Bool, NSURLDownload, NSURLProtectionSpace;
overload selector("download:decideDestinationWithSuggestedFilename:") = Void, NSURLDownload, NSString;
overload selector("download:didCancelAuthenticationChallenge:") = Void, NSURLDownload, NSURLAuthenticationChallenge;
overload selector("download:didCreateDestination:") = Void, NSURLDownload, NSString;
overload selector("download:didFailWithError:") = Void, NSURLDownload, NSError;
overload selector("download:didReceiveAuthenticationChallenge:") = Void, NSURLDownload, NSURLAuthenticationChallenge;
overload selector("download:didReceiveDataOfLength:") = Void, NSURLDownload, CULong;
overload selector("download:didReceiveResponse:") = Void, NSURLDownload, NSURLResponse;
overload selector("download:shouldDecodeSourceDataOfMIMEType:") = Bool, NSURLDownload, NSString;
overload selector("download:willResumeWithResponse:fromByte:") = Void, NSURLDownload, NSURLResponse, Int64;
overload selector("download:willSendRequest:redirectResponse:") = NSURLRequest, NSURLDownload, NSURLRequest, NSURLResponse;
overload selector("downloadDelegate") = Id;
overload selector("downloadDidBegin:") = Void, NSURLDownload;
overload selector("downloadDidFinish:") = Void, NSURLDownload;
overload selector("downloadShouldUseCredentialStorage:") = Bool, NSURLDownload;
overload selector("downloadWindowForAuthenticationSheet:") = NSWindow, WebDownload;
overload selector("dragColor:withEvent:fromView:") = Bool, NSColor, NSEvent, NSView;
overload selector("dragCopyCursor") = NSCursor;
overload selector("dragFile:fromRect:slideBack:event:") = Bool, NSString, NSRect, Bool, NSEvent;
overload selector("dragImage:at:offset:event:pasteboard:source:slideBack:") = Void, NSImage, NSPoint, NSSize, NSEvent, NSPasteboard, Id, Bool;
overload selector("dragImageForRows:event:dragImageOffset:") = NSImage, NSArray, NSEvent, NSPointPointer;
overload selector("dragImageForRowsWithIndexes:tableColumns:event:offset:") = NSImage, NSIndexSet, NSArray, NSEvent, NSPointPointer;
overload selector("dragImageForSelectionWithEvent:origin:") = NSImage, NSEvent, NSPointPointer;
overload selector("dragLinkCursor") = NSCursor;
overload selector("dragOperationForDraggingInfo:type:") = CULong, Id, NSString;
overload selector("dragPromisedFilesOfTypes:fromRect:source:slideBack:event:") = Bool, NSArray, NSRect, Id, Bool, NSEvent;
overload selector("dragSelectionWithEvent:offset:slideBack:") = Bool, NSEvent, NSSize, Bool;
overload selector("draggedColumn") = CLong;
overload selector("draggedDistance") = Double;
overload selector("draggedImage") = NSImage;
overload selector("draggedImage:beganAt:") = Void, NSImage, NSPoint;
overload selector("draggedImage:endedAt:deposited:") = Void, NSImage, NSPoint, Bool;
overload selector("draggedImage:endedAt:operation:") = Void, NSImage, NSPoint, CULong;
overload selector("draggedImage:movedTo:") = Void, NSImage, NSPoint;
overload selector("draggedImageLocation") = NSPoint;
overload selector("draggingDestinationFeedbackStyle") = CLong;
overload selector("draggingDestinationWindow") = NSWindow;
overload selector("draggingEnded:") = Void, Id;
overload selector("draggingEntered:") = CULong, Id;
overload selector("draggingExited:") = Void, Id;
overload selector("draggingImageForItemsAtIndexes:withEvent:offset:") = NSImage, NSIndexSet, NSEvent, NSPointPointer;
overload selector("draggingImageForRowsWithIndexes:inColumn:withEvent:offset:") = NSImage, NSIndexSet, CLong, NSEvent, NSPointPointer;
overload selector("draggingLocation") = NSPoint;
overload selector("draggingPasteboard") = NSPasteboard;
overload selector("draggingSequenceNumber") = CLong;
overload selector("draggingSource") = Id;
overload selector("draggingSourceOperationMask") = CULong;
overload selector("draggingSourceOperationMaskForLocal:") = CULong, Bool;
overload selector("draggingUpdated:") = CULong, Id;
overload selector("drain") = Void;
overload selector("draw") = Bool;
overload selector("drawArrow:highlight:") = Void, CULong, Bool;
overload selector("drawAtPoint:") = Bool, NSPoint;
overload selector("drawAtPoint:fromRect:operation:fraction:") = Void, NSPoint, NSRect, CULong, Double;
overload selector("drawAtPoint:withAttributes:") = Void, NSPoint, NSDictionary;
overload selector("drawBackgroundForBlock:withFrame:inView:characterRange:layoutManager:") = Void, NSTextTableBlock, NSRect, NSView, NSRange, NSLayoutManager;
overload selector("drawBackgroundForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
overload selector("drawBackgroundInClipRect:") = Void, NSRect;
overload selector("drawBackgroundWithFrame:inView:characterRange:layoutManager:") = Void, NSRect, NSView, NSRange, NSLayoutManager;
overload selector("drawBarInside:flipped:") = Void, NSRect, Bool;
overload selector("drawBezelWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawBorderAndBackgroundWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawCell:") = Void, NSCell;
overload selector("drawCellAtIndex:") = Void, CLong;
overload selector("drawCellAtRow:column:") = Void, CLong, CLong;
overload selector("drawCellInside:") = Void, NSCell;
overload selector("drawDividerInRect:") = Void, NSRect;
overload selector("drawFromCenter:radius:toCenter:radius:options:") = Void, NSPoint, Double, NSPoint, Double, CULong;
overload selector("drawFromPoint:toPoint:options:") = Void, NSPoint, NSPoint, CULong;
overload selector("drawGlyphsForGlyphRange:atPoint:") = Void, NSRange, NSPoint;
overload selector("drawGridInClipRect:") = Void, NSRect;
overload selector("drawHashMarksAndLabelsInRect:") = Void, NSRect;
overload selector("drawImage:withFrame:inView:") = Void, NSImage, NSRect, NSView;
overload selector("drawImageWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawInBezierPath:angle:") = Void, NSBezierPath, Double;
overload selector("drawInBezierPath:relativeCenterPosition:") = Void, NSBezierPath, NSPoint;
overload selector("drawInCGLContext:pixelFormat:forLayerTime:displayTime:") = Void, CGLContextObj, CGLPixelFormatObj, Double, Pointer[CVTimeStamp];
overload selector("drawInContext:") = Void, CGContextRef;
overload selector("drawInOpenGLContext:pixelFormat:forLayerTime:displayTime:") = Void, NSOpenGLContext, NSOpenGLPixelFormat, Double, Pointer[CVTimeStamp];
overload selector("drawInRect:") = Bool, NSRect;
overload selector("drawInRect:angle:") = Void, NSRect, Double;
overload selector("drawInRect:fromRect:operation:fraction:") = Void, NSRect, NSRect, CULong, Double;
overload selector("drawInRect:fromRect:operation:fraction:respectFlipped:hints:") = Bool, NSRect, NSRect, CULong, Double, Bool, NSDictionary;
overload selector("drawInRect:relativeCenterPosition:") = Void, NSRect, NSPoint;
overload selector("drawInRect:withAttributes:") = Void, NSRect, NSDictionary;
overload selector("drawInsertionPointInRect:color:turnedOn:") = Void, NSRect, NSColor, Bool;
overload selector("drawInteriorWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawKeyEquivalentWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawKnob") = Void;
overload selector("drawKnob:") = Void, NSRect;
overload selector("drawKnobSlotInRect:highlight:") = Void, NSRect, Bool;
overload selector("drawLabel:inRect:") = Void, Bool, NSRect;
overload selector("drawLayer:inContext:") = Void, CALayer, CGContextRef;
overload selector("drawMarkersInRect:") = Void, NSRect;
overload selector("drawPackedGlyphs:atPoint:") = Void, Pointer[CChar], NSPoint;
overload selector("drawPageBorderWithSize:") = Void, NSSize;
overload selector("drawParts") = Void;
overload selector("drawRect:") = Void, NSRect;
overload selector("drawRepresentation:inRect:") = Bool, NSImageRep, NSRect;
overload selector("drawRow:clipRect:") = Void, CLong, NSRect;
overload selector("drawSegment:inFrame:withView:") = Void, CLong, NSRect, NSView;
overload selector("drawSelector") = SelectorHandle;
overload selector("drawSeparatorItemWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawSheetBorderWithSize:") = Void, NSSize;
overload selector("drawSortIndicatorWithFrame:inView:ascending:priority:") = Void, NSRect, NSView, Bool, CLong;
overload selector("drawStateImageWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawStatusBarBackgroundInRect:withHighlight:") = Void, NSRect, Bool;
overload selector("drawStrikethroughForGlyphRange:strikethroughType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, Double, NSRect, NSRange, NSPoint;
overload selector("drawSwatchInRect:") = Void, NSRect;
overload selector("drawTitle:withFrame:inView:") = NSRect, NSAttributedString, NSRect, NSView;
overload selector("drawTitleOfColumn:inRect:") = Void, CLong, NSRect;
overload selector("drawTitleWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawUnderlineForGlyphRange:underlineType:baselineOffset:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, Double, NSRect, NSRange, NSPoint;
overload selector("drawViewBackgroundInRect:") = Void, NSRect;
overload selector("drawWellInside:") = Void, NSRect;
overload selector("drawWithExpansionFrame:inView:") = Void, NSRect, NSView;
overload selector("drawWithFrame:inView:") = Void, NSRect, NSView;
overload selector("drawWithFrame:inView:characterIndex:") = Void, NSRect, NSView, CULong;
overload selector("drawWithFrame:inView:characterIndex:layoutManager:") = Void, NSRect, NSView, CULong, NSLayoutManager;
overload selector("drawWithRect:options:") = Void, NSRect, CLong;
overload selector("drawWithRect:options:attributes:") = Void, NSRect, CLong, NSDictionary;
overload selector("drawerDidClose:") = Void, NSNotification;
overload selector("drawerDidOpen:") = Void, NSNotification;
overload selector("drawerShouldClose:") = Bool, NSDrawer;
overload selector("drawerShouldOpen:") = Bool, NSDrawer;
overload selector("drawerWillClose:") = Void, NSNotification;
overload selector("drawerWillOpen:") = Void, NSNotification;
overload selector("drawerWillResizeContents:toSize:") = NSSize, NSDrawer, NSSize;
overload selector("drawers") = NSArray;
overload selector("drawingRectForBounds:") = NSRect, NSRect;
overload selector("drawsBackground") = Bool;
overload selector("drawsCellBackground") = Bool;
overload selector("drawsGrid") = Bool;
overload selector("drawsOutsideLineFragmentForGlyphAtIndex:") = Bool, CULong;
overload selector("drawsVerticallyForCharacterAtIndex:") = Bool, CULong;
overload selector("duplicateURLs:completionHandler:") = Void, NSArray, UnknownType;
overload selector("duration") = Double;
overload selector("earlierDate:") = NSDate, NSDate;
overload selector("echosBullets") = Bool;
overload selector("edge") = CULong;
overload selector("edgeAntialiasingMask") = UInt;
overload selector("editColumn:row:withEvent:select:") = Void, CLong, CLong, NSEvent, Bool;
overload selector("editItemAtIndexPath:withEvent:select:") = Void, NSIndexPath, NSEvent, Bool;
overload selector("editWithFrame:inView:editor:delegate:event:") = Void, NSRect, NSView, NSText, Id, NSEvent;
overload selector("editableDOMRangeForPoint:") = DOMRange, NSPoint;
overload selector("edited:range:changeInLength:") = Void, CULong, NSRange, CLong;
overload selector("editedColumn") = CLong;
overload selector("editedMask") = CULong;
overload selector("editedRange") = NSRange;
overload selector("editedRow") = CLong;
overload selector("editingDelegate") = Id;
overload selector("editingStringForObjectValue:") = NSString, Id;
overload selector("elementAtIndex:") = CULong, CLong;
overload selector("elementAtIndex:associatedPoints:") = CULong, CLong, NSPointArray;
overload selector("elementAtPoint:") = NSDictionary, NSPoint;
overload selector("elementCount") = CLong;
overload selector("elementDeclarationForName:") = NSXMLDTDNode, NSString;
overload selector("elementFromPoint:y:") = DOMElement, Int, Int;
overload selector("elementWithName:") = Id, NSString;
overload selector("elementWithName:URI:") = Id, NSString, NSString;
overload selector("elementWithName:children:attributes:") = Id, NSString, NSArray, NSArray;
overload selector("elementWithName:stringValue:") = Id, NSString, NSString;
overload selector("elements") = DOMHTMLCollection;
overload selector("elementsDerivedFromExternalRecordURL:") = NSDictionary, NSURL;
overload selector("elementsForLocalName:URI:") = NSArray, NSString, NSString;
overload selector("elementsForName:") = NSArray, NSString;
overload selector("elevation") = NSString;
overload selector("embeds") = DOMHTMLCollection;
overload selector("emptyCells") = NSString;
overload selector("emptyImage") = CIImage;
overload selector("enable") = Void;
overload selector("enableCollectorForPointer:") = Void, RawPointer;
overload selector("enableCursorRects") = Void;
overload selector("enableFlushWindow") = Void;
overload selector("enableKeyEquivalentForDefaultButtonCell") = Void;
overload selector("enableMultipleThreads") = Void;
overload selector("enableSuddenTermination") = Void;
overload selector("enableUndoRegistration") = Void;
overload selector("enableUpdates") = Void;
overload selector("enabledTextCheckingTypes") = UInt64;
overload selector("enclosingMenuItem") = NSMenuItem;
overload selector("enclosingScrollView") = NSScrollView;
overload selector("encodeArrayOfObjCType:count:at:") = Void, Pointer[CChar], CULong, RawPointer;
overload selector("encodeBool:forKey:") = Void, Bool, NSString;
overload selector("encodeBycopyObject:") = Void, Id;
overload selector("encodeByrefObject:") = Void, Id;
overload selector("encodeBytes:length:") = Void, RawPointer, CULong;
overload selector("encodeBytes:length:forKey:") = Void, Pointer[CUChar], CULong, NSString;
overload selector("encodeClassName:intoClassName:") = Void, NSString, NSString;
overload selector("encodeConditionalObject:") = Void, Id;
overload selector("encodeConditionalObject:forKey:") = Void, Id, NSString;
overload selector("encodeDataObject:") = Void, NSData;
overload selector("encodeDouble:forKey:") = Void, Double, NSString;
overload selector("encodeFloat:forKey:") = Void, Float, NSString;
overload selector("encodeInt32:forKey:") = Void, Int, NSString;
overload selector("encodeInt64:forKey:") = Void, Int64, NSString;
overload selector("encodeInt:forKey:") = Void, Int, NSString;
overload selector("encodeInteger:forKey:") = Void, CLong, NSString;
overload selector("encodeNXObject:") = Void, Id;
overload selector("encodeObject:") = Void, Id;
overload selector("encodeObject:forKey:") = Void, Id, NSString;
overload selector("encodePoint:") = Void, NSPoint;
overload selector("encodePoint:forKey:") = Void, NSPoint, NSString;
overload selector("encodePortObject:") = Void, NSPort;
overload selector("encodePropertyList:") = Void, Id;
overload selector("encodeRect:") = Void, NSRect;
overload selector("encodeRect:forKey:") = Void, NSRect, NSString;
overload selector("encodeRootObject:") = Void, Id;
overload selector("encodeSize:") = Void, NSSize;
overload selector("encodeSize:forKey:") = Void, NSSize, NSString;
overload selector("encodeValueOfObjCType:at:") = Void, Pointer[CChar], RawPointer;
overload varargSelector("encodeValuesOfObjCTypes:") = Void, Pointer[CChar];
overload selector("encodeWithCoder:") = Void, NSCoder;
overload selector("encoding") = NSString;
overload selector("enctype") = NSString;
overload selector("endContainer") = DOMNode;
overload selector("endContentAccess") = Void;
overload selector("endDocument") = Void;
overload selector("endEditing") = Void;
overload selector("endEditing:") = Void, NSText;
overload selector("endEditingFor:") = Void, Id;
overload selector("endEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector("endGestureWithEvent:") = Void, NSEvent;
overload selector("endGrouping") = Void;
overload selector("endInstanceCreationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector("endLineWithGlyphRange:") = Void, NSRange;
overload selector("endLoadInBackground") = Void;
overload selector("endModalSession:") = Void, NSModalSession;
overload selector("endOffset") = Int;
overload selector("endPage") = Void;
overload selector("endParagraph") = Void;
overload selector("endRelationshipCreationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector("endSheet:") = Void, NSWindow;
overload selector("endSheet:returnCode:") = Void, NSWindow, CLong;
overload selector("endSpecifier") = NSScriptObjectSpecifier;
overload selector("endSubelementIdentifier") = CULong;
overload selector("endSubelementIndex") = CLong;
overload selector("endUndoGrouping") = Void;
overload selector("enqueueNotification:postingStyle:") = Void, NSNotification, CULong;
overload selector("enqueueNotification:postingStyle:coalesceMask:forModes:") = Void, NSNotification, CULong, CULong, NSArray;
overload selector("ensureAttributesAreFixedInRange:") = Void, NSRange;
overload selector("ensureGlyphsForCharacterRange:") = Void, NSRange;
overload selector("ensureGlyphsForGlyphRange:") = Void, NSRange;
overload selector("ensureLayoutForBoundingRect:inTextContainer:") = Void, NSRect, NSTextContainer;
overload selector("ensureLayoutForCharacterRange:") = Void, NSRange;
overload selector("ensureLayoutForGlyphRange:") = Void, NSRange;
overload selector("ensureLayoutForTextContainer:") = Void, NSTextContainer;
overload selector("enterExitEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:trackingNumber:userData:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, CLong, CLong, RawPointer;
overload selector("enterFullScreenMode:withOptions:") = Bool, NSScreen, NSDictionary;
overload selector("entities") = Id;
overload selector("entitiesByName") = NSDictionary;
overload selector("entitiesForConfiguration:") = NSArray, NSString;
overload selector("entity") = NSEntityDescription;
overload selector("entityDeclarationForName:") = NSXMLDTDNode, NSString;
overload selector("entityForName:inManagedObjectContext:") = NSEntityDescription, NSString, NSManagedObjectContext;
overload selector("entityMappings") = NSArray;
overload selector("entityMappingsByName") = NSDictionary;
overload selector("entityMigrationPolicyClassName") = NSString;
overload selector("entityName") = NSString;
overload selector("entityVersionHashesByName") = NSDictionary;
overload selector("entryType") = CLong;
overload selector("enumCodeValue") = UInt;
overload selector("enumerateAttribute:inRange:options:usingBlock:") = Void, NSString, NSRange, CULong, UnknownType;
overload selector("enumerateAttributesInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
overload selector("enumerateIndexesInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
overload selector("enumerateIndexesUsingBlock:") = Void, UnknownType;
overload selector("enumerateIndexesWithOptions:usingBlock:") = Void, CULong, UnknownType;
overload selector("enumerateKeysAndObjectsUsingBlock:") = Void, UnknownType;
overload selector("enumerateKeysAndObjectsWithOptions:usingBlock:") = Void, CULong, UnknownType;
overload selector("enumerateLinesUsingBlock:") = Void, UnknownType;
overload selector("enumerateObjectsAtIndexes:options:usingBlock:") = Void, NSIndexSet, CULong, UnknownType;
overload selector("enumerateObjectsUsingBlock:") = Void, UnknownType;
overload selector("enumerateObjectsWithOptions:usingBlock:") = Void, CULong, UnknownType;
overload selector("enumerateSubstringsInRange:options:usingBlock:") = Void, NSRange, CULong, UnknownType;
overload selector("enumeratorAtPath:") = NSDirectoryEnumerator, NSString;
overload selector("enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:") = NSDirectoryEnumerator, NSURL, NSArray, CULong, UnknownType;
overload selector("environment") = NSDictionary;
overload selector("era") = CLong;
overload selector("eraSymbols") = NSArray;
overload selector("error") = NSError;
overload selector("errorWithDomain:code:userInfo:") = Id, NSString, CLong, NSDictionary;
overload selector("estimatedProgress") = Double;
overload selector("evaluate") = Void;
overload selector("evaluate:::") = DOMXPathResult, DOMNode, UShort, DOMXPathResult;
overload selector("evaluate:::::") = DOMXPathResult, NSString, DOMNode, Id, UShort, DOMXPathResult;
overload selector("evaluate:contextNode:resolver:type:inResult:") = DOMXPathResult, NSString, DOMNode, Id, UShort, DOMXPathResult;
overload selector("evaluate:type:inResult:") = DOMXPathResult, DOMNode, UShort, DOMXPathResult;
overload selector("evaluateWebScript:") = Id, NSString;
overload selector("evaluateWithObject:") = Bool, Id;
overload selector("evaluateWithObject:substitutionVariables:") = Bool, Id, NSDictionary;
overload selector("evaluatedArguments") = NSDictionary;
overload selector("evaluatedReceivers") = Id;
overload selector("evaluationErrorNumber") = CLong;
overload selector("evaluationErrorSpecifier") = NSScriptObjectSpecifier;
overload selector("event") = NSString;
overload selector("eventClass") = UInt;
overload selector("eventID") = UInt;
overload selector("eventNumber") = CLong;
overload selector("eventPhase") = UShort;
overload selector("eventRef") = RawPointer;
overload selector("eventWithCGEvent:") = NSEvent, CGEventRef;
overload selector("eventWithEventRef:") = NSEvent, RawPointer;
overload selector("evictsObjectsWithDiscardedContent") = Bool;
overload selector("exceptionDuringOperation:error:leftOperand:rightOperand:") = NSDecimalNumber, SelectorHandle, CULong, NSDecimalNumber, NSDecimalNumber;
overload selector("exceptionWithName:reason:userInfo:") = NSException, NSString, NSString, NSDictionary;
overload selector("exchangeObjectAtIndex:withObjectAtIndex:") = Void, CULong, CULong;
overload selector("excludedKeys") = NSArray;
overload selector("execCommand:") = Bool, NSString;
overload selector("execCommand:userInterface:") = Bool, NSString, Bool;
overload selector("execCommand:userInterface:value:") = Bool, NSString, Bool, NSString;
overload selector("executableArchitecture") = CLong;
overload selector("executableArchitectures") = NSArray;
overload selector("executablePath") = NSString;
overload selector("executableURL") = NSURL;
overload selector("executeAndReturnError:") = NSAppleEventDescriptor, Pointer[NSDictionary];
overload selector("executeAppleEvent:error:") = NSAppleEventDescriptor, NSAppleEventDescriptor, Pointer[NSDictionary];
overload selector("executeCommand") = Id;
overload selector("executeFetchRequest:error:") = NSArray, NSFetchRequest, Pointer[NSError];
overload selector("executionBlocks") = NSArray;
overload selector("existingObjectWithID:error:") = NSManagedObject, NSManagedObjectID, Pointer[NSError];
overload selector("exit") = Void;
overload selector("exitFullScreenModeWithOptions:") = Void, NSDictionary;
overload selector("expandEntityReferences") = Bool;
overload selector("expandItem:") = Void, Id;
overload selector("expandItem:expandChildren:") = Void, Id, Bool;
overload selector("expansionFrameWithFrame:inView:") = NSRect, NSRect, NSView;
overload selector("expectedContentLength") = Int64;
overload selector("expectedResourceDataSize") = Int64;
overload selector("expiresDate") = NSDate;
overload selector("exponentSymbol") = NSString;
overload selector("exposeBinding:") = Void, NSString;
overload selector("exposedBindings") = NSArray;
overload selector("expression") = NSExpression;
overload selector("expressionBlock") = UnknownType;
overload selector("expressionForAggregate:") = NSExpression, NSArray;
overload selector("expressionForBlock:arguments:") = NSExpression, UnknownType, NSArray;
overload selector("expressionForConstantValue:") = NSExpression, Id;
overload selector("expressionForEvaluatedObject") = NSExpression;
overload selector("expressionForFetch:context:countOnly:") = NSExpression, NSExpression, NSExpression, Bool;
overload selector("expressionForFunction:arguments:") = NSExpression, NSString, NSArray;
overload selector("expressionForFunction:selectorName:arguments:") = NSExpression, NSExpression, NSString, NSArray;
overload selector("expressionForIntersectSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector("expressionForKeyPath:") = NSExpression, NSString;
overload selector("expressionForMinusSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector("expressionForSubquery:usingIteratorVariable:predicate:") = NSExpression, NSExpression, NSString, Id;
overload selector("expressionForUnionSet:with:") = NSExpression, NSExpression, NSExpression;
overload selector("expressionForVariable:") = NSExpression, NSString;
overload selector("expressionResultType") = CULong;
overload selector("expressionType") = CULong;
overload selector("expressionValueWithObject:context:") = Id, Id, NSMutableDictionary;
overload selector("extendPowerOffBy:") = CLong, CLong;
overload selector("extent") = CGRect;
overload selector("extraLineFragmentRect") = NSRect;
overload selector("extraLineFragmentTextContainer") = NSTextContainer;
overload selector("extraLineFragmentUsedRect") = NSRect;
overload selector("extractContents") = DOMDocumentFragment;
overload selector("face") = NSString;
overload selector("failureReason") = NSString;
overload selector("failureResponse") = NSURLResponse;
overload selector("familyName") = NSString;
overload selector("fantasyFontFamily") = NSString;
overload selector("fastestEncoding") = CULong;
overload selector("faultingState") = CULong;
overload selector("fetch:") = Void, Id;
overload selector("fetchBatchSize") = CULong;
overload selector("fetchLimit") = CULong;
overload selector("fetchOffset") = CULong;
overload selector("fetchPredicate") = NSPredicate;
overload selector("fetchRequest") = NSFetchRequest;
overload selector("fetchRequestFromTemplateWithName:substitutionVariables:") = NSFetchRequest, NSString, NSDictionary;
overload selector("fetchRequestTemplateForName:") = NSFetchRequest, NSString;
overload selector("fetchRequestTemplatesByName") = NSDictionary;
overload selector("fetchWithRequest:merge:error:") = Bool, NSFetchRequest, Bool, Pointer[NSError];
overload selector("fgColor") = NSString;
overload selector("fieldEditor:forObject:") = NSText, Bool, Id;
overload selector("fieldEditorForView:") = NSTextView, NSView;
overload selector("fileAttributes") = NSDictionary;
overload selector("fileAttributesAtPath:traverseLink:") = NSDictionary, NSString, Bool;
overload selector("fileAttributesToWriteToFile:ofType:saveOperation:") = NSDictionary, NSString, NSString, CULong;
overload selector("fileAttributesToWriteToURL:ofType:forSaveOperation:originalContentsURL:error:") = NSDictionary, NSURL, NSString, CULong, NSURL, Pointer[NSError];
overload selector("fileCreationDate") = NSDate;
overload selector("fileDescriptor") = Int;
overload selector("fileExistsAtPath:") = Bool, NSString;
overload selector("fileExistsAtPath:isDirectory:") = Bool, NSString, Pointer[Bool];
overload selector("fileExtensionHidden") = Bool;
overload selector("fileExtensionsFromType:") = NSArray, NSString;
overload selector("fileGroupOwnerAccountID") = NSNumber;
overload selector("fileGroupOwnerAccountName") = NSString;
overload selector("fileHFSCreatorCode") = UInt;
overload selector("fileHFSTypeCode") = UInt;
overload selector("fileHandleForReading") = NSFileHandle;
overload selector("fileHandleForReadingAtPath:") = Id, NSString;
overload selector("fileHandleForReadingFromURL:error:") = Id, NSURL, Pointer[NSError];
overload selector("fileHandleForUpdatingAtPath:") = Id, NSString;
overload selector("fileHandleForUpdatingURL:error:") = Id, NSURL, Pointer[NSError];
overload selector("fileHandleForWriting") = NSFileHandle;
overload selector("fileHandleForWritingAtPath:") = Id, NSString;
overload selector("fileHandleForWritingToURL:error:") = Id, NSURL, Pointer[NSError];
overload selector("fileHandleWithNullDevice") = Id;
overload selector("fileHandleWithStandardError") = Id;
overload selector("fileHandleWithStandardInput") = Id;
overload selector("fileHandleWithStandardOutput") = Id;
overload selector("fileIsAppendOnly") = Bool;
overload selector("fileIsImmutable") = Bool;
overload selector("fileLabelColors") = NSArray;
overload selector("fileLabels") = NSArray;
overload selector("fileManager:shouldCopyItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector("fileManager:shouldCopyItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector("fileManager:shouldLinkItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector("fileManager:shouldLinkItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector("fileManager:shouldMoveItemAtPath:toPath:") = Bool, NSFileManager, NSString, NSString;
overload selector("fileManager:shouldMoveItemAtURL:toURL:") = Bool, NSFileManager, NSURL, NSURL;
overload selector("fileManager:shouldProceedAfterError:") = Bool, NSFileManager, NSDictionary;
overload selector("fileManager:shouldProceedAfterError:copyingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector("fileManager:shouldProceedAfterError:copyingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector("fileManager:shouldProceedAfterError:linkingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector("fileManager:shouldProceedAfterError:linkingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector("fileManager:shouldProceedAfterError:movingItemAtPath:toPath:") = Bool, NSFileManager, NSError, NSString, NSString;
overload selector("fileManager:shouldProceedAfterError:movingItemAtURL:toURL:") = Bool, NSFileManager, NSError, NSURL, NSURL;
overload selector("fileManager:shouldProceedAfterError:removingItemAtPath:") = Bool, NSFileManager, NSError, NSString;
overload selector("fileManager:shouldProceedAfterError:removingItemAtURL:") = Bool, NSFileManager, NSError, NSURL;
overload selector("fileManager:shouldRemoveItemAtPath:") = Bool, NSFileManager, NSString;
overload selector("fileManager:shouldRemoveItemAtURL:") = Bool, NSFileManager, NSURL;
overload selector("fileManager:willProcessPath:") = Void, NSFileManager, NSString;
overload selector("fileModificationDate") = NSDate;
overload selector("fileName") = NSString;
overload selector("fileNameExtensionForType:saveOperation:") = NSString, NSString, CULong;
overload selector("fileNameExtensionWasHiddenInLastRunSavePanel") = Bool;
overload selector("fileNamesFromRunningOpenPanel") = NSArray;
overload selector("fileOwnerAccountID") = NSNumber;
overload selector("fileOwnerAccountName") = NSString;
overload selector("filePathURL") = NSURL;
overload selector("filePosixPermissions") = CULong;
overload selector("fileReferenceURL") = NSURL;
overload selector("fileSize") = UInt64;
overload selector("fileSystemAttributesAtPath:") = NSDictionary, NSString;
overload selector("fileSystemChanged") = Bool;
overload selector("fileSystemFileNumber") = CULong;
overload selector("fileSystemNumber") = CLong;
overload selector("fileSystemRepresentation") = Pointer[CChar];
overload selector("fileSystemRepresentationWithPath:") = Pointer[CChar], NSString;
overload selector("fileType") = NSString;
overload selector("fileTypeFromLastRunSavePanel") = NSString;
overload selector("fileURL") = NSURL;
overload selector("fileURLWithPath:") = Id, NSString;
overload selector("fileURLWithPath:isDirectory:") = Id, NSString, Bool;
overload selector("fileURLWithPathComponents:") = NSURL, NSArray;
overload selector("fileWrapper") = NSFileWrapper;
overload selector("fileWrapperFromRange:documentAttributes:error:") = NSFileWrapper, NSRange, NSDictionary, Pointer[NSError];
overload selector("fileWrapperOfType:error:") = NSFileWrapper, NSString, Pointer[NSError];
overload selector("fileWrapperRepresentationOfType:") = NSFileWrapper, NSString;
overload selector("fileWrappers") = NSDictionary;
overload selector("filename") = NSString;
overload selector("filenameExtension:isValidForType:") = Bool, NSString, NSString;
overload selector("filenames") = NSArray;
overload selector("files") = DOMFileList;
overload selector("fill") = Void;
overload selector("fillBackgroundRectArray:count:forCharacterRange:color:") = Void, NSRectArray, CULong, NSRange, NSColor;
overload selector("fillColor") = NSColor;
overload selector("fillMode") = NSString;
overload selector("fillRect:") = Void, NSRect;
overload selector("filter") = Id;
overload selector("filterPredicate") = NSPredicate;
overload selector("filterUsingPredicate:") = Void, NSPredicate;
overload selector("filteredArrayUsingPredicate:") = NSArray, NSPredicate;
overload selector("filteredSetUsingPredicate:") = NSSet, NSPredicate;
overload selector("filters") = NSArray;
overload selector("finalWritePrintInfo") = Void;
overload selector("finalize") = Void;
overload selector("finalizeForWebScript") = Void;
overload selector("findApplications") = Void;
overload selector("findFrameNamed:") = WebFrame, NSString;
overload selector("findString:inBook:") = Void, NSString, NSString;
overload selector("finishDecoding") = Void;
overload selector("finishEncoding") = Void;
overload selector("finishLaunching") = Void;
overload selector("finishedLoadingWithDataSource:") = Void, WebDataSource;
overload selector("fire") = Void;
overload selector("fireDate") = NSDate;
overload selector("firstChild") = DOMNode;
overload selector("firstElementChild") = DOMElement;
overload selector("firstIndex") = CULong;
overload selector("firstLineHeadIndent") = Double;
overload selector("firstObjectCommonWithArray:") = Id, NSArray;
overload selector("firstRectForCharacterRange:") = NSRect, NSRange;
overload selector("firstRectForCharacterRange:actualRange:") = NSRect, NSRange, NSRangePointer;
overload selector("firstResponder") = NSResponder;
overload selector("firstTextView") = NSTextView;
overload selector("firstUnlaidCharacterIndex") = CULong;
overload selector("firstUnlaidGlyphIndex") = CULong;
overload selector("firstVisibleColumn") = CLong;
overload selector("firstWeekday") = CULong;
overload selector("fixAttachmentAttributeInRange:") = Void, NSRange;
overload selector("fixAttributesInRange:") = Void, NSRange;
overload selector("fixFontAttributeInRange:") = Void, NSRange;
overload selector("fixParagraphStyleAttributeInRange:") = Void, NSRange;
overload selector("fixedFontFamily") = NSString;
overload selector("fixesAttributesLazily") = Bool;
overload selector("flagsChanged:") = Void, NSEvent;
overload selector("flatness") = Double;
overload selector("floatForKey:") = Float, NSString;
overload selector("floatForKey:inTable:") = Float, NSString, NSString;
overload selector("floatValue") = Float;
overload selector("flushBuffer") = Void;
overload selector("flushBufferedKeyEvents") = Void;
overload selector("flushCachedData") = Void;
overload selector("flushGraphics") = Void;
overload selector("flushHostCache") = Void;
overload selector("flushWindow") = Void;
overload selector("flushWindowIfNeeded") = Void;
overload selector("focus") = Void;
overload selector("focusRingType") = CULong;
overload selector("focusView") = NSView;
overload selector("focusedColumn") = CLong;
overload selector("font") = Id;
overload selector("fontAttributes") = NSDictionary;
overload selector("fontAttributesInRange:") = NSDictionary, NSRange;
overload selector("fontDescriptor") = NSFontDescriptor;
overload selector("fontDescriptorByAddingAttributes:") = NSFontDescriptor, NSDictionary;
overload selector("fontDescriptorWithFace:") = NSFontDescriptor, NSString;
overload selector("fontDescriptorWithFamily:") = NSFontDescriptor, NSString;
overload selector("fontDescriptorWithFontAttributes:") = NSFontDescriptor, NSDictionary;
overload selector("fontDescriptorWithMatrix:") = NSFontDescriptor, NSAffineTransform;
overload selector("fontDescriptorWithName:matrix:") = NSFontDescriptor, NSString, NSAffineTransform;
overload selector("fontDescriptorWithName:size:") = NSFontDescriptor, NSString, Double;
overload selector("fontDescriptorWithSize:") = NSFontDescriptor, Double;
overload selector("fontDescriptorWithSymbolicTraits:") = NSFontDescriptor, UInt;
overload selector("fontDescriptorsInCollection:") = NSArray, NSString;
overload selector("fontFamily") = NSString;
overload selector("fontManager:willIncludeFont:") = Bool, Id, NSString;
overload selector("fontMenu:") = NSMenu, Bool;
overload selector("fontName") = NSString;
overload selector("fontNamed:hasTraits:") = Bool, NSString, CULong;
overload selector("fontPanel:") = NSFontPanel, Bool;
overload selector("fontSize") = NSString;
overload selector("fontSizeAdjust") = NSString;
overload selector("fontStretch") = NSString;
overload selector("fontStyle") = NSString;
overload selector("fontVariant") = NSString;
overload selector("fontWeight") = NSString;
overload selector("fontWithDescriptor:size:") = NSFont, NSFontDescriptor, Double;
overload selector("fontWithDescriptor:textTransform:") = NSFont, NSFontDescriptor, NSAffineTransform;
overload selector("fontWithFamily:traits:weight:size:") = NSFont, NSString, CULong, CLong, Double;
overload selector("fontWithName:matrix:") = NSFont, NSString, Pointer[Double];
overload selector("fontWithName:size:") = NSFont, NSString, Double;
overload selector("forceTerminate") = Bool;
overload selector("foregroundColor") = NSColor;
overload selector("forgetWord:") = Void, NSString;
overload selector("form") = DOMHTMLFormElement;
overload selector("formIntersectionWithCharacterSet:") = Void, NSCharacterSet;
overload selector("formUnionWithCharacterSet:") = Void, NSCharacterSet;
overload selector("format") = NSString;
overload selector("formatWidth") = CULong;
overload selector("formatter") = Id;
overload selector("formatterBehavior") = CULong;
overload selector("formattingDictionary") = NSDictionary;
overload selector("formattingStringsFilename") = NSString;
overload selector("forms") = DOMHTMLCollection;
overload selector("forwardInvocation:") = Void, NSInvocation;
overload selector("forwardItem") = WebHistoryItem;
overload selector("forwardListCount") = Int;
overload selector("forwardListWithLimit:") = NSArray, Int;
overload selector("forwardingTargetForSelector:") = Id, SelectorHandle;
overload selector("fractionOfDistanceThroughGlyphForPoint:") = Double, NSPoint;
overload selector("fractionOfDistanceThroughGlyphForPoint:inTextContainer:") = Double, NSPoint, NSTextContainer;
overload selector("fragment") = NSString;
overload selector("frame") = NSRect;
overload selector("frameAutosaveName") = NSString;
overload selector("frameBorder") = NSString;
overload selector("frameBorders") = NSString;
overload selector("frameCenterRotation") = Double;
overload selector("frameElement") = DOMHTMLElement;
overload selector("frameForItemAtIndex:") = NSRect, CULong;
overload selector("frameLength") = CULong;
overload selector("frameLoadDelegate") = Id;
overload selector("frameName") = NSString;
overload selector("frameOfCellAtColumn:row:") = NSRect, CLong, CLong;
overload selector("frameOfColumn:") = NSRect, CLong;
overload selector("frameOfInsideOfColumn:") = NSRect, CLong;
overload selector("frameOfOutlineCellAtRow:") = NSRect, CLong;
overload selector("frameOfRow:inColumn:") = NSRect, CLong, CLong;
overload selector("frameRate") = Float;
overload selector("frameRectForContentRect:") = NSRect, NSRect;
overload selector("frameRectForContentRect:styleMask:") = NSRect, NSRect, CULong;
overload selector("frameRotation") = Double;
overload selector("frameSizeForContentSize:hasHorizontalScroller:hasVerticalScroller:borderType:") = NSSize, NSSize, Bool, Bool, CULong;
overload selector("frameView") = WebFrameView;
overload selector("fromElement") = DOMNode;
overload selector("fullPathForApplication:") = NSString, NSString;
overload selector("function") = NSString;
overload selector("gState") = CLong;
overload selector("generalPasteboard") = NSPasteboard;
overload selector("generateGlyphsForGlyphStorage:desiredNumberOfCharacters:glyphIndex:characterIndex:") = Void, Id, CULong, Pointer[CULong], Pointer[CULong];
overload selector("generatesCalendarDates") = Bool;
overload selector("generatesDecimalNumbers") = Bool;
overload selector("genericCMYKColorSpace") = NSColorSpace;
overload selector("genericGamma22GrayColorSpace") = NSColorSpace;
overload selector("genericGrayColorSpace") = NSColorSpace;
overload selector("genericRGBColorSpace") = NSColorSpace;
overload selector("getAdvancements:forGlyphs:count:") = Void, NSSizeArray, Pointer[UInt], CULong;
overload selector("getAdvancements:forPackedGlyphs:length:") = Void, NSSizeArray, RawPointer, CULong;
overload selector("getArgument:atIndex:") = Void, RawPointer, CLong;
overload selector("getArgumentTypeAtIndex:") = Pointer[CChar], CULong;
overload selector("getAttribute:") = NSString, NSString;
overload selector("getAttributeNS::") = NSString, NSString, NSString;
overload selector("getAttributeNS:localName:") = NSString, NSString, NSString;
overload selector("getAttributeNode:") = DOMAttr, NSString;
overload selector("getAttributeNodeNS::") = DOMAttr, NSString, NSString;
overload selector("getAttributeNodeNS:localName:") = DOMAttr, NSString, NSString;
overload selector("getBitmapDataPlanes:") = Void, Pointer[Pointer[CUChar]];
overload selector("getBoundingRects:forGlyphs:count:") = Void, NSRectArray, Pointer[UInt], CULong;
overload selector("getBuffer:length:") = Bool, Pointer[Pointer[CUChar]], Pointer[CULong];
overload selector("getBytes:") = Void, RawPointer;
overload selector("getBytes:length:") = Void, RawPointer, CULong;
overload selector("getBytes:maxLength:usedLength:encoding:options:range:remainingRange:") = Bool, RawPointer, CULong, Pointer[CULong], CULong, CULong, NSRange, NSRangePointer;
overload selector("getBytes:range:") = Void, RawPointer, NSRange;
overload selector("getCFRunLoop") = CFRunLoopRef;
overload selector("getCString:") = Void, Pointer[CChar];
overload selector("getCString:maxLength:") = Void, Pointer[CChar], CULong;
overload selector("getCString:maxLength:encoding:") = Bool, Pointer[CChar], CULong, CULong;
overload selector("getCString:maxLength:range:remainingRange:") = Void, Pointer[CChar], CULong, NSRange, NSRangePointer;
overload selector("getCharacters:") = Void, Pointer[UShort];
overload selector("getCharacters:range:") = Void, Pointer[UShort], NSRange;
overload selector("getColor:location:atIndex:") = Void, Pointer[NSColor], Pointer[Double], CLong;
overload selector("getComponents:") = Void, Pointer[Double];
overload selector("getCompression:factor:") = Void, Pointer[CULong], Pointer[Float];
overload selector("getComputedStyle::") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload selector("getComputedStyle:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload selector("getCounterValue") = DOMCounter;
overload selector("getCyan:magenta:yellow:black:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
overload selector("getElementById:") = DOMElement, NSString;
overload selector("getElementsByClassName:") = DOMNodeList, NSString;
overload selector("getElementsByName:") = DOMNodeList, NSString;
overload selector("getElementsByTagName:") = DOMNodeList, NSString;
overload selector("getElementsByTagNameNS::") = DOMNodeList, NSString, NSString;
overload selector("getElementsByTagNameNS:localName:") = DOMNodeList, NSString, NSString;
overload selector("getFileSystemInfoForPath:isRemovable:isWritable:isUnmountable:description:type:") = Bool, NSString, Pointer[Bool], Pointer[Bool], Pointer[Bool], Pointer[NSString], Pointer[NSString];
overload selector("getFileSystemRepresentation:maxLength:") = Bool, Pointer[CChar], CULong;
overload selector("getFirstUnlaidCharacterIndex:glyphIndex:") = Void, Pointer[CULong], Pointer[CULong];
overload selector("getFloatValue:") = Float, UShort;
overload selector("getGlyphs:range:") = CULong, Pointer[UInt], NSRange;
overload selector("getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool];
overload selector("getGlyphsInRange:glyphs:characterIndexes:glyphInscriptions:elasticBits:bidiLevels:") = CULong, NSRange, Pointer[UInt], Pointer[CULong], Pointer[CULong], Pointer[Bool], Pointer[CUChar];
overload selector("getHue:saturation:brightness:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
overload selector("getIndexes:") = Void, Pointer[CULong];
overload selector("getIndexes:maxCount:inIndexRange:") = CULong, Pointer[CULong], CULong, NSRangePointer;
overload selector("getInfoForFile:application:type:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
overload selector("getInputStream:outputStream:") = Bool, Pointer[NSInputStream], Pointer[NSOutputStream];
overload selector("getLineDash:count:phase:") = Void, Pointer[Double], Pointer[CLong], Pointer[Double];
overload selector("getLineFragmentInsertionPointsForCharacterAtIndex:alternatePositions:inDisplayOrder:positions:characterIndexes:") = CULong, CULong, Bool, Bool, Pointer[Double], Pointer[CULong];
overload selector("getLineFragmentRect:usedRect:forParagraphSeparatorGlyphRange:atProposedOrigin:") = Void, NSRectPointer, NSRectPointer, NSRange, NSPoint;
overload selector("getLineFragmentRect:usedRect:remainingRect:forStartingGlyphAtIndex:proposedRect:lineSpacing:paragraphSpacingBefore:paragraphSpacingAfter:") = Void, NSRectPointer, NSRectPointer, NSRectPointer, CULong, NSRect, Double, Double, Double;
overload selector("getLineStart:end:contentsEnd:forRange:") = Void, Pointer[CULong], Pointer[CULong], Pointer[CULong], NSRange;
overload selector("getMatchedCSSRules:pseudoElement:") = DOMCSSRuleList, DOMElement, NSString;
overload selector("getMatchedCSSRules:pseudoElement:authorOnly:") = DOMCSSRuleList, DOMElement, NSString, Bool;
overload selector("getModifierState:") = Bool, NSString;
overload selector("getNamedItem:") = DOMNode, NSString;
overload selector("getNamedItemNS::") = DOMNode, NSString, NSString;
overload selector("getNamedItemNS:localName:") = DOMNode, NSString, NSString;
overload selector("getNumberOfRows:columns:") = Void, Pointer[CLong], Pointer[CLong];
overload selector("getObjectValue:forString:errorDescription:") = Bool, Pointer[Id], NSString, Pointer[NSString];
overload selector("getObjectValue:forString:range:error:") = Bool, Pointer[Id], NSString, Pointer[NSRange], Pointer[NSError];
overload selector("getObjects:") = Void, Pointer[Id];
overload selector("getObjects:andKeys:") = Void, Pointer[Id], Pointer[Id];
overload selector("getObjects:range:") = Void, Pointer[Id], NSRange;
overload selector("getOverrideStyle::") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload selector("getOverrideStyle:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload selector("getParagraphStart:end:contentsEnd:forRange:") = Void, Pointer[CULong], Pointer[CULong], Pointer[CULong], NSRange;
overload selector("getPeriodicDelay:interval:") = Void, Pointer[Float], Pointer[Float];
overload selector("getPixel:atX:y:") = Void, Pointer[CULong], CLong, CLong;
overload selector("getPropertyCSSValue:") = DOMCSSValue, NSString;
overload selector("getPropertyPriority:") = NSString, NSString;
overload selector("getPropertyShorthand:") = NSString, NSString;
overload selector("getPropertyValue:") = NSString, NSString;
overload selector("getRGBColorValue") = DOMRGBColor;
overload selector("getRectValue") = DOMRect;
overload selector("getRectsBeingDrawn:count:") = Void, Pointer[Pointer[NSRect]], Pointer[CLong];
overload selector("getRectsExposedDuringLiveResize:count:") = Void, Pointer[NSRect], Pointer[CLong];
overload selector("getRed:green:blue:alpha:") = Void, Pointer[Double], Pointer[Double], Pointer[Double], Pointer[Double];
overload selector("getResourceValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector("getReturnValue:") = Void, RawPointer;
overload selector("getRow:column:forPoint:") = Bool, Pointer[CLong], Pointer[CLong], NSPoint;
overload selector("getRow:column:ofCell:") = Bool, Pointer[CLong], Pointer[CLong], NSCell;
overload selector("getStreamsToHost:port:inputStream:outputStream:") = Void, NSHost, CLong, Pointer[NSInputStream], Pointer[NSOutputStream];
overload selector("getStringValue") = NSString;
overload selector("getTIFFCompressionTypes:count:") = Void, Pointer[Pointer[CULong]], Pointer[CLong];
overload selector("getValue:") = Void, RawPointer;
overload selector("getValues:forAttribute:forVirtualScreen:") = Void, Pointer[Int], UInt, Int;
overload selector("getValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
overload selector("getWhite:alpha:") = Void, Pointer[Double], Pointer[Double];
overload selector("globalContext") = JSGlobalContextRef;
overload selector("globallyUniqueString") = NSString;
overload selector("glyphAtIndex:") = UInt, CULong;
overload selector("glyphAtIndex:isValidIndex:") = UInt, CULong, Pointer[Bool];
overload selector("glyphGenerator") = NSGlyphGenerator;
overload selector("glyphIndexForCharacterAtIndex:") = CULong, CULong;
overload selector("glyphIndexForPoint:inTextContainer:") = CULong, NSPoint, NSTextContainer;
overload selector("glyphIndexForPoint:inTextContainer:fractionOfDistanceThroughGlyph:") = CULong, NSPoint, NSTextContainer, Pointer[Double];
overload selector("glyphInfoWithCharacterIdentifier:collection:baseString:") = NSGlyphInfo, CULong, CULong, NSString;
overload selector("glyphInfoWithGlyph:forFont:baseString:") = NSGlyphInfo, UInt, NSFont, NSString;
overload selector("glyphInfoWithGlyphName:forFont:baseString:") = NSGlyphInfo, NSString, NSFont, NSString;
overload selector("glyphName") = NSString;
overload selector("glyphRangeForBoundingRect:inTextContainer:") = NSRange, NSRect, NSTextContainer;
overload selector("glyphRangeForBoundingRectWithoutAdditionalLayout:inTextContainer:") = NSRange, NSRect, NSTextContainer;
overload selector("glyphRangeForCharacterRange:actualCharacterRange:") = NSRange, NSRange, NSRangePointer;
overload selector("glyphRangeForTextContainer:") = NSRange, NSTextContainer;
overload selector("glyphWithName:") = UInt, NSString;
overload selector("goBack") = Bool;
overload selector("goBack:") = Void, Id;
overload selector("goForward") = Bool;
overload selector("goForward:") = Void, Id;
overload selector("goToBackForwardItem:") = Bool, WebHistoryItem;
overload selector("goToItem:") = Void, WebHistoryItem;
overload selector("gradientType") = CULong;
overload selector("grammarCheckingResultWithRange:details:") = NSTextCheckingResult, NSRange, NSArray;
overload selector("grammarDetails") = NSArray;
overload selector("graphicsContext") = NSGraphicsContext;
overload selector("graphicsContextWithAttributes:") = NSGraphicsContext, NSDictionary;
overload selector("graphicsContextWithBitmapImageRep:") = NSGraphicsContext, NSBitmapImageRep;
overload selector("graphicsContextWithGraphicsPort:flipped:") = NSGraphicsContext, RawPointer, Bool;
overload selector("graphicsContextWithWindow:") = NSGraphicsContext, NSWindow;
overload selector("graphicsPort") = RawPointer;
overload selector("grayColor") = NSColor;
overload selector("green") = DOMCSSPrimitiveValue;
overload selector("greenColor") = NSColor;
overload selector("greenComponent") = Double;
overload selector("gregorianStartDate") = NSDate;
overload selector("gridColor") = NSColor;
overload selector("gridStyleMask") = CULong;
overload selector("groupName") = NSString;
overload selector("groupedResults") = NSArray;
overload selector("groupingAttributes") = NSArray;
overload selector("groupingLevel") = CLong;
overload selector("groupingSeparator") = NSString;
overload selector("groupingSize") = CULong;
overload selector("groupsByEvent") = Bool;
overload selector("guessesForWord:") = NSArray, NSString;
overload selector("guessesForWordRange:inString:language:inSpellDocumentWithTag:") = NSArray, NSRange, NSString, NSString, CLong;
overload selector("handleCloseScriptCommand:") = Id, NSCloseCommand;
overload selector("handleEvent:") = Bool, DOMEvent;
overload varargSelector("handleFailureInFunction:file:lineNumber:description:") = Void, NSString, NSString, CLong, NSString;
overload varargSelector("handleFailureInMethod:object:file:lineNumber:description:") = Void, SelectorHandle, Id, NSString, CLong, NSString;
overload selector("handleMachMessage:") = Void, RawPointer;
overload selector("handleMouseEvent:") = Bool, NSEvent;
overload selector("handlePortMessage:") = Void, NSPortMessage;
overload selector("handlePrintScriptCommand:") = Id, NSScriptCommand;
overload selector("handleQueryWithUnboundKey:") = Id, NSString;
overload selector("handleSaveScriptCommand:") = Id, NSScriptCommand;
overload selector("handleTakeValue:forUnboundKey:") = Void, Id, NSString;
overload selector("handleTextCheckingResults:forRange:types:options:orthography:wordCount:") = Void, NSArray, NSRange, UInt64, NSDictionary, NSOrthography, CLong;
overload selector("hasAlpha") = Bool;
overload selector("hasAttribute:") = Bool, NSString;
overload selector("hasAttributeNS::") = Bool, NSString, NSString;
overload selector("hasAttributeNS:localName:") = Bool, NSString, NSString;
overload selector("hasAttributes") = Bool;
overload selector("hasBytesAvailable") = Bool;
overload selector("hasChanges") = Bool;
overload selector("hasChildNodes") = Bool;
overload selector("hasCloseBox") = Bool;
overload selector("hasDynamicDepthLimit") = Bool;
overload selector("hasEditedDocuments") = Bool;
overload selector("hasFaultForRelationshipNamed:") = Bool, NSString;
overload selector("hasFeature::") = Bool, NSString, NSString;
overload selector("hasFeature:version:") = Bool, NSString, NSString;
overload selector("hasFocus") = Bool;
overload selector("hasHorizontalRuler") = Bool;
overload selector("hasHorizontalScroller") = Bool;
overload selector("hasLearnedWord:") = Bool, NSString;
overload selector("hasMarkedText") = Bool;
overload selector("hasMemberInPlane:") = Bool, CUChar;
overload selector("hasNonContiguousLayout") = Bool;
overload selector("hasOrderedToManyRelationshipForKey:") = Bool, NSString;
overload selector("hasPassword") = Bool;
overload selector("hasPrefix:") = Bool, NSString;
overload selector("hasPropertyForKey:") = Bool, NSString;
overload selector("hasReadablePropertyForKey:") = Bool, NSString;
overload selector("hasShadow") = Bool;
overload selector("hasSpaceAvailable") = Bool;
overload selector("hasSubmenu") = Bool;
overload selector("hasSuffix:") = Bool, NSString;
overload selector("hasThousandSeparators") = Bool;
overload selector("hasTitleBar") = Bool;
overload selector("hasUnappliedChanges") = Bool;
overload selector("hasUnautosavedChanges") = Bool;
overload selector("hasUndoManager") = Bool;
overload selector("hasValidObjectValue") = Bool;
overload selector("hasVerticalRuler") = Bool;
overload selector("hasVerticalScroller") = Bool;
overload selector("hasWritablePropertyForKey:") = Bool, NSString;
overload selector("hash") = CULong;
overload selector("hashFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[CULong]];
overload selector("hashName") = NSString;
overload selector("hashTableWithOptions:") = Id, CULong;
overload selector("hashTableWithWeakObjects") = Id;
overload selector("headIndent") = Double;
overload selector("headerCell") = Id;
overload selector("headerColor") = NSColor;
overload selector("headerLevel") = CLong;
overload selector("headerRectOfColumn:") = NSRect, CLong;
overload selector("headerTextColor") = NSColor;
overload selector("headerToolTip") = NSString;
overload selector("headerView") = NSTableHeaderView;
overload selector("headers") = NSString;
overload selector("height") = NSString;
overload selector("heightAdjustLimit") = Double;
overload selector("heightTracksTextView") = Bool;
overload selector("helpAnchor") = NSString;
overload selector("helpMenu") = NSMenu;
overload selector("helpRequested:") = Void, NSEvent;
overload selector("hide") = Bool;
overload selector("hide:") = Void, Id;
overload selector("hideOtherApplications") = Void;
overload selector("hideOtherApplications:") = Void, Id;
overload selector("hidesEmptyCells") = Bool;
overload selector("hidesOnDeactivate") = Bool;
overload selector("highlight:") = Void, Bool;
overload selector("highlight:withFrame:inView:") = Void, Bool, NSRect, NSView;
overload selector("highlightCell:atRow:column:") = Void, Bool, CLong, CLong;
overload selector("highlightColor") = NSColor;
overload selector("highlightColorInView:") = NSColor, NSView;
overload selector("highlightColorWithFrame:inView:") = NSColor, NSRect, NSView;
overload selector("highlightMode") = Bool;
overload selector("highlightSelectionInClipRect:") = Void, NSRect;
overload selector("highlightWithLevel:") = NSColor, Double;
overload selector("highlightedBranchImage") = NSImage;
overload selector("highlightedItem") = NSMenuItem;
overload selector("highlightedTableColumn") = NSTableColumn;
overload selector("highlightsBy") = CLong;
overload selector("historyAgeInDaysLimit") = Int;
overload selector("historyItemLimit") = Int;
overload selector("hitPart") = CULong;
overload selector("hitTest:") = Id, NSPoint;
overload selector("hitTestForEvent:inRect:ofView:") = CULong, NSEvent, NSRect, NSView;
overload selector("hitTestRect:withImageDestinationRect:context:hints:flipped:") = Bool, NSRect, NSRect, NSGraphicsContext, NSDictionary, Bool;
overload selector("horizontalLineScroll") = Double;
overload selector("horizontalOverflow") = Bool;
overload selector("horizontalPageScroll") = Double;
overload selector("horizontalPagination") = CULong;
overload selector("horizontalRulerView") = NSRulerView;
overload selector("horizontalScroller") = NSScroller;
overload selector("host") = NSString;
overload selector("hostName") = NSString;
overload selector("hostWindow") = NSWindow;
overload selector("hostWithAddress:") = NSHost, NSString;
overload selector("hostWithName:") = NSHost, NSString;
overload selector("hostname") = NSString;
overload selector("hotSpot") = NSPoint;
overload selector("hour") = CLong;
overload selector("hourOfDay") = CLong;
overload selector("href") = NSString;
overload selector("hreflang") = NSString;
overload selector("hspace") = Int;
overload selector("htmlFor") = NSString;
overload selector("httpEquiv") = NSString;
overload selector("hueComponent") = Double;
overload selector("hyphenCharacterForGlyphAtIndex:") = UInt, CULong;
overload selector("hyphenationFactor") = Float;
overload selector("hyphenationFactorForGlyphAtIndex:") = Float, CULong;
overload selector("icon") = NSImage;
overload selector("iconForFile:") = NSImage, NSString;
overload selector("iconForFileType:") = NSImage, NSString;
overload selector("iconForFiles:") = NSImage, NSArray;
overload selector("idName") = NSString;
overload selector("identifier") = Id;
overload selector("identity") = SecIdentityRef;
overload selector("ignore") = Void;
overload selector("ignoreModifierKeysWhileDragging") = Bool;
overload selector("ignoreSpelling:") = Void, Id;
overload selector("ignoreWord:inSpellDocumentWithTag:") = Void, NSString, CLong;
overload selector("ignoredWordsInSpellDocumentWithTag:") = NSArray, CLong;
overload selector("ignoresAlpha") = Bool;
overload selector("ignoresMouseEvents") = Bool;
overload selector("ignoresMultiClick") = Bool;
overload selector("illegalCharacterSet") = Id;
overload selector("image") = NSImage;
overload selector("image:didLoadPartOfRepresentation:withValidRows:") = Void, NSImage, NSImageRep, CLong;
overload selector("image:didLoadRepresentation:withStatus:") = Void, NSImage, NSImageRep, CULong;
overload selector("image:didLoadRepresentationHeader:") = Void, NSImage, NSImageRep;
overload selector("image:willLoadRepresentation:") = Void, NSImage, NSImageRep;
overload selector("imageAlignment") = CULong;
overload selector("imageByApplyingTransform:") = CIImage, CGAffineTransform;
overload selector("imageByCroppingToRect:") = CIImage, CGRect;
overload selector("imageDidNotDraw:inRect:") = NSImage, Id, NSRect;
overload selector("imageDimsWhenDisabled") = Bool;
overload selector("imageFileTypes") = NSArray;
overload selector("imageForSegment:") = NSImage, CLong;
overload selector("imageFrameStyle") = CULong;
overload selector("imageInterpolation") = CULong;
overload selector("imageNamed:") = Id, NSString;
overload selector("imageOrigin") = NSPoint;
overload selector("imagePasteboardTypes") = NSArray;
overload selector("imagePosition") = CULong;
overload selector("imageRectForBounds:") = NSRect, NSRect;
overload selector("imageRectForPaper:") = NSRect, NSString;
overload selector("imageRectInRuler") = NSRect;
overload selector("imageRepClassForData:") = Id, NSData;
overload selector("imageRepClassForFileType:") = Id, NSString;
overload selector("imageRepClassForPasteboardType:") = Id, NSString;
overload selector("imageRepClassForType:") = Id, NSString;
overload selector("imageRepWithCIImage:") = Id, CIImage;
overload selector("imageRepWithContentsOfFile:") = Id, NSString;
overload selector("imageRepWithContentsOfURL:") = Id, NSURL;
overload selector("imageRepWithData:") = Id, NSData;
overload selector("imageRepWithPasteboard:") = Id, NSPasteboard;
overload selector("imageRepsWithContentsOfFile:") = NSArray, NSString;
overload selector("imageRepsWithContentsOfURL:") = NSArray, NSURL;
overload selector("imageRepsWithData:") = NSArray, NSData;
overload selector("imageRepsWithPasteboard:") = NSArray, NSPasteboard;
overload selector("imageScaling") = CULong;
overload selector("imageScalingForSegment:") = CULong, CLong;
overload selector("imageTypes") = NSArray;
overload selector("imageUnfilteredFileTypes") = NSArray;
overload selector("imageUnfilteredPasteboardTypes") = NSArray;
overload selector("imageUnfilteredTypes") = NSArray;
overload selector("imageWidth") = Double;
overload selector("imageWithBitmapData:bytesPerRow:size:format:colorSpace:") = CIImage, NSData, CULong, CGSize, Int, CGColorSpaceRef;
overload selector("imageWithCGImage:") = CIImage, CGImageRef;
overload selector("imageWithCGImage:options:") = CIImage, CGImageRef, NSDictionary;
overload selector("imageWithCGLayer:") = CIImage, CGLayerRef;
overload selector("imageWithCGLayer:options:") = CIImage, CGLayerRef, NSDictionary;
overload selector("imageWithCVImageBuffer:") = CIImage, CVImageBufferRef;
overload selector("imageWithCVImageBuffer:options:") = CIImage, CVImageBufferRef, NSDictionary;
overload selector("imageWithColor:") = CIImage, CIColor;
overload selector("imageWithContentsOfURL:") = CIImage, NSURL;
overload selector("imageWithContentsOfURL:options:") = CIImage, NSURL, NSDictionary;
overload selector("imageWithData:") = CIImage, NSData;
overload selector("imageWithData:options:") = CIImage, NSData, NSDictionary;
overload selector("imageWithIOSurface:") = CIImage, IOSurfaceRef;
overload selector("imageWithIOSurface:options:") = CIImage, IOSurfaceRef, NSDictionary;
overload selector("imageWithTexture:size:flipped:colorSpace:") = CIImage, UInt, CGSize, Bool, CGColorSpaceRef;
overload selector("imageablePageBounds") = NSRect;
overload selector("images") = DOMHTMLCollection;
overload selector("implementation") = DOMImplementation;
overload selector("implementationClassName") = NSString;
overload selector("importNode::") = DOMNode, DOMNode, Bool;
overload selector("importNode:deep:") = DOMNode, DOMNode, Bool;
overload selector("importStoreWithIdentifier:fromExternalRecordsDirectory:toURL:options:withType:error:") = NSPersistentStore, NSString, NSURL, NSURL, NSDictionary, NSString, Pointer[NSError];
overload selector("importsGraphics") = Bool;
overload selector("inLiveResize") = Bool;
overload selector("includedKeys") = NSArray;
overload selector("includesPendingChanges") = Bool;
overload selector("includesPropertyValues") = Bool;
overload selector("includesSubentities") = Bool;
overload selector("increaseLengthBy:") = Void, CULong;
overload selector("increment") = Double;
overload selector("incrementBy:") = Void, Double;
overload selector("incrementalLoadFromData:complete:") = CLong, NSData, Bool;
overload selector("indent:") = Void, Id;
overload selector("indentationLevel") = CLong;
overload selector("indentationMarkerFollowsCell") = Bool;
overload selector("indentationPerLevel") = Double;
overload selector("independentConversationQueueing") = Bool;
overload selector("indeterminate") = Bool;
overload selector("index") = CULong;
overload selector("indexAtPosition:") = CULong, CULong;
overload selector("indexGreaterThanIndex:") = CULong, CULong;
overload selector("indexGreaterThanOrEqualToIndex:") = CULong, CULong;
overload selector("indexInRange:options:passingTest:") = CULong, NSRange, CULong, UnknownType;
overload selector("indexLessThanIndex:") = CULong, CULong;
overload selector("indexLessThanOrEqualToIndex:") = CULong, CULong;
overload selector("indexOfCellWithTag:") = CLong, CLong;
overload selector("indexOfItem:") = CLong, NSMenuItem;
overload selector("indexOfItemWithObjectValue:") = CLong, Id;
overload selector("indexOfItemWithRepresentedObject:") = CLong, Id;
overload selector("indexOfItemWithSubmenu:") = CLong, NSMenu;
overload selector("indexOfItemWithTag:") = CLong, CLong;
overload selector("indexOfItemWithTarget:andAction:") = CLong, Id, SelectorHandle;
overload selector("indexOfItemWithTitle:") = CLong, NSString;
overload selector("indexOfObject:") = CULong, Id;
overload selector("indexOfObject:inRange:") = CULong, Id, NSRange;
overload selector("indexOfObject:inSortedRange:options:usingComparator:") = CULong, Id, NSRange, CULong, NSComparator;
overload selector("indexOfObjectAtIndexes:options:passingTest:") = CULong, NSIndexSet, CULong, UnknownType;
overload selector("indexOfObjectIdenticalTo:") = CULong, Id;
overload selector("indexOfObjectIdenticalTo:inRange:") = CULong, Id, NSRange;
overload selector("indexOfObjectPassingTest:") = CULong, UnknownType;
overload selector("indexOfObjectWithOptions:passingTest:") = CULong, CULong, UnknownType;
overload selector("indexOfPasteboardItem:") = CULong, NSPasteboardItem;
overload selector("indexOfResult:") = CULong, Id;
overload selector("indexOfSelectedItem") = CLong;
overload selector("indexOfTabViewItem:") = CLong, NSTabViewItem;
overload selector("indexOfTabViewItemWithIdentifier:") = CLong, Id;
overload selector("indexOfTickMarkAtPoint:") = CLong, NSPoint;
overload selector("indexPassingTest:") = CULong, UnknownType;
overload selector("indexPath") = NSIndexPath;
overload selector("indexPathByAddingIndex:") = NSIndexPath, CULong;
overload selector("indexPathByRemovingLastIndex") = NSIndexPath;
overload selector("indexPathForColumn:") = NSIndexPath, CLong;
overload selector("indexPathWithIndex:") = Id, CULong;
overload selector("indexPathWithIndexes:length:") = Id, Pointer[CULong], CULong;
overload selector("indexSet") = Id;
overload selector("indexSetWithIndex:") = Id, CULong;
overload selector("indexSetWithIndexesInRange:") = Id, NSRange;
overload selector("indexWithOptions:passingTest:") = CULong, CULong, UnknownType;
overload selector("indexesInRange:options:passingTest:") = NSIndexSet, NSRange, CULong, UnknownType;
overload selector("indexesOfObjectsAtIndexes:options:passingTest:") = NSIndexSet, NSIndexSet, CULong, UnknownType;
overload selector("indexesOfObjectsPassingTest:") = NSIndexSet, UnknownType;
overload selector("indexesOfObjectsWithOptions:passingTest:") = NSIndexSet, CULong, UnknownType;
overload selector("indexesPassingTest:") = NSIndexSet, UnknownType;
overload selector("indexesWithOptions:passingTest:") = NSIndexSet, CULong, UnknownType;
overload selector("indicatorImageInTableColumn:") = NSImage, NSTableColumn;
overload selector("indicesOfObjectsByEvaluatingObjectSpecifier:") = NSArray, NSScriptObjectSpecifier;
overload selector("indicesOfObjectsByEvaluatingWithContainer:count:") = Pointer[CLong], Id, Pointer[CLong];
overload selector("inferredMappingModelForSourceModel:destinationModel:error:") = NSMappingModel, NSManagedObjectModel, NSManagedObjectModel, Pointer[NSError];
overload selector("infoDictionary") = NSDictionary;
overload selector("infoForBinding:") = NSDictionary, NSString;
overload selector("informativeText") = NSString;
overload selector("init") = Id;
overload selector("initAndTestWithTests:") = Id, NSArray;
overload selector("initByReferencingFile:") = Id, NSString;
overload selector("initByReferencingURL:") = Id, NSURL;
overload selector("initByResolvingBookmarkData:options:relativeToURL:bookmarkDataIsStale:error:") = Id, NSData, CULong, NSURL, Pointer[Bool], Pointer[NSError];
overload selector("initDirectoryWithFileWrappers:") = Id, NSDictionary;
overload selector("initEvent:::") = Void, NSString, Bool, Bool;
overload selector("initEvent:canBubbleArg:cancelableArg:") = Void, NSString, Bool, Bool;
overload selector("initFileURLWithPath:") = Id, NSString;
overload selector("initFileURLWithPath:isDirectory:") = Id, NSString, Bool;
overload selector("initForIncrementalLoad") = Id;
overload selector("initForReadingWithData:") = Id, NSData;
overload selector("initForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
overload selector("initForWritingWithMutableData:") = Id, NSMutableData;
overload selector("initImageCell:") = Id, NSImage;
overload selector("initKeyboardEvent:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:") = Void, NSString, Bool, Bool, DOMAbstractView, NSString, UInt, Bool, Bool, Bool, Bool;
overload selector("initKeyboardEvent:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:altGraphKey:") = Void, NSString, Bool, Bool, DOMAbstractView, NSString, UInt, Bool, Bool, Bool, Bool, Bool;
overload selector("initListDescriptor") = Id;
overload selector("initMouseEvent:::::::::::::::") = Void, NSString, Bool, Bool, DOMAbstractView, Int, Int, Int, Int, Int, Bool, Bool, Bool, Bool, UShort, Id;
overload selector("initMouseEvent:canBubble:cancelable:view:detail:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:button:relatedTarget:") = Void, NSString, Bool, Bool, DOMAbstractView, Int, Int, Int, Int, Int, Bool, Bool, Bool, Bool, UShort, Id;
overload selector("initMutationEvent::::::::") = Void, NSString, Bool, Bool, DOMNode, NSString, NSString, NSString, UShort;
overload selector("initMutationEvent:canBubble:cancelable:relatedNode:prevValue:newValue:attrName:attrChange:") = Void, NSString, Bool, Bool, DOMNode, NSString, NSString, NSString, UShort;
overload selector("initNotTestWithTest:") = Id, NSScriptWhoseTest;
overload selector("initOrTestWithTests:") = Id, NSArray;
overload selector("initOverflowEvent:horizontalOverflow:verticalOverflow:") = Void, UShort, Bool, Bool;
overload selector("initRecordDescriptor") = Id;
overload selector("initRegularFileWithContents:") = Id, NSData;
overload selector("initRemoteWithProtocolFamily:socketType:protocol:address:") = Id, Int, Int, Int, NSData;
overload selector("initRemoteWithTCPPort:host:") = Id, UShort, NSString;
overload selector("initSymbolicLinkWithDestination:") = Id, NSString;
overload selector("initSymbolicLinkWithDestinationURL:") = Id, NSURL;
overload selector("initTextCell:") = Id, NSString;
overload selector("initTextCell:pullsDown:") = Id, NSString, Bool;
overload selector("initToBuffer:capacity:") = Id, Pointer[CUChar], CULong;
overload selector("initToFileAtPath:append:") = Id, NSString, Bool;
overload selector("initToMemory") = Id;
overload selector("initUIEvent:::::") = Void, NSString, Bool, Bool, DOMAbstractView, Int;
overload selector("initUIEvent:canBubble:cancelable:view:detail:") = Void, NSString, Bool, Bool, DOMAbstractView, Int;
overload selector("initWheelEvent:wheelDeltaY:view:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:") = Void, Int, Int, DOMAbstractView, Int, Int, Int, Int, Bool, Bool, Bool, Bool;
overload selector("initWithAEDescNoCopy:") = Id, Pointer[AEDesc];
overload selector("initWithArray:") = Id, NSArray;
overload selector("initWithArray:copyItems:") = Id, NSArray, Bool;
overload selector("initWithAttributedString:") = Id, NSAttributedString;
overload selector("initWithAttributes:") = Id, Pointer[UInt];
overload selector("initWithAuthenticationChallenge:sender:") = Id, NSURLAuthenticationChallenge, Id;
overload selector("initWithBitmapData:bytesPerRow:size:format:colorSpace:") = Id, NSData, CULong, CGSize, Int, CGColorSpaceRef;
overload selector("initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bitmapFormat:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], CLong, CLong, CLong, CLong, Bool, Bool, NSString, CULong, CLong, CLong;
overload selector("initWithBitmapDataPlanes:pixelsWide:pixelsHigh:bitsPerSample:samplesPerPixel:hasAlpha:isPlanar:colorSpaceName:bytesPerRow:bitsPerPixel:") = Id, Pointer[Pointer[CUChar]], CLong, CLong, CLong, CLong, Bool, Bool, NSString, CLong, CLong;
overload selector("initWithBitmapImageRep:") = Id, NSBitmapImageRep;
overload selector("initWithBool:") = Id, Bool;
overload selector("initWithBytes:length:") = Id, RawPointer, CULong;
overload selector("initWithBytes:length:encoding:") = Id, RawPointer, CULong, CULong;
overload selector("initWithBytes:objCType:") = Id, RawPointer, Pointer[CChar];
overload selector("initWithBytesNoCopy:length:") = Id, RawPointer, CULong;
overload selector("initWithBytesNoCopy:length:encoding:freeWhenDone:") = Id, RawPointer, CULong, CULong, Bool;
overload selector("initWithBytesNoCopy:length:freeWhenDone:") = Id, RawPointer, CULong, Bool;
overload selector("initWithCGColor:") = Id, CGColorRef;
overload selector("initWithCGColorSpace:") = Id, CGColorSpaceRef;
overload selector("initWithCGImage:") = Id, CGImageRef;
overload selector("initWithCGImage:options:") = Id, CGImageRef, NSDictionary;
overload selector("initWithCGImage:size:") = Id, CGImageRef, NSSize;
overload selector("initWithCGLContextObj:") = Id, RawPointer;
overload selector("initWithCGLPBufferObj:") = Id, RawPointer;
overload selector("initWithCGLPixelFormatObj:") = Id, RawPointer;
overload selector("initWithCGLayer:") = Id, CGLayerRef;
overload selector("initWithCGLayer:options:") = Id, CGLayerRef, NSDictionary;
overload selector("initWithCIImage:") = Id, CIImage;
overload selector("initWithCString:") = Id, Pointer[CChar];
overload selector("initWithCString:encoding:") = Id, Pointer[CChar], CULong;
overload selector("initWithCString:length:") = Id, Pointer[CChar], CULong;
overload selector("initWithCStringNoCopy:length:freeWhenDone:") = Id, Pointer[CChar], CULong, Bool;
overload selector("initWithCVImageBuffer:") = Id, CVImageBufferRef;
overload selector("initWithCVImageBuffer:options:") = Id, CVImageBufferRef, NSDictionary;
overload selector("initWithCalendarIdentifier:") = Id, NSString;
overload selector("initWithCapacity:") = Id, CULong;
overload selector("initWithChar:") = Id, CChar;
overload selector("initWithCharacters:length:") = Id, Pointer[UShort], CULong;
overload selector("initWithCharactersNoCopy:length:freeWhenDone:") = Id, Pointer[UShort], CULong, Bool;
overload selector("initWithClient:") = Id, Id;
overload selector("initWithCoder:") = Id, NSCoder;
overload selector("initWithColor:") = Id, NSColor;
overload selector("initWithColorSyncProfile:") = Id, RawPointer;
overload selector("initWithColors:") = Id, NSArray;
overload selector("initWithColors:atLocations:colorSpace:") = Id, NSArray, Pointer[Double], NSColorSpace;
overload varargSelector("initWithColorsAndLocations:") = Id, NSColor;
overload selector("initWithCommandDescription:") = Id, NSScriptCommandDescription;
overload selector("initWithCompoundTypes:") = Id, NSArray;
overload selector("initWithCondition:") = Id, CLong;
overload selector("initWithContainerClassDescription:containerSpecifier:key:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString;
overload selector("initWithContainerClassDescription:containerSpecifier:key:index:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, CLong;
overload selector("initWithContainerClassDescription:containerSpecifier:key:name:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSString;
overload selector("initWithContainerClassDescription:containerSpecifier:key:relativePosition:baseSpecifier:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, CULong, NSScriptObjectSpecifier;
overload selector("initWithContainerClassDescription:containerSpecifier:key:startSpecifier:endSpecifier:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSScriptObjectSpecifier, NSScriptObjectSpecifier;
overload selector("initWithContainerClassDescription:containerSpecifier:key:test:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, NSScriptWhoseTest;
overload selector("initWithContainerClassDescription:containerSpecifier:key:uniqueID:") = Id, NSScriptClassDescription, NSScriptObjectSpecifier, NSString, Id;
overload selector("initWithContainerSize:") = Id, NSSize;
overload selector("initWithContainerSpecifier:key:") = Id, NSScriptObjectSpecifier, NSString;
overload selector("initWithContent:") = Id, Id;
overload selector("initWithContentRect:styleMask:backing:defer:") = Id, NSRect, CULong, CULong, Bool;
overload selector("initWithContentRect:styleMask:backing:defer:screen:") = Id, NSRect, CULong, CULong, Bool, NSScreen;
overload selector("initWithContentSize:preferredEdge:") = Id, NSSize, CULong;
overload selector("initWithContentsOfFile:") = Id, NSString;
overload selector("initWithContentsOfFile:byReference:") = Id, NSString, Bool;
overload selector("initWithContentsOfFile:encoding:error:") = Id, NSString, CULong, Pointer[NSError];
overload selector("initWithContentsOfFile:ofType:") = Id, NSString, NSString;
overload selector("initWithContentsOfFile:options:error:") = Id, NSString, CULong, Pointer[NSError];
overload selector("initWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[CULong], Pointer[NSError];
overload selector("initWithContentsOfMappedFile:") = Id, NSString;
overload selector("initWithContentsOfURL:") = Id, NSURL;
overload selector("initWithContentsOfURL:byReference:") = Id, NSURL, Bool;
overload selector("initWithContentsOfURL:encoding:error:") = Id, NSURL, CULong, Pointer[NSError];
overload selector("initWithContentsOfURL:error:") = Id, NSURL, Pointer[NSDictionary];
overload selector("initWithContentsOfURL:ofType:") = Id, NSURL, NSString;
overload selector("initWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
overload selector("initWithContentsOfURL:options:") = Id, NSURL, NSDictionary;
overload selector("initWithContentsOfURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
overload selector("initWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[CULong], Pointer[NSError];
overload selector("initWithData:") = Id, NSData;
overload selector("initWithData:URL:MIMEType:textEncodingName:frameName:") = Id, NSData, NSURL, NSString, NSString, NSString;
overload selector("initWithData:encoding:") = Id, NSData, CULong;
overload selector("initWithData:options:") = Id, NSData, NSDictionary;
overload selector("initWithData:options:documentAttributes:error:") = Id, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
overload selector("initWithData:options:error:") = Id, NSData, CULong, Pointer[NSError];
overload selector("initWithDataIgnoringOrientation:") = Id, NSData;
overload selector("initWithDateFormat:allowNaturalLanguage:") = Id, NSString, Bool;
overload selector("initWithDecimal:") = Id, NSDecimal;
overload selector("initWithDefaults:initialValues:") = Id, NSUserDefaults, NSDictionary;
overload selector("initWithDelegate:name:") = Id, Id, NSString;
overload selector("initWithDescriptorType:bytes:length:") = Id, UInt, RawPointer, CULong;
overload selector("initWithDescriptorType:data:") = Id, UInt, NSData;
overload selector("initWithDictionary:") = Id, NSDictionary;
overload selector("initWithDictionary:copyItems:") = Id, NSDictionary, Bool;
overload selector("initWithDocFormat:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
overload selector("initWithDomain:code:userInfo:") = Id, NSString, CLong, NSDictionary;
overload selector("initWithDomain:type:name:") = Id, NSString, NSString, NSString;
overload selector("initWithDomain:type:name:port:") = Id, NSString, NSString, NSString, Int;
overload selector("initWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
overload selector("initWithDouble:") = Id, Double;
overload selector("initWithDrawSelector:delegate:") = Id, SelectorHandle, Id;
overload selector("initWithDuration:animationCurve:") = Id, Double, CULong;
overload selector("initWithEntity:insertIntoManagedObjectContext:") = Id, NSEntityDescription, NSManagedObjectContext;
overload selector("initWithEventClass:eventID:targetDescriptor:returnID:transactionID:") = Id, UInt, UInt, NSAppleEventDescriptor, Short, Int;
overload selector("initWithExpressionType:") = Id, CULong;
overload selector("initWithFileAtPath:") = Id, NSString;
overload selector("initWithFileDescriptor:") = Id, Int;
overload selector("initWithFileDescriptor:closeOnDealloc:") = Id, Int, Bool;
overload selector("initWithFileWrapper:") = Id, NSFileWrapper;
overload selector("initWithFireDate:interval:target:selector:userInfo:repeats:") = Id, NSDate, Double, Id, SelectorHandle, Id, Bool;
overload selector("initWithFloat:") = Id, Float;
overload selector("initWithFocusedViewRect:") = Id, NSRect;
overload selector("initWithFontAttributes:") = Id, NSDictionary;
overload varargSelector("initWithFormat:") = Id, NSString;
overload selector("initWithFormat:arguments:") = Id, NSString, Pointer[__va_list_tag];
overload varargSelector("initWithFormat:locale:") = Id, NSString, Id;
overload selector("initWithFormat:locale:arguments:") = Id, NSString, Id, Pointer[__va_list_tag];
overload selector("initWithFormat:shareContext:") = Id, NSOpenGLPixelFormat, NSOpenGLContext;
overload selector("initWithFrame:") = Id, NSRect;
overload selector("initWithFrame:frameName:groupName:") = Id, NSRect, NSString, NSString;
overload selector("initWithFrame:mode:cellClass:numberOfRows:numberOfColumns:") = Id, NSRect, CULong, Id, CLong, CLong;
overload selector("initWithFrame:mode:prototype:numberOfRows:numberOfColumns:") = Id, NSRect, CULong, NSCell, CLong, CLong;
overload selector("initWithFrame:pixelFormat:") = Id, NSRect, NSOpenGLPixelFormat;
overload selector("initWithFrame:pullsDown:") = Id, NSRect, Bool;
overload selector("initWithFrame:textContainer:") = Id, NSRect, NSTextContainer;
overload selector("initWithHTML:baseURL:documentAttributes:") = Id, NSData, NSURL, Pointer[NSDictionary];
overload selector("initWithHTML:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
overload selector("initWithHTML:options:documentAttributes:") = Id, NSData, NSDictionary, Pointer[NSDictionary];
overload selector("initWithHost:port:protocol:realm:authenticationMethod:") = Id, NSString, CLong, NSString, NSString, NSString;
overload selector("initWithICCProfileData:") = Id, NSData;
overload selector("initWithIOSurface:") = Id, IOSurfaceRef;
overload selector("initWithIOSurface:options:") = Id, IOSurfaceRef, NSDictionary;
overload selector("initWithIconRef:") = Id, IconRef;
overload selector("initWithIdentifier:") = Id, Id;
overload selector("initWithIdentity:certificates:persistence:") = Id, SecIdentityRef, NSArray, CULong;
overload selector("initWithImage:foregroundColorHint:backgroundColorHint:hotSpot:") = Id, NSImage, NSColor, NSColor, NSPoint;
overload selector("initWithImage:hotSpot:") = Id, NSImage, NSPoint;
overload selector("initWithIndex:") = Id, CULong;
overload selector("initWithIndexSet:") = Id, NSIndexSet;
overload selector("initWithIndexes:length:") = Id, Pointer[CULong], CULong;
overload selector("initWithIndexesInRange:") = Id, NSRange;
overload selector("initWithInt:") = Id, Int;
overload selector("initWithInteger:") = Id, CLong;
overload selector("initWithInvocation:") = Id, NSInvocation;
overload selector("initWithItemIdentifier:") = Id, NSString;
overload selector("initWithKey:ascending:") = Id, NSString, Bool;
overload selector("initWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
overload selector("initWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
overload selector("initWithKeyOptions:valueOptions:capacity:") = Id, CULong, CULong, CULong;
overload selector("initWithKeyPointerFunctions:valuePointerFunctions:capacity:") = Id, NSPointerFunctions, NSPointerFunctions, CULong;
overload selector("initWithKind:") = Id, CULong;
overload selector("initWithKind:options:") = Id, CULong, CULong;
overload selector("initWithLayer:") = Id, Id;
overload selector("initWithLeftExpression:rightExpression:customSelector:") = Id, NSExpression, NSExpression, SelectorHandle;
overload selector("initWithLeftExpression:rightExpression:modifier:type:options:") = Id, NSExpression, NSExpression, CULong, CULong, CULong;
overload selector("initWithLeftExpressions:rightExpressionAttributeType:modifier:operators:options:") = Id, NSArray, CULong, CULong, NSArray, CULong;
overload selector("initWithLeftExpressions:rightExpressions:modifier:operators:options:") = Id, NSArray, NSArray, CULong, NSArray, CULong;
overload selector("initWithLength:") = Id, CULong;
overload selector("initWithLevelIndicatorStyle:") = Id, CULong;
overload selector("initWithLocal:connection:") = Id, Id, NSConnection;
overload selector("initWithLocaleIdentifier:") = Id, NSString;
overload selector("initWithLong:") = Id, CLong;
overload selector("initWithLongLong:") = Id, Int64;
overload selector("initWithMachPort:") = Id, UInt;
overload selector("initWithMachPort:options:") = Id, UInt, CULong;
overload selector("initWithMainResource:subresources:subframeArchives:") = Id, WebResource, NSArray, NSArray;
overload selector("initWithManagedObjectModel:") = Id, NSManagedObjectModel;
overload selector("initWithMantissa:exponent:isNegative:") = Id, UInt64, Short, Bool;
overload selector("initWithMarkerFormat:options:") = Id, NSString, CULong;
overload selector("initWithMemoryCapacity:diskCapacity:diskPath:") = Id, CULong, CULong, NSString;
overload selector("initWithMovie:") = Id, QTMovie;
overload selector("initWithName:") = Id, NSString;
overload selector("initWithName:URI:") = Id, NSString, NSString;
overload selector("initWithName:data:") = Id, NSString, NSData;
overload selector("initWithName:fromFile:") = Id, NSString, NSString;
overload selector("initWithName:host:") = NSInputManager, NSString, NSString;
overload selector("initWithName:reason:userInfo:") = Id, NSString, NSString, NSDictionary;
overload selector("initWithName:stringValue:") = Id, NSString, NSString;
overload selector("initWithName:webFrameView:webView:") = Id, NSString, WebFrameView, WebView;
overload selector("initWithNibName:bundle:") = Id, NSString, NSBundle;
overload selector("initWithNibNamed:bundle:") = Id, NSString, NSBundle;
overload selector("initWithNotificationCenter:") = Id, NSNotificationCenter;
overload selector("initWithObjectID:") = Id, NSManagedObjectID;
overload selector("initWithObjectSpecifier:comparisonOperator:testObject:") = Id, NSScriptObjectSpecifier, CULong, Id;
overload varargSelector("initWithObjects:") = Id, Id;
overload selector("initWithObjects:count:") = Id, Pointer[Id], CULong;
overload selector("initWithObjects:forKeys:") = Id, NSArray, NSArray;
overload selector("initWithObjects:forKeys:count:") = Id, Pointer[Id], Pointer[Id], CULong;
overload varargSelector("initWithObjectsAndKeys:") = Id, Id;
overload selector("initWithOptions:") = Id, CULong;
overload selector("initWithOptions:capacity:") = Id, CULong, CULong;
overload selector("initWithPasteboard:") = Id, NSPasteboard;
overload selector("initWithPasteboardPropertyList:ofType:") = Id, Id, NSString;
overload selector("initWithPath:") = Id, NSString;
overload selector("initWithPath:documentAttributes:") = Id, NSString, Pointer[NSDictionary];
overload selector("initWithPersistentStoreCoordinator:configurationName:URL:options:") = Id, NSPersistentStoreCoordinator, NSString, NSURL, NSDictionary;
overload selector("initWithPickerMask:colorPanel:") = Id, CULong, NSColorPanel;
overload selector("initWithPointerFunctions:") = Id, NSPointerFunctions;
overload selector("initWithPointerFunctions:capacity:") = Id, NSPointerFunctions, CULong;
overload selector("initWithPosition:objectSpecifier:") = Id, CULong, NSScriptObjectSpecifier;
overload selector("initWithProperties:") = Id, NSDictionary;
overload selector("initWithProtectionSpace:proposedCredential:previousFailureCount:failureResponse:error:sender:") = Id, NSURLProtectionSpace, NSURLCredential, CLong, NSURLResponse, NSError, Id;
overload selector("initWithProtocolFamily:socketType:protocol:address:") = Id, Int, Int, Int, NSData;
overload selector("initWithProtocolFamily:socketType:protocol:socket:") = Id, Int, Int, Int, Int;
overload selector("initWithProxyHost:port:type:realm:authenticationMethod:") = Id, NSString, CLong, NSString, NSString, NSString;
overload selector("initWithRTF:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
overload selector("initWithRTFD:documentAttributes:") = Id, NSData, Pointer[NSDictionary];
overload selector("initWithRTFDFileWrapper:documentAttributes:") = Id, NSFileWrapper, Pointer[NSDictionary];
overload selector("initWithReceivePort:sendPort:") = Id, NSPort, NSPort;
overload selector("initWithReceivePort:sendPort:components:") = Id, NSPort, NSPort, NSArray;
overload selector("initWithRect:options:owner:userInfo:") = Id, NSRect, CULong, Id, NSDictionary;
overload selector("initWithRepresentedObject:") = Id, Id;
overload selector("initWithRequest:") = Id, NSURLRequest;
overload selector("initWithRequest:cachedResponse:client:") = Id, NSURLRequest, NSCachedURLResponse, Id;
overload selector("initWithRequest:delegate:") = Id, NSURLRequest, Id;
overload selector("initWithRequest:delegate:startImmediately:") = Id, NSURLRequest, Id, Bool;
overload selector("initWithResponse:data:") = Id, NSURLResponse, NSData;
overload selector("initWithResponse:data:userInfo:storagePolicy:") = Id, NSURLResponse, NSData, NSDictionary, CULong;
overload selector("initWithResumeData:delegate:path:") = Id, NSData, Id, NSString;
overload selector("initWithRootElement:") = Id, NSXMLElement;
overload selector("initWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:") = Id, CULong, Short, Bool, Bool, Bool, Bool;
overload selector("initWithRulerView:markerLocation:image:imageOrigin:") = Id, NSRulerView, Double, NSImage, NSPoint;
overload selector("initWithScheme:host:path:") = Id, NSString, NSString, NSString;
overload selector("initWithScrollView:orientation:") = Id, NSScrollView, CULong;
overload selector("initWithSendPort:receivePort:components:") = Id, NSPort, NSPort, NSArray;
overload selector("initWithSerializedRepresentation:") = Id, NSData;
overload selector("initWithSet:") = Id, NSSet;
overload selector("initWithSet:copyItems:") = Id, NSSet, Bool;
overload selector("initWithShort:") = Id, Short;
overload selector("initWithSize:") = Id, NSSize;
overload selector("initWithSize:depth:separate:alpha:") = Id, NSSize, Int, Bool, Bool;
overload selector("initWithSource:") = Id, NSString;
overload selector("initWithSourceModel:destinationModel:") = Id, NSManagedObjectModel, NSManagedObjectModel;
overload selector("initWithStartingColor:endingColor:") = Id, NSColor, NSColor;
overload selector("initWithStorageLocation:") = Id, NSURL;
overload selector("initWithString:") = Id, NSString;
overload selector("initWithString:attributes:") = Id, NSString, NSDictionary;
overload selector("initWithString:calendarFormat:") = Id, NSString, NSString;
overload selector("initWithString:calendarFormat:locale:") = Id, NSString, NSString, Id;
overload selector("initWithString:locale:") = Id, NSString, Id;
overload selector("initWithString:relativeToURL:") = Id, NSString, NSURL;
overload selector("initWithSuiteName:className:dictionary:") = Id, NSString, NSString, NSDictionary;
overload selector("initWithSuiteName:commandName:dictionary:") = Id, NSString, NSString, NSDictionary;
overload selector("initWithTCPPort:") = Id, UShort;
overload selector("initWithTable:startingRow:rowSpan:startingColumn:columnSpan:") = Id, NSTextTable, CLong, CLong, CLong, CLong;
overload selector("initWithTarget:connection:") = Id, Id, NSConnection;
overload selector("initWithTarget:protocol:") = Id, NSObject, Id;
overload selector("initWithTarget:selector:object:") = Id, Id, SelectorHandle, Id;
overload selector("initWithTextAlignment:location:options:") = Id, CULong, Double, NSDictionary;
overload selector("initWithTexture:size:flipped:colorSpace:") = Id, UInt, CGSize, Bool, CGColorSpaceRef;
overload selector("initWithTextureTarget:textureInternalFormat:textureMaxMipMapLevel:pixelsWide:pixelsHigh:") = Id, UInt, UInt, Int, Int, Int;
overload selector("initWithTimeInterval:sinceDate:") = Id, Double, NSDate;
overload selector("initWithTimeIntervalSince1970:") = Id, Double;
overload selector("initWithTimeIntervalSinceNow:") = Id, Double;
overload selector("initWithTimeIntervalSinceReferenceDate:") = Id, Double;
overload selector("initWithTitle:") = Id, NSString;
overload selector("initWithTitle:action:keyEquivalent:") = Id, NSString, SelectorHandle, NSString;
overload selector("initWithTransform:") = Id, NSAffineTransform;
overload selector("initWithTrust:") = Id, SecTrustRef;
overload selector("initWithType:error:") = Id, NSString, Pointer[NSError];
overload selector("initWithType:location:") = Id, CULong, Double;
overload selector("initWithType:subpredicates:") = Id, CULong, NSArray;
overload selector("initWithURL:") = Id, NSURL;
overload selector("initWithURL:MIMEType:expectedContentLength:textEncodingName:") = Id, NSURL, NSString, CLong, NSString;
overload selector("initWithURL:append:") = Id, NSURL, Bool;
overload selector("initWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, CULong, Double;
overload selector("initWithURL:cached:") = Id, NSURL, Bool;
overload selector("initWithURL:documentAttributes:") = Id, NSURL, Pointer[NSDictionary];
overload selector("initWithURL:options:documentAttributes:error:") = Id, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
overload selector("initWithURL:options:error:") = Id, NSURL, CULong, Pointer[NSError];
overload selector("initWithURLString:title:lastVisitedTimeInterval:") = Id, NSString, NSString, Double;
overload selector("initWithUTF8String:") = Id, Pointer[CChar];
overload selector("initWithUnsignedChar:") = Id, CUChar;
overload selector("initWithUnsignedInt:") = Id, UInt;
overload selector("initWithUnsignedInteger:") = Id, CULong;
overload selector("initWithUnsignedLong:") = Id, CULong;
overload selector("initWithUnsignedLongLong:") = Id, UInt64;
overload selector("initWithUnsignedShort:") = Id, UShort;
overload selector("initWithUser:") = Id, NSString;
overload selector("initWithUser:password:persistence:") = Id, NSString, NSString, CULong;
overload selector("initWithValues:count:") = Id, Pointer[Double], CULong;
overload selector("initWithViewAnimations:") = Id, NSArray;
overload selector("initWithVoice:") = Id, NSString;
overload selector("initWithWindow:") = Id, NSWindow;
overload selector("initWithWindow:rect:") = Id, NSWindow, NSRect;
overload selector("initWithWindowNibName:") = Id, NSString;
overload selector("initWithWindowNibName:owner:") = Id, NSString, Id;
overload selector("initWithWindowNibPath:owner:") = Id, NSString, Id;
overload selector("initWithWindowRef:") = NSWindow, RawPointer;
overload selector("initWithX:") = Id, Double;
overload selector("initWithX:Y:") = Id, Double, Double;
overload selector("initWithX:Y:Z:") = Id, Double, Double, Double;
overload selector("initWithX:Y:Z:W:") = Id, Double, Double, Double, Double;
overload selector("initWithXMLString:") = Id, NSString;
overload selector("initWithXMLString:error:") = Id, NSString, Pointer[NSError];
overload selector("initWithXMLString:options:error:") = Id, NSString, CULong, Pointer[NSError];
overload selector("initWithYear:month:day:hour:minute:second:timeZone:") = Id, CLong, CULong, CULong, CULong, CULong, CULong, NSTimeZone;
overload selector("initialFirstResponder") = Id;
overload selector("initialKey") = NSString;
overload selector("initialRequest") = NSURLRequest;
overload selector("initialValue") = Id;
overload selector("initialValues") = NSDictionary;
overload selector("initialize") = Void;
overload selector("innerHTML") = NSString;
overload selector("innerText") = NSString;
overload selector("inputClientBecomeActive:") = Void, Id;
overload selector("inputClientDisabled:") = Void, Id;
overload selector("inputClientEnabled:") = Void, Id;
overload selector("inputClientResignActive:") = Void, Id;
overload selector("inputContext") = NSTextInputContext;
overload selector("inputEncoding") = NSString;
overload selector("inputStreamWithData:") = Id, NSData;
overload selector("inputStreamWithFileAtPath:") = Id, NSString;
overload selector("inputStreamWithURL:") = Id, NSURL;
overload selector("insert:") = Void, Id;
overload selector("insertAttributedString:atIndex:") = Void, NSAttributedString, CULong;
overload selector("insertBacktab:") = Void, Id;
overload selector("insertBefore::") = DOMNode, DOMNode, DOMNode;
overload selector("insertBefore:refChild:") = DOMNode, DOMNode, DOMNode;
overload selector("insertCell:") = DOMHTMLElement, Int;
overload selector("insertChild:") = Void, Id;
overload selector("insertChild:atIndex:") = Void, NSXMLNode, CULong;
overload selector("insertChildren:atIndex:") = Void, NSArray, CULong;
overload selector("insertColor:key:atIndex:") = Void, NSColor, NSString, CULong;
overload selector("insertColumn:") = Void, CLong;
overload selector("insertColumn:withCells:") = Void, CLong, NSArray;
overload selector("insertCompletion:forPartialWordRange:movement:isFinal:") = Void, NSString, NSRange, CLong, Bool;
overload selector("insertContainerBreak:") = Void, Id;
overload selector("insertData::") = Void, UInt, NSString;
overload selector("insertData:data:") = Void, UInt, NSString;
overload selector("insertDescriptor:atIndex:") = Void, NSAppleEventDescriptor, CLong;
overload selector("insertDoubleQuoteIgnoringSubstitution:") = Void, Id;
overload selector("insertEntry:atIndex:") = NSFormCell, NSString, CLong;
overload selector("insertGlyph:atGlyphIndex:characterIndex:") = Void, UInt, CULong, CULong;
overload selector("insertGlyphs:length:forStartingGlyphAtIndex:characterIndex:") = Void, Pointer[UInt], CULong, CULong, CULong;
overload selector("insertItem:atIndex:") = Void, NSMenuItem, CLong;
overload selector("insertItemWithItemIdentifier:atIndex:") = Void, NSString, CLong;
overload selector("insertItemWithObjectValue:atIndex:") = Void, Id, CLong;
overload selector("insertItemWithTitle:action:keyEquivalent:atIndex:") = NSMenuItem, NSString, SelectorHandle, NSString, CLong;
overload selector("insertItemWithTitle:atIndex:") = Void, NSString, CLong;
overload selector("insertLineBreak:") = Void, Id;
overload selector("insertNewButtonImage:in:") = Void, NSImage, NSButtonCell;
overload selector("insertNewObjectForEntityForName:inManagedObjectContext:") = Id, NSString, NSManagedObjectContext;
overload selector("insertNewline:") = Void, Id;
overload selector("insertNewlineIgnoringFieldEditor:") = Void, Id;
overload selector("insertNode:") = Void, DOMNode;
overload selector("insertObject:") = Void, NSManagedObject;
overload selector("insertObject:atArrangedObjectIndex:") = Void, Id, CULong;
overload selector("insertObject:atArrangedObjectIndexPath:") = Void, Id, NSIndexPath;
overload selector("insertObject:atIndex:") = Void, Id, CULong;
overload selector("insertObjects:atArrangedObjectIndexPaths:") = Void, NSArray, NSArray;
overload selector("insertObjects:atArrangedObjectIndexes:") = Void, NSArray, NSIndexSet;
overload selector("insertObjects:atIndexes:") = Void, NSArray, NSIndexSet;
overload selector("insertParagraphSeparator:") = Void, Id;
overload selector("insertPointer:atIndex:") = Void, RawPointer, CULong;
overload selector("insertRow:") = DOMHTMLElement, Int;
overload selector("insertRow:withCells:") = Void, CLong, NSArray;
overload selector("insertRowAtIndex:withType:asSubrowOfRow:animate:") = Void, CLong, CULong, CLong, Bool;
overload selector("insertRule::") = UInt, NSString, UInt;
overload selector("insertRule:index:") = UInt, NSString, UInt;
overload selector("insertSingleQuoteIgnoringSubstitution:") = Void, Id;
overload selector("insertString:atIndex:") = Void, NSString, CULong;
overload selector("insertSublayer:above:") = Void, CALayer, CALayer;
overload selector("insertSublayer:atIndex:") = Void, CALayer, UInt;
overload selector("insertSublayer:below:") = Void, CALayer, CALayer;
overload selector("insertTab:") = Void, Id;
overload selector("insertTabIgnoringFieldEditor:") = Void, Id;
overload selector("insertTabViewItem:atIndex:") = Void, NSTabViewItem, CLong;
overload selector("insertText:") = Void, Id;
overload selector("insertText:client:") = Void, Id, Id;
overload selector("insertText:replacementRange:") = Void, Id, NSRange;
overload selector("insertTextContainer:atIndex:") = Void, NSTextContainer, CULong;
overload selector("insertValue:atIndex:inPropertyWithKey:") = Void, Id, CULong, NSString;
overload selector("insertValue:inPropertyWithKey:") = Void, Id, NSString;
overload selector("insertedObjects") = NSSet;
overload selector("insertionContainer") = Id;
overload selector("insertionIndex") = CLong;
overload selector("insertionKey") = NSString;
overload selector("insertionPointColor") = NSColor;
overload selector("insertionReplaces") = Bool;
overload selector("instanceMethodForSelector:") = IMP, SelectorHandle;
overload selector("instanceMethodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
overload selector("instancesRespondToSelector:") = Bool, SelectorHandle;
overload selector("instantiateNibWithExternalNameTable:") = Bool, NSDictionary;
overload selector("instantiateNibWithOwner:topLevelObjects:") = Bool, Id, Pointer[NSArray];
overload selector("int32Value") = Int;
overload selector("intAttribute:forGlyphAtIndex:") = CLong, CLong, CULong;
overload selector("intForKey:inTable:") = Int, NSString, NSString;
overload selector("intValue") = Int;
overload selector("integerForKey:") = CLong, NSString;
overload selector("integerValue") = CLong;
overload selector("intercellSpacing") = NSSize;
overload selector("interfaceStyle") = CULong;
overload selector("interiorBackgroundStyle") = CLong;
overload selector("interiorBackgroundStyleForSegment:") = CLong, CLong;
overload selector("internalSubset") = NSString;
overload selector("internationalCurrencySymbol") = NSString;
overload selector("interpolatedColorAtLocation:") = NSColor, Double;
overload selector("interpretKeyEvents:") = Void, NSArray;
overload selector("interrupt") = Void;
overload selector("intersectHashTable:") = Void, NSHashTable;
overload selector("intersectSet:") = Void, NSSet;
overload selector("intersectsHashTable:") = Bool, NSHashTable;
overload selector("intersectsIndexesInRange:") = Bool, NSRange;
overload selector("intersectsNode:") = Bool, DOMNode;
overload selector("intersectsSet:") = Bool, NSSet;
overload selector("invalidIteratorState") = Bool;
overload selector("invalidate") = Void;
overload selector("invalidateAttributesInRange:") = Void, NSRange;
overload selector("invalidateCharacterCoordinates") = Void;
overload selector("invalidateClassDescriptionCache") = Void;
overload selector("invalidateCursorRectsForView:") = Void, NSView;
overload selector("invalidateDisplayForCharacterRange:") = Void, NSRange;
overload selector("invalidateDisplayForGlyphRange:") = Void, NSRange;
overload selector("invalidateGlyphsForCharacterRange:changeInLength:actualCharacterRange:") = Void, NSRange, CLong, NSRangePointer;
overload selector("invalidateGlyphsOnLayoutInvalidationForGlyphRange:") = Void, NSRange;
overload selector("invalidateHashMarks") = Void;
overload selector("invalidateLayoutForCharacterRange:actualCharacterRange:") = Void, NSRange, NSRangePointer;
overload selector("invalidateLayoutForCharacterRange:isSoft:actualCharacterRange:") = Void, NSRange, Bool, NSRangePointer;
overload selector("invalidateLayoutOfLayer:") = Void, CALayer;
overload selector("invalidateShadow") = Void;
overload selector("invalidateTextContainerOrigin") = Void;
overload selector("inverseForRelationshipKey:") = NSString, NSString;
overload selector("inverseRelationship") = NSRelationshipDescription;
overload selector("invert") = Void;
overload selector("invertedSet") = NSCharacterSet;
overload selector("invocation") = NSInvocation;
overload selector("invocationWithMethodSignature:") = NSInvocation, NSMethodSignature;
overload selector("invoke") = Void;
overload selector("invokeDefaultMethodWithArguments:") = Id, NSArray;
overload selector("invokeUndefinedMethodFromWebScript:withArguments:") = Id, NSString, NSArray;
overload selector("invokeWithTarget:") = Void, Id;
overload selector("isARepeat") = Bool;
overload selector("isAbsolutePath") = Bool;
overload selector("isAbstract") = Bool;
overload selector("isActive") = Bool;
overload selector("isAlternate") = Bool;
overload selector("isAnimating") = Bool;
overload selector("isAnyApplicationSpeaking") = Bool;
overload selector("isAsynchronous") = Bool;
overload selector("isAtEnd") = Bool;
overload selector("isAttached") = Bool;
overload selector("isAutodisplay") = Bool;
overload selector("isAutomaticDashSubstitutionEnabled") = Bool;
overload selector("isAutomaticDataDetectionEnabled") = Bool;
overload selector("isAutomaticLinkDetectionEnabled") = Bool;
overload selector("isAutomaticQuoteSubstitutionEnabled") = Bool;
overload selector("isAutomaticSpellingCorrectionEnabled") = Bool;
overload selector("isAutomaticTextReplacementEnabled") = Bool;
overload selector("isAutoscroll") = Bool;
overload selector("isBezeled") = Bool;
overload selector("isBordered") = Bool;
overload selector("isButtonBordered") = Bool;
overload selector("isBycopy") = Bool;
overload selector("isByref") = Bool;
overload selector("isCachedSeparately") = Bool;
overload selector("isCancelled") = Bool;
overload selector("isCaseInsensitiveLike:") = Bool, NSString;
overload selector("isCoalescingUndo") = Bool;
overload selector("isCollecting") = Bool;
overload selector("isColor") = Bool;
overload selector("isColumnSelected:") = Bool, CLong;
overload selector("isCompiled") = Bool;
overload selector("isConcurrent") = Bool;
overload selector("isConfiguration:compatibleWithStoreMetadata:") = Bool, NSString, NSDictionary;
overload selector("isContentDiscarded") = Bool;
overload selector("isContentEditable") = Bool;
overload selector("isContextHelpModeActive") = Bool;
overload selector("isContinuous") = Bool;
overload selector("isContinuousSpellCheckingEnabled") = Bool;
overload selector("isCopyingOperation") = Bool;
overload selector("isCountOnlyRequest") = Bool;
overload selector("isDataRetained") = Bool;
overload selector("isDaylightSavingTime") = Bool;
overload selector("isDaylightSavingTimeForDate:") = Bool, NSDate;
overload selector("isDefaultNamespace:") = Bool, NSString;
overload selector("isDeletableFileAtPath:") = Bool, NSString;
overload selector("isDeleted") = Bool;
overload selector("isDescendantOf:") = Bool, NSView;
overload selector("isDirectory") = Bool;
overload selector("isDisplayedWhenStopped") = Bool;
overload selector("isDocumentEdited") = Bool;
overload selector("isDoubleSided") = Bool;
overload selector("isDragging") = Bool;
overload selector("isDrawingToScreen") = Bool;
overload selector("isEditable") = Bool;
overload selector("isEditing") = Bool;
overload selector("isEmpty") = Bool;
overload selector("isEnabled") = Bool;
overload selector("isEnabledForSegment:") = Bool, CLong;
overload selector("isEnteringProximity") = Bool;
overload selector("isEntryAcceptable:") = Bool, NSString;
overload selector("isEqual:") = Bool, Id;
overload selector("isEqualFunction") = CCodePointer[[RawPointer,RawPointer,CCodePointer[[RawPointer],[CULong]]],[CChar]];
overload selector("isEqualNode:") = Bool, DOMNode;
overload selector("isEqualTo:") = Bool, Id;
overload selector("isEqualToArray:") = Bool, NSArray;
overload selector("isEqualToAttributedString:") = Bool, NSAttributedString;
overload selector("isEqualToData:") = Bool, NSData;
overload selector("isEqualToDate:") = Bool, NSDate;
overload selector("isEqualToDictionary:") = Bool, NSDictionary;
overload selector("isEqualToHashTable:") = Bool, NSHashTable;
overload selector("isEqualToHost:") = Bool, NSHost;
overload selector("isEqualToIndexSet:") = Bool, NSIndexSet;
overload selector("isEqualToNumber:") = Bool, NSNumber;
overload selector("isEqualToSet:") = Bool, NSSet;
overload selector("isEqualToString:") = Bool, NSString;
overload selector("isEqualToTimeZone:") = Bool, NSTimeZone;
overload selector("isEqualToValue:") = Bool, NSValue;
overload selector("isExcludedFromWindowsMenu") = Bool;
overload selector("isExecutableFileAtPath:") = Bool, NSString;
overload selector("isExecuting") = Bool;
overload selector("isExpandable:") = Bool, Id;
overload selector("isExpanded") = Bool;
overload selector("isExplicitlyIncluded") = Bool;
overload selector("isExtensionHidden") = Bool;
overload selector("isExternal") = Bool;
overload selector("isFault") = Bool;
overload selector("isFieldEditor") = Bool;
overload selector("isFilePackageAtPath:") = Bool, NSString;
overload selector("isFileReferenceURL") = Bool;
overload selector("isFileURL") = Bool;
overload selector("isFinished") = Bool;
overload selector("isFinishedLaunching") = Bool;
overload selector("isFirstResponder") = Bool;
overload selector("isFixedPitch") = Bool;
overload selector("isFlipped") = Bool;
overload selector("isFloatingPanel") = Bool;
overload selector("isFlushWindowDisabled") = Bool;
overload selector("isFontAvailable:") = Bool, NSString;
overload selector("isFullKeyboardAccessEnabled") = Bool;
overload selector("isGathering") = Bool;
overload selector("isGeometryFlipped") = Bool;
overload selector("isGrammarCheckingEnabled") = Bool;
overload selector("isGreaterThan:") = Bool, Id;
overload selector("isGreaterThanOrEqualTo:") = Bool, Id;
overload selector("isHTTPOnly") = Bool;
overload selector("isHidden") = Bool;
overload selector("isHiddenOrHasHiddenAncestor") = Bool;
overload selector("isHighlighted") = Bool;
overload selector("isHorizontal") = Bool;
overload selector("isHorizontallyCentered") = Bool;
overload selector("isHorizontallyResizable") = Bool;
overload selector("isHostCacheEnabled") = Bool;
overload selector("isInFullScreenMode") = Bool;
overload selector("isIndeterminate") = Bool;
overload selector("isIndexed") = Bool;
overload selector("isIndexedBySpotlight") = Bool;
overload selector("isInserted") = Bool;
overload selector("isItemExpanded:") = Bool, Id;
overload selector("isJavaEnabled") = Bool;
overload selector("isJavaScriptEnabled") = Bool;
overload selector("isKey:inTable:") = Bool, NSString, NSString;
overload selector("isKeyExcludedFromWebScript:") = Bool, Pointer[CChar];
overload selector("isKeyWindow") = Bool;
overload selector("isKindOfClass:") = Bool, Id;
overload selector("isKindOfEntity:") = Bool, NSEntityDescription;
overload selector("isLeaf") = Bool;
overload selector("isLeafItem:") = Bool, Id;
overload selector("isLenient") = Bool;
overload selector("isLessThan:") = Bool, Id;
overload selector("isLessThanOrEqualTo:") = Bool, Id;
overload selector("isLike:") = Bool, NSString;
overload selector("isLoaded") = Bool;
overload selector("isLoading") = Bool;
overload selector("isLocationRequiredToCreateForKey:") = Bool, NSString;
overload selector("isMainThread") = Bool;
overload selector("isMainWindow") = Bool;
overload selector("isMap") = Bool;
overload selector("isMemberOfClass:") = Bool, Id;
overload selector("isMiniaturizable") = Bool;
overload selector("isMiniaturized") = Bool;
overload selector("isModalPanel") = Bool;
overload selector("isMouseCoalescingEnabled") = Bool;
overload selector("isMovable") = Bool;
overload selector("isMovableByWindowBackground") = Bool;
overload selector("isMultiThreaded") = Bool;
overload selector("isMultiple") = Bool;
overload selector("isNativeType:") = Bool, NSString;
overload selector("isNotEqualTo:") = Bool, Id;
overload selector("isOnActiveSpace") = Bool;
overload selector("isOneShot") = Bool;
overload selector("isOneway") = Bool;
overload selector("isOpaque") = Bool;
overload selector("isOptional") = Bool;
overload selector("isOptionalArgumentWithName:") = Bool, NSString;
overload selector("isOutputStackInReverseOrder") = Bool;
overload selector("isPaneSplitter") = Bool;
overload selector("isPartialStringValid:newEditingString:errorDescription:") = Bool, NSString, Pointer[NSString], Pointer[NSString];
overload selector("isPartialStringValid:proposedSelectedRange:originalString:originalSelectedRange:errorDescription:") = Bool, Pointer[NSString], NSRangePointer, NSString, NSRange, Pointer[NSString];
overload selector("isPartialStringValidationEnabled") = Bool;
overload selector("isPlanar") = Bool;
overload selector("isPlaying") = Bool;
overload selector("isPointInRange:offset:") = Bool, DOMNode, Int;
overload selector("isPropertyImplicit:") = Bool, NSString;
overload selector("isProxy") = Bool;
overload selector("isReadOnly") = Bool;
overload selector("isReadOnlyKey:") = Bool, NSString;
overload selector("isReadableFileAtPath:") = Bool, NSString;
overload selector("isReady") = Bool;
overload selector("isRedoing") = Bool;
overload selector("isRegularFile") = Bool;
overload selector("isReleasedWhenClosed") = Bool;
overload selector("isRemovable") = Bool;
overload selector("isResizable") = Bool;
overload selector("isResting") = Bool;
overload selector("isRichText") = Bool;
overload selector("isRotatedFromBase") = Bool;
overload selector("isRotatedOrScaledFromBase") = Bool;
overload selector("isRowSelected:") = Bool, CLong;
overload selector("isRulerVisible") = Bool;
overload selector("isRunning") = Bool;
overload selector("isSameNode:") = Bool, DOMNode;
overload selector("isScrollable") = Bool;
overload selector("isSecure") = Bool;
overload selector("isSelectable") = Bool;
overload selector("isSelected") = Bool;
overload selector("isSelectedForSegment:") = Bool, CLong;
overload selector("isSelectionByRect") = Bool;
overload selector("isSelectionOnly") = Bool;
overload selector("isSelectorExcludedFromWebScript:") = Bool, SelectorHandle;
overload selector("isSeparatorItem") = Bool;
overload selector("isSessionOnly") = Bool;
overload selector("isSetOnMouseEntered") = Bool;
overload selector("isSetOnMouseExited") = Bool;
overload selector("isSheet") = Bool;
overload selector("isSimpleRectangularTextContainer") = Bool;
overload selector("isSpeaking") = Bool;
overload selector("isStandalone") = Bool;
overload selector("isStarted") = Bool;
overload selector("isStopped") = Bool;
overload selector("isStoredInExternalRecord") = Bool;
overload selector("isSubclassOfClass:") = Bool, Id;
overload selector("isSubsetOfHashTable:") = Bool, NSHashTable;
overload selector("isSubsetOfSet:") = Bool, NSSet;
overload selector("isSubviewCollapsed:") = Bool, NSView;
overload selector("isSupersetOfSet:") = Bool, NSCharacterSet;
overload selector("isSupported::") = Bool, NSString, NSString;
overload selector("isSupported:version:") = Bool, NSString, NSString;
overload selector("isSuspended") = Bool;
overload selector("isSymbolicLink") = Bool;
overload selector("isTemplate") = Bool;
overload selector("isTemporaryID") = Bool;
overload selector("isTerminated") = Bool;
overload selector("isTitled") = Bool;
overload selector("isToMany") = Bool;
overload selector("isTornOff") = Bool;
overload selector("isTransient") = Bool;
overload selector("isTransparent") = Bool;
overload selector("isTrue") = Bool;
overload selector("isUndoRegistrationEnabled") = Bool;
overload selector("isUndoing") = Bool;
overload selector("isUpdated") = Bool;
overload selector("isValid") = Bool;
overload selector("isValidGlyphIndex:") = Bool, CULong;
overload selector("isVertical") = Bool;
overload selector("isVerticallyCentered") = Bool;
overload selector("isVerticallyResizable") = Bool;
overload selector("isVisible") = Bool;
overload selector("isWellFormed") = Bool;
overload selector("isWindowLoaded") = Bool;
overload selector("isWordInUserDictionaries:caseSensitive:") = Bool, NSString, Bool;
overload selector("isWritableFileAtPath:") = Bool, NSString;
overload selector("isZoomable") = Bool;
overload selector("isZoomed") = Bool;
overload selector("italicAngle") = Double;
overload selector("item:") = Id, UInt;
overload selector("itemArray") = NSArray;
overload selector("itemAtIndex:") = Id, Int;
overload selector("itemAtIndexPath:") = Id, NSIndexPath;
overload selector("itemAtRow:") = Id, CLong;
overload selector("itemAtRow:inColumn:") = Id, CLong, CLong;
overload selector("itemChanged:") = Void, NSMenuItem;
overload selector("itemForURL:") = WebHistoryItem, NSURL;
overload selector("itemHeight") = Double;
overload selector("itemIdentifier") = NSString;
overload selector("itemNumberInTextList:atIndex:") = CLong, NSTextList, CULong;
overload selector("itemObjectValueAtIndex:") = Id, CLong;
overload selector("itemPrototype") = NSCollectionViewItem;
overload selector("itemTitleAtIndex:") = NSString, CLong;
overload selector("itemTitles") = NSArray;
overload selector("itemWithTag:") = NSMenuItem, CLong;
overload selector("itemWithTitle:") = NSMenuItem, NSString;
overload selector("items") = NSArray;
overload selector("iterateNext") = DOMNode;
overload selector("javaScriptCanOpenWindowsAutomatically") = Bool;
overload selector("jobDisposition") = NSString;
overload selector("jobStyleHint") = NSString;
overload selector("jobTitle") = NSString;
overload selector("keepBackupFile") = Bool;
overload selector("key") = NSString;
overload selector("keyCell") = Id;
overload selector("keyClassDescription") = NSScriptClassDescription;
overload selector("keyCode") = Int;
overload selector("keyDown:") = Void, NSEvent;
overload selector("keyEnumerator") = NSEnumerator;
overload selector("keyEquivalent") = NSString;
overload selector("keyEquivalentFont") = NSFont;
overload selector("keyEquivalentModifierMask") = CULong;
overload selector("keyEquivalentRectForBounds:") = NSRect, NSRect;
overload selector("keyEquivalentWidth") = Double;
overload selector("keyEventWithType:location:modifierFlags:timestamp:windowNumber:context:characters:charactersIgnoringModifiers:isARepeat:keyCode:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, NSString, NSString, Bool, UShort;
overload selector("keyForFileWrapper:") = NSString, NSFileWrapper;
overload selector("keyIdentifier") = NSString;
overload selector("keyLocation") = UInt;
overload selector("keyPath") = NSString;
overload selector("keyPathsForValuesAffectingPreview") = NSSet;
overload selector("keyPathsForValuesAffectingValueForKey:") = NSSet, NSString;
overload selector("keyPointerFunctions") = NSPointerFunctions;
overload selector("keyRepeatDelay") = Double;
overload selector("keyRepeatInterval") = Double;
overload selector("keySpecifier") = NSScriptObjectSpecifier;
overload selector("keyUp:") = Void, NSEvent;
overload selector("keyViewSelectionDirection") = CULong;
overload selector("keyWindow") = NSWindow;
overload selector("keyWithAppleEventCode:") = NSString, UInt;
overload selector("keyboardFocusIndicatorColor") = NSColor;
overload selector("keyboardInputSources") = NSArray;
overload selector("keysOfEntriesPassingTest:") = NSSet, UnknownType;
overload selector("keysOfEntriesWithOptions:passingTest:") = NSSet, CULong, UnknownType;
overload selector("keysSortedByValueUsingComparator:") = NSArray, NSComparator;
overload selector("keysSortedByValueUsingSelector:") = NSArray, SelectorHandle;
overload selector("keysSortedByValueWithOptions:usingComparator:") = NSArray, CULong, NSComparator;
overload selector("keywordForDescriptorAtIndex:") = UInt, CLong;
overload selector("kind") = CULong;
overload selector("knobColor") = NSColor;
overload selector("knobProportion") = Double;
overload selector("knobRectFlipped:") = NSRect, Bool;
overload selector("knobThickness") = Double;
overload selector("knownTimeZoneNames") = NSArray;
overload selector("knowsPageRange:") = Bool, NSRangePointer;
overload selector("label") = NSString;
overload selector("labelFontOfSize:") = NSFont, Double;
overload selector("labelFontSize") = Double;
overload selector("labelForSegment:") = NSString, CLong;
overload selector("lang") = NSString;
overload selector("language") = NSString;
overload selector("languageLevel") = CLong;
overload selector("languageMap") = NSDictionary;
overload selector("languagesForScript:") = NSArray, NSString;
overload selector("lastChild") = DOMNode;
overload selector("lastColumn") = CLong;
overload selector("lastComponentOfFileName") = NSString;
overload selector("lastElementChild") = DOMElement;
overload selector("lastIndex") = CULong;
overload selector("lastItem") = NSMenuItem;
overload selector("lastModified") = NSString;
overload selector("lastObject") = Id;
overload selector("lastPathComponent") = NSString;
overload selector("lastVisibleColumn") = CLong;
overload selector("lastVisitedTimeInterval") = Double;
overload selector("laterDate:") = NSDate, NSDate;
overload selector("launch") = Void;
overload selector("launchAppWithBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifier:") = Bool, NSString, CULong, NSAppleEventDescriptor, Pointer[NSNumber];
overload selector("launchApplication:") = Bool, NSString;
overload selector("launchApplication:showIcon:autolaunch:") = Bool, NSString, Bool, Bool;
overload selector("launchApplicationAtURL:options:configuration:error:") = NSRunningApplication, NSURL, CULong, NSDictionary, Pointer[NSError];
overload selector("launchDate") = NSDate;
overload selector("launchPath") = NSString;
overload selector("launchedApplications") = NSArray;
overload selector("launchedTaskWithLaunchPath:arguments:") = NSTask, NSString, NSArray;
overload selector("layer") = Id;
overload selector("layerContentsPlacement") = CLong;
overload selector("layerContentsRedrawPolicy") = CLong;
overload selector("layerX") = Int;
overload selector("layerY") = Int;
overload selector("layout") = Void;
overload selector("layoutAlgorithm") = CULong;
overload selector("layoutCharactersInRange:forLayoutManager:maximumNumberOfLineFragments:") = NSRange, NSRange, NSLayoutManager, CULong;
overload selector("layoutGlyphsInLayoutManager:startingAtGlyphIndex:maxNumberOfLineFragments:nextGlyphIndex:") = Void, NSLayoutManager, CULong, CULong, Pointer[CULong];
overload selector("layoutIfNeeded") = Void;
overload selector("layoutManager") = Id;
overload selector("layoutManager:didCompleteLayoutForTextContainer:atEnd:") = Void, NSLayoutManager, NSTextContainer, Bool;
overload selector("layoutManager:shouldUseTemporaryAttributes:forDrawingToScreen:atCharacterIndex:effectiveRange:") = NSDictionary, NSLayoutManager, NSDictionary, Bool, CULong, NSRangePointer;
overload selector("layoutManagerDidInvalidateLayout:") = Void, NSLayoutManager;
overload selector("layoutManagerOwnsFirstResponderInWindow:") = Bool, NSWindow;
overload selector("layoutManagers") = NSArray;
overload selector("layoutOptions") = CULong;
overload selector("layoutParagraphAtPoint:") = CULong, NSPointPointer;
overload selector("layoutRectForTextBlock:atIndex:effectiveRange:") = NSRect, NSTextBlock, CULong, NSRangePointer;
overload selector("layoutRectForTextBlock:glyphRange:") = NSRect, NSTextBlock, NSRange;
overload selector("layoutSublayers") = Void;
overload selector("layoutSublayersOfLayer:") = Void, CALayer;
overload selector("leading") = Double;
overload selector("leadingOffset") = Double;
overload selector("leafKeyPath") = NSString;
overload selector("leafKeyPathForNode:") = NSString, NSTreeNode;
overload selector("learnWord:") = Void, NSString;
overload selector("left") = Id;
overload selector("leftExpression") = NSExpression;
overload selector("leftExpressions") = NSArray;
overload selector("leftMargin") = Double;
overload selector("length") = CULong;
overload selector("lengthOfBytesUsingEncoding:") = CULong, CULong;
overload selector("letterCharacterSet") = Id;
overload selector("letterSpacing") = NSString;
overload selector("level") = CULong;
overload selector("levelForItem:") = CLong, Id;
overload selector("levelForRow:") = CLong, CLong;
overload selector("levelIndicatorStyle") = CULong;
overload selector("levelsOfUndo") = CULong;
overload selector("lightGrayColor") = NSColor;
overload selector("limitDateForMode:") = NSDate, NSString;
overload selector("lineBoxRects") = NSArray;
overload selector("lineBreakBeforeIndex:withinRange:") = CULong, CULong, NSRange;
overload selector("lineBreakByHyphenatingBeforeIndex:withinRange:") = CULong, CULong, NSRange;
overload selector("lineBreakMode") = CULong;
overload selector("lineCapStyle") = CULong;
overload selector("lineDirectionForLanguage:") = CULong, NSString;
overload selector("lineFragmentPadding") = Double;
overload selector("lineFragmentRectForGlyphAtIndex:effectiveRange:") = NSRect, CULong, NSRangePointer;
overload selector("lineFragmentRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, CULong, NSRangePointer, Bool;
overload selector("lineFragmentRectForProposedRect:remainingRect:") = NSRect, NSRect, NSRectPointer;
overload selector("lineFragmentRectForProposedRect:sweepDirection:movementDirection:remainingRect:") = NSRect, NSRect, CULong, CULong, NSRectPointer;
overload selector("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:") = NSRect, CULong, NSRangePointer;
overload selector("lineFragmentUsedRectForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSRect, CULong, NSRangePointer, Bool;
overload selector("lineHeight") = NSString;
overload selector("lineHeightMultiple") = Double;
overload selector("lineJoinStyle") = CULong;
overload selector("lineNumber") = CLong;
overload selector("lineRangeForRange:") = NSRange, NSRange;
overload selector("lineScroll") = Double;
overload selector("lineSpacing") = Double;
overload selector("lineSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
overload selector("lineToPoint:") = Void, NSPoint;
overload selector("lineWidth") = Double;
overload selector("link") = NSString;
overload selector("linkCheckingResultWithRange:URL:") = NSTextCheckingResult, NSRange, NSURL;
overload selector("linkColor") = NSString;
overload selector("linkItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector("linkItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector("linkPath:toPath:handler:") = Bool, NSString, NSString, Id;
overload selector("linkTextAttributes") = NSDictionary;
overload selector("links") = DOMHTMLCollection;
overload selector("listDescriptor") = NSAppleEventDescriptor;
overload selector("listOptions") = CULong;
overload selector("listStyle") = NSString;
overload selector("listStyleImage") = NSString;
overload selector("listStylePosition") = NSString;
overload selector("listStyleType") = NSString;
overload selector("listensInForegroundOnly") = Bool;
overload selector("load") = Bool;
overload selector("load:") = Bool, Pointer[NSError];
overload selector("loadAlternateHTMLString:baseURL:forUnreachableURL:") = Void, NSString, NSURL, NSURL;
overload selector("loadAndReturnError:") = Bool, Pointer[NSError];
overload selector("loadArchive:") = Void, WebArchive;
overload selector("loadColumnZero") = Void;
overload selector("loadData:MIMEType:textEncodingName:baseURL:") = Void, NSData, NSString, NSString, NSURL;
overload selector("loadDataRepresentation:ofType:") = Bool, NSData, NSString;
overload selector("loadFileWrapperRepresentation:ofType:") = Bool, NSFileWrapper, NSString;
overload selector("loadFromURL:error:") = Bool, NSURL, Pointer[NSError];
overload selector("loadHTMLString:baseURL:") = Void, NSString, NSURL;
overload selector("loadInBackground") = Void;
overload selector("loadInForeground") = NSData;
overload selector("loadMetadata:") = Bool, Pointer[NSError];
overload selector("loadNibFile:externalNameTable:withZone:") = Bool, NSString, NSDictionary, Pointer[NSZone];
overload selector("loadNibNamed:owner:") = Bool, NSString, Id;
overload selector("loadRequest:") = Void, NSURLRequest;
overload selector("loadResourceDataNotifyingClient:usingCache:") = Void, Id, Bool;
overload selector("loadSuiteWithDictionary:fromBundle:") = Void, NSDictionary, NSBundle;
overload selector("loadSuitesFromBundle:") = Void, NSBundle;
overload selector("loadView") = Void;
overload selector("loadWindow") = Void;
overload selector("loadedCellAtRow:column:") = Id, CLong, CLong;
overload selector("loadsImagesAutomatically") = Bool;
overload selector("localName") = NSString;
overload selector("localNameForName:") = NSString, NSString;
overload selector("localObjects") = NSArray;
overload selector("localTimeZone") = NSTimeZone;
overload selector("locale") = Id;
overload selector("localeIdentifier") = NSString;
overload selector("localeIdentifierFromComponents:") = NSString, NSDictionary;
overload selector("localeIdentifierFromWindowsLocaleCode:") = NSString, UInt;
overload selector("localizationDictionary") = NSDictionary;
overload selector("localizations") = NSArray;
overload selector("localizedCaseInsensitiveCompare:") = CLong, NSString;
overload selector("localizedCatalogNameComponent") = NSString;
overload selector("localizedColorNameComponent") = NSString;
overload selector("localizedCompare:") = CLong, NSString;
overload selector("localizedDescription") = NSString;
overload selector("localizedDescriptionForType:") = NSString, NSString;
overload selector("localizedFailureReason") = NSString;
overload selector("localizedInfoDictionary") = NSDictionary;
overload selector("localizedInputManagerName") = NSString;
overload selector("localizedKey") = NSString;
overload selector("localizedKeyDictionary") = NSDictionary;
overload selector("localizedKeyTable") = NSString;
overload selector("localizedName") = NSString;
overload selector("localizedName:locale:") = NSString, CLong, NSLocale;
overload selector("localizedNameForFamily:face:") = NSString, NSString, NSString;
overload selector("localizedNameForInputSource:") = NSString, NSString;
overload selector("localizedNameForTIFFCompressionType:") = NSString, CULong;
overload selector("localizedNameOfStringEncoding:") = NSString, CULong;
overload selector("localizedPaperName") = NSString;
overload selector("localizedRecoveryOptions") = NSArray;
overload selector("localizedRecoverySuggestion") = NSString;
overload selector("localizedScannerWithString:") = Id, NSString;
overload selector("localizedStandardCompare:") = CLong, NSString;
overload selector("localizedStringForKey:value:table:") = NSString, NSString, NSString, NSString;
overload selector("localizedStringForStatusCode:") = NSString, CLong;
overload selector("localizedStringFromDate:dateStyle:timeStyle:") = NSString, NSDate, CULong, CULong;
overload selector("localizedStringFromNumber:numberStyle:") = NSString, NSNumber, CULong;
overload varargSelector("localizedStringWithFormat:") = Id, NSString;
overload selector("localizedSummaryItems") = NSArray;
overload selector("localizedTitlesForItem:") = NSArray, Id;
overload selector("localizesFormat") = Bool;
overload selector("location") = NSString;
overload selector("locationForGlyphAtIndex:") = NSPoint, CULong;
overload selector("locationForSubmenu:") = NSPoint, NSMenu;
overload selector("locationInWindow") = NSPoint;
overload selector("locationOfPrintRect:") = NSPoint, NSRect;
overload selector("lock") = Void;
overload selector("lockBeforeDate:") = Bool, NSDate;
overload selector("lockDate") = NSDate;
overload selector("lockFocus") = Void;
overload selector("lockFocusFlipped:") = Void, Bool;
overload selector("lockFocusIfCanDraw") = Bool;
overload selector("lockFocusIfCanDrawInContext:") = Bool, NSGraphicsContext;
overload selector("lockFocusOnRepresentation:") = Void, NSImageRep;
overload selector("lockWhenCondition:") = Void, CLong;
overload selector("lockWhenCondition:beforeDate:") = Bool, CLong, NSDate;
overload selector("lockWithPath:") = NSDistributedLock, NSString;
overload selector("longCharacterIsMember:") = Bool, UInt;
overload selector("longDesc") = NSString;
overload selector("longEraSymbols") = NSArray;
overload selector("longLongValue") = Int64;
overload selector("longValue") = CLong;
overload selector("lookupNamespaceURI:") = NSString, NSString;
overload selector("lookupPrefix:") = NSString, NSString;
overload selector("loops") = Bool;
overload selector("loosenKerning:") = Void, Id;
overload selector("lossyCString") = Pointer[CChar];
overload selector("lowerBaseline:") = Void, Id;
overload selector("lowercaseLetterCharacterSet") = Id;
overload selector("lowercaseString") = NSString;
overload selector("lowercaseWord:") = Void, Id;
overload selector("lowsrc") = NSString;
overload selector("machPort") = UInt;
overload selector("magentaColor") = NSColor;
overload selector("magentaComponent") = Double;
overload selector("magnification") = Double;
overload selector("magnificationFilter") = NSString;
overload selector("magnifyWithEvent:") = Void, NSEvent;
overload selector("main") = Void;
overload selector("mainBundle") = NSBundle;
overload selector("mainDocumentURL") = NSURL;
overload selector("mainFrame") = WebFrame;
overload selector("mainFrameDocument") = DOMDocument;
overload selector("mainFrameIcon") = NSImage;
overload selector("mainFrameTitle") = NSString;
overload selector("mainFrameURL") = NSString;
overload selector("mainMenu") = NSMenu;
overload selector("mainQueue") = Id;
overload selector("mainResource") = WebResource;
overload selector("mainRunLoop") = NSRunLoop;
overload selector("mainScreen") = NSScreen;
overload selector("mainThread") = NSThread;
overload selector("mainWindow") = NSWindow;
overload selector("maintainsInactiveSelection") = Bool;
overload selector("makeBackingLayer") = CALayer;
overload selector("makeBaseWritingDirectionLeftToRight:") = Void, Id;
overload selector("makeBaseWritingDirectionNatural:") = Void, Id;
overload selector("makeBaseWritingDirectionRightToLeft:") = Void, Id;
overload selector("makeCellAtRow:column:") = NSCell, CLong, CLong;
overload selector("makeCurrentContext") = Void;
overload selector("makeDocumentForURL:withContentsOfURL:ofType:error:") = Id, NSURL, NSURL, NSString, Pointer[NSError];
overload selector("makeDocumentWithContentsOfFile:ofType:") = Id, NSString, NSString;
overload selector("makeDocumentWithContentsOfURL:ofType:") = Id, NSURL, NSString;
overload selector("makeDocumentWithContentsOfURL:ofType:error:") = Id, NSURL, NSString, Pointer[NSError];
overload selector("makeFirstResponder:") = Bool, NSResponder;
overload selector("makeKeyAndOrderFront:") = Void, Id;
overload selector("makeKeyWindow") = Void;
overload selector("makeMainWindow") = Void;
overload selector("makeNewConnection:sender:") = Bool, NSConnection, NSConnection;
overload selector("makeNextSegmentKey") = Void;
overload selector("makeObjectsPerformSelector:") = Void, SelectorHandle;
overload selector("makeObjectsPerformSelector:withObject:") = Void, SelectorHandle, Id;
overload selector("makePreviousSegmentKey") = Void;
overload selector("makeTextLarger:") = Void, Id;
overload selector("makeTextSmaller:") = Void, Id;
overload selector("makeTextStandardSize:") = Void, Id;
overload selector("makeTextWritingDirectionLeftToRight:") = Void, Id;
overload selector("makeTextWritingDirectionNatural:") = Void, Id;
overload selector("makeTextWritingDirectionRightToLeft:") = Void, Id;
overload selector("makeUntitledDocumentOfType:") = Id, NSString;
overload selector("makeUntitledDocumentOfType:error:") = Id, NSString, Pointer[NSError];
overload selector("makeWindowControllers") = Void;
overload selector("makeWindowsPerform:inOrder:") = NSWindow, SelectorHandle, Bool;
overload selector("managedObjectClassName") = NSString;
overload selector("managedObjectContext") = NSManagedObjectContext;
overload selector("managedObjectIDForURIRepresentation:") = NSManagedObjectID, NSURL;
overload selector("managedObjectModel") = Id;
overload selector("mapTableWithKeyOptions:valueOptions:") = Id, CULong, CULong;
overload selector("mapTableWithStrongToStrongObjects") = Id;
overload selector("mapTableWithStrongToWeakObjects") = Id;
overload selector("mapTableWithWeakToStrongObjects") = Id;
overload selector("mapTableWithWeakToWeakObjects") = Id;
overload selector("mappingModel") = NSMappingModel;
overload selector("mappingModelFromBundles:forSourceModel:destinationModel:") = NSMappingModel, NSArray, NSManagedObjectModel, NSManagedObjectModel;
overload selector("mappingType") = CULong;
overload selector("margin") = NSString;
overload selector("marginBottom") = NSString;
overload selector("marginHeight") = NSString;
overload selector("marginLeft") = NSString;
overload selector("marginRight") = NSString;
overload selector("marginTop") = NSString;
overload selector("marginWidth") = NSString;
overload selector("markedRange") = NSRange;
overload selector("markedTextAbandoned:") = Void, Id;
overload selector("markedTextAttributes") = NSDictionary;
overload selector("markedTextSelectionChanged:client:") = Void, NSRange, Id;
overload selector("markerForItemNumber:") = NSString, CLong;
overload selector("markerFormat") = NSString;
overload selector("markerLocation") = Double;
overload selector("markerOffset") = NSString;
overload selector("markers") = NSArray;
overload selector("marks") = NSString;
overload selector("markupString") = NSString;
overload selector("mask") = CALayer;
overload selector("masksToBounds") = Bool;
overload selector("matchForPredicate:") = Double, NSPredicate;
overload selector("matchesAppleEventCode:") = Bool, UInt;
overload selector("matchesContentsOfURL:") = Bool, NSURL;
overload selector("matchesOnMultipleResolution") = Bool;
overload selector("matchingFontDescriptorWithMandatoryKeys:") = NSFontDescriptor, NSSet;
overload selector("matchingFontDescriptorsWithMandatoryKeys:") = NSArray, NSSet;
overload selector("matrix") = Pointer[Double];
overload selector("matrixClass") = Id;
overload selector("matrixInColumn:") = NSMatrix, CLong;
overload selector("maxConcurrentOperationCount") = CLong;
overload selector("maxContentSize") = NSSize;
overload selector("maxCount") = CULong;
overload selector("maxDate") = NSDate;
overload selector("maxHeight") = NSString;
overload selector("maxItemSize") = NSSize;
overload selector("maxLength") = Int;
overload selector("maxNumberOfColumns") = CULong;
overload selector("maxNumberOfRows") = CULong;
overload selector("maxPossiblePositionOfDividerAtIndex:") = Double, CLong;
overload selector("maxSize") = NSSize;
overload selector("maxValue") = Double;
overload selector("maxVisibleColumns") = CLong;
overload selector("maxWidth") = NSString;
overload selector("maximum") = NSNumber;
overload selector("maximumAdvancement") = NSSize;
overload selector("maximumDecimalNumber") = NSDecimalNumber;
overload selector("maximumFractionDigits") = CULong;
overload selector("maximumIntegerDigits") = CULong;
overload selector("maximumLengthOfBytesUsingEncoding:") = CULong, CULong;
overload selector("maximumLineHeight") = Double;
overload selector("maximumRangeOfUnit:") = NSRange, CULong;
overload selector("maximumRecentDocumentCount") = CULong;
overload selector("maximumRecents") = CLong;
overload selector("maximumSignificantDigits") = CULong;
overload selector("measurementUnits") = NSString;
overload selector("media") = Id;
overload selector("mediaStyle") = NSString;
overload selector("mediaText") = NSString;
overload selector("member:") = Id, Id;
overload selector("memoryCapacity") = CULong;
overload selector("menu") = NSMenu;
overload selector("menu:updateItem:atIndex:shouldCancel:") = Bool, NSMenu, NSMenuItem, CLong, Bool;
overload selector("menu:willHighlightItem:") = Void, NSMenu, NSMenuItem;
overload selector("menuBarFontOfSize:") = NSFont, Double;
overload selector("menuBarHeight") = Double;
overload selector("menuBarVisible") = Bool;
overload selector("menuChanged:") = Void, NSMenu;
overload selector("menuChangedMessagesEnabled") = Bool;
overload selector("menuDidClose:") = Void, NSMenu;
overload selector("menuFontOfSize:") = NSFont, Double;
overload selector("menuForEvent:") = NSMenu, NSEvent;
overload selector("menuForEvent:inRect:ofView:") = NSMenu, NSEvent, NSRect, NSView;
overload selector("menuForResult:string:options:atLocation:inView:") = NSMenu, NSTextCheckingResult, NSString, NSDictionary, NSPoint, NSView;
overload selector("menuForSegment:") = NSMenu, CLong;
overload selector("menuFormRepresentation") = NSMenuItem;
overload selector("menuHasKeyEquivalent:forEvent:target:action:") = Bool, NSMenu, NSEvent, Pointer[Id], Pointer[SelectorHandle];
overload selector("menuItem") = NSMenuItem;
overload selector("menuNeedsUpdate:") = Void, NSMenu;
overload selector("menuRepresentation") = Id;
overload selector("menuWillOpen:") = Void, NSMenu;
overload selector("menuZone") = Pointer[NSZone];
overload selector("mergeChangesFromContextDidSaveNotification:") = Void, NSNotification;
overload selector("mergePolicy") = Id;
overload selector("mergedModelFromBundles:") = NSManagedObjectModel, NSArray;
overload selector("mergedModelFromBundles:forStoreMetadata:") = NSManagedObjectModel, NSArray, NSDictionary;
overload selector("message") = NSString;
overload selector("messageFontOfSize:") = NSFont, Double;
overload selector("messageText") = NSString;
overload selector("metaKey") = Bool;
overload selector("metadata") = NSDictionary;
overload selector("metadataForPersistentStore:") = NSDictionary, NSPersistentStore;
overload selector("metadataForPersistentStoreOfType:URL:error:") = NSDictionary, NSString, NSURL, Pointer[NSError];
overload selector("metadataForPersistentStoreWithURL:error:") = NSDictionary, NSURL, Pointer[NSError];
overload selector("metadataQuery:replacementObjectForResultObject:") = Id, NSMetadataQuery, NSMetadataItem;
overload selector("metadataQuery:replacementValueForAttribute:value:") = Id, NSMetadataQuery, NSString, Id;
overload selector("method") = NSString;
overload selector("methodForSelector:") = IMP, SelectorHandle;
overload selector("methodReturnLength") = CULong;
overload selector("methodReturnType") = Pointer[CChar];
overload selector("methodSignature") = NSMethodSignature;
overload selector("methodSignatureForSelector:") = NSMethodSignature, SelectorHandle;
overload selector("migratePersistentStore:toURL:options:withType:error:") = NSPersistentStore, NSPersistentStore, NSURL, NSDictionary, NSString, Pointer[NSError];
overload selector("migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:") = Bool, NSURL, NSString, NSDictionary, NSMappingModel, NSURL, NSString, NSDictionary, Pointer[NSError];
overload selector("migrationManagerClass") = Id;
overload selector("migrationProgress") = Float;
overload selector("minColumnWidth") = Double;
overload selector("minContentSize") = NSSize;
overload selector("minCount") = CULong;
overload selector("minDate") = NSDate;
overload selector("minFrameWidthWithTitle:styleMask:") = Double, NSString, CULong;
overload selector("minHeight") = NSString;
overload selector("minItemSize") = NSSize;
overload selector("minPossiblePositionOfDividerAtIndex:") = Double, CLong;
overload selector("minSize") = NSSize;
overload selector("minValue") = Double;
overload selector("minWidth") = NSString;
overload selector("miniaturize:") = Void, Id;
overload selector("miniaturizeAll:") = Void, Id;
overload selector("minificationFilter") = NSString;
overload selector("minificationFilterBias") = Float;
overload selector("minimum") = NSNumber;
overload selector("minimumDaysInFirstWeek") = CULong;
overload selector("minimumDecimalNumber") = NSDecimalNumber;
overload selector("minimumFontSize") = Int;
overload selector("minimumFractionDigits") = CULong;
overload selector("minimumIntegerDigits") = CULong;
overload selector("minimumLineHeight") = Double;
overload selector("minimumLogicalFontSize") = Int;
overload selector("minimumRangeOfUnit:") = NSRange, CULong;
overload selector("minimumSignificantDigits") = CULong;
overload selector("minimumSize") = NSSize;
overload selector("minimumWidth") = Double;
overload selector("miniwindowImage") = NSImage;
overload selector("miniwindowTitle") = NSString;
overload selector("minusHashTable:") = Void, NSHashTable;
overload selector("minusSet:") = Void, NSSet;
overload selector("minusSign") = NSString;
overload selector("minute") = CLong;
overload selector("minuteOfHour") = CLong;
overload selector("miterLimit") = Double;
overload selector("mixedStateImage") = NSImage;
overload selector("mnemonic") = NSString;
overload selector("mnemonicLocation") = CULong;
overload selector("modalWindow") = NSWindow;
overload selector("mode") = CULong;
overload selector("modelByMergingModels:") = NSManagedObjectModel, NSArray;
overload selector("modelByMergingModels:forStoreMetadata:") = NSManagedObjectModel, NSArray, NSDictionary;
overload selector("modelLayer") = Id;
overload selector("modifier") = CULong;
overload selector("modifierFlags") = CULong;
overload selector("modifyFont:") = Void, Id;
overload selector("modifyFontViaPanel:") = Void, Id;
overload selector("month") = CLong;
overload selector("monthOfYear") = CLong;
overload selector("monthSymbols") = NSArray;
overload selector("mostCompatibleStringEncoding") = CULong;
overload selector("mountNewRemovableMedia") = NSArray;
overload selector("mountedLocalVolumePaths") = NSArray;
overload selector("mountedRemovableMedia") = NSArray;
overload selector("mountedVolumeURLsIncludingResourceValuesForKeys:options:") = NSArray, NSArray, CULong;
overload selector("mouse:inRect:") = Bool, NSPoint, NSRect;
overload selector("mouseDown:") = Void, NSEvent;
overload selector("mouseDownCanMoveWindow") = Bool;
overload selector("mouseDownFlags") = CLong;
overload selector("mouseDownOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, CULong, NSPoint, CULong, Id;
overload selector("mouseDragged:") = Void, NSEvent;
overload selector("mouseDraggedOnCharacterIndex:atCoordinate:withModifier:client:") = Bool, CULong, NSPoint, CULong, Id;
overload selector("mouseEntered:") = Void, NSEvent;
overload selector("mouseEntered:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
overload selector("mouseEventWithType:location:modifierFlags:timestamp:windowNumber:context:eventNumber:clickCount:pressure:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, CLong, CLong, Float;
overload selector("mouseExited:") = Void, NSEvent;
overload selector("mouseExited:withFrame:inView:") = Void, NSEvent, NSRect, NSView;
overload selector("mouseLocation") = NSPoint;
overload selector("mouseLocationOutsideOfEventStream") = NSPoint;
overload selector("mouseMoved:") = Void, NSEvent;
overload selector("mouseUp:") = Void, NSEvent;
overload selector("mouseUpOnCharacterIndex:atCoordinate:withModifier:client:") = Void, CULong, NSPoint, CULong, Id;
overload selector("moveBackward:") = Void, Id;
overload selector("moveBackwardAndModifySelection:") = Void, Id;
overload selector("moveColumn:toColumn:") = Void, CLong, CLong;
overload selector("moveDown:") = Void, Id;
overload selector("moveDownAndModifySelection:") = Void, Id;
overload selector("moveDragCaretToPoint:") = Void, NSPoint;
overload selector("moveForward:") = Void, Id;
overload selector("moveForwardAndModifySelection:") = Void, Id;
overload selector("moveItemAtPath:toPath:error:") = Bool, NSString, NSString, Pointer[NSError];
overload selector("moveItemAtURL:toURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector("moveLeft:") = Void, Id;
overload selector("moveLeftAndModifySelection:") = Void, Id;
overload selector("moveNode:toIndexPath:") = Void, NSTreeNode, NSIndexPath;
overload selector("moveNodes:toIndexPath:") = Void, NSArray, NSIndexPath;
overload selector("moveParagraphBackwardAndModifySelection:") = Void, Id;
overload selector("moveParagraphForwardAndModifySelection:") = Void, Id;
overload selector("movePath:toPath:handler:") = Bool, NSString, NSString, Id;
overload selector("moveRight:") = Void, Id;
overload selector("moveRightAndModifySelection:") = Void, Id;
overload selector("moveRulerlineFromLocation:toLocation:") = Void, Double, Double;
overload selector("moveToBeginningOfDocument:") = Void, Id;
overload selector("moveToBeginningOfDocumentAndModifySelection:") = Void, Id;
overload selector("moveToBeginningOfLine:") = Void, Id;
overload selector("moveToBeginningOfLineAndModifySelection:") = Void, Id;
overload selector("moveToBeginningOfParagraph:") = Void, Id;
overload selector("moveToBeginningOfParagraphAndModifySelection:") = Void, Id;
overload selector("moveToBeginningOfSentence:") = Void, Id;
overload selector("moveToBeginningOfSentenceAndModifySelection:") = Void, Id;
overload selector("moveToEndOfDocument:") = Void, Id;
overload selector("moveToEndOfDocumentAndModifySelection:") = Void, Id;
overload selector("moveToEndOfLine:") = Void, Id;
overload selector("moveToEndOfLineAndModifySelection:") = Void, Id;
overload selector("moveToEndOfParagraph:") = Void, Id;
overload selector("moveToEndOfParagraphAndModifySelection:") = Void, Id;
overload selector("moveToEndOfSentence:") = Void, Id;
overload selector("moveToEndOfSentenceAndModifySelection:") = Void, Id;
overload selector("moveToLeftEndOfLine:") = Void, Id;
overload selector("moveToLeftEndOfLineAndModifySelection:") = Void, Id;
overload selector("moveToPoint:") = Void, NSPoint;
overload selector("moveToRightEndOfLine:") = Void, Id;
overload selector("moveToRightEndOfLineAndModifySelection:") = Void, Id;
overload selector("moveUp:") = Void, Id;
overload selector("moveUpAndModifySelection:") = Void, Id;
overload selector("moveWordBackward:") = Void, Id;
overload selector("moveWordBackwardAndModifySelection:") = Void, Id;
overload selector("moveWordForward:") = Void, Id;
overload selector("moveWordForwardAndModifySelection:") = Void, Id;
overload selector("moveWordLeft:") = Void, Id;
overload selector("moveWordLeftAndModifySelection:") = Void, Id;
overload selector("moveWordRight:") = Void, Id;
overload selector("moveWordRightAndModifySelection:") = Void, Id;
overload selector("msgid") = UInt;
overload selector("multiple") = Bool;
overload selector("multipleThreadsEnabled") = Bool;
overload selector("multiplier") = NSNumber;
overload selector("mutableArrayValueForKey:") = NSMutableArray, NSString;
overload selector("mutableArrayValueForKeyPath:") = NSMutableArray, NSString;
overload selector("mutableBytes") = RawPointer;
overload selector("mutableChildNodes") = NSMutableArray;
overload selector("mutableCopy") = Id;
overload selector("mutableCopyWithZone:") = Id, Pointer[NSZone];
overload selector("mutableSetValueForKey:") = NSMutableSet, NSString;
overload selector("mutableSetValueForKeyPath:") = NSMutableSet, NSString;
overload selector("mutableString") = NSMutableString;
overload selector("name") = NSString;
overload selector("nameFieldLabel") = NSString;
overload selector("nameFieldStringValue") = NSString;
overload selector("namedItem:") = DOMNode, NSString;
overload selector("names") = NSArray;
overload selector("namesOfPromisedFilesDroppedAtDestination:") = NSArray, NSURL;
overload selector("namespaceForPrefix:") = NSXMLNode, NSString;
overload selector("namespaceURI") = NSString;
overload selector("namespaceWithName:stringValue:") = Id, NSString, NSString;
overload selector("namespaces") = NSArray;
overload selector("naturalHeight") = Int;
overload selector("naturalWidth") = Int;
overload selector("needsDisplay") = Bool;
overload selector("needsDisplayForKey:") = Bool, NSString;
overload selector("needsDisplayOnBoundsChange") = Bool;
overload selector("needsLayout") = Bool;
overload selector("needsPanelToBecomeKey") = Bool;
overload selector("needsSizing") = Bool;
overload selector("needsToBeUpdatedFromPath:") = Bool, NSString;
overload selector("needsToDrawRect:") = Bool, NSRect;
overload selector("negativeFormat") = NSString;
overload selector("negativeInfinitySymbol") = NSString;
overload selector("negativePrefix") = NSString;
overload selector("negativeSuffix") = NSString;
overload selector("nestingMode") = CULong;
overload selector("netService:didNotPublish:") = Void, NSNetService, NSDictionary;
overload selector("netService:didNotResolve:") = Void, NSNetService, NSDictionary;
overload selector("netService:didUpdateTXTRecordData:") = Void, NSNetService, NSData;
overload selector("netServiceBrowser:didFindDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
overload selector("netServiceBrowser:didFindService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
overload selector("netServiceBrowser:didNotSearch:") = Void, NSNetServiceBrowser, NSDictionary;
overload selector("netServiceBrowser:didRemoveDomain:moreComing:") = Void, NSNetServiceBrowser, NSString, Bool;
overload selector("netServiceBrowser:didRemoveService:moreComing:") = Void, NSNetServiceBrowser, NSNetService, Bool;
overload selector("netServiceBrowserDidStopSearch:") = Void, NSNetServiceBrowser;
overload selector("netServiceBrowserWillSearch:") = Void, NSNetServiceBrowser;
overload selector("netServiceDidPublish:") = Void, NSNetService;
overload selector("netServiceDidResolveAddress:") = Void, NSNetService;
overload selector("netServiceDidStop:") = Void, NSNetService;
overload selector("netServiceWillPublish:") = Void, NSNetService;
overload selector("netServiceWillResolve:") = Void, NSNetService;
overload selector("new") = Id;
overload selector("newCacheNodeForManagedObject:") = NSAtomicStoreCacheNode, NSManagedObject;
overload selector("newDocument:") = Void, Id;
overload selector("newItemForRepresentedObject:") = NSCollectionViewItem, Id;
overload selector("newObject") = Id;
overload selector("newReferenceObjectForManagedObject:") = Id, NSManagedObject;
overload selector("newScriptingObjectOfClass:forValueForKey:withContentsValue:properties:") = Id, Id, NSString, Id, NSDictionary;
overload selector("newValue") = NSString;
overload selector("newlineCharacterSet") = Id;
overload selector("nextDaylightSavingTimeTransition") = NSDate;
overload selector("nextDaylightSavingTimeTransitionAfterDate:") = NSDate, NSDate;
overload selector("nextElementSibling") = DOMElement;
overload selector("nextEventMatchingMask:") = NSEvent, CULong;
overload selector("nextEventMatchingMask:untilDate:inMode:dequeue:") = NSEvent, CULong, NSDate, NSString, Bool;
overload selector("nextKeyView") = NSView;
overload selector("nextNode") = Id;
overload selector("nextObject") = Id;
overload selector("nextResponder") = NSResponder;
overload selector("nextSibling") = Id;
overload selector("nextState") = CLong;
overload selector("nextValidKeyView") = NSView;
overload selector("nextWordFromIndex:forward:") = CULong, CULong, Bool;
overload selector("nibBundle") = NSBundle;
overload selector("nibName") = NSString;
overload selector("nilSymbol") = NSString;
overload selector("noHref") = Bool;
overload selector("noResize") = Bool;
overload selector("noResponderFor:") = Void, SelectorHandle;
overload selector("noShade") = Bool;
overload selector("noWrap") = Bool;
overload selector("nodeName") = NSString;
overload selector("nodeType") = UShort;
overload selector("nodeValue") = NSString;
overload selector("nodesForXPath:error:") = NSArray, NSString, Pointer[NSError];
overload selector("nonBaseCharacterSet") = Id;
overload selector("nonretainedObjectValue") = Id;
overload selector("normalize") = Void;
overload selector("normalizeAdjacentTextNodesPreservingCDATA:") = Void, Bool;
overload selector("normalizedPosition") = NSPoint;
overload selector("notANumber") = NSDecimalNumber;
overload selector("notANumberSymbol") = NSString;
overload selector("notPredicateWithSubpredicate:") = NSPredicate, NSPredicate;
overload selector("notShownAttributeForGlyphAtIndex:") = Bool, CULong;
overload selector("notationDeclarationForName:") = NSXMLDTDNode, NSString;
overload selector("notationName") = NSString;
overload selector("notations") = DOMNamedNodeMap;
overload selector("note") = NSString;
overload selector("noteFileSystemChanged") = Void;
overload selector("noteFileSystemChanged:") = Void, NSString;
overload selector("noteHeightOfRowsWithIndexesChanged:") = Void, NSIndexSet;
overload selector("noteHeightOfRowsWithIndexesChanged:inColumn:") = Void, NSIndexSet, CLong;
overload selector("noteNewRecentDocument:") = Void, NSDocument;
overload selector("noteNewRecentDocumentURL:") = Void, NSURL;
overload selector("noteNumberOfItemsChanged") = Void;
overload selector("noteNumberOfRowsChanged") = Void;
overload selector("noteUserDefaultsChanged") = Void;
overload selector("notificationBatchingInterval") = Double;
overload selector("notificationCenter") = NSNotificationCenter;
overload selector("notificationCenterForType:") = NSDistributedNotificationCenter, NSString;
overload selector("notificationWithName:object:") = Id, NSString, Id;
overload selector("notificationWithName:object:userInfo:") = Id, NSString, Id, NSDictionary;
overload selector("null") = NSNull;
overload selector("nullDescriptor") = NSAppleEventDescriptor;
overload selector("numberFromString:") = NSNumber, NSString;
overload selector("numberOfArguments") = CULong;
overload selector("numberOfColorComponents") = CLong;
overload selector("numberOfColorStops") = CLong;
overload selector("numberOfColumns") = CLong;
overload selector("numberOfComponents") = CULong;
overload selector("numberOfGlyphs") = CULong;
overload selector("numberOfItems") = CLong;
overload selector("numberOfItemsInComboBox:") = CLong, NSComboBox;
overload selector("numberOfItemsInComboBoxCell:") = CLong, NSComboBoxCell;
overload selector("numberOfItemsInMenu:") = CLong, NSMenu;
overload selector("numberOfMajorTickMarks") = CLong;
overload selector("numberOfPlanes") = CLong;
overload selector("numberOfRows") = CLong;
overload selector("numberOfRowsInTableView:") = CLong, NSTableView;
overload selector("numberOfSelectedColumns") = CLong;
overload selector("numberOfSelectedRows") = CLong;
overload selector("numberOfTabViewItems") = CLong;
overload selector("numberOfTickMarks") = CLong;
overload selector("numberOfVirtualScreens") = Int;
overload selector("numberOfVisibleColumns") = CLong;
overload selector("numberOfVisibleItems") = CLong;
overload selector("numberStyle") = CULong;
overload selector("numberValue") = Double;
overload selector("numberWithBool:") = NSNumber, Bool;
overload selector("numberWithChar:") = NSNumber, CChar;
overload selector("numberWithDouble:") = NSNumber, Double;
overload selector("numberWithFloat:") = NSNumber, Float;
overload selector("numberWithInt:") = NSNumber, Int;
overload selector("numberWithInteger:") = NSNumber, CLong;
overload selector("numberWithLong:") = NSNumber, CLong;
overload selector("numberWithLongLong:") = NSNumber, Int64;
overload selector("numberWithShort:") = NSNumber, Short;
overload selector("numberWithUnsignedChar:") = NSNumber, CUChar;
overload selector("numberWithUnsignedInt:") = NSNumber, UInt;
overload selector("numberWithUnsignedInteger:") = NSNumber, CULong;
overload selector("numberWithUnsignedLong:") = NSNumber, CULong;
overload selector("numberWithUnsignedLongLong:") = NSNumber, UInt64;
overload selector("numberWithUnsignedShort:") = NSNumber, UShort;
overload selector("objCType") = Pointer[CChar];
overload selector("object") = Id;
overload selector("objectAtIndex:") = Id, CULong;
overload selector("objectBeingTested") = Id;
overload selector("objectByApplyingXSLT:arguments:error:") = Id, NSData, NSDictionary, Pointer[NSError];
overload selector("objectByApplyingXSLTAtURL:arguments:error:") = Id, NSURL, NSDictionary, Pointer[NSError];
overload selector("objectByApplyingXSLTString:arguments:error:") = Id, NSString, NSDictionary, Pointer[NSError];
overload selector("objectClass") = Id;
overload selector("objectDidBeginEditing:") = Void, Id;
overload selector("objectDidEndEditing:") = Void, Id;
overload selector("objectEnumerator") = NSEnumerator;
overload selector("objectForInfoDictionaryKey:") = Id, NSString;
overload selector("objectForKey:") = Id, Id;
overload selector("objectForProperty:error:") = Id, NSString, Pointer[NSError];
overload selector("objectForWebScript") = Id;
overload selector("objectID") = NSManagedObjectID;
overload selector("objectIDForEntity:referenceObject:") = NSManagedObjectID, NSEntityDescription, Id;
overload selector("objectIsForcedForKey:") = Bool, NSString;
overload selector("objectIsForcedForKey:inDomain:") = Bool, NSString, NSString;
overload selector("objectRegisteredForID:") = NSManagedObject, NSManagedObjectID;
overload selector("objectSpecifier") = NSScriptObjectSpecifier;
overload selector("objectSpecifierWithDescriptor:") = NSScriptObjectSpecifier, NSAppleEventDescriptor;
overload selector("objectValue") = Id;
overload selector("objectValueOfSelectedItem") = Id;
overload selector("objectValues") = NSArray;
overload selector("objectWithID:") = NSManagedObject, NSManagedObjectID;
overload selector("objectZone") = Pointer[NSZone];
overload selector("objectsAtIndexes:") = NSArray, NSIndexSet;
overload selector("objectsByEvaluatingSpecifier") = Id;
overload selector("objectsByEvaluatingWithContainers:") = Id, Id;
overload selector("objectsForKeys:notFoundMarker:") = NSArray, NSArray, Id;
overload selector("objectsForXQuery:constants:error:") = NSArray, NSString, NSDictionary, Pointer[NSError];
overload selector("objectsForXQuery:error:") = NSArray, NSString, Pointer[NSError];
overload selector("objectsPassingTest:") = NSSet, UnknownType;
overload selector("objectsWithOptions:passingTest:") = NSSet, CULong, UnknownType;
overload selector("observationInfo") = RawPointer;
overload selector("observeValueForKeyPath:ofObject:change:context:") = Void, NSString, Id, NSDictionary, RawPointer;
overload selector("obtainPermanentIDsForObjects:error:") = Bool, NSArray, Pointer[NSError];
overload selector("offStateImage") = NSImage;
overload selector("offsetHeight") = Int;
overload selector("offsetInFile") = UInt64;
overload selector("offsetLeft") = Int;
overload selector("offsetParent") = DOMElement;
overload selector("offsetTop") = Int;
overload selector("offsetWidth") = Int;
overload selector("offsetX") = Int;
overload selector("offsetY") = Int;
overload selector("ok:") = Void, Id;
overload selector("onStateImage") = NSImage;
overload selector("one") = NSDecimalNumber;
overload selector("opacity") = Float;
overload selector("opaqueAncestor") = NSView;
overload selector("open") = Void;
overload selector("open:") = Void, Id;
overload selector("openDocument:") = Void, Id;
overload selector("openDocumentWithContentsOfFile:display:") = Id, NSString, Bool;
overload selector("openDocumentWithContentsOfURL:display:") = Id, NSURL, Bool;
overload selector("openDocumentWithContentsOfURL:display:error:") = Id, NSURL, Bool, Pointer[NSError];
overload selector("openFile:") = Bool, NSString;
overload selector("openFile:fromImage:at:inView:") = Bool, NSString, NSImage, NSPoint, NSView;
overload selector("openFile:withApplication:") = Bool, NSString, NSString;
overload selector("openFile:withApplication:andDeactivate:") = Bool, NSString, NSString, Bool;
overload selector("openGLContext") = NSOpenGLContext;
overload selector("openGLContextForPixelFormat:") = NSOpenGLContext, NSOpenGLPixelFormat;
overload selector("openGLPixelFormat") = NSOpenGLPixelFormat;
overload selector("openGLPixelFormatForDisplayMask:") = NSOpenGLPixelFormat, UInt;
overload selector("openHandCursor") = NSCursor;
overload selector("openHelpAnchor:inBook:") = Void, NSString, NSString;
overload selector("openOnEdge:") = Void, CULong;
overload selector("openPanel") = NSOpenPanel;
overload selector("openTempFile:") = Bool, NSString;
overload selector("openURL:") = Bool, NSURL;
overload selector("openURLs:withAppBundleIdentifier:options:additionalEventParamDescriptor:launchIdentifiers:") = Bool, NSArray, NSString, CULong, NSAppleEventDescriptor, Pointer[NSArray];
overload selector("openUntitledDocumentAndDisplay:error:") = Id, Bool, Pointer[NSError];
overload selector("openUntitledDocumentOfType:display:") = Id, NSString, Bool;
overload selector("operand") = NSExpression;
overload selector("operatingSystem") = CULong;
overload selector("operatingSystemName") = NSString;
overload selector("operatingSystemVersionString") = NSString;
overload selector("operationCount") = CULong;
overload selector("operationNotAllowedCursor") = NSCursor;
overload selector("operations") = NSArray;
overload selector("operators") = NSArray;
overload selector("optionDescriptionsForBinding:") = NSArray, NSString;
overload selector("optionalSharedHistory") = WebHistory;
overload selector("options") = CULong;
overload selector("orPredicateWithSubpredicates:") = NSPredicate, NSArray;
overload selector("orangeColor") = NSColor;
overload selector("orderBack:") = Void, Id;
overload selector("orderFront:") = Void, Id;
overload selector("orderFrontCharacterPalette:") = Void, Id;
overload selector("orderFrontColorPanel:") = Void, Id;
overload selector("orderFrontFontPanel:") = Void, Id;
overload selector("orderFrontLinkPanel:") = Void, Id;
overload selector("orderFrontListPanel:") = Void, Id;
overload selector("orderFrontRegardless") = Void;
overload selector("orderFrontSpacingPanel:") = Void, Id;
overload selector("orderFrontStandardAboutPanel:") = Void, Id;
overload selector("orderFrontStandardAboutPanelWithOptions:") = Void, NSDictionary;
overload selector("orderFrontStylesPanel:") = Void, Id;
overload selector("orderFrontSubstitutionsPanel:") = Void, Id;
overload selector("orderFrontTablePanel:") = Void, Id;
overload selector("orderOut:") = Void, Id;
overload selector("orderWindow:relativeTo:") = Void, CLong, CLong;
overload selector("orderedDocuments") = NSArray;
overload selector("orderedIndex") = CLong;
overload selector("orderedItemsLastVisitedOnDay:") = NSArray, NSCalendarDate;
overload selector("orderedLastVisitedDays") = NSArray;
overload selector("orderedWindows") = NSArray;
overload selector("ordinalityOfUnit:inUnit:forDate:") = CULong, CULong, CULong, NSDate;
overload selector("orient") = UShort;
overload selector("orientation") = CULong;
overload selector("originOffset") = Double;
overload selector("originalURLString") = NSString;
overload selector("orphans") = NSString;
overload selector("orthography") = NSOrthography;
overload selector("orthographyCheckingResultWithRange:orthography:") = NSTextCheckingResult, NSRange, NSOrthography;
overload selector("orthographyWithDominantScript:languageMap:") = Id, NSString, NSDictionary;
overload selector("otherEventWithType:location:modifierFlags:timestamp:windowNumber:context:subtype:data1:data2:") = NSEvent, CULong, NSPoint, CULong, Double, CLong, NSGraphicsContext, Short, CLong, CLong;
overload selector("otherMouseDown:") = Void, NSEvent;
overload selector("otherMouseDragged:") = Void, NSEvent;
overload selector("otherMouseUp:") = Void, NSEvent;
overload selector("outerHTML") = NSString;
overload selector("outerText") = NSString;
overload selector("outline") = NSString;
overload selector("outline:") = Void, Id;
overload selector("outlineColor") = NSString;
overload selector("outlineStyle") = NSString;
overload selector("outlineTableColumn") = NSTableColumn;
overload selector("outlineView:acceptDrop:item:childIndex:") = Bool, NSOutlineView, Id, Id, CLong;
overload selector("outlineView:child:ofItem:") = Id, NSOutlineView, CLong, Id;
overload selector("outlineView:dataCellForTableColumn:item:") = NSCell, NSOutlineView, NSTableColumn, Id;
overload selector("outlineView:didClickTableColumn:") = Void, NSOutlineView, NSTableColumn;
overload selector("outlineView:didDragTableColumn:") = Void, NSOutlineView, NSTableColumn;
overload selector("outlineView:heightOfRowByItem:") = Double, NSOutlineView, Id;
overload selector("outlineView:isGroupItem:") = Bool, NSOutlineView, Id;
overload selector("outlineView:isItemExpandable:") = Bool, NSOutlineView, Id;
overload selector("outlineView:itemForPersistentObject:") = Id, NSOutlineView, Id;
overload selector("outlineView:mouseDownInHeaderOfTableColumn:") = Void, NSOutlineView, NSTableColumn;
overload selector("outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:") = NSArray, NSOutlineView, NSURL, NSArray;
overload selector("outlineView:nextTypeSelectMatchFromItem:toItem:forString:") = Id, NSOutlineView, Id, Id, NSString;
overload selector("outlineView:numberOfChildrenOfItem:") = CLong, NSOutlineView, Id;
overload selector("outlineView:objectValueForTableColumn:byItem:") = Id, NSOutlineView, NSTableColumn, Id;
overload selector("outlineView:persistentObjectForItem:") = Id, NSOutlineView, Id;
overload selector("outlineView:selectionIndexesForProposedSelection:") = NSIndexSet, NSOutlineView, NSIndexSet;
overload selector("outlineView:setObjectValue:forTableColumn:byItem:") = Void, NSOutlineView, Id, NSTableColumn, Id;
overload selector("outlineView:shouldCollapseItem:") = Bool, NSOutlineView, Id;
overload selector("outlineView:shouldEditTableColumn:item:") = Bool, NSOutlineView, NSTableColumn, Id;
overload selector("outlineView:shouldExpandItem:") = Bool, NSOutlineView, Id;
overload selector("outlineView:shouldReorderColumn:toColumn:") = Bool, NSOutlineView, CLong, CLong;
overload selector("outlineView:shouldSelectItem:") = Bool, NSOutlineView, Id;
overload selector("outlineView:shouldSelectTableColumn:") = Bool, NSOutlineView, NSTableColumn;
overload selector("outlineView:shouldShowCellExpansionForTableColumn:item:") = Bool, NSOutlineView, NSTableColumn, Id;
overload selector("outlineView:shouldShowOutlineCellForItem:") = Bool, NSOutlineView, Id;
overload selector("outlineView:shouldTrackCell:forTableColumn:item:") = Bool, NSOutlineView, NSCell, NSTableColumn, Id;
overload selector("outlineView:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSOutlineView, NSEvent, NSString;
overload selector("outlineView:sizeToFitWidthOfColumn:") = Double, NSOutlineView, CLong;
overload selector("outlineView:sortDescriptorsDidChange:") = Void, NSOutlineView, NSArray;
overload selector("outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:") = NSString, NSOutlineView, NSCell, NSRectPointer, NSTableColumn, Id, NSPoint;
overload selector("outlineView:typeSelectStringForTableColumn:item:") = NSString, NSOutlineView, NSTableColumn, Id;
overload selector("outlineView:validateDrop:proposedItem:proposedChildIndex:") = CULong, NSOutlineView, Id, Id, CLong;
overload selector("outlineView:willDisplayCell:forTableColumn:item:") = Void, NSOutlineView, Id, NSTableColumn, Id;
overload selector("outlineView:willDisplayOutlineCell:forTableColumn:item:") = Void, NSOutlineView, Id, NSTableColumn, Id;
overload selector("outlineView:writeItems:toPasteboard:") = Bool, NSOutlineView, NSArray, NSPasteboard;
overload selector("outlineViewColumnDidMove:") = Void, NSNotification;
overload selector("outlineViewColumnDidResize:") = Void, NSNotification;
overload selector("outlineViewItemDidCollapse:") = Void, NSNotification;
overload selector("outlineViewItemDidExpand:") = Void, NSNotification;
overload selector("outlineViewItemWillCollapse:") = Void, NSNotification;
overload selector("outlineViewItemWillExpand:") = Void, NSNotification;
overload selector("outlineViewSelectionDidChange:") = Void, NSNotification;
overload selector("outlineViewSelectionIsChanging:") = Void, NSNotification;
overload selector("outlineWidth") = NSString;
overload selector("outputFormat") = CULong;
overload selector("outputStreamToBuffer:capacity:") = Id, Pointer[CUChar], CULong;
overload selector("outputStreamToFileAtPath:append:") = Id, NSString, Bool;
overload selector("outputStreamToMemory") = Id;
overload selector("outputStreamWithURL:append:") = Id, NSURL, Bool;
overload selector("overflow") = NSString;
overload selector("owner") = Id;
overload selector("ownerDocument") = DOMDocument;
overload selector("ownerElement") = DOMElement;
overload selector("ownerNode") = DOMNode;
overload selector("ownerRule") = DOMCSSRule;
overload selector("padding") = NSString;
overload selector("paddingBottom") = NSString;
overload selector("paddingCharacter") = NSString;
overload selector("paddingLeft") = NSString;
overload selector("paddingPosition") = CULong;
overload selector("paddingRight") = NSString;
overload selector("paddingTop") = NSString;
overload selector("page") = NSString;
overload selector("pageBreakAfter") = NSString;
overload selector("pageBreakBefore") = NSString;
overload selector("pageBreakInside") = NSString;
overload selector("pageCacheSize") = CULong;
overload selector("pageCount") = CLong;
overload selector("pageDown:") = Void, Id;
overload selector("pageDownAndModifySelection:") = Void, Id;
overload selector("pageFooter") = NSAttributedString;
overload selector("pageHeader") = NSAttributedString;
overload selector("pageLayout") = NSPageLayout;
overload selector("pageOrder") = CLong;
overload selector("pageRange") = NSRange;
overload selector("pageScroll") = Double;
overload selector("pageSizeForPaper:") = NSSize, NSString;
overload selector("pageTitle") = NSString;
overload selector("pageUp:") = Void, Id;
overload selector("pageUpAndModifySelection:") = Void, Id;
overload selector("pageX") = Int;
overload selector("pageY") = Int;
overload selector("paletteFontOfSize:") = NSFont, Double;
overload selector("paletteLabel") = NSString;
overload selector("panel:compareFilename:with:caseSensitive:") = CLong, Id, NSString, NSString, Bool;
overload selector("panel:didChangeToDirectoryURL:") = Void, Id, NSURL;
overload selector("panel:directoryDidChange:") = Void, Id, NSString;
overload selector("panel:isValidFilename:") = Bool, Id, NSString;
overload selector("panel:shouldEnableURL:") = Bool, Id, NSURL;
overload selector("panel:shouldShowFilename:") = Bool, Id, NSString;
overload selector("panel:userEnteredFilename:confirmed:") = NSString, Id, NSString, Bool;
overload selector("panel:validateURL:error:") = Bool, Id, NSURL, Pointer[NSError];
overload selector("panel:willExpand:") = Void, Id, Bool;
overload selector("panelConvertFont:") = NSFont, NSFont;
overload selector("panelSelectionDidChange:") = Void, Id;
overload selector("paperName") = NSString;
overload selector("paperSize") = NSSize;
overload selector("paragraphCharacterRange") = NSRange;
overload selector("paragraphGlyphRange") = NSRange;
overload selector("paragraphRangeForRange:") = NSRange, NSRange;
overload selector("paragraphSeparatorCharacterRange") = NSRange;
overload selector("paragraphSeparatorGlyphRange") = NSRange;
overload selector("paragraphSpacing") = Double;
overload selector("paragraphSpacingAfterGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
overload selector("paragraphSpacingBefore") = Double;
overload selector("paragraphSpacingBeforeGlyphAtIndex:withProposedLineFragmentRect:") = Double, CULong, NSRect;
overload selector("paragraphs") = NSArray;
overload selector("paramDescriptorForKeyword:") = NSAppleEventDescriptor, UInt;
overload selector("parameterString") = NSString;
overload selector("parent") = NSXMLNode;
overload selector("parentElement") = DOMElement;
overload selector("parentForItem:") = Id, Id;
overload selector("parentForItemsInColumn:") = Id, CLong;
overload selector("parentFrame") = WebFrame;
overload selector("parentItem") = NSMenuItem;
overload selector("parentNode") = Id;
overload selector("parentRowForRow:") = CLong, CLong;
overload selector("parentRule") = DOMCSSRule;
overload selector("parentStyleSheet") = Id;
overload selector("parentWindow") = NSWindow;
overload selector("parse") = Bool;
overload selector("parser:didEndElement:namespaceURI:qualifiedName:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector("parser:didEndMappingPrefix:") = Void, NSXMLParser, NSString;
overload selector("parser:didStartElement:namespaceURI:qualifiedName:attributes:") = Void, NSXMLParser, NSString, NSString, NSString, NSDictionary;
overload selector("parser:didStartMappingPrefix:toURI:") = Void, NSXMLParser, NSString, NSString;
overload selector("parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
overload selector("parser:foundCDATA:") = Void, NSXMLParser, NSData;
overload selector("parser:foundCharacters:") = Void, NSXMLParser, NSString;
overload selector("parser:foundComment:") = Void, NSXMLParser, NSString;
overload selector("parser:foundElementDeclarationWithName:model:") = Void, NSXMLParser, NSString, NSString;
overload selector("parser:foundExternalEntityDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector("parser:foundIgnorableWhitespace:") = Void, NSXMLParser, NSString;
overload selector("parser:foundInternalEntityDeclarationWithName:value:") = Void, NSXMLParser, NSString, NSString;
overload selector("parser:foundNotationDeclarationWithName:publicID:systemID:") = Void, NSXMLParser, NSString, NSString, NSString;
overload selector("parser:foundProcessingInstructionWithTarget:data:") = Void, NSXMLParser, NSString, NSString;
overload selector("parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:") = Void, NSXMLParser, NSString, NSString, NSString, NSString;
overload selector("parser:parseErrorOccurred:") = Void, NSXMLParser, NSError;
overload selector("parser:resolveExternalEntityName:systemID:") = NSData, NSXMLParser, NSString, NSString;
overload selector("parser:validationErrorOccurred:") = Void, NSXMLParser, NSError;
overload selector("parserDidEndDocument:") = Void, NSXMLParser;
overload selector("parserDidStartDocument:") = Void, NSXMLParser;
overload selector("parserError") = NSError;
overload selector("password") = NSString;
overload selector("paste:") = Void, Id;
overload selector("pasteAsPlainText:") = Void, Id;
overload selector("pasteAsRichText:") = Void, Id;
overload selector("pasteFont:") = Void, Id;
overload selector("pasteRuler:") = Void, Id;
overload selector("pasteboard:item:provideDataForType:") = Void, NSPasteboard, NSPasteboardItem, NSString;
overload selector("pasteboard:provideDataForType:") = Void, NSPasteboard, NSString;
overload selector("pasteboardByFilteringData:ofType:") = NSPasteboard, NSData, NSString;
overload selector("pasteboardByFilteringFile:") = NSPasteboard, NSString;
overload selector("pasteboardByFilteringTypesInPasteboard:") = NSPasteboard, NSPasteboard;
overload selector("pasteboardChangedOwner:") = Void, NSPasteboard;
overload selector("pasteboardFinishedWithDataProvider:") = Void, NSPasteboard;
overload selector("pasteboardItems") = NSArray;
overload selector("pasteboardPropertyListForType:") = Id, NSString;
overload selector("pasteboardTypesForElement:") = NSArray, NSDictionary;
overload selector("pasteboardTypesForSelection") = NSArray;
overload selector("pasteboardWithName:") = NSPasteboard, NSString;
overload selector("pasteboardWithUniqueName") = NSPasteboard;
overload selector("path") = NSString;
overload selector("pathCell:willDisplayOpenPanel:") = Void, NSPathCell, NSOpenPanel;
overload selector("pathCell:willPopUpMenu:") = Void, NSPathCell, NSMenu;
overload selector("pathComponentCellAtPoint:withFrame:inView:") = NSPathComponentCell, NSPoint, NSRect, NSView;
overload selector("pathComponentCellClass") = Id;
overload selector("pathComponentCells") = NSArray;
overload selector("pathComponents") = NSArray;
overload selector("pathContentOfSymbolicLinkAtPath:") = NSString, NSString;
overload selector("pathControl:acceptDrop:") = Bool, NSPathControl, Id;
overload selector("pathControl:shouldDragPathComponentCell:withPasteboard:") = Bool, NSPathControl, NSPathComponentCell, NSPasteboard;
overload selector("pathControl:validateDrop:") = CULong, NSPathControl, Id;
overload selector("pathControl:willDisplayOpenPanel:") = Void, NSPathControl, NSOpenPanel;
overload selector("pathControl:willPopUpMenu:") = Void, NSPathControl, NSMenu;
overload selector("pathExtension") = NSString;
overload selector("pathForAuxiliaryExecutable:") = NSString, NSString;
overload selector("pathForImageResource:") = NSString, NSString;
overload selector("pathForResource:ofType:") = NSString, NSString, NSString;
overload selector("pathForResource:ofType:inDirectory:") = NSString, NSString, NSString, NSString;
overload selector("pathForResource:ofType:inDirectory:forLocalization:") = NSString, NSString, NSString, NSString, NSString;
overload selector("pathForSoundResource:") = NSString, NSString;
overload selector("pathSeparator") = NSString;
overload selector("pathStyle") = CLong;
overload selector("pathToColumn:") = NSString, CLong;
overload selector("pathWithComponents:") = NSString, NSArray;
overload selector("pathname") = NSString;
overload selector("pathsForResourcesOfType:inDirectory:") = NSArray, NSString, NSString;
overload selector("pathsForResourcesOfType:inDirectory:forLocalization:") = NSArray, NSString, NSString, NSString;
overload selector("pathsMatchingExtensions:") = NSArray, NSArray;
overload selector("patternImage") = NSImage;
overload selector("patternPhase") = NSPoint;
overload selector("pause") = NSString;
overload selector("pauseAfter") = NSString;
overload selector("pauseBefore") = NSString;
overload selector("pauseSpeakingAtBoundary:") = Void, CULong;
overload selector("perMillSymbol") = NSString;
overload selector("percentSymbol") = NSString;
overload selector("performActionForItem:") = Void, Id;
overload selector("performActionForItemAtIndex:") = Void, CLong;
overload selector("performClick:") = Void, Id;
overload selector("performClickOnCellAtColumn:row:") = Void, CLong, CLong;
overload selector("performClickWithFrame:inView:") = Void, NSRect, NSView;
overload selector("performClose:") = Void, Id;
overload selector("performCustomValidationForEntityMapping:manager:error:") = Bool, NSEntityMapping, NSMigrationManager, Pointer[NSError];
overload selector("performDefaultImplementation") = Id;
overload selector("performDragOperation:") = Bool, Id;
overload selector("performFileOperation:source:destination:files:tag:") = Bool, NSString, NSString, NSString, NSArray, Pointer[CLong];
overload selector("performFindPanelAction:") = Void, Id;
overload selector("performKeyEquivalent:") = Bool, NSEvent;
overload selector("performMiniaturize:") = Void, Id;
overload selector("performMnemonic:") = Bool, NSString;
overload selector("performSelector:") = Id, SelectorHandle;
overload selector("performSelector:onThread:withObject:waitUntilDone:") = Void, SelectorHandle, NSThread, Id, Bool;
overload selector("performSelector:onThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, NSThread, Id, Bool, NSArray;
overload selector("performSelector:target:argument:order:modes:") = Void, SelectorHandle, Id, Id, CULong, NSArray;
overload selector("performSelector:withObject:") = Id, SelectorHandle, Id;
overload selector("performSelector:withObject:afterDelay:") = Void, SelectorHandle, Id, Double;
overload selector("performSelector:withObject:afterDelay:inModes:") = Void, SelectorHandle, Id, Double, NSArray;
overload selector("performSelector:withObject:withObject:") = Id, SelectorHandle, Id, Id;
overload selector("performSelectorInBackground:withObject:") = Void, SelectorHandle, Id;
overload selector("performSelectorOnMainThread:withObject:waitUntilDone:") = Void, SelectorHandle, Id, Bool;
overload selector("performSelectorOnMainThread:withObject:waitUntilDone:modes:") = Void, SelectorHandle, Id, Bool, NSArray;
overload selector("performZoom:") = Void, Id;
overload selector("persistence") = CULong;
overload selector("persistentDomainForName:") = NSDictionary, NSString;
overload selector("persistentDomainNames") = NSArray;
overload selector("persistentStore") = NSPersistentStore;
overload selector("persistentStoreCoordinator") = NSPersistentStoreCoordinator;
overload selector("persistentStoreForURL:") = NSPersistentStore, NSURL;
overload selector("persistentStoreTypeForFileType:") = NSString, NSString;
overload selector("persistentStores") = NSArray;
overload selector("phase") = CULong;
overload selector("phonemesFromText:") = NSString, NSString;
overload selector("physicalMemory") = UInt64;
overload selector("pipe") = Id;
overload selector("pitch") = NSString;
overload selector("pitchRange") = NSString;
overload selector("pixelBuffer") = NSOpenGLPixelBuffer;
overload selector("pixelBufferCubeMapFace") = UInt;
overload selector("pixelBufferMipMapLevel") = Int;
overload selector("pixelFormat") = NSOpenGLPixelFormat;
overload selector("pixelsHigh") = CLong;
overload selector("pixelsWide") = CLong;
overload selector("placeholderAttributedString") = NSAttributedString;
overload selector("placeholderString") = NSString;
overload selector("play") = Bool;
overload selector("playDuring") = NSString;
overload selector("playbackDeviceIdentifier") = NSString;
overload selector("plugInViewWithArguments:") = NSView, NSDictionary;
overload selector("plugins") = DOMHTMLCollection;
overload selector("plusSign") = NSString;
overload selector("pointSize") = Double;
overload selector("pointValue") = NSPoint;
overload selector("pointerArrayWithOptions:") = Id, CULong;
overload selector("pointerArrayWithPointerFunctions:") = Id, NSPointerFunctions;
overload selector("pointerArrayWithStrongObjects") = Id;
overload selector("pointerArrayWithWeakObjects") = Id;
overload selector("pointerAtIndex:") = RawPointer, CULong;
overload selector("pointerBeforeReferenceNode") = Bool;
overload selector("pointerFunctions") = NSPointerFunctions;
overload selector("pointerFunctionsWithOptions:") = Id, CULong;
overload selector("pointerValue") = RawPointer;
overload selector("pointingDeviceID") = CULong;
overload selector("pointingDeviceSerialNumber") = CULong;
overload selector("pointingDeviceType") = CULong;
overload selector("pointingHandCursor") = NSCursor;
overload selector("policyDelegate") = Id;
overload selector("pop") = Void;
overload selector("popUpContextMenu:withEvent:forView:") = Void, NSMenu, NSEvent, NSView;
overload selector("popUpContextMenu:withEvent:forView:withFont:") = Void, NSMenu, NSEvent, NSView, NSFont;
overload selector("popUpMenuPositioningItem:atLocation:inView:") = Bool, NSMenuItem, NSPoint, NSView;
overload selector("popUpStatusItemMenu:") = Void, NSMenu;
overload selector("port") = Id;
overload selector("portCoderWithReceivePort:sendPort:components:") = Id, NSPort, NSPort, NSArray;
overload selector("portForName:") = NSPort, NSString;
overload selector("portForName:host:") = NSPort, NSString, NSString;
overload selector("portForName:host:nameServerPortNumber:") = NSPort, NSString, NSString, UShort;
overload selector("portList") = NSArray;
overload selector("portWithMachPort:") = NSPort, UInt;
overload selector("portWithMachPort:options:") = NSPort, UInt, CULong;
overload selector("poseAsClass:") = Void, Id;
overload selector("position") = CULong;
overload selector("positiveFormat") = NSString;
overload selector("positiveInfinitySymbol") = NSString;
overload selector("positivePrefix") = NSString;
overload selector("positiveSuffix") = NSString;
overload selector("postEvent:atStart:") = Void, NSEvent, Bool;
overload selector("postNotification:") = Void, NSNotification;
overload selector("postNotificationName:object:") = Void, NSString, Id;
overload selector("postNotificationName:object:userInfo:") = Void, NSString, Id, NSDictionary;
overload selector("postNotificationName:object:userInfo:deliverImmediately:") = Void, NSString, NSString, NSDictionary, Bool;
overload selector("postNotificationName:object:userInfo:options:") = Void, NSString, NSString, NSDictionary, CULong;
overload selector("postsBoundsChangedNotifications") = Bool;
overload selector("postsFrameChangedNotifications") = Bool;
overload selector("postscriptName") = NSString;
overload selector("precomposedStringWithCanonicalMapping") = NSString;
overload selector("precomposedStringWithCompatibilityMapping") = NSString;
overload selector("predefinedEntityDeclarationForName:") = NSXMLDTDNode, NSString;
overload selector("predefinedNamespaceForPrefix:") = NSXMLNode, NSString;
overload selector("predicate") = NSPredicate;
overload selector("predicateForRow:") = NSPredicate, CLong;
overload selector("predicateFormat") = NSString;
overload selector("predicateOperatorType") = CULong;
overload selector("predicateWithBlock:") = NSPredicate, UnknownType;
overload varargSelector("predicateWithFormat:") = NSPredicate, NSString;
overload selector("predicateWithFormat:argumentArray:") = NSPredicate, NSString, NSArray;
overload selector("predicateWithFormat:arguments:") = NSPredicate, NSString, Pointer[__va_list_tag];
overload selector("predicateWithLeftExpression:rightExpression:customSelector:") = NSPredicate, NSExpression, NSExpression, SelectorHandle;
overload selector("predicateWithLeftExpression:rightExpression:modifier:type:options:") = NSPredicate, NSExpression, NSExpression, CULong, CULong, CULong;
overload selector("predicateWithSubpredicates:") = NSPredicate, NSArray;
overload selector("predicateWithSubstitutionVariables:") = NSPredicate, NSDictionary;
overload selector("predicateWithValue:") = NSPredicate, Bool;
overload selector("preferences") = WebPreferences;
overload selector("preferencesIdentifier") = NSString;
overload selector("preferredBackingLocation") = CULong;
overload selector("preferredEdge") = CULong;
overload selector("preferredFilename") = NSString;
overload selector("preferredFilenameExtensionForType:") = NSString, NSString;
overload selector("preferredFrameSize") = CGSize;
overload selector("preferredLanguages") = NSArray;
overload selector("preferredLocalizations") = NSArray;
overload selector("preferredLocalizationsFromArray:") = NSArray, NSArray;
overload selector("preferredLocalizationsFromArray:forPreferences:") = NSArray, NSArray, NSArray;
overload selector("preferredPasteboardTypeFromArray:restrictedToTypesFromArray:") = NSString, NSArray, NSArray;
overload selector("preferredSizeOfLayer:") = CGSize, CALayer;
overload selector("preferredStylesheetSet") = NSString;
overload selector("prefersAllColumnUserResizing") = Bool;
overload selector("prefersColorMatch") = Bool;
overload selector("prefersTrackingUntilMouseUp") = Bool;
overload selector("prefix") = NSString;
overload selector("prefixForName:") = NSString, NSString;
overload selector("preflightAndReturnError:") = Bool, Pointer[NSError];
overload selector("prepareContent") = Void;
overload selector("prepareForDeletion") = Void;
overload selector("prepareForDragOperation:") = Bool, Id;
overload selector("prepareGState") = Void;
overload selector("prepareOpenGL") = Void;
overload selector("preparePageLayout:") = Bool, NSPageLayout;
overload selector("prepareSavePanel:") = Bool, NSSavePanel;
overload selector("prepareWithInvocationTarget:") = Id, Id;
overload selector("preparedCellAtColumn:row:") = NSCell, CLong, CLong;
overload selector("prependTransform:") = Void, NSAffineTransform;
overload selector("presentError:") = Bool, NSError;
overload selector("presentError:modalForWindow:delegate:didPresentSelector:contextInfo:") = Void, NSError, NSWindow, Id, SelectorHandle, RawPointer;
overload selector("presentationLayer") = Id;
overload selector("presentationOptions") = CULong;
overload selector("preservesContentDuringLiveResize") = Bool;
overload selector("preservesSelection") = Bool;
overload selector("pressedMouseButtons") = CULong;
overload selector("pressure") = Float;
overload selector("prevValue") = NSString;
overload selector("preventDefault") = Void;
overload selector("preventWindowOrdering") = Void;
overload selector("preventsApplicationTerminationWhenModal") = Bool;
overload selector("previousElementSibling") = DOMElement;
overload selector("previousFailureCount") = CLong;
overload selector("previousKeyView") = NSView;
overload selector("previousNode") = Id;
overload selector("previousSibling") = Id;
overload selector("previousValidKeyView") = NSView;
overload selector("primitiveType") = UShort;
overload selector("primitiveValueForKey:") = Id, NSString;
overload selector("principalClass") = Id;
overload selector("print:") = Void, Id;
overload selector("printDocument:") = Void, Id;
overload selector("printDocumentView") = Void;
overload selector("printDocumentWithSettings:showPrintPanel:delegate:didPrintSelector:contextInfo:") = Void, NSDictionary, Bool, Id, SelectorHandle, RawPointer;
overload selector("printInfo") = NSPrintInfo;
overload selector("printJobTitle") = NSString;
overload selector("printOperationWithPrintInfo:") = NSPrintOperation, NSPrintInfo;
overload selector("printOperationWithSettings:error:") = NSPrintOperation, NSDictionary, Pointer[NSError];
overload selector("printOperationWithView:") = NSPrintOperation, NSView;
overload selector("printOperationWithView:printInfo:") = NSPrintOperation, NSView, NSPrintInfo;
overload selector("printPanel") = NSPrintPanel;
overload selector("printSettings") = NSMutableDictionary;
overload selector("printShowingPrintPanel:") = Void, Bool;
overload selector("printer") = NSPrinter;
overload selector("printerFont") = NSFont;
overload selector("printerNames") = NSArray;
overload selector("printerTypes") = NSArray;
overload selector("printerWithName:") = NSPrinter, NSString;
overload selector("printerWithName:domain:includeUnavailable:") = NSPrinter, NSString, NSString, Bool;
overload selector("printerWithType:") = NSPrinter, NSString;
overload selector("printingAdjustmentInLayoutManager:forNominallySpacedGlyphRange:packedGlyphs:count:") = NSSize, NSLayoutManager, NSRange, Pointer[CUChar], CULong;
overload selector("privateBrowsingEnabled") = Bool;
overload selector("privateFrameworksPath") = NSString;
overload selector("privateFrameworksURL") = NSURL;
overload selector("processEditing") = Void;
overload selector("processIdentifier") = Int;
overload selector("processInfo") = NSProcessInfo;
overload selector("processName") = NSString;
overload selector("processPendingChanges") = Void;
overload selector("processingInstructionWithName:stringValue:") = Id, NSString, NSString;
overload selector("processorCount") = CULong;
overload selector("profile") = NSString;
overload selector("progressMarks") = NSArray;
overload selector("prompt") = NSString;
overload selector("propagatesDeletesAtEndOfEvent") = Bool;
overload selector("properties") = Id;
overload selector("propertiesByName") = NSDictionary;
overload selector("propertiesToFetch") = NSArray;
overload selector("propertiesToUpdate") = CULong;
overload selector("propertyCache") = NSMutableDictionary;
overload selector("propertyForKey:") = Id, NSString;
overload selector("propertyForKey:inRequest:") = Id, NSString, NSURLRequest;
overload selector("propertyForKeyIfAvailable:") = Id, NSString;
overload selector("propertyList") = Id;
overload selector("propertyList:isValidForFormat:") = Bool, Id, CULong;
overload selector("propertyListForType:") = Id, NSString;
overload selector("propertyListFromData:mutabilityOption:format:errorDescription:") = Id, NSData, CULong, Pointer[CULong], Pointer[NSString];
overload selector("propertyListFromStringsFileFormat") = NSDictionary;
overload selector("propertyListWithData:options:format:error:") = Id, NSData, CULong, Pointer[CULong], Pointer[NSError];
overload selector("propertyListWithStream:options:format:error:") = Id, NSInputStream, CULong, Pointer[CULong], Pointer[NSError];
overload selector("proposedCredential") = NSURLCredential;
overload selector("protectionSpace") = NSURLProtectionSpace;
overload selector("protocol") = Int;
overload selector("protocolCheckerWithTarget:protocol:") = Id, NSObject, Id;
overload selector("protocolFamily") = Int;
overload selector("protocolSpecificInformation") = NSString;
overload selector("prototype") = Id;
overload selector("provideNewButtonImage") = NSImage;
overload selector("provideNewView:") = NSView, Bool;
overload selector("provisionalDataSource") = WebDataSource;
overload selector("proxyType") = NSString;
overload selector("proxyWithLocal:connection:") = NSDistantObject, Id, NSConnection;
overload selector("proxyWithTarget:connection:") = NSDistantObject, Id, NSConnection;
overload selector("publicID") = NSString;
overload selector("publicId") = NSString;
overload selector("publish") = Void;
overload selector("publishWithOptions:") = Void, CULong;
overload selector("pullsDown") = Bool;
overload selector("punctuationCharacterSet") = Id;
overload selector("purpleColor") = NSColor;
overload selector("push") = Void;
overload selector("putCell:atRow:column:") = Void, NSCell, CLong, CLong;
overload selector("quarter") = CLong;
overload selector("quarterSymbols") = NSArray;
overload selector("query") = NSString;
overload selector("queryCommandEnabled:") = Bool, NSString;
overload selector("queryCommandIndeterm:") = Bool, NSString;
overload selector("queryCommandState:") = Bool, NSString;
overload selector("queryCommandSupported:") = Bool, NSString;
overload selector("queryCommandValue:") = NSString, NSString;
overload selector("querySelector:") = DOMElement, NSString;
overload selector("querySelectorAll:") = DOMNodeList, NSString;
overload selector("queuePriority") = CLong;
overload selector("quoteCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector("quotes") = NSString;
overload selector("raise") = Void;
overload varargSelector("raise:format:") = Void, NSString, NSString;
overload selector("raise:format:arguments:") = Void, NSString, NSString, Pointer[__va_list_tag];
overload selector("raiseBaseline:") = Void, Id;
overload selector("range") = NSRange;
overload selector("rangeContainerObject") = Id;
overload selector("rangeForUserCharacterAttributeChange") = NSRange;
overload selector("rangeForUserCompletion") = NSRange;
overload selector("rangeForUserParagraphAttributeChange") = NSRange;
overload selector("rangeForUserTextChange") = NSRange;
overload selector("rangeOfCharacterFromSet:") = NSRange, NSCharacterSet;
overload selector("rangeOfCharacterFromSet:options:") = NSRange, NSCharacterSet, CULong;
overload selector("rangeOfCharacterFromSet:options:range:") = NSRange, NSCharacterSet, CULong, NSRange;
overload selector("rangeOfComposedCharacterSequenceAtIndex:") = NSRange, CULong;
overload selector("rangeOfComposedCharacterSequencesForRange:") = NSRange, NSRange;
overload selector("rangeOfData:options:range:") = NSRange, NSData, CULong, NSRange;
overload selector("rangeOfNominallySpacedGlyphsContainingIndex:") = NSRange, CULong;
overload selector("rangeOfString:") = NSRange, NSString;
overload selector("rangeOfString:options:") = NSRange, NSString, CULong;
overload selector("rangeOfString:options:range:") = NSRange, NSString, CULong, NSRange;
overload selector("rangeOfString:options:range:locale:") = NSRange, NSString, CULong, NSRange, NSLocale;
overload selector("rangeOfTextBlock:atIndex:") = NSRange, NSTextBlock, CULong;
overload selector("rangeOfTextList:atIndex:") = NSRange, NSTextList, CULong;
overload selector("rangeOfTextTable:atIndex:") = NSRange, NSTextTable, CULong;
overload selector("rangeOfUnit:inUnit:forDate:") = NSRange, CULong, CULong, NSDate;
overload selector("rangeOfUnit:startDate:interval:forDate:") = Bool, CULong, Pointer[NSDate], Pointer[Double], NSDate;
overload selector("rangeValue") = NSRange;
overload selector("rangesForUserCharacterAttributeChange") = NSArray;
overload selector("rangesForUserParagraphAttributeChange") = NSArray;
overload selector("rangesForUserTextChange") = NSArray;
overload selector("rate") = Float;
overload selector("read:maxLength:") = CLong, Pointer[CUChar], CULong;
overload selector("readDataOfLength:") = NSData, CULong;
overload selector("readDataToEndOfFile") = NSData;
overload selector("readFileContentsType:toFile:") = NSString, NSString, NSString;
overload selector("readFileWrapper") = NSFileWrapper;
overload selector("readFromData:ofType:error:") = Bool, NSData, NSString, Pointer[NSError];
overload selector("readFromData:options:documentAttributes:") = Bool, NSData, NSDictionary, Pointer[NSDictionary];
overload selector("readFromData:options:documentAttributes:error:") = Bool, NSData, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
overload selector("readFromFile:ofType:") = Bool, NSString, NSString;
overload selector("readFromFileWrapper:ofType:error:") = Bool, NSFileWrapper, NSString, Pointer[NSError];
overload selector("readFromURL:ofType:") = Bool, NSURL, NSString;
overload selector("readFromURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
overload selector("readFromURL:options:documentAttributes:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary];
overload selector("readFromURL:options:documentAttributes:error:") = Bool, NSURL, NSDictionary, Pointer[NSDictionary], Pointer[NSError];
overload selector("readFromURL:options:error:") = Bool, NSURL, CULong, Pointer[NSError];
overload selector("readInBackgroundAndNotify") = Void;
overload selector("readInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector("readObjectsForClasses:options:") = NSArray, NSArray, NSDictionary;
overload selector("readOnly") = Bool;
overload selector("readPrintInfo") = Void;
overload selector("readRTFDFromFile:") = Bool, NSString;
overload selector("readSelectionFromPasteboard:") = Bool, NSPasteboard;
overload selector("readSelectionFromPasteboard:type:") = Bool, NSPasteboard, NSString;
overload selector("readToEndOfFileInBackgroundAndNotify") = Void;
overload selector("readToEndOfFileInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector("readablePasteboardTypes") = NSArray;
overload selector("readableTypes") = NSArray;
overload selector("readableTypesForPasteboard:") = NSArray, NSPasteboard;
overload selector("readingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
overload selector("readyState") = NSString;
overload selector("realm") = NSString;
overload selector("rearrangeObjects") = Void;
overload selector("reason") = NSString;
overload selector("recache") = Void;
overload selector("recalculateKeyViewLoop") = Void;
overload selector("receivePort") = NSPort;
overload selector("receivedData:withDataSource:") = Void, NSData, WebDataSource;
overload selector("receivedError:withDataSource:") = Void, NSError, WebDataSource;
overload selector("receiversSpecifier") = NSScriptObjectSpecifier;
overload selector("receivesCredentialSecurely") = Bool;
overload selector("recentDocumentURLs") = NSArray;
overload selector("recentSearches") = NSArray;
overload selector("recentsAutosaveName") = NSString;
overload selector("recordDescriptor") = NSAppleEventDescriptor;
overload selector("recoveryAttempter") = Id;
overload selector("rect") = NSRect;
overload selector("rectArrayForCharacterRange:withinSelectedCharacterRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[CULong];
overload selector("rectArrayForGlyphRange:withinSelectedGlyphRange:inTextContainer:rectCount:") = NSRectArray, NSRange, NSRange, NSTextContainer, Pointer[CULong];
overload selector("rectForBlock:layoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSTextTableBlock, NSPoint, NSRect, NSTextContainer, NSRange;
overload selector("rectForKey:inTable:") = NSRect, NSString, NSString;
overload selector("rectForLayoutAtPoint:inRect:textContainer:characterRange:") = NSRect, NSPoint, NSRect, NSTextContainer, NSRange;
overload selector("rectForPage:") = NSRect, CLong;
overload selector("rectForPart:") = NSRect, CULong;
overload selector("rectOfColumn:") = NSRect, CLong;
overload selector("rectOfPathComponentCell:withFrame:inView:") = NSRect, NSPathComponentCell, NSRect, NSView;
overload selector("rectOfRow:") = NSRect, CLong;
overload selector("rectOfTickMarkAtIndex:") = NSRect, CLong;
overload selector("rectPreservedDuringLiveResize") = NSRect;
overload selector("rectValue") = NSRect;
overload selector("recycleURLs:completionHandler:") = Void, NSArray, UnknownType;
overload selector("red") = DOMCSSPrimitiveValue;
overload selector("redColor") = NSColor;
overload selector("redComponent") = Double;
overload selector("redo") = Void;
overload selector("redoActionName") = NSString;
overload selector("redoMenuItemTitle") = NSString;
overload selector("redoMenuTitleForUndoActionName:") = NSString, NSString;
overload selector("referenceNode") = DOMNode;
overload selector("referenceObjectForObjectID:") = Id, NSManagedObjectID;
overload selector("referrer") = NSString;
overload selector("reflectScrolledClipView:") = Void, NSClipView;
overload selector("refreshObject:mergeChanges:") = Void, NSManagedObject, Bool;
overload selector("refusesFirstResponder") = Bool;
overload selector("registerBooksInBundle:") = Bool, NSBundle;
overload selector("registerClass:") = Bool, Id;
overload selector("registerClassDescription:") = Void, NSScriptClassDescription;
overload selector("registerClassDescription:forClass:") = Void, NSClassDescription, Id;
overload selector("registerCoercer:selector:toConvertFromClass:toClass:") = Void, Id, SelectorHandle, Id, Id;
overload selector("registerCommandDescription:") = Void, NSScriptCommandDescription;
overload selector("registerDefaults:") = Void, NSDictionary;
overload selector("registerForDraggedTypes:") = Void, NSArray;
overload selector("registerForServices") = Void;
overload selector("registerImageRepClass:") = Void, Id;
overload selector("registerLanguage:byVendor:") = Bool, NSString, NSString;
overload selector("registerName:") = Bool, NSString;
overload selector("registerName:withNameServer:") = Bool, NSString, NSPortNameServer;
overload selector("registerPort:name:") = Bool, NSPort, NSString;
overload selector("registerPort:name:nameServerPortNumber:") = Bool, NSPort, NSString, UShort;
overload selector("registerServicesMenuSendTypes:returnTypes:") = Void, NSArray, NSArray;
overload selector("registerStoreClass:forStoreType:") = Void, Id, NSString;
overload selector("registerURLHandleClass:") = Void, Id;
overload selector("registerURLSchemeAsLocal:") = Void, NSString;
overload selector("registerUndoWithTarget:selector:object:") = Void, Id, SelectorHandle, Id;
overload selector("registerUnitWithName:abbreviation:unitToPointsConversionFactor:stepUpCycle:stepDownCycle:") = Void, NSString, NSString, Double, NSArray, NSArray;
overload selector("registerUserInterfaceItemSearchHandler:") = Void, Id;
overload selector("registerViewClass:representationClass:forMIMEType:") = Void, Id, Id, NSString;
overload selector("registeredDraggedTypes") = NSArray;
overload selector("registeredImageRepClasses") = NSArray;
overload selector("registeredObjects") = NSSet;
overload selector("registeredStoreTypes") = NSDictionary;
overload selector("regularFileContents") = NSData;
overload selector("rel") = NSString;
overload selector("relatedNode") = DOMNode;
overload selector("relatedTarget") = Id;
overload selector("relationshipKeyPathsForPrefetching") = NSArray;
overload selector("relationshipMappings") = NSArray;
overload selector("relationshipsByName") = NSDictionary;
overload selector("relationshipsWithDestinationEntity:") = NSArray, NSEntityDescription;
overload selector("relativeCurveToPoint:controlPoint1:controlPoint2:") = Void, NSPoint, NSPoint, NSPoint;
overload selector("relativeLineToPoint:") = Void, NSPoint;
overload selector("relativeMoveToPoint:") = Void, NSPoint;
overload selector("relativePath") = NSString;
overload selector("relativePosition") = CULong;
overload selector("relativeString") = NSString;
overload selector("release") = Void;
overload selector("releaseCGLContext:") = Void, CGLContextObj;
overload selector("releaseCGLPixelFormat:") = Void, CGLPixelFormatObj;
overload selector("releaseEvents") = Void;
overload selector("releaseGState") = Void;
overload selector("releaseGlobally") = Void;
overload selector("relinquishFunction") = CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[]];
overload selector("reload") = Void;
overload selector("reload:") = Void, Id;
overload selector("reloadColumn:") = Void, CLong;
overload selector("reloadCriteria") = Void;
overload selector("reloadData") = Void;
overload selector("reloadDataForRowIndexes:columnIndexes:") = Void, NSIndexSet, NSIndexSet;
overload selector("reloadDataForRowIndexes:inColumn:") = Void, NSIndexSet, CLong;
overload selector("reloadDefaultFontFamilies") = Void;
overload selector("reloadFromOrigin") = Void;
overload selector("reloadFromOrigin:") = Void, Id;
overload selector("reloadItem:") = Void, Id;
overload selector("reloadItem:reloadChildren:") = Void, Id, Bool;
overload selector("reloadPredicate") = Void;
overload selector("remoteObjects") = NSArray;
overload selector("remove:") = Void, UInt;
overload selector("removeAccessoryController:") = Void, NSViewController;
overload selector("removeAllActions") = Void;
overload selector("removeAllActionsWithTarget:") = Void, Id;
overload selector("removeAllAnimations") = Void;
overload selector("removeAllCachedResponses") = Void;
overload selector("removeAllIndexes") = Void;
overload selector("removeAllItems") = Void;
overload selector("removeAllObjects") = Void;
overload selector("removeAllPoints") = Void;
overload selector("removeAllToolTips") = Void;
overload selector("removeAnimationForKey:") = Void, NSString;
overload selector("removeAttribute:") = Void, NSString;
overload selector("removeAttribute:range:") = Void, NSString, NSRange;
overload selector("removeAttributeForName:") = Void, NSString;
overload selector("removeAttributeNS::") = Void, NSString, NSString;
overload selector("removeAttributeNS:localName:") = Void, NSString, NSString;
overload selector("removeAttributeNode:") = DOMAttr, DOMAttr;
overload selector("removeCachedResponseForRequest:") = Void, NSURLRequest;
overload selector("removeCharactersInRange:") = Void, NSRange;
overload selector("removeCharactersInString:") = Void, NSString;
overload selector("removeChild:") = DOMNode, DOMNode;
overload selector("removeChildAtIndex:") = Void, CULong;
overload selector("removeChildWindow:") = Void, NSWindow;
overload selector("removeClient:") = Void, Id;
overload selector("removeCollection:") = Bool, NSString;
overload selector("removeColorWithKey:") = Void, NSString;
overload selector("removeColumn:") = Void, CLong;
overload selector("removeConnection:fromRunLoop:forMode:") = Void, NSConnection, NSRunLoop, NSString;
overload selector("removeContextHelpForObject:") = Void, Id;
overload selector("removeCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector("removeCursorRect:cursor:") = Void, NSRect, NSCursor;
overload selector("removeDependency:") = Void, NSOperation;
overload selector("removeDescriptorAtIndex:") = Void, CLong;
overload selector("removeDescriptorWithKeyword:") = Void, UInt;
overload selector("removeDocument:") = Void, NSDocument;
overload selector("removeDragCaret") = Void;
overload selector("removeEntryAtIndex:") = Void, CLong;
overload selector("removeEventHandlerForEventClass:andEventID:") = Void, UInt, UInt;
overload selector("removeEventListener:::") = Void, NSString, Id, Bool;
overload selector("removeEventListener:listener:useCapture:") = Void, NSString, Id, Bool;
overload selector("removeFile") = Void;
overload selector("removeFileAtPath:handler:") = Bool, NSString, Id;
overload selector("removeFileWrapper:") = Void, NSFileWrapper;
overload selector("removeFontDescriptor:fromCollection:") = Void, NSFontDescriptor, NSString;
overload selector("removeFontTrait:") = Void, Id;
overload selector("removeFrameUsingName:") = Void, NSString;
overload selector("removeFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector("removeFromSuperlayer") = Void;
overload selector("removeFromSuperview") = Void;
overload selector("removeFromSuperviewWithoutNeedingDisplay") = Void;
overload selector("removeIndex:") = Void, CULong;
overload selector("removeIndexes:") = Void, NSIndexSet;
overload selector("removeIndexesInRange:") = Void, NSRange;
overload selector("removeItem:") = Void, NSMenuItem;
overload selector("removeItemAtIndex:") = Void, CLong;
overload selector("removeItemAtPath:error:") = Bool, NSString, Pointer[NSError];
overload selector("removeItemAtURL:error:") = Bool, NSURL, Pointer[NSError];
overload selector("removeItemWithObjectValue:") = Void, Id;
overload selector("removeItemWithTitle:") = Void, NSString;
overload selector("removeItems:") = Void, NSArray;
overload selector("removeLastObject") = Void;
overload selector("removeLayoutManager:") = Void, NSLayoutManager;
overload selector("removeMarker:") = Void, NSRulerMarker;
overload selector("removeMonitor:") = Void, Id;
overload selector("removeNamedItem:") = DOMNode, NSString;
overload selector("removeNamedItemNS::") = DOMNode, NSString, NSString;
overload selector("removeNamedItemNS:localName:") = DOMNode, NSString, NSString;
overload selector("removeNamespaceForPrefix:") = Void, NSString;
overload selector("removeObject:") = Void, Id;
overload selector("removeObject:inRange:") = Void, Id, NSRange;
overload selector("removeObjectAtArrangedObjectIndex:") = Void, CULong;
overload selector("removeObjectAtArrangedObjectIndexPath:") = Void, NSIndexPath;
overload selector("removeObjectAtIndex:") = Void, CULong;
overload selector("removeObjectForKey:") = Void, Id;
overload selector("removeObjectIdenticalTo:") = Void, Id;
overload selector("removeObjectIdenticalTo:inRange:") = Void, Id, NSRange;
overload selector("removeObjects:") = Void, NSArray;
overload selector("removeObjectsAtArrangedObjectIndexPaths:") = Void, NSArray;
overload selector("removeObjectsAtArrangedObjectIndexes:") = Void, NSIndexSet;
overload selector("removeObjectsAtIndexes:") = Void, NSIndexSet;
overload selector("removeObjectsForKeys:") = Void, NSArray;
overload selector("removeObjectsFromIndices:numIndices:") = Void, Pointer[CULong], CULong;
overload selector("removeObjectsInArray:") = Void, NSArray;
overload selector("removeObjectsInRange:") = Void, NSRange;
overload selector("removeObserver:") = Void, Id;
overload selector("removeObserver:forKeyPath:") = Void, NSObject, NSString;
overload selector("removeObserver:fromObjectsAtIndexes:forKeyPath:") = Void, NSObject, NSIndexSet, NSString;
overload selector("removeObserver:name:object:") = Void, Id, NSString, Id;
overload selector("removeParamDescriptorWithKeyword:") = Void, UInt;
overload selector("removePersistentDomainForName:") = Void, NSString;
overload selector("removePersistentStore:error:") = Bool, NSPersistentStore, Pointer[NSError];
overload selector("removePointerAtIndex:") = Void, CULong;
overload selector("removePort:forMode:") = Void, NSPort, NSString;
overload selector("removePortForName:") = Bool, NSString;
overload selector("removeProgressMark:") = Void, Float;
overload selector("removeProperty:") = NSString, NSString;
overload selector("removePropertyForKey:inRequest:") = Void, NSString, NSMutableURLRequest;
overload selector("removeRepresentation:") = Void, NSImageRep;
overload selector("removeRequestMode:") = Void, NSString;
overload selector("removeRow:") = Void, CLong;
overload selector("removeRowAtIndex:") = Void, CLong;
overload selector("removeRowsAtIndexes:includeSubrows:") = Void, NSIndexSet, Bool;
overload selector("removeRule:") = Void, UInt;
overload selector("removeRunLoop:") = Void, NSRunLoop;
overload selector("removeSavedColumnsWithAutosaveName:") = Void, NSString;
overload selector("removeSelectedObjects:") = Bool, NSArray;
overload selector("removeSelectionIndexPaths:") = Bool, NSArray;
overload selector("removeSelectionIndexes:") = Bool, NSIndexSet;
overload selector("removeStatusItem:") = Void, NSStatusItem;
overload selector("removeSuiteNamed:") = Void, NSString;
overload selector("removeTabStop:") = Void, NSTextTab;
overload selector("removeTabViewItem:") = Void, NSTabViewItem;
overload selector("removeTableColumn:") = Void, NSTableColumn;
overload selector("removeTemporaryAttribute:forCharacterRange:") = Void, NSString, NSRange;
overload selector("removeTextContainerAtIndex:") = Void, CULong;
overload selector("removeToolTip:") = Void, CLong;
overload selector("removeTrackingArea:") = Void, NSTrackingArea;
overload selector("removeTrackingRect:") = Void, CLong;
overload selector("removeValueAtIndex:fromPropertyWithKey:") = Void, CULong, NSString;
overload selector("removeVolatileDomainForName:") = Void, NSString;
overload selector("removeWebScriptKey:") = Void, NSString;
overload selector("removeWindowController:") = Void, NSWindowController;
overload selector("removeWindowsItem:") = Void, NSWindow;
overload selector("renamingIdentifier") = NSString;
overload selector("renderInContext:") = Void, CGContextRef;
overload selector("renderingMode") = CULong;
overload selector("renewGState") = Void;
overload selector("renewRows:columns:") = Void, CLong, CLong;
overload selector("reopenDocumentForURL:withContentsOfURL:error:") = Bool, NSURL, NSURL, Pointer[NSError];
overload selector("repeatCount") = Float;
overload selector("repeatDuration") = Double;
overload selector("replaceBytesInRange:withBytes:") = Void, NSRange, RawPointer;
overload selector("replaceBytesInRange:withBytes:length:") = Void, NSRange, RawPointer, CULong;
overload selector("replaceCharactersInRange:withAttributedString:") = Void, NSRange, NSAttributedString;
overload selector("replaceCharactersInRange:withRTF:") = Void, NSRange, NSData;
overload selector("replaceCharactersInRange:withRTFD:") = Void, NSRange, NSData;
overload selector("replaceCharactersInRange:withString:") = Void, NSRange, NSString;
overload selector("replaceChild::") = DOMNode, DOMNode, DOMNode;
overload selector("replaceChild:oldChild:") = DOMNode, DOMNode, DOMNode;
overload selector("replaceChildAtIndex:withNode:") = Void, CULong, NSXMLNode;
overload selector("replaceData:::") = Void, UInt, UInt, NSString;
overload selector("replaceData:length:data:") = Void, UInt, UInt, NSString;
overload selector("replaceGlyphAtIndex:withGlyph:") = Void, CULong, UInt;
overload selector("replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:") = Bool, NSURL, NSURL, NSString, CULong, Pointer[NSURL], Pointer[NSError];
overload selector("replaceLayoutManager:") = Void, NSLayoutManager;
overload selector("replaceObject:withObject:") = Void, Id, Id;
overload selector("replaceObjectAtIndex:withObject:") = Void, CULong, Id;
overload selector("replaceObjectsAtIndexes:withObjects:") = Void, NSIndexSet, NSArray;
overload selector("replaceObjectsInRange:withObjectsFromArray:") = Void, NSRange, NSArray;
overload selector("replaceObjectsInRange:withObjectsFromArray:range:") = Void, NSRange, NSArray, NSRange;
overload selector("replaceOccurrencesOfString:withString:options:range:") = CULong, NSString, NSString, CULong, NSRange;
overload selector("replacePointerAtIndex:withPointer:") = Void, CULong, RawPointer;
overload selector("replaceSelectionWithArchive:") = Void, WebArchive;
overload selector("replaceSelectionWithMarkupString:") = Void, NSString;
overload selector("replaceSelectionWithNode:") = Void, DOMNode;
overload selector("replaceSelectionWithText:") = Void, NSString;
overload selector("replaceSublayer:with:") = Void, CALayer, CALayer;
overload selector("replaceSubview:with:") = Void, NSView, NSView;
overload selector("replaceTextContainer:") = Void, NSTextContainer;
overload selector("replaceTextStorage:") = Void, NSTextStorage;
overload selector("replaceValueAtIndex:inPropertyWithKey:withValue:") = Void, CULong, NSString, Id;
overload selector("replaceWholeText:") = DOMText, NSString;
overload selector("replacementCheckingResultWithRange:replacementString:") = NSTextCheckingResult, NSRange, NSString;
overload selector("replacementClassForClass:") = Id, Id;
overload selector("replacementObjectForArchiver:") = Id, NSArchiver;
overload selector("replacementObjectForCoder:") = Id, NSCoder;
overload selector("replacementObjectForKeyedArchiver:") = Id, NSKeyedArchiver;
overload selector("replacementObjectForPortCoder:") = Id, NSPortCoder;
overload selector("replacementString") = NSString;
overload selector("replyAppleEventForSuspensionID:") = NSAppleEventDescriptor, NSAppleEventManagerSuspensionID;
overload selector("replyTimeout") = Double;
overload selector("replyToApplicationShouldTerminate:") = Void, Bool;
overload selector("replyToOpenOrPrint:") = Void, CULong;
overload selector("replyWithException:") = Void, NSException;
overload selector("reportException:") = Void, NSException;
overload selector("representation") = Id;
overload selector("representationOfImageRepsInArray:usingType:properties:") = NSData, NSArray, CULong, NSDictionary;
overload selector("representationUsingType:properties:") = NSData, CULong, NSDictionary;
overload selector("representations") = NSArray;
overload selector("representedFilename") = NSString;
overload selector("representedObject") = Id;
overload selector("representedURL") = NSURL;
overload selector("request") = Id;
overload selector("requestCheckingOfString:range:types:options:inSpellDocumentWithTag:completionHandler:") = CLong, NSString, NSRange, UInt64, NSDictionary, CLong, UnknownType;
overload selector("requestExpression") = NSExpression;
overload selector("requestHeaderFieldsWithCookies:") = NSDictionary, NSArray;
overload selector("requestIsCacheEquivalent:toRequest:") = Bool, NSURLRequest, NSURLRequest;
overload selector("requestModes") = NSArray;
overload selector("requestTimeout") = Double;
overload selector("requestUserAttention:") = CLong, CULong;
overload selector("requestWithURL:") = Id, NSURL;
overload selector("requestWithURL:cachePolicy:timeoutInterval:") = Id, NSURL, CULong, Double;
overload selector("requiredFileType") = NSString;
overload selector("requiredThickness") = Double;
overload selector("reservedSpaceLength") = CULong;
overload selector("reservedThicknessForAccessoryView") = Double;
overload selector("reservedThicknessForMarkers") = Double;
overload selector("reset") = Void;
overload selector("resetBytesInRange:") = Void, NSRange;
overload selector("resetCancelButtonCell") = Void;
overload selector("resetCursorRect:inView:") = Void, NSRect, NSView;
overload selector("resetCursorRects") = Void;
overload selector("resetSearchButtonCell") = Void;
overload selector("resetStandardUserDefaults") = Void;
overload selector("resetSystemTimeZone") = Void;
overload selector("reshape") = Void;
overload selector("resignFirstResponder") = Bool;
overload selector("resignKeyWindow") = Void;
overload selector("resignMainWindow") = Void;
overload selector("resizeDownCursor") = NSCursor;
overload selector("resizeFlags") = CLong;
overload selector("resizeIncrements") = NSSize;
overload selector("resizeLeftCursor") = NSCursor;
overload selector("resizeLeftRightCursor") = NSCursor;
overload selector("resizeRightCursor") = NSCursor;
overload selector("resizeSublayersWithOldSize:") = Void, CGSize;
overload selector("resizeSubviewsWithOldSize:") = Void, NSSize;
overload selector("resizeUpCursor") = NSCursor;
overload selector("resizeUpDownCursor") = NSCursor;
overload selector("resizeWithOldSuperlayerSize:") = Void, CGSize;
overload selector("resizeWithOldSuperviewSize:") = Void, NSSize;
overload selector("resizedColumn") = CLong;
overload selector("resizingMask") = CULong;
overload selector("resolve") = Void;
overload selector("resolveClassMethod:") = Bool, SelectorHandle;
overload selector("resolveInstanceMethod:") = Bool, SelectorHandle;
overload selector("resolveNamespaceForName:") = NSXMLNode, NSString;
overload selector("resolvePrefixForNamespaceURI:") = NSString, NSString;
overload selector("resolveWithTimeout:") = Void, Double;
overload selector("resolvedKeyDictionary") = NSDictionary;
overload selector("resolvesAliases") = Bool;
overload selector("resourceData") = NSData;
overload selector("resourceDataUsingCache:") = NSData, Bool;
overload selector("resourceLoadDelegate") = Id;
overload selector("resourcePath") = NSString;
overload selector("resourceSpecifier") = NSString;
overload selector("resourceURL") = NSURL;
overload selector("resourceValuesForKeys:error:") = NSDictionary, NSArray, Pointer[NSError];
overload selector("resourceValuesForKeys:fromBookmarkData:") = NSDictionary, NSArray, NSData;
overload selector("respondsToSelector:") = Bool, SelectorHandle;
overload selector("response") = NSURLResponse;
overload selector("restoreCachedImage") = Void;
overload selector("restoreGraphicsState") = Void;
overload selector("result") = Id;
overload selector("resultAtIndex:") = Id, CULong;
overload selector("resultCount") = CULong;
overload selector("resultType") = UInt64;
overload selector("results") = NSArray;
overload selector("resume") = Bool;
overload selector("resumeData") = NSData;
overload selector("resumeExecutionWithResult:") = Void, Id;
overload selector("resumeWithSuspensionID:") = Void, NSAppleEventManagerSuspensionID;
overload selector("retain") = Id;
overload selector("retainArguments") = Void;
overload selector("retainCount") = CULong;
overload selector("retainsRegisteredObjects") = Bool;
overload selector("returnID") = Short;
overload selector("returnType") = NSString;
overload selector("returnValue") = Bool;
overload selector("returnsDistinctResults") = Bool;
overload selector("returnsObjectsAsFaults") = Bool;
overload selector("reusesColumns") = Bool;
overload selector("rev") = NSString;
overload selector("reverseObjectEnumerator") = NSEnumerator;
overload selector("reverseTransformedValue:") = Id, Id;
overload selector("reversedSortDescriptor") = Id;
overload selector("revert:") = Void, Id;
overload selector("revertDocumentToSaved:") = Void, Id;
overload selector("revertToContentsOfURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
overload selector("revertToInitialValues:") = Void, Id;
overload selector("revertToSavedFromFile:ofType:") = Bool, NSString, NSString;
overload selector("revertToSavedFromURL:ofType:") = Bool, NSURL, NSString;
overload selector("reviewUnsavedDocumentsWithAlertTitle:cancellable:delegate:didReviewAllSelector:contextInfo:") = Void, NSString, Bool, Id, SelectorHandle, RawPointer;
overload selector("richTextSource") = NSAttributedString;
overload selector("richness") = NSString;
overload selector("right") = Id;
overload selector("rightExpression") = NSExpression;
overload selector("rightExpressionAttributeType") = CULong;
overload selector("rightExpressions") = NSArray;
overload selector("rightMargin") = Double;
overload selector("rightMouseDown:") = Void, NSEvent;
overload selector("rightMouseDragged:") = Void, NSEvent;
overload selector("rightMouseUp:") = Void, NSEvent;
overload selector("rollback") = Void;
overload selector("root") = DOMNode;
overload selector("rootDocument") = NSXMLDocument;
overload selector("rootElement") = NSXMLElement;
overload selector("rootItemForBrowser:") = Id, NSBrowser;
overload selector("rootObject") = Id;
overload selector("rootProxy") = NSDistantObject;
overload selector("rootProxyForConnectionWithRegisteredName:host:") = NSDistantObject, NSString, NSString;
overload selector("rootProxyForConnectionWithRegisteredName:host:usingNameServer:") = NSDistantObject, NSString, NSString, NSPortNameServer;
overload selector("rotateByAngle:") = Void, Double;
overload selector("rotateByDegrees:") = Void, Double;
overload selector("rotateByRadians:") = Void, Double;
overload selector("rotateWithEvent:") = Void, NSEvent;
overload selector("rotation") = Float;
overload selector("roundingBehavior") = NSDecimalNumberHandler;
overload selector("roundingIncrement") = NSNumber;
overload selector("roundingMode") = CULong;
overload selector("rowAtPoint:") = CLong, NSPoint;
overload selector("rowClass") = Id;
overload selector("rowForDisplayValue:") = CLong, Id;
overload selector("rowForItem:") = CLong, Id;
overload selector("rowHeight") = Double;
overload selector("rowIndex") = Int;
overload selector("rowSpan") = Int;
overload selector("rowTemplates") = NSArray;
overload selector("rowTypeForRow:") = CULong, CLong;
overload selector("rowTypeKeyPath") = NSString;
overload selector("rows") = Id;
overload selector("rowsInRect:") = NSRange, NSRect;
overload selector("ruleEditor:child:forCriterion:withRowType:") = Id, NSRuleEditor, CLong, Id, CULong;
overload selector("ruleEditor:displayValueForCriterion:inRow:") = Id, NSRuleEditor, Id, CLong;
overload selector("ruleEditor:numberOfChildrenForCriterion:withRowType:") = CLong, NSRuleEditor, Id, CULong;
overload selector("ruleEditor:predicatePartsForCriterion:withDisplayValue:inRow:") = NSDictionary, NSRuleEditor, Id, Id, CLong;
overload selector("ruleEditorRowsDidChange:") = Void, NSNotification;
overload selector("ruleThickness") = Double;
overload selector("ruler") = NSRulerView;
overload selector("rulerAccessoryViewForTextView:paragraphStyle:ruler:enabled:") = NSView, NSTextView, NSParagraphStyle, NSRulerView, Bool;
overload selector("rulerAttributesInRange:") = NSDictionary, NSRange;
overload selector("rulerMarkersForTextView:paragraphStyle:ruler:") = NSArray, NSTextView, NSParagraphStyle, NSRulerView;
overload selector("rulerView:didAddMarker:") = Void, NSRulerView, NSRulerMarker;
overload selector("rulerView:didMoveMarker:") = Void, NSRulerView, NSRulerMarker;
overload selector("rulerView:didRemoveMarker:") = Void, NSRulerView, NSRulerMarker;
overload selector("rulerView:handleMouseDown:") = Void, NSRulerView, NSEvent;
overload selector("rulerView:shouldAddMarker:") = Bool, NSRulerView, NSRulerMarker;
overload selector("rulerView:shouldMoveMarker:") = Bool, NSRulerView, NSRulerMarker;
overload selector("rulerView:shouldRemoveMarker:") = Bool, NSRulerView, NSRulerMarker;
overload selector("rulerView:willAddMarker:atLocation:") = Double, NSRulerView, NSRulerMarker, Double;
overload selector("rulerView:willMoveMarker:toLocation:") = Double, NSRulerView, NSRulerMarker, Double;
overload selector("rulerView:willSetClientView:") = Void, NSRulerView, NSView;
overload selector("rulerViewClass") = Id;
overload selector("rulersVisible") = Bool;
overload selector("rules") = Id;
overload selector("run") = Void;
overload selector("runActionForKey:object:arguments:") = Void, NSString, Id, NSDictionary;
overload selector("runCustomizationPalette:") = Void, Id;
overload selector("runInNewThread") = Void;
overload selector("runLoopModes") = NSArray;
overload selector("runLoopModesForAnimating") = NSArray;
overload selector("runModal") = CLong;
overload selector("runModalForDirectory:file:") = CLong, NSString, NSString;
overload selector("runModalForDirectory:file:types:") = CLong, NSString, NSString, NSArray;
overload selector("runModalForTypes:") = CLong, NSArray;
overload selector("runModalForWindow:") = CLong, NSWindow;
overload selector("runModalForWindow:relativeToWindow:") = CLong, NSWindow, NSWindow;
overload selector("runModalOpenPanel:forTypes:") = CLong, NSOpenPanel, NSArray;
overload selector("runModalPageLayoutWithPrintInfo:") = CLong, NSPrintInfo;
overload selector("runModalPageLayoutWithPrintInfo:delegate:didRunSelector:contextInfo:") = Void, NSPrintInfo, Id, SelectorHandle, RawPointer;
overload selector("runModalPrintOperation:delegate:didRunSelector:contextInfo:") = Void, NSPrintOperation, Id, SelectorHandle, RawPointer;
overload selector("runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, CULong, Id, SelectorHandle, RawPointer;
overload selector("runModalSession:") = CLong, NSModalSession;
overload selector("runModalWithPrintInfo:") = CLong, NSPrintInfo;
overload selector("runMode:beforeDate:") = Bool, NSString, NSDate;
overload selector("runOperation") = Bool;
overload selector("runOperationModalForWindow:delegate:didRunSelector:contextInfo:") = Void, NSWindow, Id, SelectorHandle, RawPointer;
overload selector("runPageLayout:") = Void, Id;
overload selector("runToolbarCustomizationPalette:") = Void, Id;
overload selector("runUntilDate:") = Void, NSDate;
overload selector("runningApplicationWithProcessIdentifier:") = NSRunningApplication, Int;
overload selector("runningApplications") = NSArray;
overload selector("runningApplicationsWithBundleIdentifier:") = NSArray, NSString;
overload selector("sRGBColorSpace") = NSColorSpace;
overload selector("samplesPerPixel") = CLong;
overload selector("sansSerifFontFamily") = NSString;
overload selector("saturationComponent") = Double;
overload selector("save:") = Bool, Id;
overload selector("saveAllDocuments:") = Void, Id;
overload selector("saveDocument:") = Void, Id;
overload selector("saveDocumentAs:") = Void, Id;
overload selector("saveDocumentTo:") = Void, Id;
overload selector("saveDocumentWithDelegate:didSaveSelector:contextInfo:") = Void, Id, SelectorHandle, RawPointer;
overload selector("saveFrameUsingName:") = Void, NSString;
overload selector("saveGraphicsState") = Void;
overload selector("saveOptions") = CULong;
overload selector("savePanel") = NSSavePanel;
overload selector("saveToFile:saveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSString, CULong, Id, SelectorHandle, RawPointer;
overload selector("saveToURL:error:") = Bool, NSURL, Pointer[NSError];
overload selector("saveToURL:ofType:forSaveOperation:delegate:didSaveSelector:contextInfo:") = Void, NSURL, NSString, CULong, Id, SelectorHandle, RawPointer;
overload selector("saveToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, CULong, Pointer[NSError];
overload selector("scale") = Short;
overload selector("scaleBy:") = Void, Double;
overload selector("scaleUnitSquareToSize:") = Void, NSSize;
overload selector("scaleXBy:yBy:") = Void, Double, Double;
overload selector("scalesWhenResized") = Bool;
overload selector("scalingFactor") = Double;
overload selector("scanCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
overload selector("scanDecimal:") = Bool, Pointer[NSDecimal];
overload selector("scanDouble:") = Bool, Pointer[Double];
overload selector("scanFloat:") = Bool, Pointer[Float];
overload selector("scanHexDouble:") = Bool, Pointer[Double];
overload selector("scanHexFloat:") = Bool, Pointer[Float];
overload selector("scanHexInt:") = Bool, Pointer[UInt];
overload selector("scanHexLongLong:") = Bool, Pointer[UInt64];
overload selector("scanInt:") = Bool, Pointer[Int];
overload selector("scanInteger:") = Bool, Pointer[CLong];
overload selector("scanLocation") = CULong;
overload selector("scanLongLong:") = Bool, Pointer[Int64];
overload selector("scanString:intoString:") = Bool, NSString, Pointer[NSString];
overload selector("scanUpToCharactersFromSet:intoString:") = Bool, NSCharacterSet, Pointer[NSString];
overload selector("scanUpToString:intoString:") = Bool, NSString, Pointer[NSString];
overload selector("scannerWithString:") = Id, NSString;
overload selector("scheduleInRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector("scheduledTimerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
overload selector("scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
overload selector("scheme") = NSString;
overload selector("scope") = NSString;
overload selector("screen") = NSScreen;
overload selector("screenFont") = NSFont;
overload selector("screenFontWithRenderingMode:") = NSFont, CULong;
overload selector("screenX") = Int;
overload selector("screenY") = Int;
overload selector("screens") = NSArray;
overload selector("scriptErrorExpectedTypeDescriptor") = NSAppleEventDescriptor;
overload selector("scriptErrorNumber") = Int;
overload selector("scriptErrorOffendingObjectDescriptor") = NSAppleEventDescriptor;
overload selector("scriptErrorString") = NSString;
overload selector("scriptingBeginsWith:") = Bool, Id;
overload selector("scriptingContains:") = Bool, Id;
overload selector("scriptingEndsWith:") = Bool, Id;
overload selector("scriptingIsEqualTo:") = Bool, Id;
overload selector("scriptingIsGreaterThan:") = Bool, Id;
overload selector("scriptingIsGreaterThanOrEqualTo:") = Bool, Id;
overload selector("scriptingIsLessThan:") = Bool, Id;
overload selector("scriptingIsLessThanOrEqualTo:") = Bool, Id;
overload selector("scriptingProperties") = NSDictionary;
overload selector("scriptingValueForSpecifier:") = Id, NSScriptObjectSpecifier;
overload selector("scripts") = DOMHTMLCollection;
overload selector("scrollBarColor") = NSColor;
overload selector("scrollByLines:") = Void, Int;
overload selector("scrollByPages:") = Void, Int;
overload selector("scrollCellToVisibleAtRow:column:") = Void, CLong, CLong;
overload selector("scrollClipView:toPoint:") = Void, NSClipView, NSPoint;
overload selector("scrollColumnToVisible:") = Void, CLong;
overload selector("scrollColumnsLeftBy:") = Void, CLong;
overload selector("scrollColumnsRightBy:") = Void, CLong;
overload selector("scrollHeight") = Int;
overload selector("scrollIntoView:") = Void, Bool;
overload selector("scrollIntoViewIfNeeded:") = Void, Bool;
overload selector("scrollItemAtIndexToTop:") = Void, CLong;
overload selector("scrollItemAtIndexToVisible:") = Void, CLong;
overload selector("scrollLeft") = Int;
overload selector("scrollLineDown:") = Void, Id;
overload selector("scrollLineUp:") = Void, Id;
overload selector("scrollPageDown:") = Void, Id;
overload selector("scrollPageUp:") = Void, Id;
overload selector("scrollPoint:") = Void, NSPoint;
overload selector("scrollRangeToVisible:") = Void, NSRange;
overload selector("scrollRect:by:") = Void, NSRect, NSSize;
overload selector("scrollRectToVisible:") = Bool, NSRect;
overload selector("scrollRowToVisible:") = Void, CLong;
overload selector("scrollRowToVisible:inColumn:") = Void, CLong, CLong;
overload selector("scrollToBeginningOfDocument:") = Void, Id;
overload selector("scrollToEndOfDocument:") = Void, Id;
overload selector("scrollToPoint:") = Void, NSPoint;
overload selector("scrollTop") = Int;
overload selector("scrollViaScroller:") = Void, NSScroller;
overload selector("scrollView") = NSScrollView;
overload selector("scrollWheel:") = Void, NSEvent;
overload selector("scrollWidth") = Int;
overload selector("scrollerWidth") = Double;
overload selector("scrollerWidthForControlSize:") = Double, CULong;
overload selector("scrolling") = NSString;
overload selector("scrollsDynamically") = Bool;
overload selector("search") = NSString;
overload selector("searchButtonCell") = NSButtonCell;
overload selector("searchButtonRectForBounds:") = NSRect, NSRect;
overload selector("searchFor:direction:caseSensitive:wrap:") = Bool, NSString, Bool, Bool, Bool;
overload selector("searchForAllDomains") = Void;
overload selector("searchForBrowsableDomains") = Void;
overload selector("searchForItemsWithSearchString:resultLimit:matchedItemHandler:") = Void, NSString, CLong, UnknownType;
overload selector("searchForRegistrationDomains") = Void;
overload selector("searchForServicesOfType:inDomain:") = Void, NSString, NSString;
overload selector("searchMenuTemplate") = NSMenu;
overload selector("searchScopes") = NSArray;
overload selector("searchString:inUserInterfaceItemString:searchRange:foundRange:") = Bool, NSString, NSString, NSRange, Pointer[NSRange];
overload selector("searchTextRectForBounds:") = NSRect, NSRect;
overload selector("second") = CLong;
overload selector("secondOfMinute") = CLong;
overload selector("secondaryGroupingSize") = CULong;
overload selector("secondarySelectedControlColor") = NSColor;
overload selector("secondsFromGMT") = CLong;
overload selector("secondsFromGMTForDate:") = CLong, NSDate;
overload selector("sectionRowIndex") = Int;
overload selector("seekToEndOfFile") = UInt64;
overload selector("seekToFileOffset:") = Void, UInt64;
overload selector("segmentCount") = CLong;
overload selector("segmentStyle") = CLong;
overload selector("select") = Void;
overload selector("selectAll") = Void;
overload selector("selectAll:") = Void, Id;
overload selector("selectCell:") = Void, NSCell;
overload selector("selectCellAtRow:column:") = Void, CLong, CLong;
overload selector("selectCellWithTag:") = Bool, CLong;
overload selector("selectColumn:byExtendingSelection:") = Void, CLong, Bool;
overload selector("selectColumnIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
overload selector("selectFile:inFileViewerRootedAtPath:") = Bool, NSString, NSString;
overload selector("selectFirstTabViewItem:") = Void, Id;
overload selector("selectItem:") = Void, NSMenuItem;
overload selector("selectItemAtIndex:") = Void, CLong;
overload selector("selectItemWithObjectValue:") = Void, Id;
overload selector("selectItemWithTag:") = Bool, CLong;
overload selector("selectItemWithTitle:") = Void, NSString;
overload selector("selectKeyViewFollowingView:") = Void, NSView;
overload selector("selectKeyViewPrecedingView:") = Void, NSView;
overload selector("selectLastTabViewItem:") = Void, Id;
overload selector("selectLine:") = Void, Id;
overload selector("selectNext:") = Void, Id;
overload selector("selectNextKeyView:") = Void, Id;
overload selector("selectNextTabViewItem:") = Void, Id;
overload selector("selectNode:") = Void, DOMNode;
overload selector("selectNodeContents:") = Void, DOMNode;
overload selector("selectParagraph:") = Void, Id;
overload selector("selectPrevious:") = Void, Id;
overload selector("selectPreviousKeyView:") = Void, Id;
overload selector("selectPreviousTabViewItem:") = Void, Id;
overload selector("selectRow:byExtendingSelection:") = Void, CLong, Bool;
overload selector("selectRow:inColumn:") = Void, CLong, CLong;
overload selector("selectRowIndexes:byExtendingSelection:") = Void, NSIndexSet, Bool;
overload selector("selectRowIndexes:inColumn:") = Void, NSIndexSet, CLong;
overload selector("selectSegmentWithTag:") = Bool, CLong;
overload selector("selectSentence:") = Void, Id;
overload selector("selectTabViewItem:") = Void, NSTabViewItem;
overload selector("selectTabViewItemAtIndex:") = Void, CLong;
overload selector("selectTabViewItemWithIdentifier:") = Void, Id;
overload selector("selectText:") = Void, Id;
overload selector("selectTextAtIndex:") = Void, CLong;
overload selector("selectTextAtRow:column:") = Id, CLong, CLong;
overload selector("selectToMark:") = Void, Id;
overload selector("selectWithFrame:inView:editor:delegate:start:length:") = Void, NSRect, NSView, NSText, Id, CLong, CLong;
overload selector("selectWord:") = Void, Id;
overload selector("selected") = Bool;
overload selector("selectedAttributedString") = NSAttributedString;
overload selector("selectedCell") = Id;
overload selector("selectedCellInColumn:") = Id, CLong;
overload selector("selectedCells") = NSArray;
overload selector("selectedColumn") = CLong;
overload selector("selectedColumnEnumerator") = NSEnumerator;
overload selector("selectedColumnIndexes") = NSIndexSet;
overload selector("selectedControlColor") = NSColor;
overload selector("selectedControlTextColor") = NSColor;
overload selector("selectedDOMRange") = DOMRange;
overload selector("selectedFont") = NSFont;
overload selector("selectedFrame") = WebFrame;
overload selector("selectedIndex") = Int;
overload selector("selectedItem") = NSMenuItem;
overload selector("selectedItemIdentifier") = NSString;
overload selector("selectedKeyboardInputSource") = NSString;
overload selector("selectedKnobColor") = NSColor;
overload selector("selectedMenuItemColor") = NSColor;
overload selector("selectedMenuItemTextColor") = NSColor;
overload selector("selectedNodes") = NSArray;
overload selector("selectedObjects") = NSArray;
overload selector("selectedRange") = NSRange;
overload selector("selectedRanges") = NSArray;
overload selector("selectedRow") = CLong;
overload selector("selectedRowEnumerator") = NSEnumerator;
overload selector("selectedRowInColumn:") = CLong, CLong;
overload selector("selectedRowIndexes") = NSIndexSet;
overload selector("selectedRowIndexesInColumn:") = NSIndexSet, CLong;
overload selector("selectedSegment") = CLong;
overload selector("selectedString") = NSString;
overload selector("selectedStylesheetSet") = NSString;
overload selector("selectedTabViewItem") = NSTabViewItem;
overload selector("selectedTag") = CLong;
overload selector("selectedTextAttributes") = NSDictionary;
overload selector("selectedTextBackgroundColor") = NSColor;
overload selector("selectedTextColor") = NSColor;
overload selector("selection") = Id;
overload selector("selectionAffinity") = CULong;
overload selector("selectionEnd") = Int;
overload selector("selectionGranularity") = CULong;
overload selector("selectionHighlightStyle") = CLong;
overload selector("selectionIndex") = CULong;
overload selector("selectionIndexPath") = NSIndexPath;
overload selector("selectionIndexPaths") = NSArray;
overload selector("selectionIndexes") = NSIndexSet;
overload selector("selectionRangeForProposedRange:granularity:") = NSRange, NSRange, CULong;
overload selector("selectionShouldChangeInOutlineView:") = Bool, NSOutlineView;
overload selector("selectionShouldChangeInTableView:") = Bool, NSTableView;
overload selector("selectionStart") = Int;
overload selector("selector") = SelectorHandle;
overload selector("selectorForCommand:") = SelectorHandle, NSScriptCommandDescription;
overload selector("selectorText") = NSString;
overload selector("selectsInsertedObjects") = Bool;
overload selector("self") = Id;
overload selector("sendAction") = Bool;
overload selector("sendAction:to:") = Bool, SelectorHandle, Id;
overload selector("sendAction:to:forAllCells:") = Void, SelectorHandle, Id, Bool;
overload selector("sendAction:to:from:") = Bool, SelectorHandle, Id, Id;
overload selector("sendActionOn:") = CLong, CLong;
overload selector("sendBeforeDate:") = Bool, NSDate;
overload selector("sendBeforeDate:components:from:reserved:") = Bool, NSDate, NSMutableArray, NSPort, CULong;
overload selector("sendBeforeDate:msgid:components:from:reserved:") = Bool, NSDate, CULong, NSMutableArray, NSPort, CULong;
overload selector("sendDoubleAction") = Void;
overload selector("sendEvent:") = Void, NSEvent;
overload selector("sendPort") = NSPort;
overload selector("sendSynchronousRequest:returningResponse:error:") = NSData, NSURLRequest, Pointer[NSURLResponse], Pointer[NSError];
overload selector("sender") = Id;
overload selector("sendsActionOnArrowKeys") = Bool;
overload selector("sendsActionOnEndEditing") = Bool;
overload selector("sendsSearchStringImmediately") = Bool;
overload selector("sendsWholeSearchString") = Bool;
overload selector("separatesColumns") = Bool;
overload selector("separator") = NSString;
overload selector("separatorItem") = NSMenuItem;
overload selector("serializedRepresentation") = NSData;
overload selector("serifFontFamily") = NSString;
overload selector("server") = NSInputServer;
overload selector("serverTrust") = SecTrustRef;
overload selector("serviceConnectionWithName:rootObject:") = Id, NSString, Id;
overload selector("serviceConnectionWithName:rootObject:usingNameServer:") = Id, NSString, Id, NSPortNameServer;
overload selector("servicePortWithName:") = NSPort, NSString;
overload selector("servicesMenu") = NSMenu;
overload selector("servicesProvider") = Id;
overload selector("set") = Id;
overload selector("setALink:") = Void, NSString;
overload selector("setAMSymbol:") = Void, NSString;
overload selector("setAbbr:") = Void, NSString;
overload selector("setAbbreviationDictionary:") = Void, NSDictionary;
overload selector("setAbstract:") = Void, Bool;
overload selector("setAccept:") = Void, NSString;
overload selector("setAcceptCharset:") = Void, NSString;
overload selector("setAcceptsArrowKeys:") = Void, Bool;
overload selector("setAcceptsGlyphInfo:") = Void, Bool;
overload selector("setAcceptsMouseMovedEvents:") = Void, Bool;
overload selector("setAcceptsTouchEvents:") = Void, Bool;
overload selector("setAccessKey:") = Void, NSString;
overload selector("setAccessibilityDescription:") = Void, NSString;
overload selector("setAccessoryView:") = Void, NSView;
overload selector("setAcquireFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]],CChar],[RawPointer]];
overload selector("setAction:") = Void, NSString;
overload selector("setActionName:") = Void, NSString;
overload selector("setActions:") = Void, NSDictionary;
overload selector("setActivationPolicy:") = Bool, CLong;
overload selector("setAffectedStores:") = Void, NSArray;
overload selector("setAffineTransform:") = Void, CGAffineTransform;
overload selector("setAlertStyle:") = Void, CULong;
overload selector("setAlign:") = Void, NSString;
overload selector("setAlignment:") = Void, CULong;
overload selector("setAlignment:range:") = Void, CULong, NSRange;
overload selector("setAlignmentRect:") = Void, NSRect;
overload selector("setAlinkColor:") = Void, NSString;
overload selector("setAllHTTPHeaderFields:") = Void, NSDictionary;
overload selector("setAllowedFileTypes:") = Void, NSArray;
overload selector("setAllowedInputSourceLocales:") = Void, NSArray;
overload selector("setAllowedTypes:") = Void, NSArray;
overload selector("setAllowsAnimatedImageLooping:") = Void, Bool;
overload selector("setAllowsAnimatedImages:") = Void, Bool;
overload selector("setAllowsBranchSelection:") = Void, Bool;
overload selector("setAllowsColumnReordering:") = Void, Bool;
overload selector("setAllowsColumnResizing:") = Void, Bool;
overload selector("setAllowsColumnSelection:") = Void, Bool;
overload selector("setAllowsConcurrentViewDrawing:") = Void, Bool;
overload selector("setAllowsContextMenuPlugIns:") = Void, Bool;
overload selector("setAllowsCutCopyPaste:") = Void, Bool;
overload selector("setAllowsDocumentBackgroundColorChange:") = Void, Bool;
overload selector("setAllowsEditingTextAttributes:") = Void, Bool;
overload selector("setAllowsEmptySelection:") = Void, Bool;
overload selector("setAllowsFloats:") = Void, Bool;
overload selector("setAllowsImageEditing:") = Void, Bool;
overload selector("setAllowsMixedState:") = Void, Bool;
overload selector("setAllowsMultipleSelection:") = Void, Bool;
overload selector("setAllowsNonContiguousLayout:") = Void, Bool;
overload selector("setAllowsOtherFileTypes:") = Void, Bool;
overload selector("setAllowsScrolling:") = Void, Bool;
overload selector("setAllowsTickMarkValuesOnly:") = Void, Bool;
overload selector("setAllowsToolTipsWhenApplicationIsInactive:") = Void, Bool;
overload selector("setAllowsTruncatedLabels:") = Void, Bool;
overload selector("setAllowsTypeSelect:") = Void, Bool;
overload selector("setAllowsUndo:") = Void, Bool;
overload selector("setAllowsUserCustomization:") = Void, Bool;
overload selector("setAlpha:") = Void, Bool;
overload selector("setAlphaValue:") = Void, Double;
overload selector("setAlt:") = Void, NSString;
overload selector("setAltIncrementValue:") = Void, Double;
overload selector("setAlternate:") = Void, Bool;
overload selector("setAlternateImage:") = Void, NSImage;
overload selector("setAlternateMnemonicLocation:") = Void, CULong;
overload selector("setAlternateTitle:") = Void, NSString;
overload selector("setAlternateTitleWithMnemonic:") = Void, NSString;
overload selector("setAltersStateOfSelectedItem:") = Void, Bool;
overload selector("setAlwaysShowsDecimalSeparator:") = Void, Bool;
overload selector("setAlwaysUsesMultipleValuesMarker:") = Void, Bool;
overload selector("setAnchorPoint:") = Void, CGPoint;
overload selector("setAnchorPointZ:") = Void, Double;
overload selector("setAnimates:") = Void, Bool;
overload selector("setAnimationBlockingMode:") = Void, CULong;
overload selector("setAnimationCurve:") = Void, CULong;
overload selector("setAnimationDelay:") = Void, Double;
overload selector("setAnimations:") = Void, NSDictionary;
overload selector("setApplicationIconImage:") = Void, NSImage;
overload selector("setApplicationNameForUserAgent:") = Void, NSString;
overload selector("setAppliesImmediately:") = Void, Bool;
overload selector("setArchive:") = Void, NSString;
overload selector("setArgument:atIndex:") = Void, RawPointer, CLong;
overload selector("setArguments:") = Void, NSArray;
overload selector("setArray:") = Void, NSArray;
overload selector("setArrowPosition:") = Void, CULong;
overload selector("setArrowsPosition:") = Void, CULong;
overload selector("setAspectRatio:") = Void, NSSize;
overload selector("setAssociatedPoints:atIndex:") = Void, NSPointArray, CLong;
overload selector("setAsynchronous:") = Void, Bool;
overload selector("setAttachment:") = Void, NSTextAttachment;
overload selector("setAttachmentCell:") = Void, Id;
overload selector("setAttachmentSize:forGlyphRange:") = Void, NSSize, NSRange;
overload selector("setAttribute::") = Void, NSString, NSString;
overload selector("setAttribute:value:") = Void, NSString, NSString;
overload selector("setAttributeDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
overload selector("setAttributeMappings:") = Void, NSArray;
overload selector("setAttributeNS:::") = Void, NSString, NSString, NSString;
overload selector("setAttributeNS:qualifiedName:value:") = Void, NSString, NSString, NSString;
overload selector("setAttributeNode:") = DOMAttr, DOMAttr;
overload selector("setAttributeNodeNS:") = DOMAttr, DOMAttr;
overload selector("setAttributeRuns:") = Void, NSArray;
overload selector("setAttributeType:") = Void, CULong;
overload selector("setAttributeValueClassName:") = Void, NSString;
overload selector("setAttributedAlternateTitle:") = Void, NSAttributedString;
overload selector("setAttributedString:") = Void, NSAttributedString;
overload selector("setAttributedStringForNil:") = Void, NSAttributedString;
overload selector("setAttributedStringForNotANumber:") = Void, NSAttributedString;
overload selector("setAttributedStringForZero:") = Void, NSAttributedString;
overload selector("setAttributedStringValue:") = Void, NSAttributedString;
overload selector("setAttributedTitle:") = Void, NSAttributedString;
overload selector("setAttributes:") = Void, NSArray;
overload selector("setAttributes:ofItemAtPath:error:") = Bool, NSDictionary, NSString, Pointer[NSError];
overload selector("setAttributes:range:") = Void, NSDictionary, NSRange;
overload selector("setAttributesAsDictionary:") = Void, NSDictionary;
overload selector("setAutodisplay:") = Void, Bool;
overload selector("setAutoenablesItems:") = Void, Bool;
overload selector("setAutofocus:") = Void, Bool;
overload selector("setAutohidesScroller:") = Void, Bool;
overload selector("setAutohidesScrollers:") = Void, Bool;
overload selector("setAutomaticDashSubstitutionEnabled:") = Void, Bool;
overload selector("setAutomaticDataDetectionEnabled:") = Void, Bool;
overload selector("setAutomaticLinkDetectionEnabled:") = Void, Bool;
overload selector("setAutomaticQuoteSubstitutionEnabled:") = Void, Bool;
overload selector("setAutomaticSpellingCorrectionEnabled:") = Void, Bool;
overload selector("setAutomaticTextReplacementEnabled:") = Void, Bool;
overload selector("setAutomaticallyIdentifiesLanguages:") = Void, Bool;
overload selector("setAutomaticallyPreparesContent:") = Void, Bool;
overload selector("setAutomaticallyRearrangesObjects:") = Void, Bool;
overload selector("setAutorecalculatesContentBorderThickness:forEdge:") = Void, Bool, CULong;
overload selector("setAutorecalculatesKeyViewLoop:") = Void, Bool;
overload selector("setAutorepeat:") = Void, Bool;
overload selector("setAutoresizesAllColumnsToFit:") = Void, Bool;
overload selector("setAutoresizesOutlineColumn:") = Void, Bool;
overload selector("setAutoresizesSubviews:") = Void, Bool;
overload selector("setAutoresizingMask:") = Void, CULong;
overload selector("setAutoreverses:") = Void, Bool;
overload selector("setAutosaveExpandedItems:") = Void, Bool;
overload selector("setAutosaveName:") = Void, NSString;
overload selector("setAutosaveTableColumns:") = Void, Bool;
overload selector("setAutosavedContentsFileURL:") = Void, NSURL;
overload selector("setAutosaves:") = Void, Bool;
overload selector("setAutosavesConfiguration:") = Void, Bool;
overload selector("setAutosavingDelay:") = Void, Double;
overload selector("setAutoscroll:") = Void, Bool;
overload selector("setAutosizesCells:") = Void, Bool;
overload selector("setAutovalidates:") = Void, Bool;
overload selector("setAvoidsEmptySelection:") = Void, Bool;
overload selector("setAxis:") = Void, NSString;
overload selector("setAzimuth:") = Void, NSString;
overload selector("setBackground:") = Void, NSString;
overload selector("setBackgroundAttachment:") = Void, NSString;
overload selector("setBackgroundColor:") = Void, NSString;
overload selector("setBackgroundColors:") = Void, NSArray;
overload selector("setBackgroundFilters:") = Void, NSArray;
overload selector("setBackgroundImage:") = Void, NSString;
overload selector("setBackgroundLayoutEnabled:") = Void, Bool;
overload selector("setBackgroundPosition:") = Void, NSString;
overload selector("setBackgroundRepeat:") = Void, NSString;
overload selector("setBackgroundStyle:") = Void, CLong;
overload selector("setBackingType:") = Void, CULong;
overload selector("setBadgeLabel:") = Void, NSString;
overload selector("setBaseSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector("setBaseWritingDirection:") = Void, CLong;
overload selector("setBaseWritingDirection:range:") = Void, CLong, NSRange;
overload selector("setBecomesKeyOnlyIfNeeded:") = Void, Bool;
overload selector("setBeginTime:") = Void, Double;
overload selector("setBezelStyle:") = Void, CULong;
overload selector("setBezeled:") = Void, Bool;
overload selector("setBgColor:") = Void, NSString;
overload selector("setBidiLevels:forGlyphRange:") = Void, Pointer[CUChar], NSRange;
overload selector("setBidiProcessingEnabled:") = Void, Bool;
overload selector("setBitsPerSample:") = Void, CLong;
overload selector("setBlocksOtherRecognizers:") = Void, Bool;
overload selector("setBody:") = Void, DOMHTMLElement;
overload selector("setBool:forKey:") = Void, Bool, NSString;
overload selector("setBorder:") = Void, NSString;
overload selector("setBorderBottom:") = Void, NSString;
overload selector("setBorderBottomColor:") = Void, NSString;
overload selector("setBorderBottomStyle:") = Void, NSString;
overload selector("setBorderBottomWidth:") = Void, NSString;
overload selector("setBorderCollapse:") = Void, NSString;
overload selector("setBorderColor:") = Void, NSString;
overload selector("setBorderColor:forEdge:") = Void, NSColor, CULong;
overload selector("setBorderLeft:") = Void, NSString;
overload selector("setBorderLeftColor:") = Void, NSString;
overload selector("setBorderLeftStyle:") = Void, NSString;
overload selector("setBorderLeftWidth:") = Void, NSString;
overload selector("setBorderRight:") = Void, NSString;
overload selector("setBorderRightColor:") = Void, NSString;
overload selector("setBorderRightStyle:") = Void, NSString;
overload selector("setBorderRightWidth:") = Void, NSString;
overload selector("setBorderSpacing:") = Void, NSString;
overload selector("setBorderStyle:") = Void, NSString;
overload selector("setBorderTop:") = Void, NSString;
overload selector("setBorderTopColor:") = Void, NSString;
overload selector("setBorderTopStyle:") = Void, NSString;
overload selector("setBorderTopWidth:") = Void, NSString;
overload selector("setBorderType:") = Void, CULong;
overload selector("setBorderWidth:") = Void, NSString;
overload selector("setBordered:") = Void, Bool;
overload selector("setBottom:") = Void, NSString;
overload selector("setBottomMargin:") = Void, Double;
overload selector("setBounds:") = Void, NSRect;
overload selector("setBoundsOrigin:") = Void, NSPoint;
overload selector("setBoundsRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
overload selector("setBoundsRotation:") = Void, Double;
overload selector("setBoundsSize:") = Void, NSSize;
overload selector("setBoxType:") = Void, CULong;
overload selector("setButtonBordered:") = Void, Bool;
overload selector("setButtonType:") = Void, CULong;
overload selector("setByAddingObject:") = NSSet, Id;
overload selector("setByAddingObjectsFromArray:") = NSSet, NSArray;
overload selector("setByAddingObjectsFromSet:") = NSSet, NSSet;
overload selector("setCacheDepthMatchesImageDepth:") = Void, Bool;
overload selector("setCacheMode:") = Void, CULong;
overload selector("setCacheModel:") = Void, CULong;
overload selector("setCachePolicy:") = Void, CULong;
overload selector("setCachedSeparately:") = Void, Bool;
overload selector("setCachesBezierPath:") = Void, Bool;
overload selector("setCalendar:") = Void, NSCalendar;
overload selector("setCalendarFormat:") = Void, NSString;
overload selector("setCanBeVisibleOnAllSpaces:") = Void, Bool;
overload selector("setCanBecomeVisibleWithoutLogin:") = Void, Bool;
overload selector("setCanChooseDirectories:") = Void, Bool;
overload selector("setCanChooseFiles:") = Void, Bool;
overload selector("setCanCreateDirectories:") = Void, Bool;
overload selector("setCanDrawConcurrently:") = Void, Bool;
overload selector("setCanHide:") = Void, Bool;
overload selector("setCanRemoveAllRows:") = Void, Bool;
overload selector("setCanSelectHiddenExtension:") = Void, Bool;
overload selector("setCanSpawnSeparateThread:") = Void, Bool;
overload selector("setCancelBubble:") = Void, Bool;
overload selector("setCancelButtonCell:") = Void, NSButtonCell;
overload selector("setCapacity:") = Void, Int;
overload selector("setCaption:") = Void, DOMHTMLTableCaptionElement;
overload selector("setCaptionSide:") = Void, NSString;
overload selector("setCaseSensitive:") = Void, Bool;
overload selector("setCell:") = Void, NSCell;
overload selector("setCellAttribute:to:") = Void, CULong, CLong;
overload selector("setCellBackgroundColor:") = Void, NSColor;
overload selector("setCellClass:") = Void, Id;
overload selector("setCellPadding:") = Void, NSString;
overload selector("setCellPrototype:") = Void, NSCell;
overload selector("setCellSize:") = Void, NSSize;
overload selector("setCellSpacing:") = Void, NSString;
overload selector("setCh:") = Void, NSString;
overload selector("setChOff:") = Void, NSString;
overload selector("setChannelMapping:") = Void, NSArray;
overload selector("setCharacterEncoding:") = Void, NSString;
overload selector("setCharacterIndex:forGlyphAtIndex:") = Void, CULong, CULong;
overload selector("setCharacters:") = Void, NSArray;
overload selector("setCharactersToBeSkipped:") = Void, NSCharacterSet;
overload selector("setCharset:") = Void, NSString;
overload selector("setChecked:") = Void, Bool;
overload selector("setChildSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector("setChildren:") = Void, NSArray;
overload selector("setChildrenKeyPath:") = Void, NSString;
overload selector("setCite:") = Void, NSString;
overload selector("setClass:forClassName:") = Void, Id, NSString;
overload selector("setClassName:") = Void, NSString;
overload selector("setClassName:forClass:") = Void, NSString, Id;
overload selector("setClear:") = Void, NSString;
overload selector("setClearsFilterPredicateOnInsertion:") = Void, Bool;
overload selector("setClientView:") = Void, NSView;
overload selector("setClip") = Void;
overload selector("setClip:") = Void, NSString;
overload selector("setCode:") = Void, NSString;
overload selector("setCodeBase:") = Void, NSString;
overload selector("setCodeType:") = Void, NSString;
overload selector("setColSpan:") = Void, Int;
overload selector("setCollapsesBorders:") = Void, Bool;
overload selector("setCollectionBehavior:") = Void, CULong;
overload selector("setColor:") = Void, NSString;
overload selector("setColor:atX:y:") = Void, NSColor, CLong, CLong;
overload selector("setColor:forKey:") = Void, NSColor, NSString;
overload selector("setColorRenderingIntent:") = Void, CLong;
overload selector("setColorSpace:") = Void, NSColorSpace;
overload selector("setColorSpaceName:") = Void, NSString;
overload selector("setCols:") = Void, NSString;
overload selector("setColumnAutoresizingStyle:") = Void, CULong;
overload selector("setColumnResizingType:") = Void, CULong;
overload selector("setColumnsAutosaveName:") = Void, NSString;
overload selector("setCommands:") = Void, NSArray;
overload selector("setCompact:") = Void, Bool;
overload selector("setCompletes:") = Void, Bool;
overload selector("setCompletionBlock:") = Void, UnknownType;
overload selector("setCompletionDelay:") = Void, Double;
overload selector("setCompositingFilter:") = Void, CIFilter;
overload selector("setCompositingOperation:") = Void, CULong;
overload selector("setCompression:factor:") = Void, CULong, Float;
overload selector("setConfigurationFromDictionary:") = Void, NSDictionary;
overload selector("setConstrainedFrameSize:") = Void, NSSize;
overload selector("setContainerClassDescription:") = Void, NSScriptClassDescription;
overload selector("setContainerIsObjectBeingTested:") = Void, Bool;
overload selector("setContainerIsRangeContainerObject:") = Void, Bool;
overload selector("setContainerSize:") = Void, NSSize;
overload selector("setContainerSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector("setContent:") = Void, NSString;
overload selector("setContentAspectRatio:") = Void, NSSize;
overload selector("setContentBorderThickness:forEdge:") = Void, Double, CULong;
overload selector("setContentEditable:") = Void, NSString;
overload selector("setContentFilters:") = Void, NSArray;
overload selector("setContentMaxSize:") = Void, NSSize;
overload selector("setContentMinSize:") = Void, NSSize;
overload selector("setContentResizeIncrements:") = Void, NSSize;
overload selector("setContentSize:") = Void, NSSize;
overload selector("setContentView:") = Void, NSView;
overload selector("setContentViewMargins:") = Void, NSSize;
overload selector("setContentWidth:type:") = Void, Double, CULong;
overload selector("setContents:") = Void, Id;
overload selector("setContentsCenter:") = Void, CGRect;
overload selector("setContentsGravity:") = Void, NSString;
overload selector("setContentsRect:") = Void, CGRect;
overload selector("setContextHelp:forObject:") = Void, NSAttributedString, Id;
overload selector("setContextHelpModeActive:") = Void, Bool;
overload selector("setContextMenuRepresentation:") = Void, Id;
overload selector("setContinuous:") = Void, Bool;
overload selector("setContinuousSpellCheckingEnabled:") = Void, Bool;
overload selector("setControlSize:") = Void, CULong;
overload selector("setControlTint:") = Void, CULong;
overload selector("setControlView:") = Void, NSView;
overload selector("setCookie:") = Void, NSHTTPCookie;
overload selector("setCookieAcceptPolicy:") = Void, CULong;
overload selector("setCookies:forURL:mainDocumentURL:") = Void, NSArray, NSURL, NSURL;
overload selector("setCoords:") = Void, NSString;
overload selector("setCopiesOnScroll:") = Void, Bool;
overload selector("setCornerRadius:") = Void, Double;
overload selector("setCornerView:") = Void, NSView;
overload selector("setCount:") = Void, CULong;
overload selector("setCountKeyPath:") = Void, NSString;
overload selector("setCountLimit:") = Void, CULong;
overload selector("setCounterIncrement:") = Void, NSString;
overload selector("setCounterReset:") = Void, NSString;
overload selector("setCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector("setCriteria:andDisplayValues:forRowAtIndex:") = Void, NSArray, NSArray, CLong;
overload selector("setCriteriaKeyPath:") = Void, NSString;
overload selector("setCriticalValue:") = Void, Double;
overload selector("setCssFloat:") = Void, NSString;
overload selector("setCssText:") = Void, NSString;
overload selector("setCue:") = Void, NSString;
overload selector("setCueAfter:") = Void, NSString;
overload selector("setCueBefore:") = Void, NSString;
overload selector("setCurrencyCode:") = Void, NSString;
overload selector("setCurrencyDecimalSeparator:") = Void, NSString;
overload selector("setCurrencyGroupingSeparator:") = Void, NSString;
overload selector("setCurrencySymbol:") = Void, NSString;
overload selector("setCurrentAppleEventAndReplyEventWithSuspensionID:") = Void, NSAppleEventManagerSuspensionID;
overload selector("setCurrentContext:") = Void, NSGraphicsContext;
overload selector("setCurrentDirectoryPath:") = Void, NSString;
overload selector("setCurrentNode:") = Void, DOMNode;
overload selector("setCurrentOperation:") = Void, NSPrintOperation;
overload selector("setCurrentPage:") = Void, CLong;
overload selector("setCurrentProgress:") = Void, Float;
overload selector("setCurrentTime:") = Void, Double;
overload selector("setCurrentVirtualScreen:") = Void, Int;
overload selector("setCursiveFontFamily:") = Void, NSString;
overload selector("setCursor:") = Void, NSString;
overload selector("setCustomTextEncodingName:") = Void, NSString;
overload selector("setCustomUserAgent:") = Void, NSString;
overload selector("setDTD:") = Void, NSXMLDTD;
overload selector("setDTDKind:") = Void, CULong;
overload selector("setData:") = Void, NSData;
overload selector("setData:forType:") = Bool, NSData, NSString;
overload selector("setDataCell:") = Void, NSCell;
overload selector("setDataProvider:forTypes:") = Bool, Id, NSArray;
overload selector("setDataRetained:") = Void, Bool;
overload selector("setDataSource:") = Void, Id;
overload selector("setDateFormat:") = Void, NSString;
overload selector("setDatePickerElements:") = Void, CULong;
overload selector("setDatePickerMode:") = Void, CULong;
overload selector("setDatePickerStyle:") = Void, CULong;
overload selector("setDateStyle:") = Void, CULong;
overload selector("setDateTime:") = Void, NSString;
overload selector("setDateValue:") = Void, NSDate;
overload selector("setDay:") = Void, CLong;
overload selector("setDecimalSeparator:") = Void, NSString;
overload selector("setDeclare:") = Void, Bool;
overload selector("setDefaultAttachmentScaling:") = Void, CULong;
overload selector("setDefaultBehavior:") = Void, Id;
overload selector("setDefaultButtonCell:") = Void, NSButtonCell;
overload selector("setDefaultButtonTitle:") = Void, NSString;
overload selector("setDefaultChecked:") = Void, Bool;
overload selector("setDefaultColumnWidth:") = Void, Double;
overload selector("setDefaultCredential:forProtectionSpace:") = Void, NSURLCredential, NSURLProtectionSpace;
overload selector("setDefaultDate:") = Void, NSDate;
overload selector("setDefaultFixedFontSize:") = Void, Int;
overload selector("setDefaultFlatness:") = Void, Double;
overload selector("setDefaultFontSize:") = Void, Int;
overload selector("setDefaultFormatterBehavior:") = Void, CULong;
overload selector("setDefaultLineCapStyle:") = Void, CULong;
overload selector("setDefaultLineJoinStyle:") = Void, CULong;
overload selector("setDefaultLineWidth:") = Void, Double;
overload selector("setDefaultMiterLimit:") = Void, Double;
overload selector("setDefaultNameServerPortNumber:") = Void, UShort;
overload selector("setDefaultParagraphStyle:") = Void, NSParagraphStyle;
overload selector("setDefaultPlaceholder:forMarker:withBinding:") = Void, Id, Id, NSString;
overload selector("setDefaultPrinter:") = Void, NSPrinter;
overload selector("setDefaultSelected:") = Void, Bool;
overload selector("setDefaultTabInterval:") = Void, Double;
overload selector("setDefaultTextEncodingName:") = Void, NSString;
overload selector("setDefaultTimeZone:") = Void, NSTimeZone;
overload selector("setDefaultValue:") = Void, NSString;
overload selector("setDefaultWindingRule:") = Void, CULong;
overload selector("setDefer:") = Void, Bool;
overload selector("setDelegate:") = Void, Id;
overload selector("setDeleteRule:") = Void, CULong;
overload selector("setDeletesFileUponFailure:") = Void, Bool;
overload selector("setDepthLimit:") = Void, Int;
overload selector("setDescriptionFunction:") = Void, CCodePointer[[RawPointer],[NSString]];
overload selector("setDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
overload selector("setDesignMode:") = Void, NSString;
overload selector("setDesktopImageURL:forScreen:options:error:") = Bool, NSURL, NSScreen, NSDictionary, Pointer[NSError];
overload selector("setDestination:allowOverwrite:") = Void, NSString, Bool;
overload selector("setDestinationEntity:") = Void, NSEntityDescription;
overload selector("setDestinationEntityName:") = Void, NSString;
overload selector("setDestinationEntityVersionHash:") = Void, NSData;
overload selector("setDictionary:") = Void, NSDictionary;
overload selector("setDir:") = Void, NSString;
overload selector("setDirectParameter:") = Void, Id;
overload selector("setDirection:") = Void, NSString;
overload selector("setDirectory:") = Void, NSString;
overload selector("setDirectoryURL:") = Void, NSURL;
overload selector("setDisabled:") = Void, Bool;
overload selector("setDiskCapacity:") = Void, CULong;
overload selector("setDisplay:") = Void, NSString;
overload selector("setDisplayMode:") = Void, CULong;
overload selector("setDisplayValuesKeyPath:") = Void, NSString;
overload selector("setDisplayedCommandsTitle:") = Void, NSString;
overload selector("setDisplayedWhenStopped:") = Void, Bool;
overload selector("setDisplaysLinkToolTips:") = Void, Bool;
overload selector("setDisplaysWhenScreenProfileChanges:") = Void, Bool;
overload selector("setDividerStyle:") = Void, CLong;
overload selector("setDockTile:") = Void, NSDockTile;
overload selector("setDocument:") = Void, NSDocument;
overload selector("setDocumentContentKind:") = Void, CULong;
overload selector("setDocumentCursor:") = Void, NSCursor;
overload selector("setDocumentEdited:") = Void, Bool;
overload selector("setDocumentURI:") = Void, NSString;
overload selector("setDocumentView:") = Void, NSView;
overload selector("setDoesRelativeDateFormatting:") = Void, Bool;
overload selector("setDouble:forKey:") = Void, Double, NSString;
overload selector("setDoubleAction:") = Void, SelectorHandle;
overload selector("setDoubleSided:") = Void, Bool;
overload selector("setDoubleValue:") = Void, Double;
overload selector("setDownloadDelegate:") = Void, Id;
overload selector("setDraggingDestinationFeedbackStyle:") = Void, CLong;
overload selector("setDraggingSourceOperationMask:forLocal:") = Void, CULong, Bool;
overload selector("setDrawsBackground:") = Void, Bool;
overload selector("setDrawsCellBackground:") = Void, Bool;
overload selector("setDrawsGrid:") = Void, Bool;
overload selector("setDrawsOutsideLineFragment:forGlyphAtIndex:") = Void, Bool, CULong;
overload selector("setDrawsOutsideLineFragment:forGlyphRange:") = Void, Bool, NSRange;
overload selector("setDropItem:dropChildIndex:") = Void, Id, CLong;
overload selector("setDropRow:dropOperation:") = Void, CLong, CULong;
overload selector("setDuration:") = Void, Double;
overload selector("setDynamicDepthLimit:") = Void, Bool;
overload selector("setEchosBullets:") = Void, Bool;
overload selector("setEdgeAntialiasingMask:") = Void, UInt;
overload selector("setEditable:") = Void, Bool;
overload selector("setEditingDelegate:") = Void, Id;
overload selector("setElevation:") = Void, NSString;
overload selector("setEmptyCells:") = Void, NSString;
overload selector("setEnabled:") = Void, Bool;
overload selector("setEnabled:forSegment:") = Void, Bool, CLong;
overload selector("setEnabledTextCheckingTypes:") = Void, UInt64;
overload selector("setEncoding:") = Void, NSString;
overload selector("setEnctype:") = Void, NSString;
overload selector("setEnd::") = Void, DOMNode, Int;
overload selector("setEnd:offset:") = Void, DOMNode, Int;
overload selector("setEndAfter:") = Void, DOMNode;
overload selector("setEndBefore:") = Void, DOMNode;
overload selector("setEndSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector("setEndSubelementIdentifier:") = Void, CULong;
overload selector("setEndSubelementIndex:") = Void, CLong;
overload selector("setEntities:") = Void, NSArray;
overload selector("setEntities:forConfiguration:") = Void, NSArray, NSString;
overload selector("setEntity:") = Void, NSEntityDescription;
overload selector("setEntityMappings:") = Void, NSArray;
overload selector("setEntityMigrationPolicyClassName:") = Void, NSString;
overload selector("setEntityName:") = Void, NSString;
overload selector("setEntryType:") = Void, CLong;
overload selector("setEntryWidth:") = Void, Double;
overload selector("setEnvironment:") = Void, NSDictionary;
overload selector("setEra:") = Void, CLong;
overload selector("setEraSymbols:") = Void, NSArray;
overload selector("setEvaluationErrorNumber:") = Void, CLong;
overload selector("setEvent:") = Void, NSString;
overload selector("setEventHandler:andSelector:forEventClass:andEventID:") = Void, Id, SelectorHandle, UInt, UInt;
overload selector("setEvictsObjectsWithDiscardedContent:") = Void, Bool;
overload selector("setException:") = Void, NSString;
overload selector("setExcludedFromWindowsMenu:") = Void, Bool;
overload selector("setExcludedKeys:") = Void, NSArray;
overload selector("setExponentSymbol:") = Void, NSString;
overload selector("setExpression:") = Void, NSExpression;
overload selector("setExpressionResultType:") = Void, CULong;
overload selector("setExtensionHidden:") = Void, Bool;
overload selector("setExtraLineFragmentRect:usedRect:textContainer:") = Void, NSRect, NSRect, NSTextContainer;
overload selector("setFace:") = Void, NSString;
overload selector("setFantasyFontFamily:") = Void, NSString;
overload selector("setFetchBatchSize:") = Void, CULong;
overload selector("setFetchLimit:") = Void, CULong;
overload selector("setFetchOffset:") = Void, CULong;
overload selector("setFetchPredicate:") = Void, NSPredicate;
overload selector("setFetchRequest:") = Void, NSFetchRequest;
overload selector("setFetchRequestTemplate:forName:") = Void, NSFetchRequest, NSString;
overload selector("setFgColor:") = Void, NSString;
overload selector("setFieldEditor:") = Void, Bool;
overload selector("setFileAttributes:") = Void, NSDictionary;
overload selector("setFileModificationDate:") = Void, NSDate;
overload selector("setFileName:") = Void, NSString;
overload selector("setFileType:") = Void, NSString;
overload selector("setFileURL:") = Void, NSURL;
overload selector("setFileWrapper:") = Void, NSFileWrapper;
overload selector("setFilename:") = Void, NSString;
overload selector("setFill") = Void;
overload selector("setFillColor:") = Void, NSColor;
overload selector("setFillMode:") = Void, NSString;
overload selector("setFilterPredicate:") = Void, NSPredicate;
overload selector("setFilters:") = Void, NSArray;
overload selector("setFireDate:") = Void, NSDate;
overload selector("setFirstLineHeadIndent:") = Void, Double;
overload selector("setFirstWeekday:") = Void, CULong;
overload selector("setFixedFontFamily:") = Void, NSString;
overload selector("setFlatness:") = Void, Double;
overload selector("setFlipped:") = Void, Bool;
overload selector("setFloat:forKey:") = Void, Float, NSString;
overload selector("setFloatValue:") = Void, Float;
overload selector("setFloatValue::") = Void, UShort, Float;
overload selector("setFloatValue:floatValue:") = Void, UShort, Float;
overload selector("setFloatValue:knobProportion:") = Void, Float, Double;
overload selector("setFloatingPanel:") = Void, Bool;
overload selector("setFloatingPointFormat:left:right:") = Void, Bool, CULong, CULong;
overload selector("setFocusRingType:") = Void, CULong;
overload selector("setFocusedColumn:") = Void, CLong;
overload selector("setFont:") = Void, NSString;
overload selector("setFont:range:") = Void, NSFont, NSRange;
overload selector("setFontFamily:") = Void, NSString;
overload selector("setFontManagerFactory:") = Void, Id;
overload selector("setFontMenu:") = Void, NSMenu;
overload selector("setFontPanelFactory:") = Void, Id;
overload selector("setFontSize:") = Void, NSString;
overload selector("setFontSizeAdjust:") = Void, NSString;
overload selector("setFontStretch:") = Void, NSString;
overload selector("setFontStyle:") = Void, NSString;
overload selector("setFontVariant:") = Void, NSString;
overload selector("setFontWeight:") = Void, NSString;
overload selector("setForegroundColor:") = Void, NSColor;
overload selector("setFormat:") = Void, NSString;
overload selector("setFormatWidth:") = Void, CULong;
overload selector("setFormatter:") = Void, NSFormatter;
overload selector("setFormatterBehavior:") = Void, CULong;
overload selector("setFormattingDictionary:") = Void, NSDictionary;
overload selector("setFormattingStringsFilename:") = Void, NSString;
overload selector("setFrame:") = Void, NSRect;
overload selector("setFrame:display:") = Void, NSRect, Bool;
overload selector("setFrame:display:animate:") = Void, NSRect, Bool, Bool;
overload selector("setFrameAutosaveName:") = Bool, NSString;
overload selector("setFrameBorder:") = Void, NSString;
overload selector("setFrameBorders:") = Void, NSString;
overload selector("setFrameCenterRotation:") = Void, Double;
overload selector("setFrameFromContentFrame:") = Void, NSRect;
overload selector("setFrameFromString:") = Void, NSString;
overload selector("setFrameLoadDelegate:") = Void, Id;
overload selector("setFrameOrigin:") = Void, NSPoint;
overload selector("setFrameRate:") = Void, Float;
overload selector("setFrameRotation:") = Void, Double;
overload selector("setFrameSize:") = Void, NSSize;
overload selector("setFrameTopLeftPoint:") = Void, NSPoint;
overload selector("setFrameUsingName:") = Bool, NSString;
overload selector("setFrameUsingName:force:") = Bool, NSString, Bool;
overload selector("setFullScreen") = Void;
overload selector("setGeneratesCalendarDates:") = Void, Bool;
overload selector("setGeneratesDecimalNumbers:") = Void, Bool;
overload selector("setGeometryFlipped:") = Void, Bool;
overload selector("setGlyphGenerator:") = Void, NSGlyphGenerator;
overload selector("setGradientType:") = Void, CULong;
overload selector("setGrammarCheckingEnabled:") = Void, Bool;
overload selector("setGraphicsState:") = Void, CLong;
overload selector("setGregorianStartDate:") = Void, NSDate;
overload selector("setGridColor:") = Void, NSColor;
overload selector("setGridStyleMask:") = Void, CULong;
overload selector("setGroupName:") = Void, NSString;
overload selector("setGroupingAttributes:") = Void, NSArray;
overload selector("setGroupingSeparator:") = Void, NSString;
overload selector("setGroupingSize:") = Void, CULong;
overload selector("setGroupsByEvent:") = Void, Bool;
overload selector("setHTTPBody:") = Void, NSData;
overload selector("setHTTPBodyStream:") = Void, NSInputStream;
overload selector("setHTTPMethod:") = Void, NSString;
overload selector("setHTTPShouldHandleCookies:") = Void, Bool;
overload selector("setHardInvalidation:forGlyphRange:") = Void, Bool, NSRange;
overload selector("setHasHorizontalRuler:") = Void, Bool;
overload selector("setHasHorizontalScroller:") = Void, Bool;
overload selector("setHasShadow:") = Void, Bool;
overload selector("setHasThousandSeparators:") = Void, Bool;
overload selector("setHasUndoManager:") = Void, Bool;
overload selector("setHasVerticalRuler:") = Void, Bool;
overload selector("setHasVerticalScroller:") = Void, Bool;
overload selector("setHashFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[CULong]];
overload selector("setHeadIndent:") = Void, Double;
overload selector("setHeaderCell:") = Void, NSCell;
overload selector("setHeaderLevel:") = Void, CLong;
overload selector("setHeaderToolTip:") = Void, NSString;
overload selector("setHeaderView:") = Void, NSTableHeaderView;
overload selector("setHeaders:") = Void, NSString;
overload selector("setHeight:") = Void, NSString;
overload selector("setHeightTracksTextView:") = Void, Bool;
overload selector("setHelpAnchor:") = Void, NSString;
overload selector("setHelpMenu:") = Void, NSMenu;
overload selector("setHidden:") = Void, Bool;
overload selector("setHiddenUntilMouseMoves:") = Void, Bool;
overload selector("setHidesEmptyCells:") = Void, Bool;
overload selector("setHidesOnDeactivate:") = Void, Bool;
overload selector("setHighlightMode:") = Void, Bool;
overload selector("setHighlighted:") = Void, Bool;
overload selector("setHighlightedTableColumn:") = Void, NSTableColumn;
overload selector("setHighlightsBy:") = Void, CLong;
overload selector("setHistoryAgeInDaysLimit:") = Void, Int;
overload selector("setHistoryItemLimit:") = Void, Int;
overload selector("setHorizontalLineScroll:") = Void, Double;
overload selector("setHorizontalPageScroll:") = Void, Double;
overload selector("setHorizontalPagination:") = Void, CULong;
overload selector("setHorizontalRulerView:") = Void, NSRulerView;
overload selector("setHorizontalScroller:") = Void, NSScroller;
overload selector("setHorizontallyCentered:") = Void, Bool;
overload selector("setHorizontallyResizable:") = Void, Bool;
overload selector("setHostCacheEnabled:") = Void, Bool;
overload selector("setHostWindow:") = Void, NSWindow;
overload selector("setHour:") = Void, CLong;
overload selector("setHref:") = Void, NSString;
overload selector("setHreflang:") = Void, NSString;
overload selector("setHspace:") = Void, Int;
overload selector("setHtmlFor:") = Void, NSString;
overload selector("setHttpEquiv:") = Void, NSString;
overload selector("setHyphenationFactor:") = Void, Float;
overload selector("setIcon:") = Void, NSImage;
overload selector("setIcon:forFile:options:") = Bool, NSImage, NSString, CULong;
overload selector("setIdName:") = Void, NSString;
overload selector("setIdentifier:") = Void, Id;
overload selector("setIgnoredWords:inSpellDocumentWithTag:") = Void, NSArray, CLong;
overload selector("setIgnoresAlpha:") = Void, Bool;
overload selector("setIgnoresMouseEvents:") = Void, Bool;
overload selector("setIgnoresMultiClick:") = Void, Bool;
overload selector("setImage:") = Void, NSImage;
overload selector("setImage:forSegment:") = Void, NSImage, CLong;
overload selector("setImageAlignment:") = Void, CULong;
overload selector("setImageDimsWhenDisabled:") = Void, Bool;
overload selector("setImageFrameStyle:") = Void, CULong;
overload selector("setImageInterpolation:") = Void, CULong;
overload selector("setImageOrigin:") = Void, NSPoint;
overload selector("setImagePosition:") = Void, CULong;
overload selector("setImageScaling:") = Void, CULong;
overload selector("setImageScaling:forSegment:") = Void, CULong, CLong;
overload selector("setImportsGraphics:") = Void, Bool;
overload selector("setInContext:") = Void, NSGraphicsContext;
overload selector("setIncludedKeys:") = Void, NSArray;
overload selector("setIncludesPendingChanges:") = Void, Bool;
overload selector("setIncludesPropertyValues:") = Void, Bool;
overload selector("setIncludesSubentities:") = Void, Bool;
overload selector("setIncrement:") = Void, Double;
overload selector("setIndentationLevel:") = Void, CLong;
overload selector("setIndentationMarkerFollowsCell:") = Void, Bool;
overload selector("setIndentationPerLevel:") = Void, Double;
overload selector("setIndependentConversationQueueing:") = Void, Bool;
overload selector("setIndeterminate:") = Void, Bool;
overload selector("setIndex:") = Void, CLong;
overload selector("setIndexed:") = Void, Bool;
overload selector("setIndexedBySpotlight:") = Void, Bool;
overload selector("setIndicatorImage:inTableColumn:") = Void, NSImage, NSTableColumn;
overload selector("setInformativeText:") = Void, NSString;
overload selector("setInitialFirstResponder:") = Void, NSView;
overload selector("setInitialKey:") = Void, NSString;
overload selector("setInitialValue:") = Void, Id;
overload selector("setInitialValues:") = Void, NSDictionary;
overload selector("setInnerHTML:") = Void, NSString;
overload selector("setInnerText:") = Void, NSString;
overload selector("setInsertionClassDescription:") = Void, NSScriptClassDescription;
overload selector("setInsertionPointColor:") = Void, NSColor;
overload selector("setIntAttribute:value:forGlyphAtIndex:") = Void, CLong, CLong, CULong;
overload selector("setIntValue:") = Void, Int;
overload selector("setInteger:forKey:") = Void, CLong, NSString;
overload selector("setIntegerValue:") = Void, CLong;
overload selector("setIntercellSpacing:") = Void, NSSize;
overload selector("setInterfaceStyle:") = Void, CULong;
overload selector("setInterlineSpacing:") = Void, Double;
overload selector("setInternationalCurrencySymbol:") = Void, NSString;
overload selector("setInverseRelationship:") = Void, NSRelationshipDescription;
overload selector("setIsEqualFunction:") = Void, CCodePointer[[RawPointer,RawPointer,CCodePointer[[RawPointer],[CULong]]],[CChar]];
overload selector("setIsMap:") = Void, Bool;
overload selector("setIsMiniaturized:") = Void, Bool;
overload selector("setIsPaneSplitter:") = Void, Bool;
overload selector("setIsVisible:") = Void, Bool;
overload selector("setIsZoomed:") = Void, Bool;
overload selector("setItemHeight:") = Void, Double;
overload selector("setItemPrototype:") = Void, NSCollectionViewItem;
overload selector("setJavaEnabled:") = Void, Bool;
overload selector("setJavaScriptCanOpenWindowsAutomatically:") = Void, Bool;
overload selector("setJavaScriptEnabled:") = Void, Bool;
overload selector("setJobDisposition:") = Void, NSString;
overload selector("setJobStyleHint:") = Void, NSString;
overload selector("setJobTitle:") = Void, NSString;
overload selector("setKey:") = Void, NSString;
overload selector("setKeyCell:") = Void, NSCell;
overload selector("setKeyEquivalent:") = Void, NSString;
overload selector("setKeyEquivalentFont:") = Void, NSFont;
overload selector("setKeyEquivalentFont:size:") = Void, NSString, Double;
overload selector("setKeyEquivalentModifierMask:") = Void, CULong;
overload selector("setKeyboardFocusRingNeedsDisplayInRect:") = Void, NSRect;
overload selector("setKeys:triggerChangeNotificationsForDependentKey:") = Void, NSArray, NSString;
overload selector("setKnobProportion:") = Void, Double;
overload selector("setKnobThickness:") = Void, Double;
overload selector("setLabel:") = Void, NSString;
overload selector("setLabel:forSegment:") = Void, NSString, CLong;
overload selector("setLang:") = Void, NSString;
overload selector("setLanguage:") = Bool, NSString;
overload selector("setLastColumn:") = Void, CLong;
overload selector("setLastComponentOfFileName:") = Void, NSString;
overload selector("setLaunchPath:") = Void, NSString;
overload selector("setLayer:") = Void, CALayer;
overload selector("setLayerContentsPlacement:") = Void, CLong;
overload selector("setLayerContentsRedrawPolicy:") = Void, CLong;
overload selector("setLayoutAlgorithm:") = Void, CULong;
overload selector("setLayoutManager:") = Void, NSLayoutManager;
overload selector("setLayoutRect:forTextBlock:glyphRange:") = Void, NSRect, NSTextBlock, NSRange;
overload selector("setLeadingOffset:") = Void, Double;
overload selector("setLeaf:") = Void, Bool;
overload selector("setLeafKeyPath:") = Void, NSString;
overload selector("setLeft:") = Void, NSString;
overload selector("setLeftMargin:") = Void, Double;
overload selector("setLength:") = Void, CULong;
overload selector("setLenient:") = Void, Bool;
overload selector("setLetterSpacing:") = Void, NSString;
overload selector("setLevel:") = Void, CLong;
overload selector("setLevelIndicatorStyle:") = Void, CULong;
overload selector("setLevelsOfUndo:") = Void, CULong;
overload selector("setLineBreakMode:") = Void, CULong;
overload selector("setLineCapStyle:") = Void, CULong;
overload selector("setLineDash:count:phase:") = Void, Pointer[Double], CLong, Double;
overload selector("setLineFragmentPadding:") = Void, Double;
overload selector("setLineFragmentRect:forGlyphRange:usedRect:") = Void, NSRect, NSRange, NSRect;
overload selector("setLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRect, NSRange, NSRect, Double;
overload selector("setLineHeight:") = Void, NSString;
overload selector("setLineHeightMultiple:") = Void, Double;
overload selector("setLineJoinStyle:") = Void, CULong;
overload selector("setLineScroll:") = Void, Double;
overload selector("setLineSpacing:") = Void, Double;
overload selector("setLineWidth:") = Void, Double;
overload selector("setLink:") = Void, NSString;
overload selector("setLinkColor:") = Void, NSString;
overload selector("setLinkTextAttributes:") = Void, NSDictionary;
overload selector("setListStyle:") = Void, NSString;
overload selector("setListStyleImage:") = Void, NSString;
overload selector("setListStylePosition:") = Void, NSString;
overload selector("setListStyleType:") = Void, NSString;
overload selector("setListensInForegroundOnly:") = Void, Bool;
overload selector("setLoaded:") = Void, Bool;
overload selector("setLoadsImagesAutomatically:") = Void, Bool;
overload selector("setLocale:") = Void, NSLocale;
overload selector("setLocalizationDictionary:") = Void, NSDictionary;
overload selector("setLocalizedKey:") = Void, NSString;
overload selector("setLocalizedKeyDictionary:") = Void, NSDictionary;
overload selector("setLocalizedKeyTable:") = Void, NSString;
overload selector("setLocalizesFormat:") = Void, Bool;
overload selector("setLocation:") = Void, NSString;
overload selector("setLocation:forStartOfGlyphRange:") = Void, NSPoint, NSRange;
overload selector("setLocation:withAdvancements:forStartOfGlyphRange:") = Void, NSPoint, Pointer[Double], NSRange;
overload selector("setLocations:startingGlyphIndexes:count:forGlyphRange:") = Void, NSPointArray, Pointer[CULong], CULong, NSRange;
overload selector("setLongDesc:") = Void, NSString;
overload selector("setLongEraSymbols:") = Void, NSArray;
overload selector("setLoops:") = Void, Bool;
overload selector("setLowsrc:") = Void, NSString;
overload selector("setMIMEType:") = Void, NSString;
overload selector("setMIMETypesShownAsHTML:") = Void, NSArray;
overload selector("setMagnificationFilter:") = Void, NSString;
overload selector("setMainDocumentURL:") = Void, NSURL;
overload selector("setMainFrameURL:") = Void, NSString;
overload selector("setMainMenu:") = Void, NSMenu;
overload selector("setMaintainsBackForwardList:") = Void, Bool;
overload selector("setManagedObjectClassName:") = Void, NSString;
overload selector("setManagedObjectContext:") = Void, NSManagedObjectContext;
overload selector("setMappingType:") = Void, CULong;
overload selector("setMargin:") = Void, NSString;
overload selector("setMarginBottom:") = Void, NSString;
overload selector("setMarginHeight:") = Void, NSString;
overload selector("setMarginLeft:") = Void, NSString;
overload selector("setMarginRight:") = Void, NSString;
overload selector("setMarginTop:") = Void, NSString;
overload selector("setMarginWidth:") = Void, NSString;
overload selector("setMark:") = Void, Id;
overload selector("setMarkedText:selectedRange:") = Void, Id, NSRange;
overload selector("setMarkedText:selectedRange:replacementRange:") = Void, Id, NSRange, NSRange;
overload selector("setMarkedTextAttributes:") = Void, NSDictionary;
overload selector("setMarkerLocation:") = Void, Double;
overload selector("setMarkerOffset:") = Void, NSString;
overload selector("setMarkers:") = Void, NSArray;
overload selector("setMarks:") = Void, NSString;
overload selector("setMask:") = Void, CALayer;
overload selector("setMasksToBounds:") = Void, Bool;
overload selector("setMatchesOnMultipleResolution:") = Void, Bool;
overload selector("setMatrixClass:") = Void, Id;
overload selector("setMaxConcurrentOperationCount:") = Void, CLong;
overload selector("setMaxContentSize:") = Void, NSSize;
overload selector("setMaxCount:") = Void, CULong;
overload selector("setMaxDate:") = Void, NSDate;
overload selector("setMaxHeight:") = Void, NSString;
overload selector("setMaxItemSize:") = Void, NSSize;
overload selector("setMaxLength:") = Void, Int;
overload selector("setMaxNumberOfColumns:") = Void, CULong;
overload selector("setMaxNumberOfRows:") = Void, CULong;
overload selector("setMaxSize:") = Void, NSSize;
overload selector("setMaxValue:") = Void, Double;
overload selector("setMaxVisibleColumns:") = Void, CLong;
overload selector("setMaxWidth:") = Void, NSString;
overload selector("setMaximum:") = Void, NSNumber;
overload selector("setMaximumFractionDigits:") = Void, CULong;
overload selector("setMaximumIntegerDigits:") = Void, CULong;
overload selector("setMaximumLineHeight:") = Void, Double;
overload selector("setMaximumRecents:") = Void, CLong;
overload selector("setMaximumSignificantDigits:") = Void, CULong;
overload selector("setMeasurementUnits:") = Void, NSString;
overload selector("setMedia:") = Void, NSString;
overload selector("setMediaStyle:") = Void, NSString;
overload selector("setMediaText:") = Void, NSString;
overload selector("setMemoryCapacity:") = Void, CULong;
overload selector("setMenu:") = Void, NSMenu;
overload selector("setMenu:forSegment:") = Void, NSMenu, CLong;
overload selector("setMenuBarVisible:") = Void, Bool;
overload selector("setMenuChangedMessagesEnabled:") = Void, Bool;
overload selector("setMenuFormRepresentation:") = Void, NSMenuItem;
overload selector("setMenuItem:") = Void, NSMenuItem;
overload selector("setMenuRepresentation:") = Void, Id;
overload selector("setMenuZone:") = Void, Pointer[NSZone];
overload selector("setMergePolicy:") = Void, Id;
overload selector("setMessage:") = Void, NSString;
overload selector("setMessageText:") = Void, NSString;
overload selector("setMetadata:") = Void, NSDictionary;
overload selector("setMetadata:forPersistentStore:") = Void, NSDictionary, NSPersistentStore;
overload selector("setMetadata:forPersistentStoreOfType:URL:error:") = Bool, NSDictionary, NSString, NSURL, Pointer[NSError];
overload selector("setMetadata:forPersistentStoreWithURL:error:") = Bool, NSDictionary, NSURL, Pointer[NSError];
overload selector("setMethod:") = Void, NSString;
overload selector("setMinColumnWidth:") = Void, Double;
overload selector("setMinContentSize:") = Void, NSSize;
overload selector("setMinCount:") = Void, CULong;
overload selector("setMinDate:") = Void, NSDate;
overload selector("setMinHeight:") = Void, NSString;
overload selector("setMinItemSize:") = Void, NSSize;
overload selector("setMinSize:") = Void, NSSize;
overload selector("setMinValue:") = Void, Double;
overload selector("setMinWidth:") = Void, NSString;
overload selector("setMinificationFilter:") = Void, NSString;
overload selector("setMinificationFilterBias:") = Void, Float;
overload selector("setMinimum:") = Void, NSNumber;
overload selector("setMinimumDaysInFirstWeek:") = Void, CULong;
overload selector("setMinimumFontSize:") = Void, Int;
overload selector("setMinimumFractionDigits:") = Void, CULong;
overload selector("setMinimumIntegerDigits:") = Void, CULong;
overload selector("setMinimumLineHeight:") = Void, Double;
overload selector("setMinimumLogicalFontSize:") = Void, Int;
overload selector("setMinimumSignificantDigits:") = Void, CULong;
overload selector("setMinimumWidth:") = Void, Double;
overload selector("setMiniwindowImage:") = Void, NSImage;
overload selector("setMiniwindowTitle:") = Void, NSString;
overload selector("setMinusSign:") = Void, NSString;
overload selector("setMinute:") = Void, CLong;
overload selector("setMiterLimit:") = Void, Double;
overload selector("setMixedStateImage:") = Void, NSImage;
overload selector("setMnemonicLocation:") = Void, CULong;
overload selector("setMode:") = Void, CULong;
overload selector("setMonth:") = Void, CLong;
overload selector("setMonthSymbols:") = Void, NSArray;
overload selector("setMouseCoalescingEnabled:") = Void, Bool;
overload selector("setMovable:") = Void, Bool;
overload selector("setMovableByWindowBackground:") = Void, Bool;
overload selector("setMsgid:") = Void, UInt;
overload selector("setMultiple:") = Void, Bool;
overload selector("setMultiplier:") = Void, NSNumber;
overload selector("setName:") = Bool, NSString;
overload selector("setNameFieldLabel:") = Void, NSString;
overload selector("setNameFieldStringValue:") = Void, NSString;
overload selector("setNamedItem:") = DOMNode, DOMNode;
overload selector("setNamedItemNS:") = DOMNode, DOMNode;
overload selector("setNamespaces:") = Void, NSArray;
overload selector("setNeedsDisplay") = Void;
overload selector("setNeedsDisplay:") = Void, Bool;
overload selector("setNeedsDisplayInRect:") = Void, NSRect;
overload selector("setNeedsDisplayInRect:avoidAdditionalLayout:") = Void, NSRect, Bool;
overload selector("setNeedsDisplayOnBoundsChange:") = Void, Bool;
overload selector("setNeedsLayout") = Void;
overload selector("setNeedsLayout:") = Void, Bool;
overload selector("setNeedsSizing:") = Void, Bool;
overload selector("setNegativeFormat:") = Void, NSString;
overload selector("setNegativeInfinitySymbol:") = Void, NSString;
overload selector("setNegativePrefix:") = Void, NSString;
overload selector("setNegativeSuffix:") = Void, NSString;
overload selector("setNestingMode:") = Void, CULong;
overload selector("setNextKeyView:") = Void, NSView;
overload selector("setNextResponder:") = Void, NSResponder;
overload selector("setNextState") = Void;
overload selector("setNilSymbol:") = Void, NSString;
overload selector("setNilValueForKey:") = Void, NSString;
overload selector("setNoHref:") = Void, Bool;
overload selector("setNoResize:") = Void, Bool;
overload selector("setNoShade:") = Void, Bool;
overload selector("setNoWrap:") = Void, Bool;
overload selector("setNodeValue:") = Void, NSString;
overload selector("setNotANumberSymbol:") = Void, NSString;
overload selector("setNotShownAttribute:forGlyphAtIndex:") = Void, Bool, CULong;
overload selector("setNotShownAttribute:forGlyphRange:") = Void, Bool, NSRange;
overload selector("setNotationName:") = Void, NSString;
overload selector("setNotificationBatchingInterval:") = Void, Double;
overload selector("setNumberOfColumns:") = Void, CULong;
overload selector("setNumberOfMajorTickMarks:") = Void, CLong;
overload selector("setNumberOfTickMarks:") = Void, CLong;
overload selector("setNumberOfVisibleItems:") = Void, CLong;
overload selector("setNumberStyle:") = Void, CULong;
overload selector("setObject:") = Void, NSString;
overload selector("setObject:forKey:") = Void, Id, Id;
overload selector("setObject:forKey:cost:") = Void, Id, Id, CULong;
overload selector("setObject:forProperty:error:") = Bool, Id, NSString, Pointer[NSError];
overload selector("setObjectBeingTested:") = Void, Id;
overload selector("setObjectClass:") = Void, Id;
overload selector("setObjectValue:") = Void, Id;
overload selector("setObjectZone:") = Void, Pointer[NSZone];
overload selector("setObservationInfo:") = Void, RawPointer;
overload selector("setOffScreen:width:height:rowbytes:") = Void, RawPointer, Int, Int, Int;
overload selector("setOffStateImage:") = Void, NSImage;
overload selector("setOnMouseEntered:") = Void, Bool;
overload selector("setOnMouseExited:") = Void, Bool;
overload selector("setOnStateImage:") = Void, NSImage;
overload selector("setOneShot:") = Void, Bool;
overload selector("setOpacity:") = Void, Float;
overload selector("setOpaque:") = Void, Bool;
overload selector("setOpenGLContext:") = Void, NSOpenGLContext;
overload selector("setOpenGLPixelFormat:") = Void, NSOpenGLPixelFormat;
overload selector("setOptional:") = Void, Bool;
overload selector("setOptionalSharedHistory:") = Void, WebHistory;
overload selector("setOptions:") = Void, CLong;
overload selector("setOrderedIndex:") = Void, CLong;
overload selector("setOrientation:") = Void, CULong;
overload selector("setOriginOffset:") = Void, Double;
overload selector("setOrphans:") = Void, NSString;
overload selector("setOuterHTML:") = Void, NSString;
overload selector("setOuterText:") = Void, NSString;
overload selector("setOutline:") = Void, NSString;
overload selector("setOutlineColor:") = Void, NSString;
overload selector("setOutlineStyle:") = Void, NSString;
overload selector("setOutlineTableColumn:") = Void, NSTableColumn;
overload selector("setOutlineWidth:") = Void, NSString;
overload selector("setOutputFormat:") = Void, CULong;
overload selector("setOverflow:") = Void, NSString;
overload selector("setPMSymbol:") = Void, NSString;
overload selector("setPadding:") = Void, NSString;
overload selector("setPaddingBottom:") = Void, NSString;
overload selector("setPaddingCharacter:") = Void, NSString;
overload selector("setPaddingLeft:") = Void, NSString;
overload selector("setPaddingPosition:") = Void, CULong;
overload selector("setPaddingRight:") = Void, NSString;
overload selector("setPaddingTop:") = Void, NSString;
overload selector("setPage:") = Void, NSString;
overload selector("setPageBreakAfter:") = Void, NSString;
overload selector("setPageBreakBefore:") = Void, NSString;
overload selector("setPageBreakInside:") = Void, NSString;
overload selector("setPageCacheSize:") = Void, CULong;
overload selector("setPageOrder:") = Void, CLong;
overload selector("setPageScroll:") = Void, Double;
overload selector("setPaletteLabel:") = Void, NSString;
overload selector("setPanelFont:isMultiple:") = Void, NSFont, Bool;
overload selector("setPaperName:") = Void, NSString;
overload selector("setPaperSize:") = Void, NSSize;
overload selector("setParagraphGlyphRange:separatorGlyphRange:") = Void, NSRange, NSRange;
overload selector("setParagraphSpacing:") = Void, Double;
overload selector("setParagraphSpacingBefore:") = Void, Double;
overload selector("setParagraphStyle:") = Void, NSParagraphStyle;
overload selector("setParagraphs:") = Void, NSArray;
overload selector("setParamDescriptor:forKeyword:") = Void, NSAppleEventDescriptor, UInt;
overload selector("setParentWindow:") = Void, NSWindow;
overload selector("setPartialStringValidationEnabled:") = Void, Bool;
overload selector("setPath:") = Bool, NSString;
overload selector("setPathComponentCells:") = Void, NSArray;
overload selector("setPathSeparator:") = Void, NSString;
overload selector("setPathStyle:") = Void, CLong;
overload selector("setPatternPhase:") = Void, NSPoint;
overload selector("setPause:") = Void, NSString;
overload selector("setPauseAfter:") = Void, NSString;
overload selector("setPauseBefore:") = Void, NSString;
overload selector("setPerMillSymbol:") = Void, NSString;
overload selector("setPercentSymbol:") = Void, NSString;
overload selector("setPeriodicDelay:interval:") = Void, Float, Float;
overload selector("setPersistentDomain:forName:") = Void, NSDictionary, NSString;
overload selector("setPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
overload selector("setPickerMask:") = Void, CULong;
overload selector("setPickerMode:") = Void, CLong;
overload selector("setPitch:") = Void, NSString;
overload selector("setPitchRange:") = Void, NSString;
overload selector("setPixel:atX:y:") = Void, Pointer[CULong], CLong, CLong;
overload selector("setPixelBuffer:cubeMapFace:mipMapLevel:currentVirtualScreen:") = Void, NSOpenGLPixelBuffer, UInt, Int, Int;
overload selector("setPixelFormat:") = Void, NSOpenGLPixelFormat;
overload selector("setPixelsHigh:") = Void, CLong;
overload selector("setPixelsWide:") = Void, CLong;
overload selector("setPlaceholderAttributedString:") = Void, NSAttributedString;
overload selector("setPlaceholderString:") = Void, NSString;
overload selector("setPlayDuring:") = Void, NSString;
overload selector("setPlaybackDeviceIdentifier:") = Void, NSString;
overload selector("setPlugInsEnabled:") = Void, Bool;
overload selector("setPlusSign:") = Void, NSString;
overload selector("setPolicyDelegate:") = Void, Id;
overload selector("setPosition:") = Void, NSString;
overload selector("setPosition:ofDividerAtIndex:") = Void, Double, CLong;
overload selector("setPositiveFormat:") = Void, NSString;
overload selector("setPositiveInfinitySymbol:") = Void, NSString;
overload selector("setPositivePrefix:") = Void, NSString;
overload selector("setPositiveSuffix:") = Void, NSString;
overload selector("setPostsBoundsChangedNotifications:") = Void, Bool;
overload selector("setPostsFrameChangedNotifications:") = Void, Bool;
overload selector("setPredicate:") = Void, NSPredicate;
overload selector("setPreferences:") = Void, WebPreferences;
overload selector("setPreferencesIdentifier:") = Void, NSString;
overload selector("setPreferredBackingLocation:") = Void, CULong;
overload selector("setPreferredEdge:") = Void, CULong;
overload selector("setPreferredFilename:") = Void, NSString;
overload selector("setPrefersAllColumnUserResizing:") = Void, Bool;
overload selector("setPrefersColorMatch:") = Void, Bool;
overload selector("setPrefix:") = Void, NSString;
overload selector("setPresentationOptions:") = Void, CULong;
overload selector("setPreservesContentDuringLiveResize:") = Void, Bool;
overload selector("setPreservesSelection:") = Void, Bool;
overload selector("setPreventsApplicationTerminationWhenModal:") = Void, Bool;
overload selector("setPrimitiveValue:forKey:") = Void, Id, NSString;
overload selector("setPrintInfo:") = Void, NSPrintInfo;
overload selector("setPrintPanel:") = Void, NSPrintPanel;
overload selector("setPrinter:") = Void, NSPrinter;
overload selector("setPrivateBrowsingEnabled:") = Void, Bool;
overload selector("setProcessName:") = Void, NSString;
overload selector("setProfile:") = Void, NSString;
overload selector("setProgressMarks:") = Void, NSArray;
overload selector("setPrompt:") = Void, NSString;
overload selector("setPropagatesDeletesAtEndOfEvent:") = Void, Bool;
overload selector("setProperties:") = Void, NSArray;
overload selector("setPropertiesToFetch:") = Void, NSArray;
overload selector("setProperty:::") = Void, NSString, NSString, NSString;
overload selector("setProperty:forKey:") = Bool, Id, NSString;
overload selector("setProperty:forKey:inRequest:") = Void, Id, NSString, NSMutableURLRequest;
overload selector("setProperty:value:priority:") = Void, NSString, NSString, NSString;
overload selector("setProperty:withValue:") = Void, NSString, Id;
overload selector("setPropertyCache:") = Void, NSMutableDictionary;
overload selector("setPropertyList:forType:") = Bool, Id, NSString;
overload selector("setProtocolForProxy:") = Void, Id;
overload selector("setProtocolSpecificInformation:") = Void, NSString;
overload selector("setPrototype:") = Void, NSCell;
overload selector("setPublicID:") = Void, NSString;
overload selector("setPullsDown:") = Void, Bool;
overload selector("setQuarter:") = Void, CLong;
overload selector("setQuarterSymbols:") = Void, NSArray;
overload selector("setQueuePriority:") = Void, CLong;
overload selector("setQuotes:") = Void, NSString;
overload selector("setRangeContainerObject:") = Void, Id;
overload selector("setRate:") = Void, Float;
overload selector("setReadOnly:") = Void, Bool;
overload selector("setReceiversSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector("setRecentSearches:") = Void, NSArray;
overload selector("setRecentsAutosaveName:") = Void, NSString;
overload selector("setRefusesFirstResponder:") = Void, Bool;
overload selector("setRel:") = Void, NSString;
overload selector("setRelationshipKeyPathsForPrefetching:") = Void, NSArray;
overload selector("setRelationshipMappings:") = Void, NSArray;
overload selector("setRelativePosition:") = Void, CULong;
overload selector("setReleasedWhenClosed:") = Void, Bool;
overload selector("setRelinquishFunction:") = Void, CCodePointer[[RawPointer,CCodePointer[[RawPointer],[CULong]]],[]];
overload selector("setRemovable:") = Void, Bool;
overload selector("setRenamingIdentifier:") = Void, NSString;
overload selector("setRepeatCount:") = Void, Float;
overload selector("setRepeatDuration:") = Void, Double;
overload selector("setReplyTimeout:") = Void, Double;
overload selector("setRepresentation") = NSSet;
overload selector("setRepresentedFilename:") = Void, NSString;
overload selector("setRepresentedObject:") = Void, Id;
overload selector("setRepresentedURL:") = Void, NSURL;
overload selector("setRequestTimeout:") = Void, Double;
overload selector("setRequiredFileType:") = Void, NSString;
overload selector("setReservedThicknessForAccessoryView:") = Void, Double;
overload selector("setReservedThicknessForMarkers:") = Void, Double;
overload selector("setResizable:") = Void, Bool;
overload selector("setResizeIncrements:") = Void, NSSize;
overload selector("setResizingMask:") = Void, CULong;
overload selector("setResolvesAliases:") = Void, Bool;
overload selector("setResourceData:") = Bool, NSData;
overload selector("setResourceLoadDelegate:") = Void, Id;
overload selector("setResourceValue:forKey:error:") = Bool, Id, NSString, Pointer[NSError];
overload selector("setResourceValues:error:") = Bool, NSDictionary, Pointer[NSError];
overload selector("setResultType:") = Void, CULong;
overload selector("setRetainsRegisteredObjects:") = Void, Bool;
overload selector("setReturnValue:") = Void, RawPointer;
overload selector("setReturnsDistinctResults:") = Void, Bool;
overload selector("setReturnsObjectsAsFaults:") = Void, Bool;
overload selector("setReusesColumns:") = Void, Bool;
overload selector("setRev:") = Void, NSString;
overload selector("setRichText:") = Void, Bool;
overload selector("setRichness:") = Void, NSString;
overload selector("setRight:") = Void, NSString;
overload selector("setRightMargin:") = Void, Double;
overload selector("setRootElement:") = Void, NSXMLNode;
overload selector("setRootObject:") = Void, Id;
overload selector("setRoundingBehavior:") = Void, NSDecimalNumberHandler;
overload selector("setRoundingIncrement:") = Void, NSNumber;
overload selector("setRoundingMode:") = Void, CULong;
overload selector("setRowClass:") = Void, Id;
overload selector("setRowHeight:") = Void, Double;
overload selector("setRowSpan:") = Void, Int;
overload selector("setRowTemplates:") = Void, NSArray;
overload selector("setRowTypeKeyPath:") = Void, NSString;
overload selector("setRows:") = Void, NSString;
overload selector("setRuleThickness:") = Void, Double;
overload selector("setRulerViewClass:") = Void, Id;
overload selector("setRulerVisible:") = Void, Bool;
overload selector("setRulersVisible:") = Void, Bool;
overload selector("setRules:") = Void, NSString;
overload selector("setRunLoopModes:") = Void, NSArray;
overload selector("setSansSerifFontFamily:") = Void, NSString;
overload selector("setScalesWhenResized:") = Void, Bool;
overload selector("setScalingFactor:") = Void, Double;
overload selector("setScanLocation:") = Void, CULong;
overload selector("setScheme:") = Void, NSString;
overload selector("setScope:") = Void, NSString;
overload selector("setScriptErrorExpectedTypeDescriptor:") = Void, NSAppleEventDescriptor;
overload selector("setScriptErrorNumber:") = Void, Int;
overload selector("setScriptErrorOffendingObjectDescriptor:") = Void, NSAppleEventDescriptor;
overload selector("setScriptErrorString:") = Void, NSString;
overload selector("setScriptingProperties:") = Void, NSDictionary;
overload selector("setScrollLeft:") = Void, Int;
overload selector("setScrollTop:") = Void, Int;
overload selector("setScrollView:") = Void, NSScrollView;
overload selector("setScrollable:") = Void, Bool;
overload selector("setScrolling:") = Void, NSString;
overload selector("setScrollsDynamically:") = Void, Bool;
overload selector("setSearchButtonCell:") = Void, NSButtonCell;
overload selector("setSearchMenuTemplate:") = Void, NSMenu;
overload selector("setSearchScopes:") = Void, NSArray;
overload selector("setSecond:") = Void, CLong;
overload selector("setSecondaryGroupingSize:") = Void, CULong;
overload selector("setSegmentCount:") = Void, CLong;
overload selector("setSegmentStyle:") = Void, CLong;
overload selector("setSelectable:") = Void, Bool;
overload selector("setSelected:") = Void, Bool;
overload selector("setSelected:forSegment:") = Void, Bool, CLong;
overload selector("setSelectedAttributes:isMultiple:") = Void, NSDictionary, Bool;
overload selector("setSelectedDOMRange:affinity:") = Void, DOMRange, CULong;
overload selector("setSelectedFont:isMultiple:") = Void, NSFont, Bool;
overload selector("setSelectedIndex:") = Void, Int;
overload selector("setSelectedItemIdentifier:") = Void, NSString;
overload selector("setSelectedKeyboardInputSource:") = Void, NSString;
overload selector("setSelectedObjects:") = Bool, NSArray;
overload selector("setSelectedRange:") = Void, NSRange;
overload selector("setSelectedRange:affinity:stillSelecting:") = Void, NSRange, CULong, Bool;
overload selector("setSelectedRanges:") = Void, NSArray;
overload selector("setSelectedRanges:affinity:stillSelecting:") = Void, NSArray, CULong, Bool;
overload selector("setSelectedSegment:") = Void, CLong;
overload selector("setSelectedStylesheetSet:") = Void, NSString;
overload selector("setSelectedTextAttributes:") = Void, NSDictionary;
overload selector("setSelectionByRect:") = Void, Bool;
overload selector("setSelectionEnd:") = Void, Int;
overload selector("setSelectionFrom:to:anchor:highlight:") = Void, CLong, CLong, CLong, Bool;
overload selector("setSelectionGranularity:") = Void, CULong;
overload selector("setSelectionHighlightStyle:") = Void, CLong;
overload selector("setSelectionIndex:") = Bool, CULong;
overload selector("setSelectionIndexPath:") = Bool, NSIndexPath;
overload selector("setSelectionIndexPaths:") = Bool, NSArray;
overload selector("setSelectionIndexes:") = Bool, NSIndexSet;
overload selector("setSelectionOnly:") = Void, Bool;
overload selector("setSelectionRange:end:") = Void, Int, Int;
overload selector("setSelectionStart:") = Void, Int;
overload selector("setSelector:") = Void, SelectorHandle;
overload selector("setSelectorText:") = Void, NSString;
overload selector("setSelectsInsertedObjects:") = Void, Bool;
overload selector("setSendsActionOnArrowKeys:") = Void, Bool;
overload selector("setSendsActionOnEndEditing:") = Void, Bool;
overload selector("setSendsSearchStringImmediately:") = Void, Bool;
overload selector("setSendsWholeSearchString:") = Void, Bool;
overload selector("setSeparatesColumns:") = Void, Bool;
overload selector("setSerifFontFamily:") = Void, NSString;
overload selector("setServicesMenu:") = Void, NSMenu;
overload selector("setServicesProvider:") = Void, Id;
overload selector("setSet:") = Void, NSSet;
overload selector("setShadow:") = Void, NSShadow;
overload selector("setShadowBlurRadius:") = Void, Double;
overload selector("setShadowColor:") = Void, CGColorRef;
overload selector("setShadowOffset:") = Void, CGSize;
overload selector("setShadowOpacity:") = Void, Float;
overload selector("setShadowRadius:") = Void, Double;
overload selector("setShape:") = Void, NSString;
overload selector("setSharedPrintInfo:") = Void, NSPrintInfo;
overload selector("setSharedScriptSuiteRegistry:") = Void, NSScriptSuiteRegistry;
overload selector("setSharedURLCache:") = Void, NSURLCache;
overload selector("setSharingType:") = Void, CULong;
overload selector("setShortMonthSymbols:") = Void, NSArray;
overload selector("setShortQuarterSymbols:") = Void, NSArray;
overload selector("setShortStandaloneMonthSymbols:") = Void, NSArray;
overload selector("setShortStandaloneQuarterSymbols:") = Void, NSArray;
overload selector("setShortStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector("setShortWeekdaySymbols:") = Void, NSArray;
overload selector("setShouldAntialias:") = Void, Bool;
overload selector("setShouldCascadeWindows:") = Void, Bool;
overload selector("setShouldCloseDocument:") = Void, Bool;
overload selector("setShouldCloseWithWindow:") = Void, Bool;
overload selector("setShouldCreateUI:") = Void, Bool;
overload selector("setShouldPrintBackgrounds:") = Void, Bool;
overload selector("setShouldProcessNamespaces:") = Void, Bool;
overload selector("setShouldReportNamespacePrefixes:") = Void, Bool;
overload selector("setShouldResolveExternalEntities:") = Void, Bool;
overload selector("setShouldUpdateWhileOffscreen:") = Void, Bool;
overload selector("setShowPanels:") = Void, Bool;
overload selector("setShowsAlpha:") = Void, Bool;
overload selector("setShowsApplicationBadge:") = Void, Bool;
overload selector("setShowsBaselineSeparator:") = Void, Bool;
overload selector("setShowsBorderOnlyWhileMouseInside:") = Void, Bool;
overload selector("setShowsControlCharacters:") = Void, Bool;
overload selector("setShowsFirstResponder:") = Void, Bool;
overload selector("setShowsHelp:") = Void, Bool;
overload selector("setShowsHiddenFiles:") = Void, Bool;
overload selector("setShowsInvisibleCharacters:") = Void, Bool;
overload selector("setShowsPrintPanel:") = Void, Bool;
overload selector("setShowsProgressPanel:") = Void, Bool;
overload selector("setShowsResizeIndicator:") = Void, Bool;
overload selector("setShowsStateBy:") = Void, CLong;
overload selector("setShowsStateColumn:") = Void, Bool;
overload selector("setShowsSuppressionButton:") = Void, Bool;
overload selector("setShowsToolbarButton:") = Void, Bool;
overload selector("setSize:") = Void, NSString;
overload selector("setSizeFunction:") = Void, CCodePointer[[RawPointer],[CULong]];
overload selector("setSizeMode:") = Void, CULong;
overload selector("setSliderType:") = Void, CULong;
overload selector("setSmartInsertDeleteEnabled:") = Void, Bool;
overload selector("setSortDescriptorPrototype:") = Void, NSSortDescriptor;
overload selector("setSortDescriptors:") = Void, NSArray;
overload selector("setSound:") = Void, NSSound;
overload selector("setSourceEntityName:") = Void, NSString;
overload selector("setSourceEntityVersionHash:") = Void, NSData;
overload selector("setSourceExpression:") = Void, NSExpression;
overload selector("setSpan:") = Void, Int;
overload selector("setSpeak:") = Void, NSString;
overload selector("setSpeakHeader:") = Void, NSString;
overload selector("setSpeakNumeral:") = Void, NSString;
overload selector("setSpeakPunctuation:") = Void, NSString;
overload selector("setSpeechRate:") = Void, NSString;
overload selector("setSpeed:") = Void, Float;
overload selector("setSpellingState:range:") = Void, CLong, NSRange;
overload selector("setSrc:") = Void, NSString;
overload selector("setStackSize:") = Void, CULong;
overload selector("setStalenessInterval:") = Void, Double;
overload selector("setStandalone:") = Void, Bool;
overload selector("setStandaloneMonthSymbols:") = Void, NSArray;
overload selector("setStandaloneQuarterSymbols:") = Void, NSArray;
overload selector("setStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector("setStandardError:") = Void, Id;
overload selector("setStandardFontFamily:") = Void, NSString;
overload selector("setStandardInput:") = Void, Id;
overload selector("setStandardOutput:") = Void, Id;
overload selector("setStandby:") = Void, NSString;
overload selector("setStart:") = Void, Int;
overload selector("setStart::") = Void, DOMNode, Int;
overload selector("setStart:offset:") = Void, DOMNode, Int;
overload selector("setStartAfter:") = Void, DOMNode;
overload selector("setStartBefore:") = Void, DOMNode;
overload selector("setStartSpecifier:") = Void, NSScriptObjectSpecifier;
overload selector("setStartSubelementIdentifier:") = Void, CULong;
overload selector("setStartSubelementIndex:") = Void, CLong;
overload selector("setStartingItemNumber:") = Void, CLong;
overload selector("setState:") = Void, CLong;
overload selector("setState:atRow:column:") = Void, CLong, CLong, CLong;
overload selector("setStoredInExternalRecord:") = Void, Bool;
overload selector("setStress:") = Void, NSString;
overload selector("setString:") = Void, NSString;
overload selector("setString:forType:") = Bool, NSString, NSString;
overload selector("setStringValue:") = Void, NSString;
overload selector("setStringValue::") = Void, UShort, NSString;
overload selector("setStringValue:resolvingEntities:") = Void, NSString, Bool;
overload selector("setStringValue:stringValue:") = Void, UShort, NSString;
overload selector("setStroke") = Void;
overload selector("setStyle:") = Void, CULong;
overload selector("setStyleMask:") = Void, CULong;
overload selector("setSubentities:") = Void, NSArray;
overload selector("setSubitems:") = Void, NSArray;
overload selector("setSublayerTransform:") = Void, CATransform3D;
overload selector("setSublayers:") = Void, NSArray;
overload selector("setSubmenu:") = Void, NSMenu;
overload selector("setSubmenu:forItem:") = Void, NSMenu, NSMenuItem;
overload selector("setSubrowsKeyPath:") = Void, NSString;
overload selector("setSubstitutionsPanelAccessoryViewController:") = Void, NSViewController;
overload selector("setSubviews:") = Void, NSArray;
overload selector("setSummary:") = Void, NSString;
overload selector("setSupermenu:") = Void, NSMenu;
overload selector("setSuspended:") = Void, Bool;
overload selector("setSystemID:") = Void, NSString;
overload selector("setTFoot:") = Void, DOMHTMLTableSectionElement;
overload selector("setTHead:") = Void, DOMHTMLTableSectionElement;
overload selector("setTXTRecordData:") = Bool, NSData;
overload selector("setTabIndex:") = Void, Int;
overload selector("setTabKeyTraversesCells:") = Void, Bool;
overload selector("setTabStops:") = Void, NSArray;
overload selector("setTabViewType:") = Void, CULong;
overload selector("setTableLayout:") = Void, NSString;
overload selector("setTableView:") = Void, NSTableView;
overload selector("setTabsToLinks:") = Void, Bool;
overload selector("setTag:") = Void, CLong;
overload selector("setTag:forSegment:") = Void, CLong, CLong;
overload selector("setTailIndent:") = Void, Double;
overload selector("setTakesTitleFromPreviousColumn:") = Void, Bool;
overload selector("setTarget:") = Void, Id;
overload selector("setTearOffMenuRepresentation:") = Void, Id;
overload selector("setTemplate:") = Void, Bool;
overload selector("setTemporaryAttributes:forCharacterRange:") = Void, NSDictionary, NSRange;
overload selector("setTest:") = Void, NSScriptWhoseTest;
overload selector("setText:") = Void, NSString;
overload selector("setTextAlign:") = Void, NSString;
overload selector("setTextAlignment:") = Void, CULong;
overload selector("setTextAttributesForNegativeInfinity:") = Void, NSDictionary;
overload selector("setTextAttributesForNegativeValues:") = Void, NSDictionary;
overload selector("setTextAttributesForNil:") = Void, NSDictionary;
overload selector("setTextAttributesForNotANumber:") = Void, NSDictionary;
overload selector("setTextAttributesForPositiveInfinity:") = Void, NSDictionary;
overload selector("setTextAttributesForPositiveValues:") = Void, NSDictionary;
overload selector("setTextAttributesForZero:") = Void, NSDictionary;
overload selector("setTextBaseWritingDirection:") = Void, CLong;
overload selector("setTextBlocks:") = Void, NSArray;
overload selector("setTextColor:") = Void, NSColor;
overload selector("setTextColor:range:") = Void, NSColor, NSRange;
overload selector("setTextContainer:") = Void, NSTextContainer;
overload selector("setTextContainer:forGlyphRange:") = Void, NSTextContainer, NSRange;
overload selector("setTextContainerInset:") = Void, NSSize;
overload selector("setTextContent:") = Void, NSString;
overload selector("setTextDecoration:") = Void, NSString;
overload selector("setTextFont:") = Void, NSFont;
overload selector("setTextIndent:") = Void, NSString;
overload selector("setTextLists:") = Void, NSArray;
overload selector("setTextShadow:") = Void, NSString;
overload selector("setTextSizeMultiplier:") = Void, Float;
overload selector("setTextStorage:") = Void, NSTextStorage;
overload selector("setTextTransform:") = Void, NSString;
overload selector("setTextView:") = Void, NSTextView;
overload selector("setTextureImageToPixelBuffer:colorBuffer:") = Void, NSOpenGLPixelBuffer, UInt;
overload selector("setThousandSeparator:") = Void, NSString;
overload selector("setThreadPriority:") = Bool, Double;
overload selector("setTickMarkPosition:") = Void, CULong;
overload selector("setTighteningFactorForTruncation:") = Void, Float;
overload selector("setTimeInterval:") = Void, Double;
overload selector("setTimeOffset:") = Void, Double;
overload selector("setTimeStyle:") = Void, CULong;
overload selector("setTimeZone:") = Void, NSTimeZone;
overload selector("setTimeoutInterval:") = Void, Double;
overload selector("setTitle:") = Void, NSString;
overload selector("setTitle:ofColumn:") = Void, NSString, CLong;
overload selector("setTitleAlignment:") = Void, CULong;
overload selector("setTitleBaseWritingDirection:") = Void, CLong;
overload selector("setTitleCell:") = Void, NSCell;
overload selector("setTitleColor:") = Void, NSColor;
overload selector("setTitleFont:") = Void, NSFont;
overload selector("setTitlePosition:") = Void, CULong;
overload selector("setTitleWidth:") = Void, Double;
overload selector("setTitleWithMnemonic:") = Void, NSString;
overload selector("setTitleWithRepresentedFilename:") = Void, NSString;
overload selector("setTitled:") = Void, Bool;
overload selector("setTokenStyle:") = Void, CULong;
overload selector("setTokenizingCharacterSet:") = Void, NSCharacterSet;
overload selector("setToolTip:") = Void, NSString;
overload selector("setToolTip:forCell:") = Void, NSString, NSCell;
overload selector("setToolTip:forSegment:") = Void, NSString, CLong;
overload selector("setToolbar:") = Void, NSToolbar;
overload selector("setTop:") = Void, NSString;
overload selector("setTopLevelObject:") = Void, Id;
overload selector("setTopMargin:") = Void, Double;
overload selector("setTotalCostLimit:") = Void, CULong;
overload selector("setTrackingMode:") = Void, CULong;
overload selector("setTrailingOffset:") = Void, Double;
overload selector("setTransform:") = Void, CATransform3D;
overload selector("setTransformStruct:") = Void, NSAffineTransformStruct;
overload selector("setTransient:") = Void, Bool;
overload selector("setTransparent:") = Void, Bool;
overload selector("setTreatsFilePackagesAsDirectories:") = Void, Bool;
overload selector("setTruncatesLastVisibleLine:") = Void, Bool;
overload selector("setTwoDigitStartDate:") = Void, NSDate;
overload selector("setType:") = Void, NSString;
overload selector("setTypesetter:") = Void, NSTypesetter;
overload selector("setTypesetterBehavior:") = Void, CLong;
overload selector("setTypingAttributes:") = Void, NSDictionary;
overload selector("setTypingStyle:") = Void, DOMCSSStyleDeclaration;
overload selector("setUIDelegate:") = Void, Id;
overload selector("setURI:") = Void, NSString;
overload selector("setURL:") = Void, NSURL;
overload selector("setURL:forKey:") = Void, NSURL, NSString;
overload selector("setURL:forPersistentStore:") = Bool, NSURL, NSPersistentStore;
overload selector("setUndoManager:") = Void, NSUndoManager;
overload selector("setUnicodeBidi:") = Void, NSString;
overload selector("setUniqueID:") = Void, Id;
overload selector("setUpFieldEditorAttributes:") = NSText, NSText;
overload selector("setUpGState") = Void;
overload selector("setUpPrintOperationDefaultValues") = Void;
overload selector("setUseMap:") = Void, NSString;
overload selector("setUserFixedPitchFont:") = Void, NSFont;
overload selector("setUserFont:") = Void, NSFont;
overload selector("setUserInfo:") = Void, NSDictionary;
overload selector("setUserInterfaceLayoutDirection:") = Void, CLong;
overload selector("setUserStyleSheetEnabled:") = Void, Bool;
overload selector("setUserStyleSheetLocation:") = Void, NSURL;
overload selector("setUsesAlternatingRowBackgroundColors:") = Void, Bool;
overload selector("setUsesDataSource:") = Void, Bool;
overload selector("setUsesEPSOnResolutionMismatch:") = Void, Bool;
overload selector("setUsesFeedbackWindow:") = Void, Bool;
overload selector("setUsesFindPanel:") = Void, Bool;
overload selector("setUsesFontLeading:") = Void, Bool;
overload selector("setUsesFontPanel:") = Void, Bool;
overload selector("setUsesGroupingSeparator:") = Void, Bool;
overload selector("setUsesItemFromMenu:") = Void, Bool;
overload selector("setUsesLazyFetching:") = Void, Bool;
overload selector("setUsesPageCache:") = Void, Bool;
overload selector("setUsesRuler:") = Void, Bool;
overload selector("setUsesScreenFonts:") = Void, Bool;
overload selector("setUsesSignificantDigits:") = Void, Bool;
overload selector("setUsesSingleLineMode:") = Void, Bool;
overload selector("setUsesStrongWriteBarrier:") = Void, Bool;
overload selector("setUsesThreadedAnimation:") = Void, Bool;
overload selector("setUsesUserKeyEquivalents:") = Void, Bool;
overload selector("setUsesWeakReadAndWriteBarriers:") = Void, Bool;
overload selector("setVAlign:") = Void, NSString;
overload selector("setVLink:") = Void, NSString;
overload selector("setValidateSize:") = Void, Bool;
overload selector("setValidationPredicates:withValidationWarnings:") = Void, NSArray, NSArray;
overload selector("setValue:") = Void, NSString;
overload selector("setValue:forHTTPHeaderField:") = Void, NSString, NSString;
overload selector("setValue:forKey:") = Void, Id, NSString;
overload selector("setValue:forKeyPath:") = Void, Id, NSString;
overload selector("setValue:forUndefinedKey:") = Void, Id, NSString;
overload selector("setValue:type:forDimension:") = Void, Double, CULong, CULong;
overload selector("setValueExpression:") = Void, NSExpression;
overload selector("setValueListAttributes:") = Void, NSArray;
overload selector("setValueTransformer:forName:") = Void, NSValueTransformer, NSString;
overload selector("setValueTransformerName:") = Void, NSString;
overload selector("setValueType:") = Void, NSString;
overload selector("setValueWraps:") = Void, Bool;
overload selector("setValues:forParameter:") = Void, Pointer[Int], NSOpenGLContextParameter;
overload selector("setValuesForKeysWithDictionary:") = Void, NSDictionary;
overload selector("setVersion:") = Void, CLong;
overload selector("setVersionHashModifier:") = Void, NSString;
overload selector("setVersionIdentifiers:") = Void, NSSet;
overload selector("setVertical:") = Void, Bool;
overload selector("setVerticalAlign:") = Void, NSString;
overload selector("setVerticalAlignment:") = Void, CULong;
overload selector("setVerticalLineScroll:") = Void, Double;
overload selector("setVerticalMotionCanBeginDrag:") = Void, Bool;
overload selector("setVerticalPageScroll:") = Void, Double;
overload selector("setVerticalPagination:") = Void, CULong;
overload selector("setVerticalRulerView:") = Void, NSRulerView;
overload selector("setVerticalScroller:") = Void, NSScroller;
overload selector("setVerticallyCentered:") = Void, Bool;
overload selector("setVerticallyResizable:") = Void, Bool;
overload selector("setVeryShortMonthSymbols:") = Void, NSArray;
overload selector("setVeryShortStandaloneMonthSymbols:") = Void, NSArray;
overload selector("setVeryShortStandaloneWeekdaySymbols:") = Void, NSArray;
overload selector("setVeryShortWeekdaySymbols:") = Void, NSArray;
overload selector("setView:") = Void, NSView;
overload selector("setViewAnimations:") = Void, NSArray;
overload selector("setViewsNeedDisplay:") = Void, Bool;
overload selector("setVisibility:") = Void, NSString;
overload selector("setVisibilityPriority:") = Void, CLong;
overload selector("setVisible:") = Void, Bool;
overload selector("setVlinkColor:") = Void, NSString;
overload selector("setVoice:") = Bool, NSString;
overload selector("setVoiceFamily:") = Void, NSString;
overload selector("setVolatileDomain:forName:") = Void, NSDictionary, NSString;
overload selector("setVolume:") = Void, NSString;
overload selector("setVspace:") = Void, Int;
overload selector("setWantsLayer:") = Void, Bool;
overload selector("setWantsNotificationForMarkedText:") = Void, Bool;
overload selector("setWantsRestingTouches:") = Void, Bool;
overload selector("setWarningValue:") = Void, Double;
overload selector("setWebScriptValueAtIndex:value:") = Void, UInt, Id;
overload selector("setWeek:") = Void, CLong;
overload selector("setWeekday:") = Void, CLong;
overload selector("setWeekdayOrdinal:") = Void, CLong;
overload selector("setWeekdaySymbols:") = Void, NSArray;
overload selector("setWhiteSpace:") = Void, NSString;
overload selector("setWidows:") = Void, NSString;
overload selector("setWidth:") = Void, NSString;
overload selector("setWidth:forSegment:") = Void, Double, CLong;
overload selector("setWidth:ofColumn:") = Void, Double, CLong;
overload selector("setWidth:type:forLayer:") = Void, Double, CULong, CLong;
overload selector("setWidth:type:forLayer:edge:") = Void, Double, CULong, CLong, CULong;
overload selector("setWidthTracksTextView:") = Void, Bool;
overload selector("setWindingRule:") = Void, CULong;
overload selector("setWindow:") = Void, NSWindow;
overload selector("setWindowController:") = Void, NSWindowController;
overload selector("setWindowFrameAutosaveName:") = Void, NSString;
overload selector("setWindowsMenu:") = Void, NSMenu;
overload selector("setWindowsNeedUpdate:") = Void, Bool;
overload selector("setWithArray:") = Id, NSArray;
overload selector("setWithCapacity:") = Id, CULong;
overload selector("setWithObject:") = Id, Id;
overload varargSelector("setWithObjects:") = Id, Id;
overload selector("setWithObjects:count:") = Id, Pointer[Id], CULong;
overload selector("setWithSet:") = Id, NSSet;
overload selector("setWordFieldStringValue:") = Void, NSString;
overload selector("setWordSpacing:") = Void, NSString;
overload selector("setWords:") = Void, NSArray;
overload selector("setWorksWhenModal:") = Void, Bool;
overload selector("setWrap:") = Void, Bool;
overload selector("setWraps:") = Void, Bool;
overload selector("setXmlStandalone:") = Void, Bool;
overload selector("setXmlVersion:") = Void, NSString;
overload selector("setYear:") = Void, CLong;
overload selector("setZIndex:") = Void, NSString;
overload selector("setZPosition:") = Void, Double;
overload selector("setZeroSymbol:") = Void, NSString;
overload selector("shadow") = NSShadow;
overload selector("shadowBlurRadius") = Double;
overload selector("shadowColor") = NSColor;
overload selector("shadowOffset") = CGSize;
overload selector("shadowOpacity") = Float;
overload selector("shadowRadius") = Double;
overload selector("shadowWithLevel:") = NSColor, Double;
overload selector("shape") = NSString;
overload selector("sharedAppleEventManager") = NSAppleEventManager;
overload selector("sharedApplication") = NSApplication;
overload selector("sharedCoercionHandler") = NSScriptCoercionHandler;
overload selector("sharedColorPanel") = NSColorPanel;
overload selector("sharedColorPanelExists") = Bool;
overload selector("sharedCredentialStorage") = NSURLCredentialStorage;
overload selector("sharedDocumentController") = Id;
overload selector("sharedFontManager") = NSFontManager;
overload selector("sharedFontPanel") = NSFontPanel;
overload selector("sharedFontPanelExists") = Bool;
overload selector("sharedFrameworksPath") = NSString;
overload selector("sharedFrameworksURL") = NSURL;
overload selector("sharedGlyphGenerator") = Id;
overload selector("sharedHTTPCookieStorage") = NSHTTPCookieStorage;
overload selector("sharedHelpManager") = NSHelpManager;
overload selector("sharedInstance") = Id;
overload selector("sharedPrintInfo") = NSPrintInfo;
overload selector("sharedScriptExecutionContext") = NSScriptExecutionContext;
overload selector("sharedScriptSuiteRegistry") = NSScriptSuiteRegistry;
overload selector("sharedSpellChecker") = NSSpellChecker;
overload selector("sharedSpellCheckerExists") = Bool;
overload selector("sharedSupportPath") = NSString;
overload selector("sharedSupportURL") = NSURL;
overload selector("sharedSystemTypesetter") = Id;
overload selector("sharedSystemTypesetterForBehavior:") = Id, CLong;
overload selector("sharedTypesetter") = Id;
overload selector("sharedURLCache") = NSURLCache;
overload selector("sharedUserDefaultsController") = Id;
overload selector("sharedWorkspace") = NSWorkspace;
overload selector("sharingType") = CULong;
overload selector("sheet") = DOMStyleSheet;
overload selector("shiftIndexesStartingAtIndex:by:") = Void, CULong, CLong;
overload selector("shiftKey") = Bool;
overload selector("shortMonthSymbols") = NSArray;
overload selector("shortQuarterSymbols") = NSArray;
overload selector("shortStandaloneMonthSymbols") = NSArray;
overload selector("shortStandaloneQuarterSymbols") = NSArray;
overload selector("shortStandaloneWeekdaySymbols") = NSArray;
overload selector("shortValue") = Short;
overload selector("shortWeekdaySymbols") = NSArray;
overload selector("shouldAntialias") = Bool;
overload selector("shouldArchiveValueForKey:") = Bool, NSString;
overload selector("shouldBeTreatedAsInkEvent:") = Bool, NSEvent;
overload selector("shouldBreakLineByHyphenatingBeforeCharacterAtIndex:") = Bool, CULong;
overload selector("shouldBreakLineByWordBeforeCharacterAtIndex:") = Bool, CULong;
overload selector("shouldCascadeWindows") = Bool;
overload selector("shouldChangePrintInfo:") = Bool, NSPrintInfo;
overload selector("shouldChangeTextInRange:replacementString:") = Bool, NSRange, NSString;
overload selector("shouldChangeTextInRanges:replacementStrings:") = Bool, NSArray, NSArray;
overload selector("shouldCloseDocument") = Bool;
overload selector("shouldCloseWindowController:delegate:shouldCloseSelector:contextInfo:") = Void, NSWindowController, Id, SelectorHandle, RawPointer;
overload selector("shouldCloseWithWindow") = Bool;
overload selector("shouldCollapseAutoExpandedItemsForDeposited:") = Bool, Bool;
overload selector("shouldCreateUI") = Bool;
overload selector("shouldDelayWindowOrderingForEvent:") = Bool, NSEvent;
overload selector("shouldDrawColor") = Bool;
overload selector("shouldDrawInsertionPoint") = Bool;
overload selector("shouldFocusCell:atColumn:row:") = Bool, NSCell, CLong, CLong;
overload selector("shouldPrintBackgrounds") = Bool;
overload selector("shouldProcessNamespaces") = Bool;
overload selector("shouldReportNamespacePrefixes") = Bool;
overload selector("shouldResolveExternalEntities") = Bool;
overload selector("shouldRunSavePanelWithAccessoryView") = Bool;
overload selector("shouldUpdateWhileOffscreen") = Bool;
overload selector("showAllHelpTopicsForSearchString:") = Void, NSString;
overload selector("showAttachmentCell:inRect:characterIndex:") = Void, NSCell, NSRect, CULong;
overload selector("showContextHelp:") = Void, Id;
overload selector("showContextHelpForObject:locationHint:") = Bool, Id, NSPoint;
overload selector("showDefinitionForAttributedString:atPoint:") = Void, NSAttributedString, NSPoint;
overload selector("showDefinitionForAttributedString:range:options:baselineOriginProvider:") = Void, NSAttributedString, NSRange, NSDictionary, UnknownType;
overload selector("showFindIndicatorForRange:") = Void, NSRange;
overload selector("showGuessPanel:") = Void, Id;
overload selector("showHelp:") = Void, Id;
overload selector("showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment:") = Void, Pointer[CChar], CULong, NSRange, NSPoint, NSFont, NSColor, NSSize;
overload selector("showPanels") = Bool;
overload selector("showSearchResultsForQueryString:") = Bool, NSString;
overload selector("showWindow:") = Void, Id;
overload selector("showWindows") = Void;
overload selector("showsAlpha") = Bool;
overload selector("showsApplicationBadge") = Bool;
overload selector("showsBaselineSeparator") = Bool;
overload selector("showsBorderOnlyWhileMouseInside") = Bool;
overload selector("showsControlCharacters") = Bool;
overload selector("showsFirstResponder") = Bool;
overload selector("showsHelp") = Bool;
overload selector("showsHiddenFiles") = Bool;
overload selector("showsInvisibleCharacters") = Bool;
overload selector("showsPrintPanel") = Bool;
overload selector("showsProgressPanel") = Bool;
overload selector("showsResizeIndicator") = Bool;
overload selector("showsStateBy") = CLong;
overload selector("showsStateColumn") = Bool;
overload selector("showsSuppressionButton") = Bool;
overload selector("showsToolbarButton") = Bool;
overload selector("signal") = Void;
overload selector("signatureWithObjCTypes:") = NSMethodSignature, Pointer[CChar];
overload selector("singleNodeValue") = DOMNode;
overload selector("size") = NSString;
overload selector("sizeForKey:inTable:") = NSSize, NSString, NSString;
overload selector("sizeForPaperName:") = NSSize, NSString;
overload selector("sizeFunction") = CCodePointer[[RawPointer],[CULong]];
overload selector("sizeLastColumnToFit") = Void;
overload selector("sizeMode") = CULong;
overload selector("sizeOfLabel:") = NSSize, Bool;
overload selector("sizeToCells") = Void;
overload selector("sizeToFit") = Void;
overload selector("sizeValue") = NSSize;
overload selector("sizeWithAttributes:") = NSSize, NSDictionary;
overload selector("skipDescendants") = Void;
overload selector("skipDescendents") = Void;
overload selector("sleepForTimeInterval:") = Void, Double;
overload selector("sleepUntilDate:") = Void, NSDate;
overload selector("slideDraggedImageTo:") = Void, NSPoint;
overload selector("slideImage:from:to:") = Void, NSImage, NSPoint, NSPoint;
overload selector("sliderType") = CULong;
overload selector("smallSystemFontSize") = Double;
overload selector("smallestEncoding") = CULong;
overload selector("smartDeleteRangeForProposedRange:") = NSRange, NSRange;
overload selector("smartInsertAfterStringForString:replacingRange:") = NSString, NSString, NSRange;
overload selector("smartInsertBeforeStringForString:replacingRange:") = NSString, NSString, NSRange;
overload selector("smartInsertDeleteEnabled") = Bool;
overload selector("smartInsertForString:replacingRange:beforeString:afterString:") = Void, NSString, NSRange, Pointer[NSString], Pointer[NSString];
overload selector("snapshotItem:") = DOMNode, UInt;
overload selector("snapshotLength") = UInt;
overload selector("socket") = Int;
overload selector("socketType") = Int;
overload selector("sortDescriptorPrototype") = NSSortDescriptor;
overload selector("sortDescriptorWithKey:ascending:") = Id, NSString, Bool;
overload selector("sortDescriptorWithKey:ascending:comparator:") = Id, NSString, Bool, NSComparator;
overload selector("sortDescriptorWithKey:ascending:selector:") = Id, NSString, Bool, SelectorHandle;
overload selector("sortDescriptors") = NSArray;
overload selector("sortIndicatorRectForBounds:") = NSRect, NSRect;
overload selector("sortSubviewsUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
overload selector("sortUsingComparator:") = Void, NSComparator;
overload selector("sortUsingDescriptors:") = Void, NSArray;
overload selector("sortUsingFunction:context:") = Void, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
overload selector("sortUsingSelector:") = Void, SelectorHandle;
overload selector("sortWithOptions:usingComparator:") = Void, CULong, NSComparator;
overload selector("sortWithSortDescriptors:recursively:") = Void, NSArray, Bool;
overload selector("sortedArrayHint") = NSData;
overload selector("sortedArrayUsingComparator:") = NSArray, NSComparator;
overload selector("sortedArrayUsingDescriptors:") = NSArray, NSArray;
overload selector("sortedArrayUsingFunction:context:") = NSArray, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer;
overload selector("sortedArrayUsingFunction:context:hint:") = NSArray, CCodePointer[[Id,Id,RawPointer],[CLong]], RawPointer, NSData;
overload selector("sortedArrayUsingSelector:") = NSArray, SelectorHandle;
overload selector("sortedArrayWithOptions:usingComparator:") = NSArray, CULong, NSComparator;
overload selector("sound") = NSSound;
overload selector("sound:didFinishPlaying:") = Void, NSSound, Bool;
overload selector("soundNamed:") = Id, NSString;
overload selector("soundUnfilteredFileTypes") = NSArray;
overload selector("soundUnfilteredPasteboardTypes") = NSArray;
overload selector("soundUnfilteredTypes") = NSArray;
overload selector("source") = NSString;
overload selector("sourceContext") = NSManagedObjectContext;
overload selector("sourceEntityForEntityMapping:") = NSEntityDescription, NSEntityMapping;
overload selector("sourceEntityName") = NSString;
overload selector("sourceEntityVersionHash") = NSData;
overload selector("sourceExpression") = NSExpression;
overload selector("sourceInstancesForEntityMappingNamed:destinationInstances:") = NSArray, NSString, NSArray;
overload selector("sourceModel") = NSManagedObjectModel;
overload selector("span") = Int;
overload selector("speak") = NSString;
overload selector("speakHeader") = NSString;
overload selector("speakNumeral") = NSString;
overload selector("speakPunctuation") = NSString;
overload selector("specified") = Bool;
overload selector("speechRate") = NSString;
overload selector("speechRecognizer:didRecognizeCommand:") = Void, NSSpeechRecognizer, Id;
overload selector("speechSynthesizer:didEncounterErrorAtIndex:ofString:message:") = Void, NSSpeechSynthesizer, CULong, NSString, NSString;
overload selector("speechSynthesizer:didEncounterSyncMessage:") = Void, NSSpeechSynthesizer, NSString;
overload selector("speechSynthesizer:didFinishSpeaking:") = Void, NSSpeechSynthesizer, Bool;
overload selector("speechSynthesizer:willSpeakPhoneme:") = Void, NSSpeechSynthesizer, Short;
overload selector("speechSynthesizer:willSpeakWord:ofString:") = Void, NSSpeechSynthesizer, NSRange, NSString;
overload selector("speed") = Float;
overload selector("spellCheckerDocumentTag") = CLong;
overload selector("spellCheckingResultWithRange:") = NSTextCheckingResult, NSRange;
overload selector("spellServer:checkGrammarInString:language:details:") = NSRange, NSSpellServer, NSString, NSString, Pointer[NSArray];
overload selector("spellServer:checkString:offset:types:options:orthography:wordCount:") = NSArray, NSSpellServer, NSString, CULong, UInt64, NSDictionary, NSOrthography, Pointer[CLong];
overload selector("spellServer:didForgetWord:inLanguage:") = Void, NSSpellServer, NSString, NSString;
overload selector("spellServer:didLearnWord:inLanguage:") = Void, NSSpellServer, NSString, NSString;
overload selector("spellServer:findMisspelledWordInString:language:wordCount:countOnly:") = NSRange, NSSpellServer, NSString, NSString, Pointer[CLong], Bool;
overload selector("spellServer:suggestCompletionsForPartialWordRange:inString:language:") = NSArray, NSSpellServer, NSRange, NSString, NSString;
overload selector("spellServer:suggestGuessesForWord:inLanguage:") = NSArray, NSSpellServer, NSString, NSString;
overload selector("spellingPanel") = NSPanel;
overload selector("splitText:") = DOMText, UInt;
overload selector("splitView:additionalEffectiveRectOfDividerAtIndex:") = NSRect, NSSplitView, CLong;
overload selector("splitView:canCollapseSubview:") = Bool, NSSplitView, NSView;
overload selector("splitView:constrainMaxCoordinate:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
overload selector("splitView:constrainMinCoordinate:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
overload selector("splitView:constrainSplitPosition:ofSubviewAt:") = Double, NSSplitView, Double, CLong;
overload selector("splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:") = NSRect, NSSplitView, NSRect, NSRect, CLong;
overload selector("splitView:resizeSubviewsWithOldSize:") = Void, NSSplitView, NSSize;
overload selector("splitView:shouldAdjustSizeOfSubview:") = Bool, NSSplitView, NSView;
overload selector("splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:") = Bool, NSSplitView, NSView, CLong;
overload selector("splitView:shouldHideDividerAtIndex:") = Bool, NSSplitView, CLong;
overload selector("splitViewDidResizeSubviews:") = Void, NSNotification;
overload selector("splitViewWillResizeSubviews:") = Void, NSNotification;
overload selector("src") = NSString;
overload selector("srcElement") = Id;
overload selector("stackSize") = CULong;
overload selector("stalenessInterval") = Double;
overload selector("standaloneMonthSymbols") = NSArray;
overload selector("standaloneQuarterSymbols") = NSArray;
overload selector("standaloneWeekdaySymbols") = NSArray;
overload selector("standardError") = Id;
overload selector("standardFontFamily") = NSString;
overload selector("standardInput") = Id;
overload selector("standardOutput") = Id;
overload selector("standardPreferences") = WebPreferences;
overload selector("standardUserDefaults") = NSUserDefaults;
overload selector("standardWindowButton:") = NSButton, CULong;
overload selector("standardWindowButton:forStyleMask:") = NSButton, CULong, CULong;
overload selector("standardizedURL") = NSURL;
overload selector("standby") = NSString;
overload selector("start") = Int;
overload selector("startAnimation") = Void;
overload selector("startAnimation:") = Void, Id;
overload selector("startContainer") = DOMNode;
overload selector("startListening") = Void;
overload selector("startLoading") = Void;
overload selector("startMonitoring") = Void;
overload selector("startOffset") = Int;
overload selector("startPeriodicEventsAfterDelay:withPeriod:") = Void, Double, Double;
overload selector("startQuery") = Bool;
overload selector("startSpeaking:") = Void, Id;
overload selector("startSpeakingString:") = Bool, NSString;
overload selector("startSpeakingString:toURL:") = Bool, NSString, NSURL;
overload selector("startSpecifier") = NSScriptObjectSpecifier;
overload selector("startSubelementIdentifier") = CULong;
overload selector("startSubelementIndex") = CLong;
overload selector("startTrackingAt:inView:") = Bool, NSPoint, NSView;
overload selector("startWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
overload selector("startingColumn") = CLong;
overload selector("startingItemNumber") = CLong;
overload selector("startingRow") = CLong;
overload selector("state") = CLong;
overload selector("stateImageRectForBounds:") = NSRect, NSRect;
overload selector("stateImageWidth") = Double;
overload selector("statistics") = NSDictionary;
overload selector("status") = CULong;
overload selector("statusBar") = NSStatusBar;
overload selector("statusCode") = CLong;
overload selector("statusForTable:") = CULong, NSString;
overload selector("statusItemWithLength:") = NSStatusItem, Double;
overload selector("stop") = Bool;
overload selector("stop:") = Void, Id;
overload selector("stopAnimation") = Void;
overload selector("stopAnimation:") = Void, Id;
overload selector("stopListening") = Void;
overload selector("stopLoading") = Void;
overload selector("stopLoading:") = Void, Id;
overload selector("stopModal") = Void;
overload selector("stopModalWithCode:") = Void, CLong;
overload selector("stopMonitoring") = Void;
overload selector("stopPeriodicEvents") = Void;
overload selector("stopPropagation") = Void;
overload selector("stopQuery") = Void;
overload selector("stopSpeaking") = Void;
overload selector("stopSpeaking:") = Void, Id;
overload selector("stopSpeakingAtBoundary:") = Void, CULong;
overload selector("stopTracking:at:inView:mouseIsUp:") = Void, NSPoint, NSPoint, NSView, Bool;
overload selector("stopWhenAnimation:reachesProgress:") = Void, NSAnimation, Float;
overload selector("storagePolicy") = CULong;
overload selector("storeCachedResponse:forRequest:") = Void, NSCachedURLResponse, NSURLRequest;
overload selector("storedValueForKey:") = Id, NSString;
overload selector("stream:handleEvent:") = Void, NSStream, CULong;
overload selector("streamError") = NSError;
overload selector("streamStatus") = CULong;
overload selector("stress") = NSString;
overload selector("strikethroughGlyphRange:strikethroughType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, NSRect, NSRange, NSPoint;
overload selector("string") = Id;
overload selector("stringArrayForKey:") = NSArray, NSString;
overload selector("stringByAbbreviatingWithTildeInPath") = NSString;
overload selector("stringByAddingPercentEscapesUsingEncoding:") = NSString, CULong;
overload varargSelector("stringByAppendingFormat:") = NSString, NSString;
overload selector("stringByAppendingPathComponent:") = NSString, NSString;
overload selector("stringByAppendingPathExtension:") = NSString, NSString;
overload selector("stringByAppendingString:") = NSString, NSString;
overload selector("stringByDeletingLastPathComponent") = NSString;
overload selector("stringByDeletingPathExtension") = NSString;
overload selector("stringByEvaluatingJavaScriptFromString:") = NSString, NSString;
overload selector("stringByExpandingTildeInPath") = NSString;
overload selector("stringByFoldingWithOptions:locale:") = NSString, CULong, NSLocale;
overload selector("stringByPaddingToLength:withString:startingAtIndex:") = NSString, CULong, NSString, CULong;
overload selector("stringByReplacingCharactersInRange:withString:") = NSString, NSRange, NSString;
overload selector("stringByReplacingOccurrencesOfString:withString:") = NSString, NSString, NSString;
overload selector("stringByReplacingOccurrencesOfString:withString:options:range:") = NSString, NSString, NSString, CULong, NSRange;
overload selector("stringByReplacingPercentEscapesUsingEncoding:") = NSString, CULong;
overload selector("stringByResolvingSymlinksInPath") = NSString;
overload selector("stringByStandardizingPath") = NSString;
overload selector("stringByTrimmingCharactersInSet:") = NSString, NSCharacterSet;
overload selector("stringForKey:") = NSString, NSString;
overload selector("stringForKey:inTable:") = NSString, NSString, NSString;
overload selector("stringForObjectValue:") = NSString, Id;
overload selector("stringForType:") = NSString, NSString;
overload selector("stringFromDate:") = NSString, NSDate;
overload selector("stringFromNumber:") = NSString, NSNumber;
overload selector("stringListForKey:inTable:") = NSArray, NSString, NSString;
overload selector("stringRepresentation") = NSString;
overload selector("stringValue") = NSString;
overload selector("stringWithCString:") = Id, Pointer[CChar];
overload selector("stringWithCString:encoding:") = Id, Pointer[CChar], CULong;
overload selector("stringWithCString:length:") = Id, Pointer[CChar], CULong;
overload selector("stringWithCapacity:") = Id, CULong;
overload selector("stringWithCharacters:length:") = Id, Pointer[UShort], CULong;
overload selector("stringWithContentsOfFile:") = Id, NSString;
overload selector("stringWithContentsOfFile:encoding:error:") = Id, NSString, CULong, Pointer[NSError];
overload selector("stringWithContentsOfFile:usedEncoding:error:") = Id, NSString, Pointer[CULong], Pointer[NSError];
overload selector("stringWithContentsOfURL:") = Id, NSURL;
overload selector("stringWithContentsOfURL:encoding:error:") = Id, NSURL, CULong, Pointer[NSError];
overload selector("stringWithContentsOfURL:usedEncoding:error:") = Id, NSURL, Pointer[CULong], Pointer[NSError];
overload selector("stringWithFileSystemRepresentation:length:") = NSString, Pointer[CChar], CULong;
overload varargSelector("stringWithFormat:") = Id, NSString;
overload selector("stringWithSavedFrame") = NSString;
overload selector("stringWithString:") = Id, NSString;
overload selector("stringWithUTF8String:") = Id, Pointer[CChar];
overload selector("stringsByAppendingPaths:") = NSArray, NSArray;
overload selector("stroke") = Void;
overload selector("strokeLineFromPoint:toPoint:") = Void, NSPoint, NSPoint;
overload selector("strokeRect:") = Void, NSRect;
overload selector("style") = Id;
overload selector("styleDeclarationWithText:") = DOMCSSStyleDeclaration, NSString;
overload selector("styleMask") = CULong;
overload selector("styleSheet") = DOMCSSStyleSheet;
overload selector("styleSheets") = DOMStyleSheetList;
overload selector("subarrayWithRange:") = NSArray, NSRange;
overload selector("subdataWithRange:") = NSData, NSRange;
overload selector("subentities") = NSArray;
overload selector("subentitiesByName") = NSDictionary;
overload selector("subframeArchives") = NSArray;
overload selector("subgroups") = NSArray;
overload selector("subitems") = NSArray;
overload selector("sublayerTransform") = CATransform3D;
overload selector("sublayers") = NSArray;
overload selector("submenu") = NSMenu;
overload selector("submenuAction:") = Void, Id;
overload selector("submit") = Void;
overload selector("subpathsAtPath:") = NSArray, NSString;
overload selector("subpathsOfDirectoryAtPath:error:") = NSArray, NSString, Pointer[NSError];
overload selector("subpredicates") = NSArray;
overload selector("subresourceForURL:") = WebResource, NSURL;
overload selector("subresources") = NSArray;
overload selector("subrowIndexesForRow:") = NSIndexSet, CLong;
overload selector("subrowsKeyPath") = NSString;
overload selector("subscript:") = Void, Id;
overload selector("subscriptRange:") = Void, NSRange;
overload selector("substituteFontForFont:") = NSFont, NSFont;
overload selector("substituteGlyphsInRange:withGlyphs:") = Void, NSRange, Pointer[UInt];
overload selector("substitutionsPanel") = NSPanel;
overload selector("substitutionsPanelAccessoryViewController") = NSViewController;
overload selector("substringData::") = NSString, UInt, UInt;
overload selector("substringData:length:") = NSString, UInt, UInt;
overload selector("substringFromIndex:") = NSString, CULong;
overload selector("substringToIndex:") = NSString, CULong;
overload selector("substringWithRange:") = NSString, NSRange;
overload selector("subtype") = Short;
overload selector("subviews") = NSArray;
overload selector("suggestedFilename") = NSString;
overload selector("suiteForAppleEventCode:") = NSString, UInt;
overload selector("suiteName") = NSString;
overload selector("suiteNames") = NSArray;
overload selector("summary") = NSString;
overload selector("superclass") = Id;
overload selector("superclassDescription") = NSScriptClassDescription;
overload selector("superentity") = NSEntityDescription;
overload selector("superlayer") = CALayer;
overload selector("supermenu") = NSMenu;
overload selector("superscript:") = Void, Id;
overload selector("superscriptRange:") = Void, NSRange;
overload selector("superview") = NSView;
overload selector("supportedWindowDepths") = Pointer[Int];
overload selector("supportsCommand:") = Bool, NSScriptCommandDescription;
overload selector("supportsMode:") = Bool, CLong;
overload selector("supportsTextEncoding") = Bool;
overload selector("suppressionButton") = NSButton;
overload selector("surroundContents:") = Void, DOMNode;
overload selector("suspend") = Bool;
overload selector("suspendCurrentAppleEvent") = NSAppleEventManagerSuspensionID;
overload selector("suspendExecution") = Void;
overload selector("suspended") = Bool;
overload selector("swapWithMark:") = Void, Id;
overload selector("swipeWithEvent:") = Void, NSEvent;
overload selector("symbolCharacterSet") = Id;
overload selector("symbolicLinkDestination") = NSString;
overload selector("symbolicLinkDestinationURL") = NSURL;
overload selector("symbolicTraits") = UInt;
overload selector("synchronize") = Bool;
overload selector("synchronizeFile") = Void;
overload selector("synchronizeTitleAndSelectedItem") = Void;
overload selector("synchronizeWindowTitleWithDocumentName") = Void;
overload selector("systemDefaultPortNameServer") = NSPortNameServer;
overload selector("systemFontOfSize:") = NSFont, Double;
overload selector("systemFontSize") = Double;
overload selector("systemFontSizeForControlSize:") = Double, CULong;
overload selector("systemID") = NSString;
overload selector("systemId") = NSString;
overload selector("systemLocale") = Id;
overload selector("systemStatusBar") = NSStatusBar;
overload selector("systemTabletID") = CULong;
overload selector("systemTimeZone") = NSTimeZone;
overload selector("systemUptime") = Double;
overload selector("systemVersion") = UInt;
overload selector("tBodies") = DOMHTMLCollection;
overload selector("tFoot") = DOMHTMLTableSectionElement;
overload selector("tHead") = DOMHTMLTableSectionElement;
overload selector("tabIndex") = Int;
overload selector("tabKeyTraversesCells") = Bool;
overload selector("tabState") = CULong;
overload selector("tabStopType") = CULong;
overload selector("tabStops") = NSArray;
overload selector("tabView") = NSTabView;
overload selector("tabView:didSelectTabViewItem:") = Void, NSTabView, NSTabViewItem;
overload selector("tabView:shouldSelectTabViewItem:") = Bool, NSTabView, NSTabViewItem;
overload selector("tabView:willSelectTabViewItem:") = Void, NSTabView, NSTabViewItem;
overload selector("tabViewDidChangeNumberOfTabViewItems:") = Void, NSTabView;
overload selector("tabViewItemAtIndex:") = NSTabViewItem, CLong;
overload selector("tabViewItemAtPoint:") = NSTabViewItem, NSPoint;
overload selector("tabViewItems") = NSArray;
overload selector("tabViewType") = CULong;
overload selector("table") = NSTextTable;
overload selector("tableColumnWithIdentifier:") = NSTableColumn, Id;
overload selector("tableColumns") = NSArray;
overload selector("tableLayout") = NSString;
overload selector("tableView") = NSTableView;
overload selector("tableView:acceptDrop:row:dropOperation:") = Bool, NSTableView, Id, CLong, CULong;
overload selector("tableView:dataCellForTableColumn:row:") = NSCell, NSTableView, NSTableColumn, CLong;
overload selector("tableView:didClickTableColumn:") = Void, NSTableView, NSTableColumn;
overload selector("tableView:didDragTableColumn:") = Void, NSTableView, NSTableColumn;
overload selector("tableView:heightOfRow:") = Double, NSTableView, CLong;
overload selector("tableView:isGroupRow:") = Bool, NSTableView, CLong;
overload selector("tableView:mouseDownInHeaderOfTableColumn:") = Void, NSTableView, NSTableColumn;
overload selector("tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:") = NSArray, NSTableView, NSURL, NSIndexSet;
overload selector("tableView:nextTypeSelectMatchFromRow:toRow:forString:") = CLong, NSTableView, CLong, CLong, NSString;
overload selector("tableView:objectValueForTableColumn:row:") = Id, NSTableView, NSTableColumn, CLong;
overload selector("tableView:selectionIndexesForProposedSelection:") = NSIndexSet, NSTableView, NSIndexSet;
overload selector("tableView:setObjectValue:forTableColumn:row:") = Void, NSTableView, Id, NSTableColumn, CLong;
overload selector("tableView:shouldEditTableColumn:row:") = Bool, NSTableView, NSTableColumn, CLong;
overload selector("tableView:shouldReorderColumn:toColumn:") = Bool, NSTableView, CLong, CLong;
overload selector("tableView:shouldSelectRow:") = Bool, NSTableView, CLong;
overload selector("tableView:shouldSelectTableColumn:") = Bool, NSTableView, NSTableColumn;
overload selector("tableView:shouldShowCellExpansionForTableColumn:row:") = Bool, NSTableView, NSTableColumn, CLong;
overload selector("tableView:shouldTrackCell:forTableColumn:row:") = Bool, NSTableView, NSCell, NSTableColumn, CLong;
overload selector("tableView:shouldTypeSelectForEvent:withCurrentSearchString:") = Bool, NSTableView, NSEvent, NSString;
overload selector("tableView:sizeToFitWidthOfColumn:") = Double, NSTableView, CLong;
overload selector("tableView:sortDescriptorsDidChange:") = Void, NSTableView, NSArray;
overload selector("tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:") = NSString, NSTableView, NSCell, NSRectPointer, NSTableColumn, CLong, NSPoint;
overload selector("tableView:typeSelectStringForTableColumn:row:") = NSString, NSTableView, NSTableColumn, CLong;
overload selector("tableView:validateDrop:proposedRow:proposedDropOperation:") = CULong, NSTableView, Id, CLong, CULong;
overload selector("tableView:willDisplayCell:forTableColumn:row:") = Void, NSTableView, Id, NSTableColumn, CLong;
overload selector("tableView:writeRows:toPasteboard:") = Bool, NSTableView, NSArray, NSPasteboard;
overload selector("tableView:writeRowsWithIndexes:toPasteboard:") = Bool, NSTableView, NSIndexSet, NSPasteboard;
overload selector("tableViewColumnDidMove:") = Void, NSNotification;
overload selector("tableViewColumnDidResize:") = Void, NSNotification;
overload selector("tableViewSelectionDidChange:") = Void, NSNotification;
overload selector("tableViewSelectionIsChanging:") = Void, NSNotification;
overload selector("tabletID") = CULong;
overload selector("tabletPoint:") = Void, NSEvent;
overload selector("tabletProximity:") = Void, NSEvent;
overload selector("tabsToLinks") = Bool;
overload selector("tag") = CLong;
overload selector("tagForSegment:") = CLong, CLong;
overload selector("tagName") = NSString;
overload selector("tags:") = DOMNodeList, NSString;
overload selector("tailIndent") = Double;
overload selector("takeColorFrom:") = Void, Id;
overload selector("takeDoubleValueFrom:") = Void, Id;
overload selector("takeFloatValueFrom:") = Void, Id;
overload selector("takeIntValueFrom:") = Void, Id;
overload selector("takeIntegerValueFrom:") = Void, Id;
overload selector("takeObjectValueFrom:") = Void, Id;
overload selector("takeSelectedTabViewItemFromSender:") = Void, Id;
overload selector("takeStoredValue:forKey:") = Void, Id, NSString;
overload selector("takeStringURLFrom:") = Void, Id;
overload selector("takeStringValueFrom:") = Void, Id;
overload selector("takeValue:forKey:") = Void, Id, NSString;
overload selector("takeValue:forKeyPath:") = Void, Id, NSString;
overload selector("takeValuesFromDictionary:") = Void, NSDictionary;
overload selector("takesTitleFromPreviousColumn") = Bool;
overload selector("tangentialPressure") = Float;
overload selector("target") = Id;
overload selector("targetForAction:") = Id, SelectorHandle;
overload selector("targetForAction:to:from:") = Id, SelectorHandle, Id, Id;
overload selector("tearOffMenuRepresentation") = Id;
overload selector("templateViews") = NSArray;
overload selector("templatesWithAttributeKeyPaths:inEntityDescription:") = NSArray, NSArray, NSEntityDescription;
overload selector("temporaryAttribute:atCharacterIndex:effectiveRange:") = Id, NSString, CULong, NSRangePointer;
overload selector("temporaryAttribute:atCharacterIndex:longestEffectiveRange:inRange:") = Id, NSString, CULong, NSRangePointer, NSRange;
overload selector("temporaryAttributesAtCharacterIndex:effectiveRange:") = NSDictionary, CULong, NSRangePointer;
overload selector("temporaryAttributesAtCharacterIndex:longestEffectiveRange:inRange:") = NSDictionary, CULong, NSRangePointer, NSRange;
overload selector("terminate") = Bool;
overload selector("terminate:") = Void, Id;
overload selector("terminationReason") = CLong;
overload selector("terminationStatus") = Int;
overload selector("test") = NSScriptWhoseTest;
overload selector("testPart:") = CULong, NSPoint;
overload selector("text") = NSString;
overload selector("textAlign") = NSString;
overload selector("textAttributesForNegativeInfinity") = NSDictionary;
overload selector("textAttributesForNegativeValues") = NSDictionary;
overload selector("textAttributesForNil") = NSDictionary;
overload selector("textAttributesForNotANumber") = NSDictionary;
overload selector("textAttributesForPositiveInfinity") = NSDictionary;
overload selector("textAttributesForPositiveValues") = NSDictionary;
overload selector("textAttributesForZero") = NSDictionary;
overload selector("textBackgroundColor") = NSColor;
overload selector("textBlocks") = NSArray;
overload selector("textColor") = NSColor;
overload selector("textContainer") = NSTextContainer;
overload selector("textContainerChangedGeometry:") = Void, NSTextContainer;
overload selector("textContainerChangedTextView:") = Void, NSTextContainer;
overload selector("textContainerForGlyphAtIndex:effectiveRange:") = NSTextContainer, CULong, NSRangePointer;
overload selector("textContainerForGlyphAtIndex:effectiveRange:withoutAdditionalLayout:") = NSTextContainer, CULong, NSRangePointer, Bool;
overload selector("textContainerInset") = NSSize;
overload selector("textContainerOrigin") = NSPoint;
overload selector("textContainers") = NSArray;
overload selector("textContent") = NSString;
overload selector("textDecoration") = NSString;
overload selector("textDidBeginEditing:") = Void, NSNotification;
overload selector("textDidChange:") = Void, NSNotification;
overload selector("textDidEndEditing:") = Void, NSNotification;
overload selector("textEncodingName") = NSString;
overload selector("textFileTypes") = NSArray;
overload selector("textIndent") = NSString;
overload selector("textLists") = NSArray;
overload selector("textPasteboardTypes") = NSArray;
overload selector("textShadow") = NSString;
overload selector("textShouldBeginEditing:") = Bool, NSText;
overload selector("textShouldEndEditing:") = Bool, NSText;
overload selector("textSizeMultiplier") = Float;
overload selector("textStorage") = NSTextStorage;
overload selector("textStorage:edited:range:changeInLength:invalidatedRange:") = Void, NSTextStorage, CULong, NSRange, CLong, NSRange;
overload selector("textStorageDidProcessEditing:") = Void, NSNotification;
overload selector("textStorageWillProcessEditing:") = Void, NSNotification;
overload selector("textTabForGlyphLocation:writingDirection:maxLocation:") = NSTextTab, Double, CLong, Double;
overload selector("textTransform") = Id;
overload selector("textTypes") = NSArray;
overload selector("textUnfilteredFileTypes") = NSArray;
overload selector("textUnfilteredPasteboardTypes") = NSArray;
overload selector("textUnfilteredTypes") = NSArray;
overload selector("textView") = NSTextView;
overload selector("textView:clickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
overload selector("textView:clickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, CULong;
overload selector("textView:clickedOnLink:") = Bool, NSTextView, Id;
overload selector("textView:clickedOnLink:atIndex:") = Bool, NSTextView, Id, CULong;
overload selector("textView:completions:forPartialWordRange:indexOfSelectedItem:") = NSArray, NSTextView, NSArray, NSRange, Pointer[CLong];
overload selector("textView:didCheckTextInRange:types:options:results:orthography:wordCount:") = NSArray, NSTextView, NSRange, UInt64, NSDictionary, NSArray, NSOrthography, CLong;
overload selector("textView:doCommandBySelector:") = Bool, NSTextView, SelectorHandle;
overload selector("textView:doubleClickedOnCell:inRect:") = Void, NSTextView, Id, NSRect;
overload selector("textView:doubleClickedOnCell:inRect:atIndex:") = Void, NSTextView, Id, NSRect, CULong;
overload selector("textView:draggedCell:inRect:event:") = Void, NSTextView, Id, NSRect, NSEvent;
overload selector("textView:draggedCell:inRect:event:atIndex:") = Void, NSTextView, Id, NSRect, NSEvent, CULong;
overload selector("textView:menu:forEvent:atIndex:") = NSMenu, NSTextView, NSMenu, NSEvent, CULong;
overload selector("textView:shouldChangeTextInRange:replacementString:") = Bool, NSTextView, NSRange, NSString;
overload selector("textView:shouldChangeTextInRanges:replacementStrings:") = Bool, NSTextView, NSArray, NSArray;
overload selector("textView:shouldChangeTypingAttributes:toAttributes:") = NSDictionary, NSTextView, NSDictionary, NSDictionary;
overload selector("textView:shouldSetSpellingState:range:") = CLong, NSTextView, CLong, NSRange;
overload selector("textView:willChangeSelectionFromCharacterRange:toCharacterRange:") = NSRange, NSTextView, NSRange, NSRange;
overload selector("textView:willChangeSelectionFromCharacterRanges:toCharacterRanges:") = NSArray, NSTextView, NSArray, NSArray;
overload selector("textView:willCheckTextInRange:options:types:") = NSDictionary, NSTextView, NSRange, NSDictionary, Pointer[UInt64];
overload selector("textView:willDisplayToolTip:forCharacterAtIndex:") = NSString, NSTextView, NSString, CULong;
overload selector("textView:writablePasteboardTypesForCell:atIndex:") = NSArray, NSTextView, Id, CULong;
overload selector("textView:writeCell:atIndex:toPasteboard:type:") = Bool, NSTextView, Id, CULong, NSPasteboard, NSString;
overload selector("textViewDidChangeSelection:") = Void, NSNotification;
overload selector("textViewDidChangeTypingAttributes:") = Void, NSNotification;
overload selector("textViewForBeginningOfSelection") = NSTextView;
overload selector("textWithStringValue:") = Id, NSString;
overload selector("textureInternalFormat") = UInt;
overload selector("textureMaxMipMapLevel") = Int;
overload selector("textureTarget") = UInt;
overload selector("thickness") = Double;
overload selector("thicknessRequiredInRuler") = Double;
overload selector("thousandSeparator") = NSString;
overload selector("threadDictionary") = NSMutableDictionary;
overload selector("threadPriority") = Double;
overload selector("throwException:") = Bool, NSString;
overload selector("tickMarkPosition") = CULong;
overload selector("tickMarkValueAtIndex:") = Double, CLong;
overload selector("tightenKerning:") = Void, Id;
overload selector("tighteningFactorForTruncation") = Float;
overload selector("tile") = Void;
overload selector("tilt") = NSPoint;
overload selector("timeInterval") = Double;
overload selector("timeIntervalSince1970") = Double;
overload selector("timeIntervalSinceDate:") = Double, NSDate;
overload selector("timeIntervalSinceNow") = Double;
overload selector("timeIntervalSinceReferenceDate") = Double;
overload selector("timeOffset") = Double;
overload selector("timeStamp") = UInt64;
overload selector("timeStyle") = CULong;
overload selector("timeZone") = NSTimeZone;
overload selector("timeZoneDataVersion") = NSString;
overload selector("timeZoneForSecondsFromGMT:") = Id, CLong;
overload selector("timeZoneWithAbbreviation:") = Id, NSString;
overload selector("timeZoneWithName:") = Id, NSString;
overload selector("timeZoneWithName:data:") = Id, NSString, NSData;
overload selector("timeoutInterval") = Double;
overload selector("timerWithTimeInterval:invocation:repeats:") = NSTimer, Double, NSInvocation, Bool;
overload selector("timerWithTimeInterval:target:selector:userInfo:repeats:") = NSTimer, Double, Id, SelectorHandle, Id, Bool;
overload selector("timestamp") = Double;
overload selector("title") = NSString;
overload selector("titleAlignment") = CULong;
overload selector("titleBarFontOfSize:") = NSFont, Double;
overload selector("titleBaseWritingDirection") = CLong;
overload selector("titleCell") = Id;
overload selector("titleColor") = NSColor;
overload selector("titleDisplayString") = NSString;
overload selector("titleFont") = NSFont;
overload selector("titleFrameOfColumn:") = NSRect, CLong;
overload selector("titleHeight") = Double;
overload selector("titleOfColumn:") = NSString, CLong;
overload selector("titleOfSelectedItem") = NSString;
overload selector("titlePosition") = CULong;
overload selector("titleRect") = NSRect;
overload selector("titleRectForBounds:") = NSRect, NSRect;
overload selector("titleWidth") = Double;
overload selector("titleWidth:") = Double, NSSize;
overload selector("toElement") = DOMNode;
overload selector("toManyRelationshipKeys") = NSArray;
overload selector("toOneRelationshipKeys") = NSArray;
overload selector("toString") = NSString;
overload selector("toggle:") = Void, Id;
overload selector("toggleAutomaticDashSubstitution:") = Void, Id;
overload selector("toggleAutomaticDataDetection:") = Void, Id;
overload selector("toggleAutomaticLinkDetection:") = Void, Id;
overload selector("toggleAutomaticQuoteSubstitution:") = Void, Id;
overload selector("toggleAutomaticSpellingCorrection:") = Void, Id;
overload selector("toggleAutomaticTextReplacement:") = Void, Id;
overload selector("toggleBaseWritingDirection:") = Void, Id;
overload selector("toggleContinuousSpellChecking:") = Void, Id;
overload selector("toggleGrammarChecking:") = Void, Id;
overload selector("toggleRuler:") = Void, Id;
overload selector("toggleSmartInsertDelete:") = Void, Id;
overload selector("toggleToolbarShown:") = Void, Id;
overload selector("toggleTraditionalCharacterShape:") = Void, Id;
overload selector("tokenField:completionsForSubstring:indexOfToken:indexOfSelectedItem:") = NSArray, NSTokenField, NSString, CLong, Pointer[CLong];
overload selector("tokenField:displayStringForRepresentedObject:") = NSString, NSTokenField, Id;
overload selector("tokenField:editingStringForRepresentedObject:") = NSString, NSTokenField, Id;
overload selector("tokenField:hasMenuForRepresentedObject:") = Bool, NSTokenField, Id;
overload selector("tokenField:menuForRepresentedObject:") = NSMenu, NSTokenField, Id;
overload selector("tokenField:readFromPasteboard:") = NSArray, NSTokenField, NSPasteboard;
overload selector("tokenField:representedObjectForEditingString:") = Id, NSTokenField, NSString;
overload selector("tokenField:shouldAddObjects:atIndex:") = NSArray, NSTokenField, NSArray, CULong;
overload selector("tokenField:styleForRepresentedObject:") = CULong, NSTokenField, Id;
overload selector("tokenField:writeRepresentedObjects:toPasteboard:") = Bool, NSTokenField, NSArray, NSPasteboard;
overload selector("tokenFieldCell:completionsForSubstring:indexOfToken:indexOfSelectedItem:") = NSArray, NSTokenFieldCell, NSString, CLong, Pointer[CLong];
overload selector("tokenFieldCell:displayStringForRepresentedObject:") = NSString, NSTokenFieldCell, Id;
overload selector("tokenFieldCell:editingStringForRepresentedObject:") = NSString, NSTokenFieldCell, Id;
overload selector("tokenFieldCell:hasMenuForRepresentedObject:") = Bool, NSTokenFieldCell, Id;
overload selector("tokenFieldCell:menuForRepresentedObject:") = NSMenu, NSTokenFieldCell, Id;
overload selector("tokenFieldCell:readFromPasteboard:") = NSArray, NSTokenFieldCell, NSPasteboard;
overload selector("tokenFieldCell:representedObjectForEditingString:") = Id, NSTokenFieldCell, NSString;
overload selector("tokenFieldCell:shouldAddObjects:atIndex:") = NSArray, NSTokenFieldCell, NSArray, CULong;
overload selector("tokenFieldCell:styleForRepresentedObject:") = CULong, NSTokenFieldCell, Id;
overload selector("tokenFieldCell:writeRepresentedObjects:toPasteboard:") = Bool, NSTokenFieldCell, NSArray, NSPasteboard;
overload selector("tokenStyle") = CULong;
overload selector("tokenizingCharacterSet") = NSCharacterSet;
overload selector("toolTip") = NSString;
overload selector("toolTipForCell:") = NSString, NSCell;
overload selector("toolTipForSegment:") = NSString, CLong;
overload selector("toolTipsFontOfSize:") = NSFont, Double;
overload selector("toolbar") = NSToolbar;
overload selector("toolbar:itemForItemIdentifier:willBeInsertedIntoToolbar:") = NSToolbarItem, NSToolbar, NSString, Bool;
overload selector("toolbarAllowedItemIdentifiers:") = NSArray, NSToolbar;
overload selector("toolbarDefaultItemIdentifiers:") = NSArray, NSToolbar;
overload selector("toolbarDidRemoveItem:") = Void, NSNotification;
overload selector("toolbarSelectableItemIdentifiers:") = NSArray, NSToolbar;
overload selector("toolbarWillAddItem:") = Void, NSNotification;
overload selector("top") = Id;
overload selector("topLevelObject") = Id;
overload selector("topMargin") = Double;
overload selector("totalCostLimit") = CULong;
overload selector("touchesBeganWithEvent:") = Void, NSEvent;
overload selector("touchesCancelledWithEvent:") = Void, NSEvent;
overload selector("touchesEndedWithEvent:") = Void, NSEvent;
overload selector("touchesMatchingPhase:inView:") = NSSet, CULong, NSView;
overload selector("touchesMovedWithEvent:") = Void, NSEvent;
overload selector("trackKnob:") = Void, NSEvent;
overload selector("trackMarker:withMouseEvent:") = Bool, NSRulerMarker, NSEvent;
overload selector("trackMouse:adding:") = Bool, NSEvent, Bool;
overload selector("trackMouse:inRect:ofView:atCharacterIndex:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, CULong, Bool;
overload selector("trackMouse:inRect:ofView:untilMouseUp:") = Bool, NSEvent, NSRect, NSView, Bool;
overload selector("trackRect") = NSRect;
overload selector("trackScrollButtons:") = Void, NSEvent;
overload selector("trackingArea") = NSTrackingArea;
overload selector("trackingAreas") = NSArray;
overload selector("trackingMode") = CULong;
overload selector("trackingNumber") = CLong;
overload selector("trailingOffset") = Double;
overload selector("traitsOfFont:") = CULong, NSFont;
overload selector("transactionID") = Int;
overload selector("transform") = NSAffineTransform;
overload selector("transformBezierPath:") = NSBezierPath, NSBezierPath;
overload selector("transformPoint:") = NSPoint, NSPoint;
overload selector("transformSize:") = NSSize, NSSize;
overload selector("transformStruct") = NSAffineTransformStruct;
overload selector("transformUsingAffineTransform:") = Void, NSAffineTransform;
overload selector("transformedValue:") = Id, Id;
overload selector("transformedValueClass") = Id;
overload selector("translateOriginToPoint:") = Void, NSPoint;
overload selector("translateRectsNeedingDisplayInRect:by:") = Void, NSRect, NSSize;
overload selector("translateXBy:yBy:") = Void, Double, Double;
overload selector("transpose:") = Void, Id;
overload selector("transposeWords:") = Void, Id;
overload selector("treatsFilePackagesAsDirectories") = Bool;
overload selector("treeNodeWithRepresentedObject:") = Id, Id;
overload selector("truncateFileAtOffset:") = Void, UInt64;
overload selector("truncatesLastVisibleLine") = Bool;
overload selector("tryLock") = Bool;
overload selector("tryLockWhenCondition:") = Bool, CLong;
overload selector("tryToPerform:with:") = Bool, SelectorHandle, Id;
overload selector("turnOffKerning:") = Void, Id;
overload selector("turnOffLigatures:") = Void, Id;
overload selector("twoDigitStartDate") = NSDate;
overload selector("type") = NSString;
overload selector("type:conformsToType:") = Bool, NSString, NSString;
overload selector("typeCodeValue") = UInt;
overload selector("typeForArgumentWithName:") = NSString, NSString;
overload selector("typeForContentsOfURL:error:") = NSString, NSURL, Pointer[NSError];
overload selector("typeForKey:") = NSString, NSString;
overload selector("typeFromFileExtension:") = NSString, NSString;
overload selector("typeOfFile:error:") = NSString, NSString, Pointer[NSError];
overload selector("types") = NSArray;
overload selector("typesFilterableTo:") = NSArray, NSString;
overload selector("typesetter") = NSTypesetter;
overload selector("typesetterBehavior") = CLong;
overload selector("typingAttributes") = NSDictionary;
overload selector("typingStyle") = DOMCSSStyleDeclaration;
overload selector("unableToSetNilForKey:") = Void, NSString;
overload selector("unarchiveObjectWithData:") = Id, NSData;
overload selector("unarchiveObjectWithFile:") = Id, NSString;
overload selector("unarchiver:cannotDecodeObjectOfClassName:originalClasses:") = Id, NSKeyedUnarchiver, NSString, NSArray;
overload selector("unarchiver:didDecodeObject:") = Id, NSKeyedUnarchiver, Id;
overload selector("unarchiver:willReplaceObject:withObject:") = Void, NSKeyedUnarchiver, Id, Id;
overload selector("unarchiverDidFinish:") = Void, NSKeyedUnarchiver;
overload selector("unarchiverWillFinish:") = Void, NSKeyedUnarchiver;
overload selector("unbind:") = Void, NSString;
overload selector("undefined") = WebUndefined;
overload selector("underline:") = Void, Id;
overload selector("underlineGlyphRange:underlineType:lineFragmentRect:lineFragmentGlyphRange:containerOrigin:") = Void, NSRange, CLong, NSRect, NSRange, NSPoint;
overload selector("underlinePosition") = Double;
overload selector("underlineThickness") = Double;
overload selector("undo") = Void;
overload selector("undoActionName") = NSString;
overload selector("undoManager") = NSUndoManager;
overload selector("undoManagerForTextView:") = NSUndoManager, NSTextView;
overload selector("undoManagerForWebView:") = NSUndoManager, WebView;
overload selector("undoMenuItemTitle") = NSString;
overload selector("undoMenuTitleForUndoActionName:") = NSString, NSString;
overload selector("undoNestedGroup") = Void;
overload selector("unhide") = Bool;
overload selector("unhide:") = Void, Id;
overload selector("unhideAllApplications:") = Void, Id;
overload selector("unhideWithoutActivation") = Void;
overload selector("unicodeBidi") = NSString;
overload selector("unionHashTable:") = Void, NSHashTable;
overload selector("unionSet:") = Void, NSSet;
overload selector("uniqueID") = Id;
overload selector("uniqueSpellDocumentTag") = CLong;
overload selector("unlearnWord:") = Void, NSString;
overload selector("unload") = Bool;
overload selector("unlock") = Void;
overload selector("unlockFocus") = Void;
overload selector("unlockWithCondition:") = Void, CLong;
overload selector("unmarkText") = Void;
overload selector("unmountAndEjectDeviceAtPath:") = Bool, NSString;
overload selector("unmountAndEjectDeviceAtURL:error:") = Bool, NSURL, Pointer[NSError];
overload selector("unreachableURL") = NSURL;
overload selector("unregisterClass:") = Void, Id;
overload selector("unregisterDraggedTypes") = Void;
overload selector("unregisterImageRepClass:") = Void, Id;
overload selector("unregisterUserInterfaceItemSearchHandler:") = Void, Id;
overload selector("unscheduleFromRunLoop:forMode:") = Void, NSRunLoop, NSString;
overload selector("unscript:") = Void, Id;
overload selector("unscriptRange:") = Void, NSRange;
overload selector("unsignedCharValue") = CUChar;
overload selector("unsignedIntValue") = UInt;
overload selector("unsignedIntegerValue") = CULong;
overload selector("unsignedLongLongValue") = UInt64;
overload selector("unsignedLongValue") = CULong;
overload selector("unsignedShortValue") = UShort;
overload selector("update") = Void;
overload selector("updateAttachmentsFromPath:") = Void, NSString;
overload selector("updateCacheNode:fromManagedObject:") = Void, NSAtomicStoreCacheNode, NSManagedObject;
overload selector("updateCell:") = Void, NSCell;
overload selector("updateCellInside:") = Void, NSCell;
overload selector("updateChangeCount:") = Void, CULong;
overload selector("updateDragTypeRegistration") = Void;
overload selector("updateFontPanel") = Void;
overload selector("updateFromPMPageFormat") = Void;
overload selector("updateFromPMPrintSettings") = Void;
overload selector("updateFromPath:") = Bool, NSString;
overload selector("updateFromPrintInfo") = Void;
overload selector("updateInsertionPointStateAndRestartTimer:") = Void, Bool;
overload selector("updatePanels") = Void;
overload selector("updateRuler") = Void;
overload selector("updateScroller") = Void;
overload selector("updateSpellingPanelWithGrammarString:detail:") = Void, NSString, NSDictionary;
overload selector("updateSpellingPanelWithMisspelledWord:") = Void, NSString;
overload selector("updateTrackingAreas") = Void;
overload selector("updateWindows") = Void;
overload selector("updateWindowsItem:") = Void, NSWindow;
overload selector("updatedObjects") = NSSet;
overload selector("uppercaseLetterCharacterSet") = Id;
overload selector("uppercaseString") = NSString;
overload selector("uppercaseWord:") = Void, Id;
overload selector("url") = NSURL;
overload selector("usableParts") = CULong;
overload selector("use") = Void;
overload selector("useAllLigatures:") = Void, Id;
overload selector("useCredential:forAuthenticationChallenge:") = Void, NSURLCredential, NSURLAuthenticationChallenge;
overload selector("useMap") = NSString;
overload selector("useOptimizedDrawing:") = Void, Bool;
overload selector("useStandardKerning:") = Void, Id;
overload selector("useStandardLigatures:") = Void, Id;
overload selector("useStoredAccessor") = Bool;
overload selector("usedRectForTextContainer:") = NSRect, NSTextContainer;
overload selector("user") = NSString;
overload selector("userAgentForURL:") = NSString, NSURL;
overload selector("userData") = RawPointer;
overload selector("userDefaultsChanged") = Bool;
overload selector("userFixedPitchFontOfSize:") = NSFont, Double;
overload selector("userFontOfSize:") = NSFont, Double;
overload selector("userInfo") = Id;
overload selector("userInterfaceLayoutDirection") = CLong;
overload selector("userKeyEquivalent") = NSString;
overload selector("userPreferredLanguages") = NSArray;
overload selector("userQuotesArrayForLanguage:") = NSArray, NSString;
overload selector("userReplacementsDictionary") = NSDictionary;
overload selector("userSpaceScaleFactor") = Double;
overload selector("userStyleSheetEnabled") = Bool;
overload selector("userStyleSheetLocation") = NSURL;
overload selector("usesAlternatingRowBackgroundColors") = Bool;
overload selector("usesDataSource") = Bool;
overload selector("usesEPSOnResolutionMismatch") = Bool;
overload selector("usesFeedbackWindow") = Bool;
overload selector("usesFindPanel") = Bool;
overload selector("usesFontLeading") = Bool;
overload selector("usesFontPanel") = Bool;
overload selector("usesGroupingSeparator") = Bool;
overload selector("usesItemFromMenu") = Bool;
overload selector("usesLazyFetching") = Bool;
overload selector("usesPageCache") = Bool;
overload selector("usesRuler") = Bool;
overload selector("usesScreenFonts") = Bool;
overload selector("usesSignificantDigits") = Bool;
overload selector("usesSingleLineMode") = Bool;
overload selector("usesStrongWriteBarrier") = Bool;
overload selector("usesThreadedAnimation") = Bool;
overload selector("usesUserKeyEquivalents") = Bool;
overload selector("usesWeakReadAndWriteBarriers") = Bool;
overload selector("vAlign") = NSString;
overload selector("vLink") = NSString;
overload selector("validAttributesForMarkedText") = NSArray;
overload selector("validModesForFontPanel:") = CULong, NSFontPanel;
overload selector("validRequestorForSendType:returnType:") = Id, NSString, NSString;
overload selector("validate") = Void;
overload selector("validateAndReturnError:") = Bool, Pointer[NSError];
overload selector("validateEditing") = Void;
overload selector("validateForDelete:") = Bool, Pointer[NSError];
overload selector("validateForInsert:") = Bool, Pointer[NSError];
overload selector("validateForUpdate:") = Bool, Pointer[NSError];
overload selector("validateMenuItem:") = Bool, NSMenuItem;
overload selector("validateToolbarItem:") = Bool, NSToolbarItem;
overload selector("validateUserInterfaceItem:") = Bool, Id;
overload selector("validateValue:forKey:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector("validateValue:forKeyPath:error:") = Bool, Pointer[Id], NSString, Pointer[NSError];
overload selector("validateVisibleColumns") = Void;
overload selector("validateVisibleItems") = Void;
overload selector("validationPredicates") = NSArray;
overload selector("validationWarnings") = NSArray;
overload selector("value") = Id;
overload selector("value:withObjCType:") = NSValue, RawPointer, Pointer[CChar];
overload selector("valueAtIndex:") = Double, CULong;
overload selector("valueAtIndex:inPropertyWithKey:") = Id, CULong, NSString;
overload selector("valueClassForBinding:") = Id, NSString;
overload selector("valueExpression") = NSExpression;
overload selector("valueForAttribute:") = Id, NSString;
overload selector("valueForDimension:") = Double, CULong;
overload selector("valueForHTTPHeaderField:") = NSString, NSString;
overload selector("valueForKey:") = Id, NSString;
overload selector("valueForKeyPath:") = Id, NSString;
overload selector("valueForProperty:") = Id, NSString;
overload selector("valueForUndefinedKey:") = Id, NSString;
overload selector("valueListAttributes") = NSArray;
overload selector("valueLists") = NSDictionary;
overload selector("valueOfAttribute:forResultAtIndex:") = Id, NSString, CULong;
overload selector("valuePointerFunctions") = NSPointerFunctions;
overload selector("valueTransformerForName:") = NSValueTransformer, NSString;
overload selector("valueTransformerName") = NSString;
overload selector("valueTransformerNames") = NSArray;
overload selector("valueType") = NSString;
overload selector("valueTypeForDimension:") = CULong, CULong;
overload selector("valueWithBytes:objCType:") = NSValue, RawPointer, Pointer[CChar];
overload selector("valueWithCATransform3D:") = NSValue, CATransform3D;
overload selector("valueWithName:inPropertyWithKey:") = Id, NSString, NSString;
overload selector("valueWithNonretainedObject:") = NSValue, Id;
overload selector("valueWithPoint:") = NSValue, NSPoint;
overload selector("valueWithPointer:") = NSValue, RawPointer;
overload selector("valueWithRange:") = NSValue, NSRange;
overload selector("valueWithRect:") = NSValue, NSRect;
overload selector("valueWithSize:") = NSValue, NSSize;
overload selector("valueWithUniqueID:inPropertyWithKey:") = Id, Id, NSString;
overload selector("valueWraps") = Bool;
overload selector("values") = Id;
overload selector("valuesForAttributes:") = NSDictionary, NSArray;
overload selector("valuesForKeys:") = NSDictionary, NSArray;
overload selector("variable") = NSString;
overload selector("vectorWithString:") = CIVector, NSString;
overload selector("vectorWithValues:count:") = CIVector, Pointer[Double], CULong;
overload selector("vectorWithX:") = CIVector, Double;
overload selector("vectorWithX:Y:") = CIVector, Double, Double;
overload selector("vectorWithX:Y:Z:") = CIVector, Double, Double, Double;
overload selector("vectorWithX:Y:Z:W:") = CIVector, Double, Double, Double, Double;
overload selector("vendorDefined") = Id;
overload selector("vendorID") = CULong;
overload selector("vendorPointingDeviceType") = CULong;
overload selector("version") = CLong;
overload selector("versionForClassName:") = CLong, NSString;
overload selector("versionHash") = NSData;
overload selector("versionHashModifier") = NSString;
overload selector("versionIdentifiers") = NSSet;
overload selector("verticalAlign") = NSString;
overload selector("verticalAlignment") = CULong;
overload selector("verticalLineScroll") = Double;
overload selector("verticalMotionCanBeginDrag") = Bool;
overload selector("verticalOverflow") = Bool;
overload selector("verticalPageScroll") = Double;
overload selector("verticalPagination") = CULong;
overload selector("verticalRulerView") = NSRulerView;
overload selector("verticalScroller") = NSScroller;
overload selector("veryShortMonthSymbols") = NSArray;
overload selector("veryShortStandaloneMonthSymbols") = NSArray;
overload selector("veryShortStandaloneWeekdaySymbols") = NSArray;
overload selector("veryShortWeekdaySymbols") = NSArray;
overload selector("view") = Id;
overload selector("view:stringForToolTip:point:userData:") = NSString, NSView, CLong, NSPoint, RawPointer;
overload selector("viewAnimations") = NSArray;
overload selector("viewBoundsChanged:") = Void, NSNotification;
overload selector("viewDidEndLiveResize") = Void;
overload selector("viewDidHide") = Void;
overload selector("viewDidMoveToHostWindow") = Void;
overload selector("viewDidMoveToSuperview") = Void;
overload selector("viewDidMoveToWindow") = Void;
overload selector("viewDidUnhide") = Void;
overload selector("viewFrameChanged:") = Void, NSNotification;
overload selector("viewSizeChanged:") = Void, Id;
overload selector("viewWillDraw") = Void;
overload selector("viewWillMoveToHostWindow:") = Void, NSWindow;
overload selector("viewWillMoveToSuperview:") = Void, NSView;
overload selector("viewWillMoveToWindow:") = Void, NSWindow;
overload selector("viewWillStartLiveResize") = Void;
overload selector("viewWithTag:") = Id, CLong;
overload selector("viewsNeedDisplay") = Bool;
overload selector("visibility") = NSString;
overload selector("visibilityPriority") = CLong;
overload selector("visibleFrame") = NSRect;
overload selector("visibleItems") = NSArray;
overload selector("visibleRect") = NSRect;
overload selector("vlinkColor") = NSString;
overload selector("voice") = NSString;
overload selector("voiceFamily") = NSString;
overload selector("volatileDomainForName:") = NSDictionary, NSString;
overload selector("volatileDomainNames") = NSArray;
overload selector("volume") = NSString;
overload selector("vspace") = Int;
overload selector("wait") = Void;
overload selector("waitForDataInBackgroundAndNotify") = Void;
overload selector("waitForDataInBackgroundAndNotifyForModes:") = Void, NSArray;
overload selector("waitUntilAllOperationsAreFinished") = Void;
overload selector("waitUntilDate:") = Bool, NSDate;
overload selector("waitUntilExit") = Void;
overload selector("waitUntilFinished") = Void;
overload selector("wantsDefaultClipping") = Bool;
overload selector("wantsLayer") = Bool;
overload selector("wantsNotificationForMarkedText") = Bool;
overload selector("wantsPeriodicDraggingUpdates") = Bool;
overload selector("wantsRestingTouches") = Bool;
overload selector("wantsToDelayTextChangeNotifications") = Bool;
overload selector("wantsToHandleMouseEvents") = Bool;
overload selector("wantsToInterpretAllKeystrokes") = Bool;
overload selector("wantsToTrackMouse") = Bool;
overload selector("wantsToTrackMouseForEvent:inRect:ofView:atCharacterIndex:") = Bool, NSEvent, NSRect, NSView, CULong;
overload selector("warningValue") = Double;
overload selector("webArchive") = WebArchive;
overload selector("webFrame") = WebFrame;
overload selector("webPlugInContainerLoadRequest:inFrame:") = Void, NSURLRequest, NSString;
overload selector("webPlugInContainerSelectionColor") = NSColor;
overload selector("webPlugInContainerShowStatus:") = Void, NSString;
overload selector("webPlugInDestroy") = Void;
overload selector("webPlugInInitialize") = Void;
overload selector("webPlugInMainResourceDidFailWithError:") = Void, NSError;
overload selector("webPlugInMainResourceDidFinishLoading") = Void;
overload selector("webPlugInMainResourceDidReceiveData:") = Void, NSData;
overload selector("webPlugInMainResourceDidReceiveResponse:") = Void, NSURLResponse;
overload selector("webPlugInSetIsSelected:") = Void, Bool;
overload selector("webPlugInStart") = Void;
overload selector("webPlugInStop") = Void;
overload selector("webScriptNameForKey:") = NSString, Pointer[CChar];
overload selector("webScriptNameForSelector:") = NSString, SelectorHandle;
overload selector("webScriptValueAtIndex:") = Id, UInt;
overload selector("webView") = WebView;
overload selector("webView:contextMenuItemsForElement:defaultMenuItems:") = NSArray, WebView, NSDictionary, NSArray;
overload selector("webView:createWebViewModalDialogWithRequest:") = WebView, WebView, NSURLRequest;
overload selector("webView:createWebViewWithRequest:") = WebView, WebView, NSURLRequest;
overload selector("webView:decidePolicyForMIMEType:request:frame:decisionListener:") = Void, WebView, NSString, NSURLRequest, WebFrame, Id;
overload selector("webView:decidePolicyForNavigationAction:request:frame:decisionListener:") = Void, WebView, NSDictionary, NSURLRequest, WebFrame, Id;
overload selector("webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:") = Void, WebView, NSDictionary, NSURLRequest, NSString, Id;
overload selector("webView:didCancelClientRedirectForFrame:") = Void, WebView, WebFrame;
overload selector("webView:didChangeLocationWithinPageForFrame:") = Void, WebView, WebFrame;
overload selector("webView:didClearWindowObject:forFrame:") = Void, WebView, WebScriptObject, WebFrame;
overload selector("webView:didCommitLoadForFrame:") = Void, WebView, WebFrame;
overload selector("webView:didFailLoadWithError:forFrame:") = Void, WebView, NSError, WebFrame;
overload selector("webView:didFailProvisionalLoadWithError:forFrame:") = Void, WebView, NSError, WebFrame;
overload selector("webView:didFinishLoadForFrame:") = Void, WebView, WebFrame;
overload selector("webView:didReceiveIcon:forFrame:") = Void, WebView, NSImage, WebFrame;
overload selector("webView:didReceiveServerRedirectForProvisionalLoadForFrame:") = Void, WebView, WebFrame;
overload selector("webView:didReceiveTitle:forFrame:") = Void, WebView, NSString, WebFrame;
overload selector("webView:didStartProvisionalLoadForFrame:") = Void, WebView, WebFrame;
overload selector("webView:doCommandBySelector:") = Bool, WebView, SelectorHandle;
overload selector("webView:dragDestinationActionMaskForDraggingInfo:") = CULong, WebView, Id;
overload selector("webView:dragSourceActionMaskForPoint:") = CULong, WebView, NSPoint;
overload selector("webView:drawFooterInRect:") = Void, WebView, NSRect;
overload selector("webView:drawHeaderInRect:") = Void, WebView, NSRect;
overload selector("webView:identifierForInitialRequest:fromDataSource:") = Id, WebView, NSURLRequest, WebDataSource;
overload selector("webView:makeFirstResponder:") = Void, WebView, NSResponder;
overload selector("webView:mouseDidMoveOverElement:modifierFlags:") = Void, WebView, NSDictionary, CULong;
overload selector("webView:plugInFailedWithError:dataSource:") = Void, WebView, NSError, WebDataSource;
overload selector("webView:printFrameView:") = Void, WebView, WebFrameView;
overload selector("webView:resource:didCancelAuthenticationChallenge:fromDataSource:") = Void, WebView, Id, NSURLAuthenticationChallenge, WebDataSource;
overload selector("webView:resource:didFailLoadingWithError:fromDataSource:") = Void, WebView, Id, NSError, WebDataSource;
overload selector("webView:resource:didFinishLoadingFromDataSource:") = Void, WebView, Id, WebDataSource;
overload selector("webView:resource:didReceiveAuthenticationChallenge:fromDataSource:") = Void, WebView, Id, NSURLAuthenticationChallenge, WebDataSource;
overload selector("webView:resource:didReceiveContentLength:fromDataSource:") = Void, WebView, Id, CLong, WebDataSource;
overload selector("webView:resource:didReceiveResponse:fromDataSource:") = Void, WebView, Id, NSURLResponse, WebDataSource;
overload selector("webView:resource:willSendRequest:redirectResponse:fromDataSource:") = NSURLRequest, WebView, Id, NSURLRequest, NSURLResponse, WebDataSource;
overload selector("webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:") = Bool, WebView, NSString, WebFrame;
overload selector("webView:runJavaScriptAlertPanelWithMessage:") = Void, WebView, NSString;
overload selector("webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:") = Void, WebView, NSString, WebFrame;
overload selector("webView:runJavaScriptConfirmPanelWithMessage:") = Bool, WebView, NSString;
overload selector("webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:") = Bool, WebView, NSString, WebFrame;
overload selector("webView:runJavaScriptTextInputPanelWithPrompt:defaultText:") = NSString, WebView, NSString, NSString;
overload selector("webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:") = NSString, WebView, NSString, NSString, WebFrame;
overload selector("webView:runOpenPanelForFileButtonWithResultListener:") = Void, WebView, Id;
overload selector("webView:runOpenPanelForFileButtonWithResultListener:allowMultipleFiles:") = Void, WebView, Id, Bool;
overload selector("webView:setContentRect:") = Void, WebView, NSRect;
overload selector("webView:setFrame:") = Void, WebView, NSRect;
overload selector("webView:setResizable:") = Void, WebView, Bool;
overload selector("webView:setStatusBarVisible:") = Void, WebView, Bool;
overload selector("webView:setStatusText:") = Void, WebView, NSString;
overload selector("webView:setToolbarsVisible:") = Void, WebView, Bool;
overload selector("webView:shouldApplyStyle:toElementsInDOMRange:") = Bool, WebView, DOMCSSStyleDeclaration, DOMRange;
overload selector("webView:shouldBeginEditingInDOMRange:") = Bool, WebView, DOMRange;
overload selector("webView:shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:") = Bool, WebView, DOMRange, DOMRange, CULong, Bool;
overload selector("webView:shouldChangeTypingStyle:toStyle:") = Bool, WebView, DOMCSSStyleDeclaration, DOMCSSStyleDeclaration;
overload selector("webView:shouldDeleteDOMRange:") = Bool, WebView, DOMRange;
overload selector("webView:shouldEndEditingInDOMRange:") = Bool, WebView, DOMRange;
overload selector("webView:shouldInsertNode:replacingDOMRange:givenAction:") = Bool, WebView, DOMNode, DOMRange, WebViewInsertAction;
overload selector("webView:shouldInsertText:replacingDOMRange:givenAction:") = Bool, WebView, NSString, DOMRange, WebViewInsertAction;
overload selector("webView:shouldPerformAction:fromSender:") = Bool, WebView, SelectorHandle, Id;
overload selector("webView:unableToImplementPolicyWithError:frame:") = Void, WebView, NSError, WebFrame;
overload selector("webView:validateUserInterfaceItem:defaultValidation:") = Bool, WebView, Id, Bool;
overload selector("webView:willCloseFrame:") = Void, WebView, WebFrame;
overload selector("webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:") = Void, WebView, NSURL, Double, NSDate, WebFrame;
overload selector("webView:willPerformDragDestinationAction:forDraggingInfo:") = Void, WebView, WebDragDestinationAction, Id;
overload selector("webView:willPerformDragSourceAction:fromPoint:withPasteboard:") = Void, WebView, WebDragSourceAction, NSPoint, NSPasteboard;
overload selector("webView:windowScriptObjectAvailable:") = Void, WebView, WebScriptObject;
overload selector("webViewAreToolbarsVisible:") = Bool, WebView;
overload selector("webViewClose:") = Void, WebView;
overload selector("webViewContentRect:") = NSRect, WebView;
overload selector("webViewDidBeginEditing:") = Void, NSNotification;
overload selector("webViewDidChange:") = Void, NSNotification;
overload selector("webViewDidChangeSelection:") = Void, NSNotification;
overload selector("webViewDidChangeTypingStyle:") = Void, NSNotification;
overload selector("webViewDidEndEditing:") = Void, NSNotification;
overload selector("webViewFirstResponder:") = NSResponder, WebView;
overload selector("webViewFocus:") = Void, WebView;
overload selector("webViewFooterHeight:") = Float, WebView;
overload selector("webViewFrame:") = NSRect, WebView;
overload selector("webViewHeaderHeight:") = Float, WebView;
overload selector("webViewIsResizable:") = Bool, WebView;
overload selector("webViewIsStatusBarVisible:") = Bool, WebView;
overload selector("webViewRunModal:") = Void, WebView;
overload selector("webViewShow:") = Void, WebView;
overload selector("webViewStatusText:") = NSString, WebView;
overload selector("webViewUnfocus:") = Void, WebView;
overload selector("week") = CLong;
overload selector("weekday") = CLong;
overload selector("weekdayOrdinal") = CLong;
overload selector("weekdaySymbols") = NSArray;
overload selector("weightOfFont:") = CLong, NSFont;
overload selector("whatToShow") = UInt;
overload selector("wheelDelta") = Int;
overload selector("wheelDeltaX") = Int;
overload selector("wheelDeltaY") = Int;
overload selector("which") = Int;
overload selector("whiteColor") = NSColor;
overload selector("whiteComponent") = Double;
overload selector("whiteSpace") = NSString;
overload selector("whitespaceAndNewlineCharacterSet") = Id;
overload selector("whitespaceCharacterSet") = Id;
overload selector("wholeText") = NSString;
overload selector("widows") = NSString;
overload selector("width") = NSString;
overload selector("widthAdjustLimit") = Double;
overload selector("widthForLayer:edge:") = Double, CLong, CULong;
overload selector("widthForSegment:") = Double, CLong;
overload selector("widthOfColumn:") = Double, CLong;
overload selector("widthTracksTextView") = Bool;
overload selector("widthValueTypeForLayer:edge:") = CULong, CLong, CULong;
overload selector("willAccessValueForKey:") = Void, NSString;
overload selector("willChange:valuesAtIndexes:forKey:") = Void, CULong, NSIndexSet, NSString;
overload selector("willChangeValueForKey:") = Void, NSString;
overload selector("willChangeValueForKey:withSetMutation:usingObjects:") = Void, NSString, CULong, NSSet;
overload selector("willPresentError:") = NSError, NSError;
overload selector("willRemoveCacheNodes:") = Void, NSSet;
overload selector("willRemoveFromPersistentStoreCoordinator:") = Void, NSPersistentStoreCoordinator;
overload selector("willRemoveSubview:") = Void, NSView;
overload selector("willSave") = Void;
overload selector("willSetLineFragmentRect:forGlyphRange:usedRect:baselineOffset:") = Void, NSRectPointer, NSRange, NSRectPointer, Pointer[Double];
overload selector("willTurnIntoFault") = Void;
overload selector("willValidate") = Bool;
overload selector("windingRule") = CULong;
overload selector("window") = Id;
overload selector("window:shouldDragDocumentWithEvent:from:withPasteboard:") = Bool, NSWindow, NSEvent, NSPoint, NSPasteboard;
overload selector("window:shouldPopUpDocumentPathMenu:") = Bool, NSWindow, NSMenu;
overload selector("window:willPositionSheet:usingRect:") = NSRect, NSWindow, NSWindow, NSRect;
overload selector("windowBackgroundColor") = NSColor;
overload selector("windowController") = Id;
overload selector("windowControllerDidLoadNib:") = Void, NSWindowController;
overload selector("windowControllerWillLoadNib:") = Void, NSWindowController;
overload selector("windowControllers") = NSArray;
overload selector("windowDidBecomeKey:") = Void, NSNotification;
overload selector("windowDidBecomeMain:") = Void, NSNotification;
overload selector("windowDidChangeScreen:") = Void, NSNotification;
overload selector("windowDidChangeScreenProfile:") = Void, NSNotification;
overload selector("windowDidDeminiaturize:") = Void, NSNotification;
overload selector("windowDidEndLiveResize:") = Void, NSNotification;
overload selector("windowDidEndSheet:") = Void, NSNotification;
overload selector("windowDidExpose:") = Void, NSNotification;
overload selector("windowDidLoad") = Void;
overload selector("windowDidMiniaturize:") = Void, NSNotification;
overload selector("windowDidMove:") = Void, NSNotification;
overload selector("windowDidResignKey:") = Void, NSNotification;
overload selector("windowDidResignMain:") = Void, NSNotification;
overload selector("windowDidResize:") = Void, NSNotification;
overload selector("windowDidUpdate:") = Void, NSNotification;
overload selector("windowForSheet") = NSWindow;
overload selector("windowFrameAutosaveName") = NSString;
overload selector("windowFrameColor") = NSColor;
overload selector("windowFrameTextColor") = NSColor;
overload selector("windowLevel") = CLong;
overload selector("windowNibName") = NSString;
overload selector("windowNibPath") = NSString;
overload selector("windowNumber") = CLong;
overload selector("windowNumberAtPoint:belowWindowWithWindowNumber:") = CLong, NSPoint, CLong;
overload selector("windowNumbersWithOptions:") = NSArray, CULong;
overload selector("windowObject") = WebScriptObject;
overload selector("windowRef") = RawPointer;
overload selector("windowScriptObject") = WebScriptObject;
overload selector("windowShouldClose:") = Bool, Id;
overload selector("windowShouldZoom:toFrame:") = Bool, NSWindow, NSRect;
overload selector("windowTitleForDocumentDisplayName:") = NSString, NSString;
overload selector("windowWillBeginSheet:") = Void, NSNotification;
overload selector("windowWillClose:") = Void, NSNotification;
overload selector("windowWillLoad") = Void;
overload selector("windowWillMiniaturize:") = Void, NSNotification;
overload selector("windowWillMove:") = Void, NSNotification;
overload selector("windowWillResize:toSize:") = NSSize, NSWindow, NSSize;
overload selector("windowWillReturnFieldEditor:toObject:") = Id, NSWindow, Id;
overload selector("windowWillReturnUndoManager:") = NSUndoManager, NSWindow;
overload selector("windowWillStartLiveResize:") = Void, NSNotification;
overload selector("windowWillUseStandardFrame:defaultFrame:") = NSRect, NSWindow, NSRect;
overload selector("windowWithWindowNumber:") = NSWindow, CLong;
overload selector("windows") = NSArray;
overload selector("windowsLocaleCodeFromLocaleIdentifier:") = UInt, NSString;
overload selector("windowsMenu") = NSMenu;
overload selector("wordSpacing") = NSString;
overload selector("words") = NSArray;
overload selector("worksWhenModal") = Bool;
overload selector("wrap") = Bool;
overload selector("wraps") = Bool;
overload selector("writablePasteboardTypes") = NSArray;
overload selector("writableTypes") = NSArray;
overload selector("writableTypesForPasteboard:") = NSArray, NSPasteboard;
overload selector("writableTypesForSaveOperation:") = NSArray, CULong;
overload selector("write:") = Void, NSString;
overload selector("write:maxLength:") = CLong, Pointer[CUChar], CULong;
overload selector("writeBookmarkData:toURL:options:error:") = Bool, NSData, NSURL, CULong, Pointer[NSError];
overload selector("writeData:") = Bool, NSData;
overload selector("writeEPSInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
overload selector("writeElement:withPasteboardTypes:toPasteboard:") = Void, NSDictionary, NSArray, NSPasteboard;
overload selector("writeFileContents:") = Bool, NSString;
overload selector("writeFileWrapper:") = Bool, NSFileWrapper;
overload selector("writeObjects:") = Bool, NSArray;
overload selector("writePDFInsideRect:toPasteboard:") = Void, NSRect, NSPasteboard;
overload selector("writePrintInfo") = Void;
overload selector("writeProperty:forKey:") = Bool, Id, NSString;
overload selector("writePropertyList:toStream:format:options:error:") = CLong, Id, NSOutputStream, CULong, CULong, Pointer[NSError];
overload selector("writeRTFDToFile:atomically:") = Bool, NSString, Bool;
overload selector("writeSafelyToURL:ofType:forSaveOperation:error:") = Bool, NSURL, NSString, CULong, Pointer[NSError];
overload selector("writeSelectionToPasteboard:type:") = Bool, NSPasteboard, NSString;
overload selector("writeSelectionToPasteboard:types:") = Bool, NSPasteboard, NSArray;
overload selector("writeSelectionWithPasteboardTypes:toPasteboard:") = Void, NSArray, NSPasteboard;
overload selector("writeToFile:") = Bool, NSString;
overload selector("writeToFile:atomically:") = Bool, NSString, Bool;
overload selector("writeToFile:atomically:encoding:error:") = Bool, NSString, Bool, CULong, Pointer[NSError];
overload selector("writeToFile:atomically:updateFilenames:") = Bool, NSString, Bool, Bool;
overload selector("writeToFile:ofType:") = Bool, NSString, NSString;
overload selector("writeToFile:ofType:originalFile:saveOperation:") = Bool, NSString, NSString, NSString, CULong;
overload selector("writeToFile:options:error:") = Bool, NSString, CULong, Pointer[NSError];
overload selector("writeToPasteboard:") = Void, NSPasteboard;
overload selector("writeToURL:atomically:") = Bool, NSURL, Bool;
overload selector("writeToURL:atomically:encoding:error:") = Bool, NSURL, Bool, CULong, Pointer[NSError];
overload selector("writeToURL:ofType:") = Bool, NSURL, NSString;
overload selector("writeToURL:ofType:error:") = Bool, NSURL, NSString, Pointer[NSError];
overload selector("writeToURL:ofType:forSaveOperation:originalContentsURL:error:") = Bool, NSURL, NSString, CULong, NSURL, Pointer[NSError];
overload selector("writeToURL:options:error:") = Bool, NSURL, CULong, Pointer[NSError];
overload selector("writeToURL:options:originalContentsURL:error:") = Bool, NSURL, CULong, NSURL, Pointer[NSError];
overload selector("writeWithBackupToFile:ofType:saveOperation:") = Bool, NSString, NSString, CULong;
overload selector("writeln:") = Void, NSString;
overload selector("writingOptionsForType:pasteboard:") = CULong, NSString, NSPasteboard;
overload selector("x") = Int;
overload selector("xHeight") = Double;
overload selector("xmlEncoding") = NSString;
overload selector("xmlStandalone") = Bool;
overload selector("xmlVersion") = NSString;
overload selector("y") = Int;
overload selector("yank:") = Void, Id;
overload selector("year") = CLong;
overload selector("yearOfCommonEra") = CLong;
overload selector("years:months:days:hours:minutes:seconds:sinceDate:") = Void, Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], Pointer[CLong], NSCalendarDate;
overload selector("yellowColor") = NSColor;
overload selector("yellowComponent") = Double;
overload selector("zIndex") = NSString;
overload selector("zPosition") = Double;
overload selector("zero") = NSDecimalNumber;
overload selector("zeroSymbol") = NSString;
overload selector("zone") = Pointer[NSZone];
overload selector("zoom:") = Void, Id;

record DOMAbstractView = externalClass(DOMObject);
overload externalInstanceMethod(#DOMAbstractView, "document") = DOMDocument;

record DOMAttr = externalClass(DOMNode);
overload externalInstanceMethod(#DOMAttr, "name") = NSString;
overload externalInstanceMethod(#DOMAttr, "specified") = Bool;
overload externalInstanceMethod(#DOMAttr, "value") = NSString;
overload externalInstanceMethod(#DOMAttr, "setValue:") = Void, NSString;
overload externalInstanceMethod(#DOMAttr, "ownerElement") = DOMElement;
overload externalInstanceMethod(#DOMAttr, "style") = DOMCSSStyleDeclaration;

record DOMBlob = externalClass(DOMObject);
overload externalInstanceMethod(#DOMBlob, "size") = UInt64;

record DOMCDATASection = externalClass(DOMText);

record DOMCSSCharsetRule = externalClass(DOMCSSRule);
overload externalInstanceMethod(#DOMCSSCharsetRule, "encoding") = NSString;

record DOMCSSFontFaceRule = externalClass(DOMCSSRule);
overload externalInstanceMethod(#DOMCSSFontFaceRule, "style") = DOMCSSStyleDeclaration;

record DOMCSSImportRule = externalClass(DOMCSSRule);
overload externalInstanceMethod(#DOMCSSImportRule, "href") = NSString;
overload externalInstanceMethod(#DOMCSSImportRule, "media") = DOMMediaList;
overload externalInstanceMethod(#DOMCSSImportRule, "styleSheet") = DOMCSSStyleSheet;

record DOMCSSMediaRule = externalClass(DOMCSSRule);
overload externalInstanceMethod(#DOMCSSMediaRule, "insertRule:index:") = UInt, NSString, UInt;
overload externalInstanceMethod(#DOMCSSMediaRule, "deleteRule:") = Void, UInt;
overload externalInstanceMethod(#DOMCSSMediaRule, "media") = DOMMediaList;
overload externalInstanceMethod(#DOMCSSMediaRule, "cssRules") = DOMCSSRuleList;
overload externalInstanceMethod(#DOMCSSMediaRule, "insertRule::") = UInt, NSString, UInt;

record DOMCSSPageRule = externalClass(DOMCSSRule);
overload externalInstanceMethod(#DOMCSSPageRule, "selectorText") = NSString;
overload externalInstanceMethod(#DOMCSSPageRule, "setSelectorText:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSPageRule, "style") = DOMCSSStyleDeclaration;

record DOMCSSPrimitiveValue = externalClass(DOMCSSValue);
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "setFloatValue:floatValue:") = Void, UShort, Float;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "getFloatValue:") = Float, UShort;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "setStringValue:stringValue:") = Void, UShort, NSString;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "getStringValue") = NSString;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "getCounterValue") = DOMCounter;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "getRectValue") = DOMRect;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "getRGBColorValue") = DOMRGBColor;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "primitiveType") = UShort;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "setFloatValue::") = Void, UShort, Float;
overload externalInstanceMethod(#DOMCSSPrimitiveValue, "setStringValue::") = Void, UShort, NSString;

record DOMCSSRule = externalClass(DOMObject);
overload externalInstanceMethod(#DOMCSSRule, "type") = UShort;
overload externalInstanceMethod(#DOMCSSRule, "cssText") = NSString;
overload externalInstanceMethod(#DOMCSSRule, "setCssText:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSRule, "parentStyleSheet") = DOMCSSStyleSheet;
overload externalInstanceMethod(#DOMCSSRule, "parentRule") = DOMCSSRule;

record DOMCSSRuleList = externalClass(DOMObject);
overload externalInstanceMethod(#DOMCSSRuleList, "item:") = DOMCSSRule, UInt;
overload externalInstanceMethod(#DOMCSSRuleList, "length") = UInt;

record DOMCSSStyleDeclaration = externalClass(DOMObject);
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "getPropertyValue:") = NSString, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "getPropertyCSSValue:") = DOMCSSValue, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "removeProperty:") = NSString, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "getPropertyPriority:") = NSString, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setProperty:value:priority:") = Void, NSString, NSString, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "item:") = NSString, UInt;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "getPropertyShorthand:") = NSString, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "isPropertyImplicit:") = Bool, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "cssText") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCssText:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "length") = UInt;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "parentRule") = DOMCSSRule;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setProperty:::") = Void, NSString, NSString, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "azimuth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setAzimuth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "background") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackground:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundAttachment") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundAttachment:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundColor") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundColor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundImage") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundImage:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundPosition") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundPosition:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "backgroundRepeat") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBackgroundRepeat:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "border") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorder:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderCollapse") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderCollapse:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderColor") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderColor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderSpacing") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderSpacing:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderStyle") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderStyle:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderTop") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderTop:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderRight") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderRight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderBottom") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderBottom:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderLeft") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderLeft:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderTopColor") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderTopColor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderRightColor") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderRightColor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderBottomColor") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderBottomColor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderLeftColor") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderLeftColor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderTopStyle") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderTopStyle:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderRightStyle") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderRightStyle:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderBottomStyle") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderBottomStyle:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderLeftStyle") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderLeftStyle:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderTopWidth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderTopWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderRightWidth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderRightWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderBottomWidth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderBottomWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderLeftWidth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderLeftWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "borderWidth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBorderWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "bottom") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setBottom:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "captionSide") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCaptionSide:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "clear") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setClear:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "clip") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setClip:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "color") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setColor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "content") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setContent:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "counterIncrement") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCounterIncrement:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "counterReset") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCounterReset:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "cue") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCue:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "cueAfter") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCueAfter:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "cueBefore") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCueBefore:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "cursor") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCursor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "direction") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setDirection:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "display") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setDisplay:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "elevation") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setElevation:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "emptyCells") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setEmptyCells:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "cssFloat") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setCssFloat:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "font") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setFont:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "fontFamily") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontFamily:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "fontSize") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontSize:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "fontSizeAdjust") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontSizeAdjust:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "fontStretch") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontStretch:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "fontStyle") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontStyle:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "fontVariant") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontVariant:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "fontWeight") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setFontWeight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "height") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "left") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setLeft:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "letterSpacing") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setLetterSpacing:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "lineHeight") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setLineHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "listStyle") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setListStyle:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "listStyleImage") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setListStyleImage:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "listStylePosition") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setListStylePosition:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "listStyleType") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setListStyleType:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "margin") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMargin:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "marginTop") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarginTop:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "marginRight") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarginRight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "marginBottom") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarginBottom:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "marginLeft") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarginLeft:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "markerOffset") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarkerOffset:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "marks") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMarks:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "maxHeight") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMaxHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "maxWidth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMaxWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "minHeight") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMinHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "minWidth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setMinWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "orphans") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setOrphans:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "outline") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setOutline:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "outlineColor") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setOutlineColor:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "outlineStyle") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setOutlineStyle:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "outlineWidth") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setOutlineWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "overflow") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setOverflow:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "padding") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPadding:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "paddingTop") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPaddingTop:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "paddingRight") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPaddingRight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "paddingBottom") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPaddingBottom:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "paddingLeft") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPaddingLeft:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "page") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPage:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "pageBreakAfter") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPageBreakAfter:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "pageBreakBefore") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPageBreakBefore:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "pageBreakInside") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPageBreakInside:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "pause") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPause:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "pauseAfter") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPauseAfter:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "pauseBefore") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPauseBefore:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "pitch") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPitch:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "pitchRange") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPitchRange:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "playDuring") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPlayDuring:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "position") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setPosition:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "quotes") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setQuotes:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "richness") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setRichness:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "right") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setRight:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "size") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setSize:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "speak") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeak:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "speakHeader") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeakHeader:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "speakNumeral") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeakNumeral:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "speakPunctuation") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeakPunctuation:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "speechRate") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setSpeechRate:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "stress") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setStress:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "tableLayout") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setTableLayout:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "textAlign") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "textDecoration") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextDecoration:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "textIndent") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextIndent:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "textShadow") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextShadow:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "textTransform") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setTextTransform:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "top") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setTop:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "unicodeBidi") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setUnicodeBidi:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "verticalAlign") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setVerticalAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "visibility") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setVisibility:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "voiceFamily") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setVoiceFamily:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "volume") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setVolume:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "whiteSpace") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setWhiteSpace:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "widows") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setWidows:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "width") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "wordSpacing") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setWordSpacing:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "zIndex") = NSString;
overload externalInstanceMethod(#DOMCSSStyleDeclaration, "setZIndex:") = Void, NSString;

record DOMCSSStyleRule = externalClass(DOMCSSRule);
overload externalInstanceMethod(#DOMCSSStyleRule, "selectorText") = NSString;
overload externalInstanceMethod(#DOMCSSStyleRule, "setSelectorText:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSStyleRule, "style") = DOMCSSStyleDeclaration;

record DOMCSSStyleSheet = externalClass(DOMStyleSheet);
overload externalInstanceMethod(#DOMCSSStyleSheet, "insertRule:index:") = UInt, NSString, UInt;
overload externalInstanceMethod(#DOMCSSStyleSheet, "deleteRule:") = Void, UInt;
overload externalInstanceMethod(#DOMCSSStyleSheet, "addRule:style:index:") = Int, NSString, NSString, UInt;
overload externalInstanceMethod(#DOMCSSStyleSheet, "removeRule:") = Void, UInt;
overload externalInstanceMethod(#DOMCSSStyleSheet, "ownerRule") = DOMCSSRule;
overload externalInstanceMethod(#DOMCSSStyleSheet, "cssRules") = DOMCSSRuleList;
overload externalInstanceMethod(#DOMCSSStyleSheet, "rules") = DOMCSSRuleList;
overload externalInstanceMethod(#DOMCSSStyleSheet, "insertRule::") = UInt, NSString, UInt;

record DOMCSSUnknownRule = externalClass(DOMCSSRule);

record DOMCSSValue = externalClass(DOMObject);
overload externalInstanceMethod(#DOMCSSValue, "cssText") = NSString;
overload externalInstanceMethod(#DOMCSSValue, "setCssText:") = Void, NSString;
overload externalInstanceMethod(#DOMCSSValue, "cssValueType") = UShort;

record DOMCSSValueList = externalClass(DOMCSSValue);
overload externalInstanceMethod(#DOMCSSValueList, "item:") = DOMCSSValue, UInt;
overload externalInstanceMethod(#DOMCSSValueList, "length") = UInt;

record DOMCharacterData = externalClass(DOMNode);
overload externalInstanceMethod(#DOMCharacterData, "substringData:length:") = NSString, UInt, UInt;
overload externalInstanceMethod(#DOMCharacterData, "appendData:") = Void, NSString;
overload externalInstanceMethod(#DOMCharacterData, "insertData:data:") = Void, UInt, NSString;
overload externalInstanceMethod(#DOMCharacterData, "deleteData:length:") = Void, UInt, UInt;
overload externalInstanceMethod(#DOMCharacterData, "replaceData:length:data:") = Void, UInt, UInt, NSString;
overload externalInstanceMethod(#DOMCharacterData, "data") = NSString;
overload externalInstanceMethod(#DOMCharacterData, "setData:") = Void, NSString;
overload externalInstanceMethod(#DOMCharacterData, "length") = UInt;
overload externalInstanceMethod(#DOMCharacterData, "substringData::") = NSString, UInt, UInt;
overload externalInstanceMethod(#DOMCharacterData, "insertData::") = Void, UInt, NSString;
overload externalInstanceMethod(#DOMCharacterData, "deleteData::") = Void, UInt, UInt;
overload externalInstanceMethod(#DOMCharacterData, "replaceData:::") = Void, UInt, UInt, NSString;

record DOMComment = externalClass(DOMCharacterData);

record DOMCounter = externalClass(DOMObject);
overload externalInstanceMethod(#DOMCounter, "identifier") = NSString;
overload externalInstanceMethod(#DOMCounter, "listStyle") = NSString;
overload externalInstanceMethod(#DOMCounter, "separator") = NSString;

record DOMDocument = externalClass(DOMNode);
overload externalInstanceMethod(#DOMDocument, "createElement:") = DOMElement, NSString;
overload externalInstanceMethod(#DOMDocument, "createDocumentFragment") = DOMDocumentFragment;
overload externalInstanceMethod(#DOMDocument, "createTextNode:") = DOMText, NSString;
overload externalInstanceMethod(#DOMDocument, "createComment:") = DOMComment, NSString;
overload externalInstanceMethod(#DOMDocument, "createCDATASection:") = DOMCDATASection, NSString;
overload externalInstanceMethod(#DOMDocument, "createProcessingInstruction:data:") = DOMProcessingInstruction, NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "createAttribute:") = DOMAttr, NSString;
overload externalInstanceMethod(#DOMDocument, "createEntityReference:") = DOMEntityReference, NSString;
overload externalInstanceMethod(#DOMDocument, "getElementsByTagName:") = DOMNodeList, NSString;
overload externalInstanceMethod(#DOMDocument, "importNode:deep:") = DOMNode, DOMNode, Bool;
overload externalInstanceMethod(#DOMDocument, "createElementNS:qualifiedName:") = DOMElement, NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "createAttributeNS:qualifiedName:") = DOMAttr, NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "getElementsByTagNameNS:localName:") = DOMNodeList, NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "getElementById:") = DOMElement, NSString;
overload externalInstanceMethod(#DOMDocument, "adoptNode:") = DOMNode, DOMNode;
overload externalInstanceMethod(#DOMDocument, "createEvent:") = DOMEvent, NSString;
overload externalInstanceMethod(#DOMDocument, "createRange") = DOMRange;
overload externalInstanceMethod(#DOMDocument, "createNodeIterator:whatToShow:filter:expandEntityReferences:") = DOMNodeIterator, DOMNode, UInt, Id, Bool;
overload externalInstanceMethod(#DOMDocument, "createTreeWalker:whatToShow:filter:expandEntityReferences:") = DOMTreeWalker, DOMNode, UInt, Id, Bool;
overload externalInstanceMethod(#DOMDocument, "getOverrideStyle:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload externalInstanceMethod(#DOMDocument, "createExpression:resolver:") = DOMXPathExpression, NSString, Id;
overload externalInstanceMethod(#DOMDocument, "createNSResolver:") = Id, DOMNode;
overload externalInstanceMethod(#DOMDocument, "evaluate:contextNode:resolver:type:inResult:") = DOMXPathResult, NSString, DOMNode, Id, UShort, DOMXPathResult;
overload externalInstanceMethod(#DOMDocument, "execCommand:userInterface:value:") = Bool, NSString, Bool, NSString;
overload externalInstanceMethod(#DOMDocument, "execCommand:userInterface:") = Bool, NSString, Bool;
overload externalInstanceMethod(#DOMDocument, "execCommand:") = Bool, NSString;
overload externalInstanceMethod(#DOMDocument, "queryCommandEnabled:") = Bool, NSString;
overload externalInstanceMethod(#DOMDocument, "queryCommandIndeterm:") = Bool, NSString;
overload externalInstanceMethod(#DOMDocument, "queryCommandState:") = Bool, NSString;
overload externalInstanceMethod(#DOMDocument, "queryCommandSupported:") = Bool, NSString;
overload externalInstanceMethod(#DOMDocument, "queryCommandValue:") = NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "getElementsByName:") = DOMNodeList, NSString;
overload externalInstanceMethod(#DOMDocument, "elementFromPoint:y:") = DOMElement, Int, Int;
overload externalInstanceMethod(#DOMDocument, "createCSSStyleDeclaration") = DOMCSSStyleDeclaration;
overload externalInstanceMethod(#DOMDocument, "getComputedStyle:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload externalInstanceMethod(#DOMDocument, "getMatchedCSSRules:pseudoElement:") = DOMCSSRuleList, DOMElement, NSString;
overload externalInstanceMethod(#DOMDocument, "getMatchedCSSRules:pseudoElement:authorOnly:") = DOMCSSRuleList, DOMElement, NSString, Bool;
overload externalInstanceMethod(#DOMDocument, "getElementsByClassName:") = DOMNodeList, NSString;
overload externalInstanceMethod(#DOMDocument, "querySelector:") = DOMElement, NSString;
overload externalInstanceMethod(#DOMDocument, "querySelectorAll:") = DOMNodeList, NSString;
overload externalInstanceMethod(#DOMDocument, "doctype") = DOMDocumentType;
overload externalInstanceMethod(#DOMDocument, "implementation") = DOMImplementation;
overload externalInstanceMethod(#DOMDocument, "documentElement") = DOMElement;
overload externalInstanceMethod(#DOMDocument, "inputEncoding") = NSString;
overload externalInstanceMethod(#DOMDocument, "xmlEncoding") = NSString;
overload externalInstanceMethod(#DOMDocument, "xmlVersion") = NSString;
overload externalInstanceMethod(#DOMDocument, "setXmlVersion:") = Void, NSString;
overload externalInstanceMethod(#DOMDocument, "xmlStandalone") = Bool;
overload externalInstanceMethod(#DOMDocument, "setXmlStandalone:") = Void, Bool;
overload externalInstanceMethod(#DOMDocument, "documentURI") = NSString;
overload externalInstanceMethod(#DOMDocument, "setDocumentURI:") = Void, NSString;
overload externalInstanceMethod(#DOMDocument, "defaultView") = DOMAbstractView;
overload externalInstanceMethod(#DOMDocument, "styleSheets") = DOMStyleSheetList;
overload externalInstanceMethod(#DOMDocument, "title") = NSString;
overload externalInstanceMethod(#DOMDocument, "setTitle:") = Void, NSString;
overload externalInstanceMethod(#DOMDocument, "referrer") = NSString;
overload externalInstanceMethod(#DOMDocument, "domain") = NSString;
overload externalInstanceMethod(#DOMDocument, "URL") = NSString;
overload externalInstanceMethod(#DOMDocument, "cookie") = NSString;
overload externalInstanceMethod(#DOMDocument, "setCookie:") = Void, NSString;
overload externalInstanceMethod(#DOMDocument, "body") = DOMHTMLElement;
overload externalInstanceMethod(#DOMDocument, "setBody:") = Void, DOMHTMLElement;
overload externalInstanceMethod(#DOMDocument, "images") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMDocument, "applets") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMDocument, "links") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMDocument, "forms") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMDocument, "anchors") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMDocument, "lastModified") = NSString;
overload externalInstanceMethod(#DOMDocument, "charset") = NSString;
overload externalInstanceMethod(#DOMDocument, "setCharset:") = Void, NSString;
overload externalInstanceMethod(#DOMDocument, "defaultCharset") = NSString;
overload externalInstanceMethod(#DOMDocument, "readyState") = NSString;
overload externalInstanceMethod(#DOMDocument, "characterSet") = NSString;
overload externalInstanceMethod(#DOMDocument, "preferredStylesheetSet") = NSString;
overload externalInstanceMethod(#DOMDocument, "selectedStylesheetSet") = NSString;
overload externalInstanceMethod(#DOMDocument, "setSelectedStylesheetSet:") = Void, NSString;
overload externalInstanceMethod(#DOMDocument, "createProcessingInstruction::") = DOMProcessingInstruction, NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "importNode::") = DOMNode, DOMNode, Bool;
overload externalInstanceMethod(#DOMDocument, "createElementNS::") = DOMElement, NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "createAttributeNS::") = DOMAttr, NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "getElementsByTagNameNS::") = DOMNodeList, NSString, NSString;
overload externalInstanceMethod(#DOMDocument, "createNodeIterator::::") = DOMNodeIterator, DOMNode, UInt, Id, Bool;
overload externalInstanceMethod(#DOMDocument, "createTreeWalker::::") = DOMTreeWalker, DOMNode, UInt, Id, Bool;
overload externalInstanceMethod(#DOMDocument, "getOverrideStyle::") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload externalInstanceMethod(#DOMDocument, "createExpression::") = DOMXPathExpression, NSString, Id;
overload externalInstanceMethod(#DOMDocument, "evaluate:::::") = DOMXPathResult, NSString, DOMNode, Id, UShort, DOMXPathResult;
overload externalInstanceMethod(#DOMDocument, "getComputedStyle::") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload externalInstanceMethod(#DOMDocument, "webFrame") = WebFrame;
overload externalInstanceMethod(#DOMDocument, "URLWithAttributeString:") = NSURL, NSString;

record DOMDocumentFragment = externalClass(DOMNode);

record DOMDocumentType = externalClass(DOMNode);
overload externalInstanceMethod(#DOMDocumentType, "name") = NSString;
overload externalInstanceMethod(#DOMDocumentType, "entities") = DOMNamedNodeMap;
overload externalInstanceMethod(#DOMDocumentType, "notations") = DOMNamedNodeMap;
overload externalInstanceMethod(#DOMDocumentType, "publicId") = NSString;
overload externalInstanceMethod(#DOMDocumentType, "systemId") = NSString;
overload externalInstanceMethod(#DOMDocumentType, "internalSubset") = NSString;

record DOMElement = externalClass(DOMNode);
overload externalInstanceMethod(#DOMElement, "getAttribute:") = NSString, NSString;
overload externalInstanceMethod(#DOMElement, "setAttribute:value:") = Void, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "removeAttribute:") = Void, NSString;
overload externalInstanceMethod(#DOMElement, "getAttributeNode:") = DOMAttr, NSString;
overload externalInstanceMethod(#DOMElement, "setAttributeNode:") = DOMAttr, DOMAttr;
overload externalInstanceMethod(#DOMElement, "removeAttributeNode:") = DOMAttr, DOMAttr;
overload externalInstanceMethod(#DOMElement, "getElementsByTagName:") = DOMNodeList, NSString;
overload externalInstanceMethod(#DOMElement, "getAttributeNS:localName:") = NSString, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "setAttributeNS:qualifiedName:value:") = Void, NSString, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "removeAttributeNS:localName:") = Void, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "getElementsByTagNameNS:localName:") = DOMNodeList, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "getAttributeNodeNS:localName:") = DOMAttr, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "setAttributeNodeNS:") = DOMAttr, DOMAttr;
overload externalInstanceMethod(#DOMElement, "hasAttribute:") = Bool, NSString;
overload externalInstanceMethod(#DOMElement, "hasAttributeNS:localName:") = Bool, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "focus") = Void;
overload externalInstanceMethod(#DOMElement, "blur") = Void;
overload externalInstanceMethod(#DOMElement, "scrollIntoView:") = Void, Bool;
overload externalInstanceMethod(#DOMElement, "contains:") = Bool, DOMElement;
overload externalInstanceMethod(#DOMElement, "scrollIntoViewIfNeeded:") = Void, Bool;
overload externalInstanceMethod(#DOMElement, "scrollByLines:") = Void, Int;
overload externalInstanceMethod(#DOMElement, "scrollByPages:") = Void, Int;
overload externalInstanceMethod(#DOMElement, "getElementsByClassName:") = DOMNodeList, NSString;
overload externalInstanceMethod(#DOMElement, "querySelector:") = DOMElement, NSString;
overload externalInstanceMethod(#DOMElement, "querySelectorAll:") = DOMNodeList, NSString;
overload externalInstanceMethod(#DOMElement, "tagName") = NSString;
overload externalInstanceMethod(#DOMElement, "style") = DOMCSSStyleDeclaration;
overload externalInstanceMethod(#DOMElement, "offsetLeft") = Int;
overload externalInstanceMethod(#DOMElement, "offsetTop") = Int;
overload externalInstanceMethod(#DOMElement, "offsetWidth") = Int;
overload externalInstanceMethod(#DOMElement, "offsetHeight") = Int;
overload externalInstanceMethod(#DOMElement, "offsetParent") = DOMElement;
overload externalInstanceMethod(#DOMElement, "clientLeft") = Int;
overload externalInstanceMethod(#DOMElement, "clientTop") = Int;
overload externalInstanceMethod(#DOMElement, "clientWidth") = Int;
overload externalInstanceMethod(#DOMElement, "clientHeight") = Int;
overload externalInstanceMethod(#DOMElement, "scrollLeft") = Int;
overload externalInstanceMethod(#DOMElement, "setScrollLeft:") = Void, Int;
overload externalInstanceMethod(#DOMElement, "scrollTop") = Int;
overload externalInstanceMethod(#DOMElement, "setScrollTop:") = Void, Int;
overload externalInstanceMethod(#DOMElement, "scrollWidth") = Int;
overload externalInstanceMethod(#DOMElement, "scrollHeight") = Int;
overload externalInstanceMethod(#DOMElement, "firstElementChild") = DOMElement;
overload externalInstanceMethod(#DOMElement, "lastElementChild") = DOMElement;
overload externalInstanceMethod(#DOMElement, "previousElementSibling") = DOMElement;
overload externalInstanceMethod(#DOMElement, "nextElementSibling") = DOMElement;
overload externalInstanceMethod(#DOMElement, "childElementCount") = UInt;
overload externalInstanceMethod(#DOMElement, "innerText") = NSString;
overload externalInstanceMethod(#DOMElement, "setAttribute::") = Void, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "getAttributeNS::") = NSString, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "setAttributeNS:::") = Void, NSString, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "removeAttributeNS::") = Void, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "getElementsByTagNameNS::") = DOMNodeList, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "getAttributeNodeNS::") = DOMAttr, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "hasAttributeNS::") = Bool, NSString, NSString;
overload externalInstanceMethod(#DOMElement, "image") = NSImage;

record DOMEntity = externalClass(DOMNode);
overload externalInstanceMethod(#DOMEntity, "publicId") = NSString;
overload externalInstanceMethod(#DOMEntity, "systemId") = NSString;
overload externalInstanceMethod(#DOMEntity, "notationName") = NSString;

record DOMEntityReference = externalClass(DOMNode);

record DOMEvent = externalClass(DOMObject);
overload externalInstanceMethod(#DOMEvent, "stopPropagation") = Void;
overload externalInstanceMethod(#DOMEvent, "preventDefault") = Void;
overload externalInstanceMethod(#DOMEvent, "initEvent:canBubbleArg:cancelableArg:") = Void, NSString, Bool, Bool;
overload externalInstanceMethod(#DOMEvent, "type") = NSString;
overload externalInstanceMethod(#DOMEvent, "target") = Id;
overload externalInstanceMethod(#DOMEvent, "currentTarget") = Id;
overload externalInstanceMethod(#DOMEvent, "eventPhase") = UShort;
overload externalInstanceMethod(#DOMEvent, "bubbles") = Bool;
overload externalInstanceMethod(#DOMEvent, "cancelable") = Bool;
overload externalInstanceMethod(#DOMEvent, "timeStamp") = UInt64;
overload externalInstanceMethod(#DOMEvent, "srcElement") = Id;
overload externalInstanceMethod(#DOMEvent, "returnValue") = Bool;
overload externalInstanceMethod(#DOMEvent, "setReturnValue:") = Void, Bool;
overload externalInstanceMethod(#DOMEvent, "cancelBubble") = Bool;
overload externalInstanceMethod(#DOMEvent, "setCancelBubble:") = Void, Bool;
overload externalInstanceMethod(#DOMEvent, "initEvent:::") = Void, NSString, Bool, Bool;

record DOMFile = externalClass(DOMBlob);
overload externalInstanceMethod(#DOMFile, "name") = NSString;
overload externalInstanceMethod(#DOMFile, "fileName") = NSString;
overload externalInstanceMethod(#DOMFile, "fileSize") = UInt64;

record DOMFileList = externalClass(DOMObject);
overload externalInstanceMethod(#DOMFileList, "item:") = DOMFile, UInt;
overload externalInstanceMethod(#DOMFileList, "length") = UInt;

record DOMHTMLAnchorElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLAnchorElement, "accessKey") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setAccessKey:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "charset") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setCharset:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "coords") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setCoords:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "href") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setHref:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "hreflang") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setHreflang:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "rel") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setRel:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "rev") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setRev:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "shape") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setShape:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "target") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setTarget:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "setType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "hashName") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "host") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "hostname") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "pathname") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "port") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "protocol") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "search") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "text") = NSString;
overload externalInstanceMethod(#DOMHTMLAnchorElement, "absoluteLinkURL") = NSURL;

record DOMHTMLAppletElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLAppletElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "alt") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setAlt:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "archive") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setArchive:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "code") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setCode:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "codeBase") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setCodeBase:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "height") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "hspace") = Int;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setHspace:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLAppletElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "object") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setObject:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "vspace") = Int;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setVspace:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLAppletElement, "width") = NSString;
overload externalInstanceMethod(#DOMHTMLAppletElement, "setWidth:") = Void, NSString;

record DOMHTMLAreaElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLAreaElement, "accessKey") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "setAccessKey:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "alt") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "setAlt:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "coords") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "setCoords:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "href") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "setHref:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "noHref") = Bool;
overload externalInstanceMethod(#DOMHTMLAreaElement, "setNoHref:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLAreaElement, "shape") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "setShape:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "target") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "setTarget:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "hashName") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "host") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "hostname") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "pathname") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "port") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "protocol") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "search") = NSString;
overload externalInstanceMethod(#DOMHTMLAreaElement, "absoluteLinkURL") = NSURL;

record DOMHTMLBRElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLBRElement, "clear") = NSString;
overload externalInstanceMethod(#DOMHTMLBRElement, "setClear:") = Void, NSString;

record DOMHTMLBaseElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLBaseElement, "href") = NSString;
overload externalInstanceMethod(#DOMHTMLBaseElement, "setHref:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLBaseElement, "target") = NSString;
overload externalInstanceMethod(#DOMHTMLBaseElement, "setTarget:") = Void, NSString;

record DOMHTMLBaseFontElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLBaseFontElement, "color") = NSString;
overload externalInstanceMethod(#DOMHTMLBaseFontElement, "setColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLBaseFontElement, "face") = NSString;
overload externalInstanceMethod(#DOMHTMLBaseFontElement, "setFace:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLBaseFontElement, "size") = NSString;
overload externalInstanceMethod(#DOMHTMLBaseFontElement, "setSize:") = Void, NSString;

record DOMHTMLBodyElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLBodyElement, "aLink") = NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "setALink:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "background") = NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "setBackground:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "bgColor") = NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "setBgColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "link") = NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "setLink:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "text") = NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "setText:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "vLink") = NSString;
overload externalInstanceMethod(#DOMHTMLBodyElement, "setVLink:") = Void, NSString;

record DOMHTMLButtonElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLButtonElement, "click") = Void;
overload externalInstanceMethod(#DOMHTMLButtonElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLButtonElement, "accessKey") = NSString;
overload externalInstanceMethod(#DOMHTMLButtonElement, "setAccessKey:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLButtonElement, "disabled") = Bool;
overload externalInstanceMethod(#DOMHTMLButtonElement, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLButtonElement, "autofocus") = Bool;
overload externalInstanceMethod(#DOMHTMLButtonElement, "setAutofocus:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLButtonElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLButtonElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLButtonElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLButtonElement, "value") = NSString;
overload externalInstanceMethod(#DOMHTMLButtonElement, "setValue:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLButtonElement, "willValidate") = Bool;

record DOMHTMLCollection = externalClass(DOMObject);
overload externalInstanceMethod(#DOMHTMLCollection, "item:") = DOMNode, UInt;
overload externalInstanceMethod(#DOMHTMLCollection, "namedItem:") = DOMNode, NSString;
overload externalInstanceMethod(#DOMHTMLCollection, "tags:") = DOMNodeList, NSString;
overload externalInstanceMethod(#DOMHTMLCollection, "length") = UInt;

record DOMHTMLDListElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLDListElement, "compact") = Bool;
overload externalInstanceMethod(#DOMHTMLDListElement, "setCompact:") = Void, Bool;

record DOMHTMLDirectoryElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLDirectoryElement, "compact") = Bool;
overload externalInstanceMethod(#DOMHTMLDirectoryElement, "setCompact:") = Void, Bool;

record DOMHTMLDivElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLDivElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLDivElement, "setAlign:") = Void, NSString;

record DOMHTMLDocument = externalClass(DOMDocument);
overload externalInstanceMethod(#DOMHTMLDocument, "open") = Void;
overload externalInstanceMethod(#DOMHTMLDocument, "close") = Void;
overload externalInstanceMethod(#DOMHTMLDocument, "write:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "writeln:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "clear") = Void;
overload externalInstanceMethod(#DOMHTMLDocument, "captureEvents") = Void;
overload externalInstanceMethod(#DOMHTMLDocument, "releaseEvents") = Void;
overload externalInstanceMethod(#DOMHTMLDocument, "hasFocus") = Bool;
overload externalInstanceMethod(#DOMHTMLDocument, "embeds") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLDocument, "plugins") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLDocument, "scripts") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLDocument, "width") = Int;
overload externalInstanceMethod(#DOMHTMLDocument, "height") = Int;
overload externalInstanceMethod(#DOMHTMLDocument, "dir") = NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "setDir:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "designMode") = NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "setDesignMode:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "compatMode") = NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "activeElement") = DOMElement;
overload externalInstanceMethod(#DOMHTMLDocument, "bgColor") = NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "setBgColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "fgColor") = NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "setFgColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "alinkColor") = NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "setAlinkColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "linkColor") = NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "setLinkColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "vlinkColor") = NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "setVlinkColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLDocument, "createDocumentFragmentWithMarkupString:baseURL:") = DOMDocumentFragment, NSString, NSURL;
overload externalInstanceMethod(#DOMHTMLDocument, "createDocumentFragmentWithText:") = DOMDocumentFragment, NSString;

record DOMHTMLElement = externalClass(DOMElement);
overload externalInstanceMethod(#DOMHTMLElement, "idName") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setIdName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "title") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setTitle:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "lang") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setLang:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "dir") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setDir:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "className") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setClassName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "tabIndex") = Int;
overload externalInstanceMethod(#DOMHTMLElement, "setTabIndex:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLElement, "innerHTML") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setInnerHTML:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "innerText") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setInnerText:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "outerHTML") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setOuterHTML:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "outerText") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setOuterText:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "children") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLElement, "contentEditable") = NSString;
overload externalInstanceMethod(#DOMHTMLElement, "setContentEditable:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLElement, "isContentEditable") = Bool;
overload externalInstanceMethod(#DOMHTMLElement, "titleDisplayString") = NSString;

record DOMHTMLEmbedElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLEmbedElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "height") = Int;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "setHeight:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "src") = NSString;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "setSrc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "setType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "width") = Int;
overload externalInstanceMethod(#DOMHTMLEmbedElement, "setWidth:") = Void, Int;

record DOMHTMLFieldSetElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLFieldSetElement, "form") = DOMHTMLFormElement;

record DOMHTMLFontElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLFontElement, "color") = NSString;
overload externalInstanceMethod(#DOMHTMLFontElement, "setColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFontElement, "face") = NSString;
overload externalInstanceMethod(#DOMHTMLFontElement, "setFace:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFontElement, "size") = NSString;
overload externalInstanceMethod(#DOMHTMLFontElement, "setSize:") = Void, NSString;

record DOMHTMLFormElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLFormElement, "submit") = Void;
overload externalInstanceMethod(#DOMHTMLFormElement, "reset") = Void;
overload externalInstanceMethod(#DOMHTMLFormElement, "elements") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLFormElement, "length") = Int;
overload externalInstanceMethod(#DOMHTMLFormElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "acceptCharset") = NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "setAcceptCharset:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "action") = NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "setAction:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "encoding") = NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "setEncoding:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "enctype") = NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "setEnctype:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "method") = NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "setMethod:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "target") = NSString;
overload externalInstanceMethod(#DOMHTMLFormElement, "setTarget:") = Void, NSString;

record DOMHTMLFrameElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLFrameElement, "frameBorder") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setFrameBorder:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "longDesc") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setLongDesc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "marginHeight") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setMarginHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "marginWidth") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setMarginWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "noResize") = Bool;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setNoResize:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLFrameElement, "scrolling") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setScrolling:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "src") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setSrc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "contentDocument") = DOMDocument;
overload externalInstanceMethod(#DOMHTMLFrameElement, "contentWindow") = DOMAbstractView;
overload externalInstanceMethod(#DOMHTMLFrameElement, "location") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "setLocation:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameElement, "width") = Int;
overload externalInstanceMethod(#DOMHTMLFrameElement, "height") = Int;
overload externalInstanceMethod(#DOMHTMLFrameElement, "contentFrame") = WebFrame;

record DOMHTMLFrameSetElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLFrameSetElement, "cols") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameSetElement, "setCols:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLFrameSetElement, "rows") = NSString;
overload externalInstanceMethod(#DOMHTMLFrameSetElement, "setRows:") = Void, NSString;

record DOMHTMLHRElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLHRElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLHRElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLHRElement, "noShade") = Bool;
overload externalInstanceMethod(#DOMHTMLHRElement, "setNoShade:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLHRElement, "size") = NSString;
overload externalInstanceMethod(#DOMHTMLHRElement, "setSize:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLHRElement, "width") = NSString;
overload externalInstanceMethod(#DOMHTMLHRElement, "setWidth:") = Void, NSString;

record DOMHTMLHeadElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLHeadElement, "profile") = NSString;
overload externalInstanceMethod(#DOMHTMLHeadElement, "setProfile:") = Void, NSString;

record DOMHTMLHeadingElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLHeadingElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLHeadingElement, "setAlign:") = Void, NSString;

record DOMHTMLHtmlElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLHtmlElement, "version") = NSString;
overload externalInstanceMethod(#DOMHTMLHtmlElement, "setVersion:") = Void, NSString;

record DOMHTMLIFrameElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLIFrameElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "frameBorder") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setFrameBorder:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "height") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "longDesc") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setLongDesc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "marginHeight") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setMarginHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "marginWidth") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setMarginWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "scrolling") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setScrolling:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "src") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setSrc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "width") = NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "setWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "contentDocument") = DOMDocument;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "contentWindow") = DOMAbstractView;
overload externalInstanceMethod(#DOMHTMLIFrameElement, "contentFrame") = WebFrame;

record DOMHTMLImageElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLImageElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "alt") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "setAlt:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "border") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "setBorder:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "height") = Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "setHeight:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "hspace") = Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "setHspace:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "isMap") = Bool;
overload externalInstanceMethod(#DOMHTMLImageElement, "setIsMap:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLImageElement, "longDesc") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "setLongDesc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "src") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "setSrc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "useMap") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "setUseMap:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "vspace") = Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "setVspace:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "width") = Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "setWidth:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "complete") = Bool;
overload externalInstanceMethod(#DOMHTMLImageElement, "lowsrc") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "setLowsrc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "naturalHeight") = Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "naturalWidth") = Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "x") = Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "y") = Int;
overload externalInstanceMethod(#DOMHTMLImageElement, "altDisplayString") = NSString;
overload externalInstanceMethod(#DOMHTMLImageElement, "absoluteImageURL") = NSURL;

record DOMHTMLInputElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLInputElement, "select") = Void;
overload externalInstanceMethod(#DOMHTMLInputElement, "click") = Void;
overload externalInstanceMethod(#DOMHTMLInputElement, "setSelectionRange:end:") = Void, Int, Int;
overload externalInstanceMethod(#DOMHTMLInputElement, "defaultValue") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setDefaultValue:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "defaultChecked") = Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "setDefaultChecked:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLInputElement, "accept") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setAccept:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "accessKey") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setAccessKey:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "alt") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setAlt:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "checked") = Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "setChecked:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "disabled") = Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "autofocus") = Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "setAutofocus:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "maxLength") = Int;
overload externalInstanceMethod(#DOMHTMLInputElement, "setMaxLength:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLInputElement, "multiple") = Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "setMultiple:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "readOnly") = Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "setReadOnly:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "size") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setSize:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "src") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setSrc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "useMap") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setUseMap:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "value") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "setValue:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "willValidate") = Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "indeterminate") = Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "setIndeterminate:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLInputElement, "selectionStart") = Int;
overload externalInstanceMethod(#DOMHTMLInputElement, "setSelectionStart:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLInputElement, "selectionEnd") = Int;
overload externalInstanceMethod(#DOMHTMLInputElement, "setSelectionEnd:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLInputElement, "altDisplayString") = NSString;
overload externalInstanceMethod(#DOMHTMLInputElement, "absoluteImageURL") = NSURL;
overload externalInstanceMethod(#DOMHTMLInputElement, "files") = DOMFileList;

record DOMHTMLIsIndexElement = externalClass(DOMHTMLInputElement);
overload externalInstanceMethod(#DOMHTMLIsIndexElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLIsIndexElement, "prompt") = NSString;
overload externalInstanceMethod(#DOMHTMLIsIndexElement, "setPrompt:") = Void, NSString;

record DOMHTMLLIElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLLIElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLLIElement, "setType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLIElement, "value") = Int;
overload externalInstanceMethod(#DOMHTMLLIElement, "setValue:") = Void, Int;

record DOMHTMLLabelElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLLabelElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLLabelElement, "accessKey") = NSString;
overload externalInstanceMethod(#DOMHTMLLabelElement, "setAccessKey:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLabelElement, "htmlFor") = NSString;
overload externalInstanceMethod(#DOMHTMLLabelElement, "setHtmlFor:") = Void, NSString;

record DOMHTMLLegendElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLLegendElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLLegendElement, "accessKey") = NSString;
overload externalInstanceMethod(#DOMHTMLLegendElement, "setAccessKey:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLegendElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLLegendElement, "setAlign:") = Void, NSString;

record DOMHTMLLinkElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLLinkElement, "disabled") = Bool;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLLinkElement, "charset") = NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setCharset:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "href") = NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setHref:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "hreflang") = NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setHreflang:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "media") = NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setMedia:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "rel") = NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setRel:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "rev") = NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setRev:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "target") = NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setTarget:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "setType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLLinkElement, "sheet") = DOMStyleSheet;
overload externalInstanceMethod(#DOMHTMLLinkElement, "absoluteLinkURL") = NSURL;

record DOMHTMLMapElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLMapElement, "areas") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLMapElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLMapElement, "setName:") = Void, NSString;

record DOMHTMLMarqueeElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLMarqueeElement, "start") = Void;
overload externalInstanceMethod(#DOMHTMLMarqueeElement, "stop") = Void;

record DOMHTMLMenuElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLMenuElement, "compact") = Bool;
overload externalInstanceMethod(#DOMHTMLMenuElement, "setCompact:") = Void, Bool;

record DOMHTMLMetaElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLMetaElement, "content") = NSString;
overload externalInstanceMethod(#DOMHTMLMetaElement, "setContent:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLMetaElement, "httpEquiv") = NSString;
overload externalInstanceMethod(#DOMHTMLMetaElement, "setHttpEquiv:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLMetaElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLMetaElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLMetaElement, "scheme") = NSString;
overload externalInstanceMethod(#DOMHTMLMetaElement, "setScheme:") = Void, NSString;

record DOMHTMLModElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLModElement, "cite") = NSString;
overload externalInstanceMethod(#DOMHTMLModElement, "setCite:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLModElement, "dateTime") = NSString;
overload externalInstanceMethod(#DOMHTMLModElement, "setDateTime:") = Void, NSString;

record DOMHTMLOListElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLOListElement, "compact") = Bool;
overload externalInstanceMethod(#DOMHTMLOListElement, "setCompact:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLOListElement, "start") = Int;
overload externalInstanceMethod(#DOMHTMLOListElement, "setStart:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLOListElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLOListElement, "setType:") = Void, NSString;

record DOMHTMLObjectElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLObjectElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLObjectElement, "code") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setCode:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "archive") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setArchive:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "border") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setBorder:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "codeBase") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setCodeBase:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "codeType") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setCodeType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "data") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setData:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "declare") = Bool;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setDeclare:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLObjectElement, "height") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "hspace") = Int;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setHspace:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLObjectElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "standby") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setStandby:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "useMap") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setUseMap:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "vspace") = Int;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setVspace:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLObjectElement, "width") = NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "setWidth:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLObjectElement, "contentDocument") = DOMDocument;
overload externalInstanceMethod(#DOMHTMLObjectElement, "absoluteImageURL") = NSURL;
overload externalInstanceMethod(#DOMHTMLObjectElement, "contentFrame") = WebFrame;

record DOMHTMLOptGroupElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLOptGroupElement, "disabled") = Bool;
overload externalInstanceMethod(#DOMHTMLOptGroupElement, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLOptGroupElement, "label") = NSString;
overload externalInstanceMethod(#DOMHTMLOptGroupElement, "setLabel:") = Void, NSString;

record DOMHTMLOptionElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLOptionElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLOptionElement, "defaultSelected") = Bool;
overload externalInstanceMethod(#DOMHTMLOptionElement, "setDefaultSelected:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLOptionElement, "text") = NSString;
overload externalInstanceMethod(#DOMHTMLOptionElement, "index") = Int;
overload externalInstanceMethod(#DOMHTMLOptionElement, "disabled") = Bool;
overload externalInstanceMethod(#DOMHTMLOptionElement, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLOptionElement, "label") = NSString;
overload externalInstanceMethod(#DOMHTMLOptionElement, "setLabel:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLOptionElement, "selected") = Bool;
overload externalInstanceMethod(#DOMHTMLOptionElement, "setSelected:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLOptionElement, "value") = NSString;
overload externalInstanceMethod(#DOMHTMLOptionElement, "setValue:") = Void, NSString;

record DOMHTMLOptionsCollection = externalClass(DOMObject);
overload externalInstanceMethod(#DOMHTMLOptionsCollection, "add:index:") = Void, DOMHTMLOptionElement, UInt;
overload externalInstanceMethod(#DOMHTMLOptionsCollection, "remove:") = Void, UInt;
overload externalInstanceMethod(#DOMHTMLOptionsCollection, "item:") = DOMNode, UInt;
overload externalInstanceMethod(#DOMHTMLOptionsCollection, "namedItem:") = DOMNode, NSString;
overload externalInstanceMethod(#DOMHTMLOptionsCollection, "selectedIndex") = Int;
overload externalInstanceMethod(#DOMHTMLOptionsCollection, "setSelectedIndex:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLOptionsCollection, "length") = UInt;
overload externalInstanceMethod(#DOMHTMLOptionsCollection, "setLength:") = Void, UInt;

record DOMHTMLParagraphElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLParagraphElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLParagraphElement, "setAlign:") = Void, NSString;

record DOMHTMLParamElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLParamElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLParamElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLParamElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLParamElement, "setType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLParamElement, "value") = NSString;
overload externalInstanceMethod(#DOMHTMLParamElement, "setValue:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLParamElement, "valueType") = NSString;
overload externalInstanceMethod(#DOMHTMLParamElement, "setValueType:") = Void, NSString;

record DOMHTMLPreElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLPreElement, "width") = Int;
overload externalInstanceMethod(#DOMHTMLPreElement, "setWidth:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLPreElement, "wrap") = Bool;
overload externalInstanceMethod(#DOMHTMLPreElement, "setWrap:") = Void, Bool;

record DOMHTMLQuoteElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLQuoteElement, "cite") = NSString;
overload externalInstanceMethod(#DOMHTMLQuoteElement, "setCite:") = Void, NSString;

record DOMHTMLScriptElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLScriptElement, "text") = NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "setText:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "htmlFor") = NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "setHtmlFor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "event") = NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "setEvent:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "charset") = NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "setCharset:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "defer") = Bool;
overload externalInstanceMethod(#DOMHTMLScriptElement, "setDefer:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLScriptElement, "src") = NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "setSrc:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLScriptElement, "setType:") = Void, NSString;

record DOMHTMLSelectElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLSelectElement, "add:before:") = Void, DOMHTMLElement, DOMHTMLElement;
overload externalInstanceMethod(#DOMHTMLSelectElement, "remove:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLSelectElement, "item:") = DOMNode, UInt;
overload externalInstanceMethod(#DOMHTMLSelectElement, "namedItem:") = DOMNode, NSString;
overload externalInstanceMethod(#DOMHTMLSelectElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLSelectElement, "selectedIndex") = Int;
overload externalInstanceMethod(#DOMHTMLSelectElement, "setSelectedIndex:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLSelectElement, "value") = NSString;
overload externalInstanceMethod(#DOMHTMLSelectElement, "setValue:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLSelectElement, "length") = Int;
overload externalInstanceMethod(#DOMHTMLSelectElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLSelectElement, "willValidate") = Bool;
overload externalInstanceMethod(#DOMHTMLSelectElement, "options") = DOMHTMLOptionsCollection;
overload externalInstanceMethod(#DOMHTMLSelectElement, "disabled") = Bool;
overload externalInstanceMethod(#DOMHTMLSelectElement, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLSelectElement, "autofocus") = Bool;
overload externalInstanceMethod(#DOMHTMLSelectElement, "setAutofocus:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLSelectElement, "multiple") = Bool;
overload externalInstanceMethod(#DOMHTMLSelectElement, "setMultiple:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLSelectElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLSelectElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLSelectElement, "size") = Int;
overload externalInstanceMethod(#DOMHTMLSelectElement, "setSize:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLSelectElement, "add::") = Void, DOMHTMLElement, DOMHTMLElement;

record DOMHTMLStyleElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLStyleElement, "disabled") = Bool;
overload externalInstanceMethod(#DOMHTMLStyleElement, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLStyleElement, "media") = NSString;
overload externalInstanceMethod(#DOMHTMLStyleElement, "setMedia:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLStyleElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLStyleElement, "setType:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLStyleElement, "sheet") = DOMStyleSheet;

record DOMHTMLTableCaptionElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLTableCaptionElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCaptionElement, "setAlign:") = Void, NSString;

record DOMHTMLTableCellElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLTableCellElement, "cellIndex") = Int;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "abbr") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setAbbr:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "axis") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setAxis:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "bgColor") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setBgColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "ch") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setCh:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "chOff") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setChOff:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "colSpan") = Int;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setColSpan:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "headers") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setHeaders:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "height") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setHeight:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "noWrap") = Bool;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setNoWrap:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "rowSpan") = Int;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setRowSpan:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "scope") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setScope:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "vAlign") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setVAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "width") = NSString;
overload externalInstanceMethod(#DOMHTMLTableCellElement, "setWidth:") = Void, NSString;

record DOMHTMLTableColElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLTableColElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "ch") = NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "setCh:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "chOff") = NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "setChOff:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "span") = Int;
overload externalInstanceMethod(#DOMHTMLTableColElement, "setSpan:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTableColElement, "vAlign") = NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "setVAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "width") = NSString;
overload externalInstanceMethod(#DOMHTMLTableColElement, "setWidth:") = Void, NSString;

record DOMHTMLTableElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLTableElement, "createTHead") = DOMHTMLElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "deleteTHead") = Void;
overload externalInstanceMethod(#DOMHTMLTableElement, "createTFoot") = DOMHTMLElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "deleteTFoot") = Void;
overload externalInstanceMethod(#DOMHTMLTableElement, "createCaption") = DOMHTMLElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "deleteCaption") = Void;
overload externalInstanceMethod(#DOMHTMLTableElement, "insertRow:") = DOMHTMLElement, Int;
overload externalInstanceMethod(#DOMHTMLTableElement, "deleteRow:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTableElement, "caption") = DOMHTMLTableCaptionElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "setCaption:") = Void, DOMHTMLTableCaptionElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "tHead") = DOMHTMLTableSectionElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "setTHead:") = Void, DOMHTMLTableSectionElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "tFoot") = DOMHTMLTableSectionElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "setTFoot:") = Void, DOMHTMLTableSectionElement;
overload externalInstanceMethod(#DOMHTMLTableElement, "rows") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLTableElement, "tBodies") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLTableElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "bgColor") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setBgColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "border") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setBorder:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "cellPadding") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setCellPadding:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "cellSpacing") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setCellSpacing:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "frameBorders") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setFrameBorders:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "rules") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setRules:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "summary") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setSummary:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "width") = NSString;
overload externalInstanceMethod(#DOMHTMLTableElement, "setWidth:") = Void, NSString;

record DOMHTMLTableRowElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLTableRowElement, "insertCell:") = DOMHTMLElement, Int;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "deleteCell:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "rowIndex") = Int;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "sectionRowIndex") = Int;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "cells") = DOMHTMLCollection;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "bgColor") = NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "setBgColor:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "ch") = NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "setCh:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "chOff") = NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "setChOff:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "vAlign") = NSString;
overload externalInstanceMethod(#DOMHTMLTableRowElement, "setVAlign:") = Void, NSString;

record DOMHTMLTableSectionElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "insertRow:") = DOMHTMLElement, Int;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "deleteRow:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "align") = NSString;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "setAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "ch") = NSString;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "setCh:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "chOff") = NSString;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "setChOff:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "vAlign") = NSString;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "setVAlign:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTableSectionElement, "rows") = DOMHTMLCollection;

record DOMHTMLTextAreaElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "select") = Void;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setSelectionRange:end:") = Void, Int, Int;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "defaultValue") = NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setDefaultValue:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "form") = DOMHTMLFormElement;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "accessKey") = NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setAccessKey:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "cols") = Int;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setCols:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "disabled") = Bool;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "autofocus") = Bool;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setAutofocus:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "name") = NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setName:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "readOnly") = Bool;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setReadOnly:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "rows") = Int;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setRows:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "value") = NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setValue:") = Void, NSString;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "willValidate") = Bool;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "selectionStart") = Int;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setSelectionStart:") = Void, Int;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "selectionEnd") = Int;
overload externalInstanceMethod(#DOMHTMLTextAreaElement, "setSelectionEnd:") = Void, Int;

record DOMHTMLTitleElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLTitleElement, "text") = NSString;
overload externalInstanceMethod(#DOMHTMLTitleElement, "setText:") = Void, NSString;

record DOMHTMLUListElement = externalClass(DOMHTMLElement);
overload externalInstanceMethod(#DOMHTMLUListElement, "compact") = Bool;
overload externalInstanceMethod(#DOMHTMLUListElement, "setCompact:") = Void, Bool;
overload externalInstanceMethod(#DOMHTMLUListElement, "type") = NSString;
overload externalInstanceMethod(#DOMHTMLUListElement, "setType:") = Void, NSString;

record DOMImplementation = externalClass(DOMObject);
overload externalInstanceMethod(#DOMImplementation, "hasFeature:version:") = Bool, NSString, NSString;
overload externalInstanceMethod(#DOMImplementation, "createDocumentType:publicId:systemId:") = DOMDocumentType, NSString, NSString, NSString;
overload externalInstanceMethod(#DOMImplementation, "createDocument:qualifiedName:doctype:") = DOMDocument, NSString, NSString, DOMDocumentType;
overload externalInstanceMethod(#DOMImplementation, "createCSSStyleSheet:media:") = DOMCSSStyleSheet, NSString, NSString;
overload externalInstanceMethod(#DOMImplementation, "createHTMLDocument:") = DOMHTMLDocument, NSString;
overload externalInstanceMethod(#DOMImplementation, "hasFeature::") = Bool, NSString, NSString;
overload externalInstanceMethod(#DOMImplementation, "createDocumentType:::") = DOMDocumentType, NSString, NSString, NSString;
overload externalInstanceMethod(#DOMImplementation, "createDocument:::") = DOMDocument, NSString, NSString, DOMDocumentType;
overload externalInstanceMethod(#DOMImplementation, "createCSSStyleSheet::") = DOMCSSStyleSheet, NSString, NSString;

record DOMKeyboardEvent = externalClass(DOMUIEvent);
overload externalInstanceMethod(#DOMKeyboardEvent, "getModifierState:") = Bool, NSString;
overload externalInstanceMethod(#DOMKeyboardEvent, "initKeyboardEvent:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:altGraphKey:") = Void, NSString, Bool, Bool, DOMAbstractView, NSString, UInt, Bool, Bool, Bool, Bool, Bool;
overload externalInstanceMethod(#DOMKeyboardEvent, "initKeyboardEvent:canBubble:cancelable:view:keyIdentifier:keyLocation:ctrlKey:altKey:shiftKey:metaKey:") = Void, NSString, Bool, Bool, DOMAbstractView, NSString, UInt, Bool, Bool, Bool, Bool;
overload externalInstanceMethod(#DOMKeyboardEvent, "keyIdentifier") = NSString;
overload externalInstanceMethod(#DOMKeyboardEvent, "keyLocation") = UInt;
overload externalInstanceMethod(#DOMKeyboardEvent, "ctrlKey") = Bool;
overload externalInstanceMethod(#DOMKeyboardEvent, "shiftKey") = Bool;
overload externalInstanceMethod(#DOMKeyboardEvent, "altKey") = Bool;
overload externalInstanceMethod(#DOMKeyboardEvent, "metaKey") = Bool;
overload externalInstanceMethod(#DOMKeyboardEvent, "altGraphKey") = Bool;
overload externalInstanceMethod(#DOMKeyboardEvent, "keyCode") = Int;
overload externalInstanceMethod(#DOMKeyboardEvent, "charCode") = Int;

record DOMMediaList = externalClass(DOMObject);
overload externalInstanceMethod(#DOMMediaList, "item:") = NSString, UInt;
overload externalInstanceMethod(#DOMMediaList, "deleteMedium:") = Void, NSString;
overload externalInstanceMethod(#DOMMediaList, "appendMedium:") = Void, NSString;
overload externalInstanceMethod(#DOMMediaList, "mediaText") = NSString;
overload externalInstanceMethod(#DOMMediaList, "setMediaText:") = Void, NSString;
overload externalInstanceMethod(#DOMMediaList, "length") = UInt;

record DOMMouseEvent = externalClass(DOMUIEvent);
overload externalInstanceMethod(#DOMMouseEvent, "initMouseEvent:canBubble:cancelable:view:detail:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:button:relatedTarget:") = Void, NSString, Bool, Bool, DOMAbstractView, Int, Int, Int, Int, Int, Bool, Bool, Bool, Bool, UShort, Id;
overload externalInstanceMethod(#DOMMouseEvent, "screenX") = Int;
overload externalInstanceMethod(#DOMMouseEvent, "screenY") = Int;
overload externalInstanceMethod(#DOMMouseEvent, "clientX") = Int;
overload externalInstanceMethod(#DOMMouseEvent, "clientY") = Int;
overload externalInstanceMethod(#DOMMouseEvent, "ctrlKey") = Bool;
overload externalInstanceMethod(#DOMMouseEvent, "shiftKey") = Bool;
overload externalInstanceMethod(#DOMMouseEvent, "altKey") = Bool;
overload externalInstanceMethod(#DOMMouseEvent, "metaKey") = Bool;
overload externalInstanceMethod(#DOMMouseEvent, "button") = UShort;
overload externalInstanceMethod(#DOMMouseEvent, "relatedTarget") = Id;
overload externalInstanceMethod(#DOMMouseEvent, "offsetX") = Int;
overload externalInstanceMethod(#DOMMouseEvent, "offsetY") = Int;
overload externalInstanceMethod(#DOMMouseEvent, "x") = Int;
overload externalInstanceMethod(#DOMMouseEvent, "y") = Int;
overload externalInstanceMethod(#DOMMouseEvent, "fromElement") = DOMNode;
overload externalInstanceMethod(#DOMMouseEvent, "toElement") = DOMNode;
overload externalInstanceMethod(#DOMMouseEvent, "initMouseEvent:::::::::::::::") = Void, NSString, Bool, Bool, DOMAbstractView, Int, Int, Int, Int, Int, Bool, Bool, Bool, Bool, UShort, Id;

record DOMMutationEvent = externalClass(DOMEvent);
overload externalInstanceMethod(#DOMMutationEvent, "initMutationEvent:canBubble:cancelable:relatedNode:prevValue:newValue:attrName:attrChange:") = Void, NSString, Bool, Bool, DOMNode, NSString, NSString, NSString, UShort;
overload externalInstanceMethod(#DOMMutationEvent, "relatedNode") = DOMNode;
overload externalInstanceMethod(#DOMMutationEvent, "prevValue") = NSString;
overload externalInstanceMethod(#DOMMutationEvent, "newValue") = NSString;
overload externalInstanceMethod(#DOMMutationEvent, "attrName") = NSString;
overload externalInstanceMethod(#DOMMutationEvent, "attrChange") = UShort;
overload externalInstanceMethod(#DOMMutationEvent, "initMutationEvent::::::::") = Void, NSString, Bool, Bool, DOMNode, NSString, NSString, NSString, UShort;

record DOMNamedNodeMap = externalClass(DOMObject);
overload externalInstanceMethod(#DOMNamedNodeMap, "getNamedItem:") = DOMNode, NSString;
overload externalInstanceMethod(#DOMNamedNodeMap, "setNamedItem:") = DOMNode, DOMNode;
overload externalInstanceMethod(#DOMNamedNodeMap, "removeNamedItem:") = DOMNode, NSString;
overload externalInstanceMethod(#DOMNamedNodeMap, "item:") = DOMNode, UInt;
overload externalInstanceMethod(#DOMNamedNodeMap, "getNamedItemNS:localName:") = DOMNode, NSString, NSString;
overload externalInstanceMethod(#DOMNamedNodeMap, "setNamedItemNS:") = DOMNode, DOMNode;
overload externalInstanceMethod(#DOMNamedNodeMap, "removeNamedItemNS:localName:") = DOMNode, NSString, NSString;
overload externalInstanceMethod(#DOMNamedNodeMap, "length") = UInt;
overload externalInstanceMethod(#DOMNamedNodeMap, "getNamedItemNS::") = DOMNode, NSString, NSString;
overload externalInstanceMethod(#DOMNamedNodeMap, "removeNamedItemNS::") = DOMNode, NSString, NSString;

record DOMNode = externalClass(DOMObject);
overload externalInstanceMethod(#DOMNode, "addEventListener:listener:useCapture:") = Void, NSString, Id, Bool;
overload externalInstanceMethod(#DOMNode, "removeEventListener:listener:useCapture:") = Void, NSString, Id, Bool;
overload externalInstanceMethod(#DOMNode, "dispatchEvent:") = Bool, DOMEvent;
overload externalInstanceMethod(#DOMNode, "addEventListener:::") = Void, NSString, Id, Bool;
overload externalInstanceMethod(#DOMNode, "removeEventListener:::") = Void, NSString, Id, Bool;
overload externalInstanceMethod(#DOMNode, "insertBefore:refChild:") = DOMNode, DOMNode, DOMNode;
overload externalInstanceMethod(#DOMNode, "replaceChild:oldChild:") = DOMNode, DOMNode, DOMNode;
overload externalInstanceMethod(#DOMNode, "removeChild:") = DOMNode, DOMNode;
overload externalInstanceMethod(#DOMNode, "appendChild:") = DOMNode, DOMNode;
overload externalInstanceMethod(#DOMNode, "hasChildNodes") = Bool;
overload externalInstanceMethod(#DOMNode, "cloneNode:") = DOMNode, Bool;
overload externalInstanceMethod(#DOMNode, "normalize") = Void;
overload externalInstanceMethod(#DOMNode, "isSupported:version:") = Bool, NSString, NSString;
overload externalInstanceMethod(#DOMNode, "hasAttributes") = Bool;
overload externalInstanceMethod(#DOMNode, "isSameNode:") = Bool, DOMNode;
overload externalInstanceMethod(#DOMNode, "isEqualNode:") = Bool, DOMNode;
overload externalInstanceMethod(#DOMNode, "lookupPrefix:") = NSString, NSString;
overload externalInstanceMethod(#DOMNode, "isDefaultNamespace:") = Bool, NSString;
overload externalInstanceMethod(#DOMNode, "lookupNamespaceURI:") = NSString, NSString;
overload externalInstanceMethod(#DOMNode, "compareDocumentPosition:") = UShort, DOMNode;
overload externalInstanceMethod(#DOMNode, "nodeName") = NSString;
overload externalInstanceMethod(#DOMNode, "nodeValue") = NSString;
overload externalInstanceMethod(#DOMNode, "setNodeValue:") = Void, NSString;
overload externalInstanceMethod(#DOMNode, "nodeType") = UShort;
overload externalInstanceMethod(#DOMNode, "parentNode") = DOMNode;
overload externalInstanceMethod(#DOMNode, "childNodes") = DOMNodeList;
overload externalInstanceMethod(#DOMNode, "firstChild") = DOMNode;
overload externalInstanceMethod(#DOMNode, "lastChild") = DOMNode;
overload externalInstanceMethod(#DOMNode, "previousSibling") = DOMNode;
overload externalInstanceMethod(#DOMNode, "nextSibling") = DOMNode;
overload externalInstanceMethod(#DOMNode, "attributes") = DOMNamedNodeMap;
overload externalInstanceMethod(#DOMNode, "ownerDocument") = DOMDocument;
overload externalInstanceMethod(#DOMNode, "namespaceURI") = NSString;
overload externalInstanceMethod(#DOMNode, "prefix") = NSString;
overload externalInstanceMethod(#DOMNode, "setPrefix:") = Void, NSString;
overload externalInstanceMethod(#DOMNode, "localName") = NSString;
overload externalInstanceMethod(#DOMNode, "baseURI") = NSString;
overload externalInstanceMethod(#DOMNode, "textContent") = NSString;
overload externalInstanceMethod(#DOMNode, "setTextContent:") = Void, NSString;
overload externalInstanceMethod(#DOMNode, "parentElement") = DOMElement;
overload externalInstanceMethod(#DOMNode, "isContentEditable") = Bool;
overload externalInstanceMethod(#DOMNode, "insertBefore::") = DOMNode, DOMNode, DOMNode;
overload externalInstanceMethod(#DOMNode, "replaceChild::") = DOMNode, DOMNode, DOMNode;
overload externalInstanceMethod(#DOMNode, "isSupported::") = Bool, NSString, NSString;
overload externalInstanceMethod(#DOMNode, "boundingBox") = NSRect;
overload externalInstanceMethod(#DOMNode, "lineBoxRects") = NSArray;
overload externalInstanceMethod(#DOMNode, "webArchive") = WebArchive;

record DOMNodeIterator = externalClass(DOMObject);
overload externalInstanceMethod(#DOMNodeIterator, "nextNode") = DOMNode;
overload externalInstanceMethod(#DOMNodeIterator, "previousNode") = DOMNode;
overload externalInstanceMethod(#DOMNodeIterator, "detach") = Void;
overload externalInstanceMethod(#DOMNodeIterator, "root") = DOMNode;
overload externalInstanceMethod(#DOMNodeIterator, "whatToShow") = UInt;
overload externalInstanceMethod(#DOMNodeIterator, "filter") = Id;
overload externalInstanceMethod(#DOMNodeIterator, "expandEntityReferences") = Bool;
overload externalInstanceMethod(#DOMNodeIterator, "referenceNode") = DOMNode;
overload externalInstanceMethod(#DOMNodeIterator, "pointerBeforeReferenceNode") = Bool;

record DOMNodeList = externalClass(DOMObject);
overload externalInstanceMethod(#DOMNodeList, "item:") = DOMNode, UInt;
overload externalInstanceMethod(#DOMNodeList, "length") = UInt;

record DOMNotation = externalClass(DOMNode);
overload externalInstanceMethod(#DOMNotation, "publicId") = NSString;
overload externalInstanceMethod(#DOMNotation, "systemId") = NSString;

record DOMObject = externalClass(WebScriptObject);
overload externalInstanceMethod(#DOMObject, "copyWithZone:") = Id, Pointer[NSZone];
overload externalInstanceMethod(#DOMObject, "sheet") = DOMStyleSheet;

record DOMOverflowEvent = externalClass(DOMEvent);
overload externalInstanceMethod(#DOMOverflowEvent, "initOverflowEvent:horizontalOverflow:verticalOverflow:") = Void, UShort, Bool, Bool;
overload externalInstanceMethod(#DOMOverflowEvent, "orient") = UShort;
overload externalInstanceMethod(#DOMOverflowEvent, "horizontalOverflow") = Bool;
overload externalInstanceMethod(#DOMOverflowEvent, "verticalOverflow") = Bool;

record DOMProcessingInstruction = externalClass(DOMNode);
overload externalInstanceMethod(#DOMProcessingInstruction, "target") = NSString;
overload externalInstanceMethod(#DOMProcessingInstruction, "data") = NSString;
overload externalInstanceMethod(#DOMProcessingInstruction, "setData:") = Void, NSString;
overload externalInstanceMethod(#DOMProcessingInstruction, "sheet") = DOMStyleSheet;

record DOMRGBColor = externalClass(DOMObject);
overload externalInstanceMethod(#DOMRGBColor, "red") = DOMCSSPrimitiveValue;
overload externalInstanceMethod(#DOMRGBColor, "green") = DOMCSSPrimitiveValue;
overload externalInstanceMethod(#DOMRGBColor, "blue") = DOMCSSPrimitiveValue;
overload externalInstanceMethod(#DOMRGBColor, "alpha") = DOMCSSPrimitiveValue;
overload externalInstanceMethod(#DOMRGBColor, "color") = NSColor;

record DOMRange = externalClass(DOMObject);
overload externalInstanceMethod(#DOMRange, "setStart:offset:") = Void, DOMNode, Int;
overload externalInstanceMethod(#DOMRange, "setEnd:offset:") = Void, DOMNode, Int;
overload externalInstanceMethod(#DOMRange, "setStartBefore:") = Void, DOMNode;
overload externalInstanceMethod(#DOMRange, "setStartAfter:") = Void, DOMNode;
overload externalInstanceMethod(#DOMRange, "setEndBefore:") = Void, DOMNode;
overload externalInstanceMethod(#DOMRange, "setEndAfter:") = Void, DOMNode;
overload externalInstanceMethod(#DOMRange, "collapse:") = Void, Bool;
overload externalInstanceMethod(#DOMRange, "selectNode:") = Void, DOMNode;
overload externalInstanceMethod(#DOMRange, "selectNodeContents:") = Void, DOMNode;
overload externalInstanceMethod(#DOMRange, "compareBoundaryPoints:sourceRange:") = Short, UShort, DOMRange;
overload externalInstanceMethod(#DOMRange, "deleteContents") = Void;
overload externalInstanceMethod(#DOMRange, "extractContents") = DOMDocumentFragment;
overload externalInstanceMethod(#DOMRange, "cloneContents") = DOMDocumentFragment;
overload externalInstanceMethod(#DOMRange, "insertNode:") = Void, DOMNode;
overload externalInstanceMethod(#DOMRange, "surroundContents:") = Void, DOMNode;
overload externalInstanceMethod(#DOMRange, "cloneRange") = DOMRange;
overload externalInstanceMethod(#DOMRange, "toString") = NSString;
overload externalInstanceMethod(#DOMRange, "detach") = Void;
overload externalInstanceMethod(#DOMRange, "createContextualFragment:") = DOMDocumentFragment, NSString;
overload externalInstanceMethod(#DOMRange, "intersectsNode:") = Bool, DOMNode;
overload externalInstanceMethod(#DOMRange, "compareNode:") = Short, DOMNode;
overload externalInstanceMethod(#DOMRange, "comparePoint:offset:") = Short, DOMNode, Int;
overload externalInstanceMethod(#DOMRange, "isPointInRange:offset:") = Bool, DOMNode, Int;
overload externalInstanceMethod(#DOMRange, "startContainer") = DOMNode;
overload externalInstanceMethod(#DOMRange, "startOffset") = Int;
overload externalInstanceMethod(#DOMRange, "endContainer") = DOMNode;
overload externalInstanceMethod(#DOMRange, "endOffset") = Int;
overload externalInstanceMethod(#DOMRange, "collapsed") = Bool;
overload externalInstanceMethod(#DOMRange, "commonAncestorContainer") = DOMNode;
overload externalInstanceMethod(#DOMRange, "text") = NSString;
overload externalInstanceMethod(#DOMRange, "setStart::") = Void, DOMNode, Int;
overload externalInstanceMethod(#DOMRange, "setEnd::") = Void, DOMNode, Int;
overload externalInstanceMethod(#DOMRange, "compareBoundaryPoints::") = Short, UShort, DOMRange;
overload externalInstanceMethod(#DOMRange, "webArchive") = WebArchive;
overload externalInstanceMethod(#DOMRange, "markupString") = NSString;

record DOMRect = externalClass(DOMObject);
overload externalInstanceMethod(#DOMRect, "top") = DOMCSSPrimitiveValue;
overload externalInstanceMethod(#DOMRect, "right") = DOMCSSPrimitiveValue;
overload externalInstanceMethod(#DOMRect, "bottom") = DOMCSSPrimitiveValue;
overload externalInstanceMethod(#DOMRect, "left") = DOMCSSPrimitiveValue;

record DOMStyleSheet = externalClass(DOMObject);
overload externalInstanceMethod(#DOMStyleSheet, "type") = NSString;
overload externalInstanceMethod(#DOMStyleSheet, "disabled") = Bool;
overload externalInstanceMethod(#DOMStyleSheet, "setDisabled:") = Void, Bool;
overload externalInstanceMethod(#DOMStyleSheet, "ownerNode") = DOMNode;
overload externalInstanceMethod(#DOMStyleSheet, "parentStyleSheet") = DOMStyleSheet;
overload externalInstanceMethod(#DOMStyleSheet, "href") = NSString;
overload externalInstanceMethod(#DOMStyleSheet, "title") = NSString;
overload externalInstanceMethod(#DOMStyleSheet, "media") = DOMMediaList;

record DOMStyleSheetList = externalClass(DOMObject);
overload externalInstanceMethod(#DOMStyleSheetList, "item:") = DOMStyleSheet, UInt;
overload externalInstanceMethod(#DOMStyleSheetList, "length") = UInt;

record DOMText = externalClass(DOMCharacterData);
overload externalInstanceMethod(#DOMText, "splitText:") = DOMText, UInt;
overload externalInstanceMethod(#DOMText, "replaceWholeText:") = DOMText, NSString;
overload externalInstanceMethod(#DOMText, "wholeText") = NSString;

record DOMTreeWalker = externalClass(DOMObject);
overload externalInstanceMethod(#DOMTreeWalker, "parentNode") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "firstChild") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "lastChild") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "previousSibling") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "nextSibling") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "previousNode") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "nextNode") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "root") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "whatToShow") = UInt;
overload externalInstanceMethod(#DOMTreeWalker, "filter") = Id;
overload externalInstanceMethod(#DOMTreeWalker, "expandEntityReferences") = Bool;
overload externalInstanceMethod(#DOMTreeWalker, "currentNode") = DOMNode;
overload externalInstanceMethod(#DOMTreeWalker, "setCurrentNode:") = Void, DOMNode;

record DOMUIEvent = externalClass(DOMEvent);
overload externalInstanceMethod(#DOMUIEvent, "initUIEvent:canBubble:cancelable:view:detail:") = Void, NSString, Bool, Bool, DOMAbstractView, Int;
overload externalInstanceMethod(#DOMUIEvent, "view") = DOMAbstractView;
overload externalInstanceMethod(#DOMUIEvent, "detail") = Int;
overload externalInstanceMethod(#DOMUIEvent, "keyCode") = Int;
overload externalInstanceMethod(#DOMUIEvent, "charCode") = Int;
overload externalInstanceMethod(#DOMUIEvent, "layerX") = Int;
overload externalInstanceMethod(#DOMUIEvent, "layerY") = Int;
overload externalInstanceMethod(#DOMUIEvent, "pageX") = Int;
overload externalInstanceMethod(#DOMUIEvent, "pageY") = Int;
overload externalInstanceMethod(#DOMUIEvent, "which") = Int;
overload externalInstanceMethod(#DOMUIEvent, "initUIEvent:::::") = Void, NSString, Bool, Bool, DOMAbstractView, Int;

record DOMWheelEvent = externalClass(DOMUIEvent);
overload externalInstanceMethod(#DOMWheelEvent, "initWheelEvent:wheelDeltaY:view:screenX:screenY:clientX:clientY:ctrlKey:altKey:shiftKey:metaKey:") = Void, Int, Int, DOMAbstractView, Int, Int, Int, Int, Bool, Bool, Bool, Bool;
overload externalInstanceMethod(#DOMWheelEvent, "screenX") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "screenY") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "clientX") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "clientY") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "ctrlKey") = Bool;
overload externalInstanceMethod(#DOMWheelEvent, "shiftKey") = Bool;
overload externalInstanceMethod(#DOMWheelEvent, "altKey") = Bool;
overload externalInstanceMethod(#DOMWheelEvent, "metaKey") = Bool;
overload externalInstanceMethod(#DOMWheelEvent, "wheelDelta") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "wheelDeltaX") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "wheelDeltaY") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "offsetX") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "offsetY") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "x") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "y") = Int;
overload externalInstanceMethod(#DOMWheelEvent, "isHorizontal") = Bool;

record DOMXPathExpression = externalClass(DOMObject);
overload externalInstanceMethod(#DOMXPathExpression, "evaluate:type:inResult:") = DOMXPathResult, DOMNode, UShort, DOMXPathResult;
overload externalInstanceMethod(#DOMXPathExpression, "evaluate:::") = DOMXPathResult, DOMNode, UShort, DOMXPathResult;

record DOMXPathResult = externalClass(DOMObject);
overload externalInstanceMethod(#DOMXPathResult, "iterateNext") = DOMNode;
overload externalInstanceMethod(#DOMXPathResult, "snapshotItem:") = DOMNode, UInt;
overload externalInstanceMethod(#DOMXPathResult, "resultType") = UShort;
overload externalInstanceMethod(#DOMXPathResult, "numberValue") = Double;
overload externalInstanceMethod(#DOMXPathResult, "stringValue") = NSString;
overload externalInstanceMethod(#DOMXPathResult, "booleanValue") = Bool;
overload externalInstanceMethod(#DOMXPathResult, "singleNodeValue") = DOMNode;
overload externalInstanceMethod(#DOMXPathResult, "invalidIteratorState") = Bool;
overload externalInstanceMethod(#DOMXPathResult, "snapshotLength") = UInt;

overload externalClassMethod(#NSObject, "webScriptNameForSelector:") = NSString, SelectorHandle;
overload externalClassMethod(#NSObject, "isSelectorExcludedFromWebScript:") = Bool, SelectorHandle;
overload externalClassMethod(#NSObject, "webScriptNameForKey:") = NSString, Pointer[CChar];
overload externalClassMethod(#NSObject, "isKeyExcludedFromWebScript:") = Bool, Pointer[CChar];
overload externalInstanceMethod(#NSObject, "invokeUndefinedMethodFromWebScript:withArguments:") = Id, NSString, NSArray;
overload externalInstanceMethod(#NSObject, "invokeDefaultMethodWithArguments:") = Id, NSArray;
overload externalInstanceMethod(#NSObject, "finalizeForWebScript") = Void;
overload externalInstanceMethod(#NSObject, "downloadWindowForAuthenticationSheet:") = NSWindow, WebDownload;
overload externalInstanceMethod(#NSObject, "webView:shouldBeginEditingInDOMRange:") = Bool, WebView, DOMRange;
overload externalInstanceMethod(#NSObject, "webView:shouldEndEditingInDOMRange:") = Bool, WebView, DOMRange;
overload externalInstanceMethod(#NSObject, "webView:shouldInsertNode:replacingDOMRange:givenAction:") = Bool, WebView, DOMNode, DOMRange, WebViewInsertAction;
overload externalInstanceMethod(#NSObject, "webView:shouldInsertText:replacingDOMRange:givenAction:") = Bool, WebView, NSString, DOMRange, WebViewInsertAction;
overload externalInstanceMethod(#NSObject, "webView:shouldDeleteDOMRange:") = Bool, WebView, DOMRange;
overload externalInstanceMethod(#NSObject, "webView:shouldChangeSelectedDOMRange:toDOMRange:affinity:stillSelecting:") = Bool, WebView, DOMRange, DOMRange, CULong, Bool;
overload externalInstanceMethod(#NSObject, "webView:shouldApplyStyle:toElementsInDOMRange:") = Bool, WebView, DOMCSSStyleDeclaration, DOMRange;
overload externalInstanceMethod(#NSObject, "webView:shouldChangeTypingStyle:toStyle:") = Bool, WebView, DOMCSSStyleDeclaration, DOMCSSStyleDeclaration;
overload externalInstanceMethod(#NSObject, "webView:doCommandBySelector:") = Bool, WebView, SelectorHandle;
overload externalInstanceMethod(#NSObject, "webViewDidBeginEditing:") = Void, NSNotification;
overload externalInstanceMethod(#NSObject, "webViewDidChange:") = Void, NSNotification;
overload externalInstanceMethod(#NSObject, "webViewDidEndEditing:") = Void, NSNotification;
overload externalInstanceMethod(#NSObject, "webViewDidChangeTypingStyle:") = Void, NSNotification;
overload externalInstanceMethod(#NSObject, "webViewDidChangeSelection:") = Void, NSNotification;
overload externalInstanceMethod(#NSObject, "undoManagerForWebView:") = NSUndoManager, WebView;
overload externalInstanceMethod(#NSObject, "webView:didStartProvisionalLoadForFrame:") = Void, WebView, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didReceiveServerRedirectForProvisionalLoadForFrame:") = Void, WebView, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didFailProvisionalLoadWithError:forFrame:") = Void, WebView, NSError, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didCommitLoadForFrame:") = Void, WebView, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didReceiveTitle:forFrame:") = Void, WebView, NSString, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didReceiveIcon:forFrame:") = Void, WebView, NSImage, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didFinishLoadForFrame:") = Void, WebView, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didFailLoadWithError:forFrame:") = Void, WebView, NSError, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didChangeLocationWithinPageForFrame:") = Void, WebView, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:") = Void, WebView, NSURL, Double, NSDate, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didCancelClientRedirectForFrame:") = Void, WebView, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:willCloseFrame:") = Void, WebView, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:didClearWindowObject:forFrame:") = Void, WebView, WebScriptObject, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:windowScriptObjectAvailable:") = Void, WebView, WebScriptObject;
overload externalInstanceMethod(#NSObject, "webPlugInInitialize") = Void;
overload externalInstanceMethod(#NSObject, "webPlugInStart") = Void;
overload externalInstanceMethod(#NSObject, "webPlugInStop") = Void;
overload externalInstanceMethod(#NSObject, "webPlugInDestroy") = Void;
overload externalInstanceMethod(#NSObject, "webPlugInSetIsSelected:") = Void, Bool;
overload externalInstanceMethod(#NSObject, "objectForWebScript") = Id;
overload externalInstanceMethod(#NSObject, "webPlugInMainResourceDidReceiveResponse:") = Void, NSURLResponse;
overload externalInstanceMethod(#NSObject, "webPlugInMainResourceDidReceiveData:") = Void, NSData;
overload externalInstanceMethod(#NSObject, "webPlugInMainResourceDidFailWithError:") = Void, NSError;
overload externalInstanceMethod(#NSObject, "webPlugInMainResourceDidFinishLoading") = Void;
overload externalInstanceMethod(#NSObject, "webPlugInContainerLoadRequest:inFrame:") = Void, NSURLRequest, NSString;
overload externalInstanceMethod(#NSObject, "webPlugInContainerShowStatus:") = Void, NSString;
overload externalInstanceMethod(#NSObject, "webPlugInContainerSelectionColor") = NSColor;
overload externalInstanceMethod(#NSObject, "webFrame") = WebFrame;
overload externalInstanceMethod(#NSObject, "webView:decidePolicyForNavigationAction:request:frame:decisionListener:") = Void, WebView, NSDictionary, NSURLRequest, WebFrame, Id;
overload externalInstanceMethod(#NSObject, "webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:") = Void, WebView, NSDictionary, NSURLRequest, NSString, Id;
overload externalInstanceMethod(#NSObject, "webView:decidePolicyForMIMEType:request:frame:decisionListener:") = Void, WebView, NSString, NSURLRequest, WebFrame, Id;
overload externalInstanceMethod(#NSObject, "webView:unableToImplementPolicyWithError:frame:") = Void, WebView, NSError, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:identifierForInitialRequest:fromDataSource:") = Id, WebView, NSURLRequest, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:resource:willSendRequest:redirectResponse:fromDataSource:") = NSURLRequest, WebView, Id, NSURLRequest, NSURLResponse, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:resource:didReceiveAuthenticationChallenge:fromDataSource:") = Void, WebView, Id, NSURLAuthenticationChallenge, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:resource:didCancelAuthenticationChallenge:fromDataSource:") = Void, WebView, Id, NSURLAuthenticationChallenge, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:resource:didReceiveResponse:fromDataSource:") = Void, WebView, Id, NSURLResponse, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:resource:didReceiveContentLength:fromDataSource:") = Void, WebView, Id, CLong, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:resource:didFinishLoadingFromDataSource:") = Void, WebView, Id, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:resource:didFailLoadingWithError:fromDataSource:") = Void, WebView, Id, NSError, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:plugInFailedWithError:dataSource:") = Void, WebView, NSError, WebDataSource;
overload externalInstanceMethod(#NSObject, "webView:createWebViewWithRequest:") = WebView, WebView, NSURLRequest;
overload externalInstanceMethod(#NSObject, "webViewShow:") = Void, WebView;
overload externalInstanceMethod(#NSObject, "webView:createWebViewModalDialogWithRequest:") = WebView, WebView, NSURLRequest;
overload externalInstanceMethod(#NSObject, "webViewRunModal:") = Void, WebView;
overload externalInstanceMethod(#NSObject, "webViewClose:") = Void, WebView;
overload externalInstanceMethod(#NSObject, "webViewFocus:") = Void, WebView;
overload externalInstanceMethod(#NSObject, "webViewUnfocus:") = Void, WebView;
overload externalInstanceMethod(#NSObject, "webViewFirstResponder:") = NSResponder, WebView;
overload externalInstanceMethod(#NSObject, "webView:makeFirstResponder:") = Void, WebView, NSResponder;
overload externalInstanceMethod(#NSObject, "webView:setStatusText:") = Void, WebView, NSString;
overload externalInstanceMethod(#NSObject, "webViewStatusText:") = NSString, WebView;
overload externalInstanceMethod(#NSObject, "webViewAreToolbarsVisible:") = Bool, WebView;
overload externalInstanceMethod(#NSObject, "webView:setToolbarsVisible:") = Void, WebView, Bool;
overload externalInstanceMethod(#NSObject, "webViewIsStatusBarVisible:") = Bool, WebView;
overload externalInstanceMethod(#NSObject, "webView:setStatusBarVisible:") = Void, WebView, Bool;
overload externalInstanceMethod(#NSObject, "webViewIsResizable:") = Bool, WebView;
overload externalInstanceMethod(#NSObject, "webView:setResizable:") = Void, WebView, Bool;
overload externalInstanceMethod(#NSObject, "webView:setFrame:") = Void, WebView, NSRect;
overload externalInstanceMethod(#NSObject, "webViewFrame:") = NSRect, WebView;
overload externalInstanceMethod(#NSObject, "webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:") = Void, WebView, NSString, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:") = Bool, WebView, NSString, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:") = NSString, WebView, NSString, NSString, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:runBeforeUnloadConfirmPanelWithMessage:initiatedByFrame:") = Bool, WebView, NSString, WebFrame;
overload externalInstanceMethod(#NSObject, "webView:runOpenPanelForFileButtonWithResultListener:") = Void, WebView, Id;
overload externalInstanceMethod(#NSObject, "webView:runOpenPanelForFileButtonWithResultListener:allowMultipleFiles:") = Void, WebView, Id, Bool;
overload externalInstanceMethod(#NSObject, "webView:mouseDidMoveOverElement:modifierFlags:") = Void, WebView, NSDictionary, CULong;
overload externalInstanceMethod(#NSObject, "webView:contextMenuItemsForElement:defaultMenuItems:") = NSArray, WebView, NSDictionary, NSArray;
overload externalInstanceMethod(#NSObject, "webView:validateUserInterfaceItem:defaultValidation:") = Bool, WebView, Id, Bool;
overload externalInstanceMethod(#NSObject, "webView:shouldPerformAction:fromSender:") = Bool, WebView, SelectorHandle, Id;
overload externalInstanceMethod(#NSObject, "webView:dragDestinationActionMaskForDraggingInfo:") = CULong, WebView, Id;
overload externalInstanceMethod(#NSObject, "webView:willPerformDragDestinationAction:forDraggingInfo:") = Void, WebView, WebDragDestinationAction, Id;
overload externalInstanceMethod(#NSObject, "webView:dragSourceActionMaskForPoint:") = CULong, WebView, NSPoint;
overload externalInstanceMethod(#NSObject, "webView:willPerformDragSourceAction:fromPoint:withPasteboard:") = Void, WebView, WebDragSourceAction, NSPoint, NSPasteboard;
overload externalInstanceMethod(#NSObject, "webView:printFrameView:") = Void, WebView, WebFrameView;
overload externalInstanceMethod(#NSObject, "webViewHeaderHeight:") = Float, WebView;
overload externalInstanceMethod(#NSObject, "webViewFooterHeight:") = Float, WebView;
overload externalInstanceMethod(#NSObject, "webView:drawHeaderInRect:") = Void, WebView, NSRect;
overload externalInstanceMethod(#NSObject, "webView:drawFooterInRect:") = Void, WebView, NSRect;
overload externalInstanceMethod(#NSObject, "webView:runJavaScriptAlertPanelWithMessage:") = Void, WebView, NSString;
overload externalInstanceMethod(#NSObject, "webView:runJavaScriptConfirmPanelWithMessage:") = Bool, WebView, NSString;
overload externalInstanceMethod(#NSObject, "webView:runJavaScriptTextInputPanelWithPrompt:defaultText:") = NSString, WebView, NSString, NSString;
overload externalInstanceMethod(#NSObject, "webView:setContentRect:") = Void, WebView, NSRect;
overload externalInstanceMethod(#NSObject, "webViewContentRect:") = NSRect, WebView;

record WebArchive = externalClass(NSObject);
overload externalInstanceMethod(#WebArchive, "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(#WebArchive, "initWithCoder:") = Id, NSCoder;
overload externalInstanceMethod(#WebArchive, "copyWithZone:") = Id, Pointer[NSZone];
overload externalInstanceMethod(#WebArchive, "initWithMainResource:subresources:subframeArchives:") = Id, WebResource, NSArray, NSArray;
overload externalInstanceMethod(#WebArchive, "initWithData:") = Id, NSData;
overload externalInstanceMethod(#WebArchive, "mainResource") = WebResource;
overload externalInstanceMethod(#WebArchive, "subresources") = NSArray;
overload externalInstanceMethod(#WebArchive, "subframeArchives") = NSArray;
overload externalInstanceMethod(#WebArchive, "data") = NSData;

record WebBackForwardList = externalClass(NSObject);
overload externalInstanceMethod(#WebBackForwardList, "addItem:") = Void, WebHistoryItem;
overload externalInstanceMethod(#WebBackForwardList, "goBack") = Void;
overload externalInstanceMethod(#WebBackForwardList, "goForward") = Void;
overload externalInstanceMethod(#WebBackForwardList, "goToItem:") = Void, WebHistoryItem;
overload externalInstanceMethod(#WebBackForwardList, "backItem") = WebHistoryItem;
overload externalInstanceMethod(#WebBackForwardList, "currentItem") = WebHistoryItem;
overload externalInstanceMethod(#WebBackForwardList, "forwardItem") = WebHistoryItem;
overload externalInstanceMethod(#WebBackForwardList, "backListWithLimit:") = NSArray, Int;
overload externalInstanceMethod(#WebBackForwardList, "forwardListWithLimit:") = NSArray, Int;
overload externalInstanceMethod(#WebBackForwardList, "capacity") = Int;
overload externalInstanceMethod(#WebBackForwardList, "setCapacity:") = Void, Int;
overload externalInstanceMethod(#WebBackForwardList, "backListCount") = Int;
overload externalInstanceMethod(#WebBackForwardList, "forwardListCount") = Int;
overload externalInstanceMethod(#WebBackForwardList, "containsItem:") = Bool, WebHistoryItem;
overload externalInstanceMethod(#WebBackForwardList, "itemAtIndex:") = WebHistoryItem, Int;
overload externalInstanceMethod(#WebBackForwardList, "setPageCacheSize:") = Void, CULong;
overload externalInstanceMethod(#WebBackForwardList, "pageCacheSize") = CULong;

record WebDataSource = externalClass(NSObject);
overload externalInstanceMethod(#WebDataSource, "initWithRequest:") = Id, NSURLRequest;
overload externalInstanceMethod(#WebDataSource, "data") = NSData;
overload externalInstanceMethod(#WebDataSource, "representation") = Id;
overload externalInstanceMethod(#WebDataSource, "webFrame") = WebFrame;
overload externalInstanceMethod(#WebDataSource, "initialRequest") = NSURLRequest;
overload externalInstanceMethod(#WebDataSource, "request") = NSMutableURLRequest;
overload externalInstanceMethod(#WebDataSource, "response") = NSURLResponse;
overload externalInstanceMethod(#WebDataSource, "textEncodingName") = NSString;
overload externalInstanceMethod(#WebDataSource, "isLoading") = Bool;
overload externalInstanceMethod(#WebDataSource, "pageTitle") = NSString;
overload externalInstanceMethod(#WebDataSource, "unreachableURL") = NSURL;
overload externalInstanceMethod(#WebDataSource, "webArchive") = WebArchive;
overload externalInstanceMethod(#WebDataSource, "mainResource") = WebResource;
overload externalInstanceMethod(#WebDataSource, "subresources") = NSArray;
overload externalInstanceMethod(#WebDataSource, "subresourceForURL:") = WebResource, NSURL;
overload externalInstanceMethod(#WebDataSource, "addSubresource:") = Void, WebResource;

record WebDownload = externalClass(NSURLDownload);

record WebFrame = externalClass(NSObject);
overload externalInstanceMethod(#WebFrame, "initWithName:webFrameView:webView:") = Id, NSString, WebFrameView, WebView;
overload externalInstanceMethod(#WebFrame, "name") = NSString;
overload externalInstanceMethod(#WebFrame, "webView") = WebView;
overload externalInstanceMethod(#WebFrame, "frameView") = WebFrameView;
overload externalInstanceMethod(#WebFrame, "DOMDocument") = DOMDocument;
overload externalInstanceMethod(#WebFrame, "frameElement") = DOMHTMLElement;
overload externalInstanceMethod(#WebFrame, "loadRequest:") = Void, NSURLRequest;
overload externalInstanceMethod(#WebFrame, "loadData:MIMEType:textEncodingName:baseURL:") = Void, NSData, NSString, NSString, NSURL;
overload externalInstanceMethod(#WebFrame, "loadHTMLString:baseURL:") = Void, NSString, NSURL;
overload externalInstanceMethod(#WebFrame, "loadAlternateHTMLString:baseURL:forUnreachableURL:") = Void, NSString, NSURL, NSURL;
overload externalInstanceMethod(#WebFrame, "loadArchive:") = Void, WebArchive;
overload externalInstanceMethod(#WebFrame, "dataSource") = WebDataSource;
overload externalInstanceMethod(#WebFrame, "provisionalDataSource") = WebDataSource;
overload externalInstanceMethod(#WebFrame, "stopLoading") = Void;
overload externalInstanceMethod(#WebFrame, "reload") = Void;
overload externalInstanceMethod(#WebFrame, "reloadFromOrigin") = Void;
overload externalInstanceMethod(#WebFrame, "findFrameNamed:") = WebFrame, NSString;
overload externalInstanceMethod(#WebFrame, "parentFrame") = WebFrame;
overload externalInstanceMethod(#WebFrame, "childFrames") = NSArray;
overload externalInstanceMethod(#WebFrame, "windowObject") = WebScriptObject;
overload externalInstanceMethod(#WebFrame, "globalContext") = JSGlobalContextRef;

record WebFrameView = externalClass(NSView);
overload externalInstanceMethod(#WebFrameView, "webFrame") = WebFrame;
overload externalInstanceMethod(#WebFrameView, "documentView") = NSView;
overload externalInstanceMethod(#WebFrameView, "setAllowsScrolling:") = Void, Bool;
overload externalInstanceMethod(#WebFrameView, "allowsScrolling") = Bool;
overload externalInstanceMethod(#WebFrameView, "canPrintHeadersAndFooters") = Bool;
overload externalInstanceMethod(#WebFrameView, "printOperationWithPrintInfo:") = NSPrintOperation, NSPrintInfo;
overload externalInstanceMethod(#WebFrameView, "documentViewShouldHandlePrint") = Bool;
overload externalInstanceMethod(#WebFrameView, "printDocumentView") = Void;

record WebHistory = externalClass(NSObject);
overload externalClassMethod(#WebHistory, "optionalSharedHistory") = WebHistory;
overload externalClassMethod(#WebHistory, "setOptionalSharedHistory:") = Void, WebHistory;
overload externalInstanceMethod(#WebHistory, "loadFromURL:error:") = Bool, NSURL, Pointer[NSError];
overload externalInstanceMethod(#WebHistory, "saveToURL:error:") = Bool, NSURL, Pointer[NSError];
overload externalInstanceMethod(#WebHistory, "addItems:") = Void, NSArray;
overload externalInstanceMethod(#WebHistory, "removeItems:") = Void, NSArray;
overload externalInstanceMethod(#WebHistory, "removeAllItems") = Void;
overload externalInstanceMethod(#WebHistory, "orderedLastVisitedDays") = NSArray;
overload externalInstanceMethod(#WebHistory, "orderedItemsLastVisitedOnDay:") = NSArray, NSCalendarDate;
overload externalInstanceMethod(#WebHistory, "itemForURL:") = WebHistoryItem, NSURL;
overload externalInstanceMethod(#WebHistory, "setHistoryItemLimit:") = Void, Int;
overload externalInstanceMethod(#WebHistory, "historyItemLimit") = Int;
overload externalInstanceMethod(#WebHistory, "setHistoryAgeInDaysLimit:") = Void, Int;
overload externalInstanceMethod(#WebHistory, "historyAgeInDaysLimit") = Int;

record WebHistoryItem = externalClass(NSObject);
overload externalInstanceMethod(#WebHistoryItem, "copyWithZone:") = Id, Pointer[NSZone];
overload externalInstanceMethod(#WebHistoryItem, "initWithURLString:title:lastVisitedTimeInterval:") = Id, NSString, NSString, Double;
overload externalInstanceMethod(#WebHistoryItem, "originalURLString") = NSString;
overload externalInstanceMethod(#WebHistoryItem, "URLString") = NSString;
overload externalInstanceMethod(#WebHistoryItem, "title") = NSString;
overload externalInstanceMethod(#WebHistoryItem, "lastVisitedTimeInterval") = Double;
overload externalInstanceMethod(#WebHistoryItem, "setAlternateTitle:") = Void, NSString;
overload externalInstanceMethod(#WebHistoryItem, "alternateTitle") = NSString;
overload externalInstanceMethod(#WebHistoryItem, "icon") = NSImage;

record WebPreferences = externalClass(NSObject);
overload externalInstanceMethod(#WebPreferences, "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(#WebPreferences, "initWithCoder:") = Id, NSCoder;
overload externalClassMethod(#WebPreferences, "standardPreferences") = WebPreferences;
overload externalInstanceMethod(#WebPreferences, "initWithIdentifier:") = Id, NSString;
overload externalInstanceMethod(#WebPreferences, "identifier") = NSString;
overload externalInstanceMethod(#WebPreferences, "standardFontFamily") = NSString;
overload externalInstanceMethod(#WebPreferences, "setStandardFontFamily:") = Void, NSString;
overload externalInstanceMethod(#WebPreferences, "fixedFontFamily") = NSString;
overload externalInstanceMethod(#WebPreferences, "setFixedFontFamily:") = Void, NSString;
overload externalInstanceMethod(#WebPreferences, "serifFontFamily") = NSString;
overload externalInstanceMethod(#WebPreferences, "setSerifFontFamily:") = Void, NSString;
overload externalInstanceMethod(#WebPreferences, "sansSerifFontFamily") = NSString;
overload externalInstanceMethod(#WebPreferences, "setSansSerifFontFamily:") = Void, NSString;
overload externalInstanceMethod(#WebPreferences, "cursiveFontFamily") = NSString;
overload externalInstanceMethod(#WebPreferences, "setCursiveFontFamily:") = Void, NSString;
overload externalInstanceMethod(#WebPreferences, "fantasyFontFamily") = NSString;
overload externalInstanceMethod(#WebPreferences, "setFantasyFontFamily:") = Void, NSString;
overload externalInstanceMethod(#WebPreferences, "defaultFontSize") = Int;
overload externalInstanceMethod(#WebPreferences, "setDefaultFontSize:") = Void, Int;
overload externalInstanceMethod(#WebPreferences, "defaultFixedFontSize") = Int;
overload externalInstanceMethod(#WebPreferences, "setDefaultFixedFontSize:") = Void, Int;
overload externalInstanceMethod(#WebPreferences, "minimumFontSize") = Int;
overload externalInstanceMethod(#WebPreferences, "setMinimumFontSize:") = Void, Int;
overload externalInstanceMethod(#WebPreferences, "minimumLogicalFontSize") = Int;
overload externalInstanceMethod(#WebPreferences, "setMinimumLogicalFontSize:") = Void, Int;
overload externalInstanceMethod(#WebPreferences, "defaultTextEncodingName") = NSString;
overload externalInstanceMethod(#WebPreferences, "setDefaultTextEncodingName:") = Void, NSString;
overload externalInstanceMethod(#WebPreferences, "userStyleSheetEnabled") = Bool;
overload externalInstanceMethod(#WebPreferences, "setUserStyleSheetEnabled:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "userStyleSheetLocation") = NSURL;
overload externalInstanceMethod(#WebPreferences, "setUserStyleSheetLocation:") = Void, NSURL;
overload externalInstanceMethod(#WebPreferences, "isJavaEnabled") = Bool;
overload externalInstanceMethod(#WebPreferences, "setJavaEnabled:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "isJavaScriptEnabled") = Bool;
overload externalInstanceMethod(#WebPreferences, "setJavaScriptEnabled:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "javaScriptCanOpenWindowsAutomatically") = Bool;
overload externalInstanceMethod(#WebPreferences, "setJavaScriptCanOpenWindowsAutomatically:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "arePlugInsEnabled") = Bool;
overload externalInstanceMethod(#WebPreferences, "setPlugInsEnabled:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "allowsAnimatedImages") = Bool;
overload externalInstanceMethod(#WebPreferences, "setAllowsAnimatedImages:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "allowsAnimatedImageLooping") = Bool;
overload externalInstanceMethod(#WebPreferences, "setAllowsAnimatedImageLooping:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "setLoadsImagesAutomatically:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "loadsImagesAutomatically") = Bool;
overload externalInstanceMethod(#WebPreferences, "setAutosaves:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "autosaves") = Bool;
overload externalInstanceMethod(#WebPreferences, "setShouldPrintBackgrounds:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "shouldPrintBackgrounds") = Bool;
overload externalInstanceMethod(#WebPreferences, "setPrivateBrowsingEnabled:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "privateBrowsingEnabled") = Bool;
overload externalInstanceMethod(#WebPreferences, "setTabsToLinks:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "tabsToLinks") = Bool;
overload externalInstanceMethod(#WebPreferences, "setUsesPageCache:") = Void, Bool;
overload externalInstanceMethod(#WebPreferences, "usesPageCache") = Bool;
overload externalInstanceMethod(#WebPreferences, "setCacheModel:") = Void, CULong;
overload externalInstanceMethod(#WebPreferences, "cacheModel") = CULong;

record WebResource = externalClass(NSObject);
overload externalInstanceMethod(#WebResource, "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(#WebResource, "initWithCoder:") = Id, NSCoder;
overload externalInstanceMethod(#WebResource, "copyWithZone:") = Id, Pointer[NSZone];
overload externalInstanceMethod(#WebResource, "initWithData:URL:MIMEType:textEncodingName:frameName:") = Id, NSData, NSURL, NSString, NSString, NSString;
overload externalInstanceMethod(#WebResource, "data") = NSData;
overload externalInstanceMethod(#WebResource, "URL") = NSURL;
overload externalInstanceMethod(#WebResource, "MIMEType") = NSString;
overload externalInstanceMethod(#WebResource, "textEncodingName") = NSString;
overload externalInstanceMethod(#WebResource, "frameName") = NSString;

record WebScriptObject = externalClass(NSObject);
overload externalClassMethod(#WebScriptObject, "throwException:") = Bool, NSString;
overload externalInstanceMethod(#WebScriptObject, "JSObject") = JSObjectRef;
overload externalInstanceMethod(#WebScriptObject, "callWebScriptMethod:withArguments:") = Id, NSString, NSArray;
overload externalInstanceMethod(#WebScriptObject, "evaluateWebScript:") = Id, NSString;
overload externalInstanceMethod(#WebScriptObject, "removeWebScriptKey:") = Void, NSString;
overload externalInstanceMethod(#WebScriptObject, "stringRepresentation") = NSString;
overload externalInstanceMethod(#WebScriptObject, "webScriptValueAtIndex:") = Id, UInt;
overload externalInstanceMethod(#WebScriptObject, "setWebScriptValueAtIndex:value:") = Void, UInt, Id;
overload externalInstanceMethod(#WebScriptObject, "setException:") = Void, NSString;

record WebUndefined = externalClass(NSObject);
overload externalInstanceMethod(#WebUndefined, "encodeWithCoder:") = Void, NSCoder;
overload externalInstanceMethod(#WebUndefined, "initWithCoder:") = Id, NSCoder;
overload externalInstanceMethod(#WebUndefined, "copyWithZone:") = Id, Pointer[NSZone];
overload externalClassMethod(#WebUndefined, "undefined") = WebUndefined;

record WebView = externalClass(NSView);
overload externalClassMethod(#WebView, "canShowMIMEType:") = Bool, NSString;
overload externalClassMethod(#WebView, "canShowMIMETypeAsHTML:") = Bool, NSString;
overload externalClassMethod(#WebView, "MIMETypesShownAsHTML") = NSArray;
overload externalClassMethod(#WebView, "setMIMETypesShownAsHTML:") = Void, NSArray;
overload externalClassMethod(#WebView, "URLFromPasteboard:") = NSURL, NSPasteboard;
overload externalClassMethod(#WebView, "URLTitleFromPasteboard:") = NSString, NSPasteboard;
overload externalClassMethod(#WebView, "registerURLSchemeAsLocal:") = Void, NSString;
overload externalInstanceMethod(#WebView, "initWithFrame:frameName:groupName:") = Id, NSRect, NSString, NSString;
overload externalInstanceMethod(#WebView, "close") = Void;
overload externalInstanceMethod(#WebView, "setShouldCloseWithWindow:") = Void, Bool;
overload externalInstanceMethod(#WebView, "shouldCloseWithWindow") = Bool;
overload externalInstanceMethod(#WebView, "setUIDelegate:") = Void, Id;
overload externalInstanceMethod(#WebView, "UIDelegate") = Id;
overload externalInstanceMethod(#WebView, "setResourceLoadDelegate:") = Void, Id;
overload externalInstanceMethod(#WebView, "resourceLoadDelegate") = Id;
overload externalInstanceMethod(#WebView, "setDownloadDelegate:") = Void, Id;
overload externalInstanceMethod(#WebView, "downloadDelegate") = Id;
overload externalInstanceMethod(#WebView, "setFrameLoadDelegate:") = Void, Id;
overload externalInstanceMethod(#WebView, "frameLoadDelegate") = Id;
overload externalInstanceMethod(#WebView, "setPolicyDelegate:") = Void, Id;
overload externalInstanceMethod(#WebView, "policyDelegate") = Id;
overload externalInstanceMethod(#WebView, "mainFrame") = WebFrame;
overload externalInstanceMethod(#WebView, "selectedFrame") = WebFrame;
overload externalInstanceMethod(#WebView, "backForwardList") = WebBackForwardList;
overload externalInstanceMethod(#WebView, "setMaintainsBackForwardList:") = Void, Bool;
overload externalInstanceMethod(#WebView, "goBack") = Bool;
overload externalInstanceMethod(#WebView, "goForward") = Bool;
overload externalInstanceMethod(#WebView, "goToBackForwardItem:") = Bool, WebHistoryItem;
overload externalInstanceMethod(#WebView, "setTextSizeMultiplier:") = Void, Float;
overload externalInstanceMethod(#WebView, "textSizeMultiplier") = Float;
overload externalInstanceMethod(#WebView, "setApplicationNameForUserAgent:") = Void, NSString;
overload externalInstanceMethod(#WebView, "applicationNameForUserAgent") = NSString;
overload externalInstanceMethod(#WebView, "setCustomUserAgent:") = Void, NSString;
overload externalInstanceMethod(#WebView, "customUserAgent") = NSString;
overload externalInstanceMethod(#WebView, "userAgentForURL:") = NSString, NSURL;
overload externalInstanceMethod(#WebView, "supportsTextEncoding") = Bool;
overload externalInstanceMethod(#WebView, "setCustomTextEncodingName:") = Void, NSString;
overload externalInstanceMethod(#WebView, "customTextEncodingName") = NSString;
overload externalInstanceMethod(#WebView, "setMediaStyle:") = Void, NSString;
overload externalInstanceMethod(#WebView, "mediaStyle") = NSString;
overload externalInstanceMethod(#WebView, "stringByEvaluatingJavaScriptFromString:") = NSString, NSString;
overload externalInstanceMethod(#WebView, "windowScriptObject") = WebScriptObject;
overload externalInstanceMethod(#WebView, "setPreferences:") = Void, WebPreferences;
overload externalInstanceMethod(#WebView, "preferences") = WebPreferences;
overload externalInstanceMethod(#WebView, "setPreferencesIdentifier:") = Void, NSString;
overload externalInstanceMethod(#WebView, "preferencesIdentifier") = NSString;
overload externalInstanceMethod(#WebView, "setHostWindow:") = Void, NSWindow;
overload externalInstanceMethod(#WebView, "hostWindow") = NSWindow;
overload externalInstanceMethod(#WebView, "searchFor:direction:caseSensitive:wrap:") = Bool, NSString, Bool, Bool, Bool;
overload externalClassMethod(#WebView, "registerViewClass:representationClass:forMIMEType:") = Void, Id, Id, NSString;
overload externalInstanceMethod(#WebView, "setGroupName:") = Void, NSString;
overload externalInstanceMethod(#WebView, "groupName") = NSString;
overload externalInstanceMethod(#WebView, "estimatedProgress") = Double;
overload externalInstanceMethod(#WebView, "isLoading") = Bool;
overload externalInstanceMethod(#WebView, "elementAtPoint:") = NSDictionary, NSPoint;
overload externalInstanceMethod(#WebView, "pasteboardTypesForSelection") = NSArray;
overload externalInstanceMethod(#WebView, "writeSelectionWithPasteboardTypes:toPasteboard:") = Void, NSArray, NSPasteboard;
overload externalInstanceMethod(#WebView, "pasteboardTypesForElement:") = NSArray, NSDictionary;
overload externalInstanceMethod(#WebView, "writeElement:withPasteboardTypes:toPasteboard:") = Void, NSDictionary, NSArray, NSPasteboard;
overload externalInstanceMethod(#WebView, "moveDragCaretToPoint:") = Void, NSPoint;
overload externalInstanceMethod(#WebView, "removeDragCaret") = Void;
overload externalInstanceMethod(#WebView, "setDrawsBackground:") = Void, Bool;
overload externalInstanceMethod(#WebView, "drawsBackground") = Bool;
overload externalInstanceMethod(#WebView, "setShouldUpdateWhileOffscreen:") = Void, Bool;
overload externalInstanceMethod(#WebView, "shouldUpdateWhileOffscreen") = Bool;
overload externalInstanceMethod(#WebView, "setMainFrameURL:") = Void, NSString;
overload externalInstanceMethod(#WebView, "mainFrameURL") = NSString;
overload externalInstanceMethod(#WebView, "mainFrameDocument") = DOMDocument;
overload externalInstanceMethod(#WebView, "mainFrameTitle") = NSString;
overload externalInstanceMethod(#WebView, "mainFrameIcon") = NSImage;
overload externalInstanceMethod(#WebView, "takeStringURLFrom:") = Void, Id;
overload externalInstanceMethod(#WebView, "stopLoading:") = Void, Id;
overload externalInstanceMethod(#WebView, "reload:") = Void, Id;
overload externalInstanceMethod(#WebView, "reloadFromOrigin:") = Void, Id;
overload externalInstanceMethod(#WebView, "canGoBack") = Bool;
overload externalInstanceMethod(#WebView, "goBack:") = Void, Id;
overload externalInstanceMethod(#WebView, "canGoForward") = Bool;
overload externalInstanceMethod(#WebView, "goForward:") = Void, Id;
overload externalInstanceMethod(#WebView, "canMakeTextLarger") = Bool;
overload externalInstanceMethod(#WebView, "makeTextLarger:") = Void, Id;
overload externalInstanceMethod(#WebView, "canMakeTextSmaller") = Bool;
overload externalInstanceMethod(#WebView, "makeTextSmaller:") = Void, Id;
overload externalInstanceMethod(#WebView, "canMakeTextStandardSize") = Bool;
overload externalInstanceMethod(#WebView, "makeTextStandardSize:") = Void, Id;
overload externalInstanceMethod(#WebView, "toggleContinuousSpellChecking:") = Void, Id;
overload externalInstanceMethod(#WebView, "toggleSmartInsertDelete:") = Void, Id;
overload externalInstanceMethod(#WebView, "computedStyleForElement:pseudoElement:") = DOMCSSStyleDeclaration, DOMElement, NSString;
overload externalInstanceMethod(#WebView, "editableDOMRangeForPoint:") = DOMRange, NSPoint;
overload externalInstanceMethod(#WebView, "setSelectedDOMRange:affinity:") = Void, DOMRange, CULong;
overload externalInstanceMethod(#WebView, "selectedDOMRange") = DOMRange;
overload externalInstanceMethod(#WebView, "selectionAffinity") = CULong;
overload externalInstanceMethod(#WebView, "maintainsInactiveSelection") = Bool;
overload externalInstanceMethod(#WebView, "setEditable:") = Void, Bool;
overload externalInstanceMethod(#WebView, "isEditable") = Bool;
overload externalInstanceMethod(#WebView, "setTypingStyle:") = Void, DOMCSSStyleDeclaration;
overload externalInstanceMethod(#WebView, "typingStyle") = DOMCSSStyleDeclaration;
overload externalInstanceMethod(#WebView, "setSmartInsertDeleteEnabled:") = Void, Bool;
overload externalInstanceMethod(#WebView, "smartInsertDeleteEnabled") = Bool;
overload externalInstanceMethod(#WebView, "setContinuousSpellCheckingEnabled:") = Void, Bool;
overload externalInstanceMethod(#WebView, "isContinuousSpellCheckingEnabled") = Bool;
overload externalInstanceMethod(#WebView, "spellCheckerDocumentTag") = CLong;
overload externalInstanceMethod(#WebView, "undoManager") = NSUndoManager;
overload externalInstanceMethod(#WebView, "setEditingDelegate:") = Void, Id;
overload externalInstanceMethod(#WebView, "editingDelegate") = Id;
overload externalInstanceMethod(#WebView, "styleDeclarationWithText:") = DOMCSSStyleDeclaration, NSString;
overload externalInstanceMethod(#WebView, "replaceSelectionWithNode:") = Void, DOMNode;
overload externalInstanceMethod(#WebView, "replaceSelectionWithText:") = Void, NSString;
overload externalInstanceMethod(#WebView, "replaceSelectionWithMarkupString:") = Void, NSString;
overload externalInstanceMethod(#WebView, "replaceSelectionWithArchive:") = Void, WebArchive;
overload externalInstanceMethod(#WebView, "deleteSelection") = Void;
overload externalInstanceMethod(#WebView, "applyStyle:") = Void, DOMCSSStyleDeclaration;
overload externalInstanceMethod(#WebView, "copy:") = Void, Id;
overload externalInstanceMethod(#WebView, "cut:") = Void, Id;
overload externalInstanceMethod(#WebView, "paste:") = Void, Id;
overload externalInstanceMethod(#WebView, "copyFont:") = Void, Id;
overload externalInstanceMethod(#WebView, "pasteFont:") = Void, Id;
overload externalInstanceMethod(#WebView, "delete:") = Void, Id;
overload externalInstanceMethod(#WebView, "pasteAsPlainText:") = Void, Id;
overload externalInstanceMethod(#WebView, "pasteAsRichText:") = Void, Id;
overload externalInstanceMethod(#WebView, "changeFont:") = Void, Id;
overload externalInstanceMethod(#WebView, "changeAttributes:") = Void, Id;
overload externalInstanceMethod(#WebView, "changeDocumentBackgroundColor:") = Void, Id;
overload externalInstanceMethod(#WebView, "changeColor:") = Void, Id;
overload externalInstanceMethod(#WebView, "alignCenter:") = Void, Id;
overload externalInstanceMethod(#WebView, "alignJustified:") = Void, Id;
overload externalInstanceMethod(#WebView, "alignLeft:") = Void, Id;
overload externalInstanceMethod(#WebView, "alignRight:") = Void, Id;
overload externalInstanceMethod(#WebView, "checkSpelling:") = Void, Id;
overload externalInstanceMethod(#WebView, "showGuessPanel:") = Void, Id;
overload externalInstanceMethod(#WebView, "performFindPanelAction:") = Void, Id;
overload externalInstanceMethod(#WebView, "startSpeaking:") = Void, Id;
overload externalInstanceMethod(#WebView, "stopSpeaking:") = Void, Id;
overload externalInstanceMethod(#WebView, "moveToBeginningOfSentence:") = Void, Id;
overload externalInstanceMethod(#WebView, "moveToBeginningOfSentenceAndModifySelection:") = Void, Id;
overload externalInstanceMethod(#WebView, "moveToEndOfSentence:") = Void, Id;
overload externalInstanceMethod(#WebView, "moveToEndOfSentenceAndModifySelection:") = Void, Id;
overload externalInstanceMethod(#WebView, "selectSentence:") = Void, Id;


external DOMException : NSString;

alias DOM_INDEX_SIZE_ERR = 1;
alias DOM_DOMSTRING_SIZE_ERR = 2;
alias DOM_HIERARCHY_REQUEST_ERR = 3;
alias DOM_WRONG_DOCUMENT_ERR = 4;
alias DOM_INVALID_CHARACTER_ERR = 5;
alias DOM_NO_DATA_ALLOWED_ERR = 6;
alias DOM_NO_MODIFICATION_ALLOWED_ERR = 7;
alias DOM_NOT_FOUND_ERR = 8;
alias DOM_NOT_SUPPORTED_ERR = 9;
alias DOM_INUSE_ATTRIBUTE_ERR = 10;
alias DOM_INVALID_STATE_ERR = 11;
alias DOM_SYNTAX_ERR = 12;
alias DOM_INVALID_MODIFICATION_ERR = 13;
alias DOM_NAMESPACE_ERR = 14;
alias DOM_INVALID_ACCESS_ERR = 15;

alias DOMTimeStamp = UInt64;

alias DOMObjectInternal = Opaque;

alias DOM_ELEMENT_NODE = 1;
alias DOM_ATTRIBUTE_NODE = 2;
alias DOM_TEXT_NODE = 3;
alias DOM_CDATA_SECTION_NODE = 4;
alias DOM_ENTITY_REFERENCE_NODE = 5;
alias DOM_ENTITY_NODE = 6;
alias DOM_PROCESSING_INSTRUCTION_NODE = 7;
alias DOM_COMMENT_NODE = 8;
alias DOM_DOCUMENT_NODE = 9;
alias DOM_DOCUMENT_TYPE_NODE = 10;
alias DOM_DOCUMENT_FRAGMENT_NODE = 11;
alias DOM_NOTATION_NODE = 12;
alias DOM_DOCUMENT_POSITION_DISCONNECTED = 1;
alias DOM_DOCUMENT_POSITION_PRECEDING = 2;
alias DOM_DOCUMENT_POSITION_FOLLOWING = 4;
alias DOM_DOCUMENT_POSITION_CONTAINS = 8;
alias DOM_DOCUMENT_POSITION_CONTAINED_BY = 16;
alias DOM_DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC = 32;

alias DOM_UNKNOWN_RULE = 0;
alias DOM_STYLE_RULE = 1;
alias DOM_CHARSET_RULE = 2;
alias DOM_IMPORT_RULE = 3;
alias DOM_MEDIA_RULE = 4;
alias DOM_FONT_FACE_RULE = 5;
alias DOM_PAGE_RULE = 6;
alias DOM_VARIABLES_RULE = 7;
alias DOM_WEBKIT_KEYFRAMES_RULE = 8;
alias DOM_WEBKIT_KEYFRAME_RULE = 9;

alias DOM_CSS_INHERIT = 0;
alias DOM_CSS_PRIMITIVE_VALUE = 1;
alias DOM_CSS_VALUE_LIST = 2;
alias DOM_CSS_CUSTOM = 3;

alias DOM_CSS_UNKNOWN = 0;
alias DOM_CSS_NUMBER = 1;
alias DOM_CSS_PERCENTAGE = 2;
alias DOM_CSS_EMS = 3;
alias DOM_CSS_EXS = 4;
alias DOM_CSS_PX = 5;
alias DOM_CSS_CM = 6;
alias DOM_CSS_MM = 7;
alias DOM_CSS_IN = 8;
alias DOM_CSS_PT = 9;
alias DOM_CSS_PC = 10;
alias DOM_CSS_DEG = 11;
alias DOM_CSS_RAD = 12;
alias DOM_CSS_GRAD = 13;
alias DOM_CSS_MS = 14;
alias DOM_CSS_S = 15;
alias DOM_CSS_HZ = 16;
alias DOM_CSS_KHZ = 17;
alias DOM_CSS_DIMENSION = 18;
alias DOM_CSS_STRING = 19;
alias DOM_CSS_URI = 20;
alias DOM_CSS_IDENT = 21;
alias DOM_CSS_ATTR = 22;
alias DOM_CSS_COUNTER = 23;
alias DOM_CSS_RECT = 24;
alias DOM_CSS_RGBCOLOR = 25;

external DOMRangeException : NSString;

alias DOM_BAD_BOUNDARYPOINTS_ERR = 1;
alias DOM_INVALID_NODE_TYPE_ERR = 2;

alias DOM_START_TO_START = 0;
alias DOM_START_TO_END = 1;
alias DOM_END_TO_END = 2;
alias DOM_END_TO_START = 3;
alias DOM_NODE_BEFORE = 0;
alias DOM_NODE_AFTER = 1;
alias DOM_NODE_BEFORE_AND_AFTER = 2;
alias DOM_NODE_INSIDE = 3;

alias DOM_CAPTURING_PHASE = 1;
alias DOM_AT_TARGET = 2;
alias DOM_BUBBLING_PHASE = 3;

external DOMEventException : NSString;

alias DOM_UNSPECIFIED_EVENT_TYPE_ERR = 0;

alias DOM_KEY_LOCATION_STANDARD = 0;
alias DOM_KEY_LOCATION_LEFT = 1;
alias DOM_KEY_LOCATION_RIGHT = 2;
alias DOM_KEY_LOCATION_NUMPAD = 3;

alias DOM_MODIFICATION = 1;
alias DOM_ADDITION = 2;
alias DOM_REMOVAL = 3;

alias DOM_HORIZONTAL = 0;
alias DOM_VERTICAL = 1;
alias DOM_BOTH = 2;

alias DOM_FILTER_ACCEPT = 1;
alias DOM_FILTER_REJECT = 2;
alias DOM_FILTER_SKIP = 3;
alias DOM_SHOW_ALL = 4294967295;
alias DOM_SHOW_ELEMENT = 1;
alias DOM_SHOW_ATTRIBUTE = 2;
alias DOM_SHOW_TEXT = 4;
alias DOM_SHOW_CDATA_SECTION = 8;
alias DOM_SHOW_ENTITY_REFERENCE = 16;
alias DOM_SHOW_ENTITY = 32;
alias DOM_SHOW_PROCESSING_INSTRUCTION = 64;
alias DOM_SHOW_COMMENT = 128;
alias DOM_SHOW_DOCUMENT = 256;
alias DOM_SHOW_DOCUMENT_TYPE = 512;
alias DOM_SHOW_DOCUMENT_FRAGMENT = 1024;
alias DOM_SHOW_NOTATION = 2048;

external DOMXPathException : NSString;

alias DOM_INVALID_EXPRESSION_ERR = 51;
alias DOM_TYPE_ERR = 52;

alias DOM_ANY_TYPE = 0;
alias DOM_NUMBER_TYPE = 1;
alias DOM_STRING_TYPE = 2;
alias DOM_BOOLEAN_TYPE = 3;
alias DOM_UNORDERED_NODE_ITERATOR_TYPE = 4;
alias DOM_ORDERED_NODE_ITERATOR_TYPE = 5;
alias DOM_UNORDERED_NODE_SNAPSHOT_TYPE = 6;
alias DOM_ORDERED_NODE_SNAPSHOT_TYPE = 7;
alias DOM_ANY_UNORDERED_NODE_TYPE = 8;
alias DOM_FIRST_ORDERED_NODE_TYPE = 9;

external WebArchivePboardType : NSString;

alias WebViewInsertActionTyped = 0;
alias WebViewInsertActionPasted = 1;
alias WebViewInsertActionDropped = 2;

alias WebViewInsertAction = Int;

external WebHistoryItemsAddedNotification : NSString;

external WebHistoryItemsRemovedNotification : NSString;

external WebHistoryAllItemsRemovedNotification : NSString;

external WebHistoryLoadedNotification : NSString;

external WebHistorySavedNotification : NSString;

external WebHistoryItemsKey : NSString;

external WebHistoryItemChangedNotification : NSString;

external WebKitErrorDomain : NSString;

external WebKitErrorMIMETypeKey : NSString;

external WebKitErrorPlugInNameKey : NSString;

external WebKitErrorPlugInPageURLStringKey : NSString;

alias WebKitErrorCannotShowMIMEType = 100;
alias WebKitErrorCannotShowURL = 101;
alias WebKitErrorFrameLoadInterruptedByPolicyChange = 102;

alias WebKitErrorCannotFindPlugIn = 200;
alias WebKitErrorCannotLoadPlugIn = 201;
alias WebKitErrorJavaUnavailable = 202;

external WebPlugInBaseURLKey : NSString;

external WebPlugInAttributesKey : NSString;

external WebPlugInContainerKey : NSString;

external WebPlugInContainingElementKey : NSString;

external WebPlugInShouldLoadMainResourceKey : NSString;

alias WebNavigationTypeLinkClicked = 0;
alias WebNavigationTypeFormSubmitted = 1;
alias WebNavigationTypeBackForward = 2;
alias WebNavigationTypeReload = 3;
alias WebNavigationTypeFormResubmitted = 4;
alias WebNavigationTypeOther = 5;

alias WebNavigationType = Int;

external WebActionNavigationTypeKey : NSString;

external WebActionElementKey : NSString;

external WebActionButtonKey : NSString;

external WebActionModifierFlagsKey : NSString;

external WebActionOriginalURLKey : NSString;

alias WebCacheModelDocumentViewer = 0;
alias WebCacheModelDocumentBrowser = 1;
alias WebCacheModelPrimaryWebBrowser = 2;

alias WebCacheModel = CULong;

external WebPreferencesChangedNotification : NSString;

alias WebMenuItemTagOpenLinkInNewWindow = 1;
alias WebMenuItemTagDownloadLinkToDisk = 2;
alias WebMenuItemTagCopyLinkToClipboard = 3;
alias WebMenuItemTagOpenImageInNewWindow = 4;
alias WebMenuItemTagDownloadImageToDisk = 5;
alias WebMenuItemTagCopyImageToClipboard = 6;
alias WebMenuItemTagOpenFrameInNewWindow = 7;
alias WebMenuItemTagCopy = 8;
alias WebMenuItemTagGoBack = 9;
alias WebMenuItemTagGoForward = 10;
alias WebMenuItemTagStop = 11;
alias WebMenuItemTagReload = 12;
alias WebMenuItemTagCut = 13;
alias WebMenuItemTagPaste = 14;
alias WebMenuItemTagSpellingGuess = 15;
alias WebMenuItemTagNoGuessesFound = 16;
alias WebMenuItemTagIgnoreSpelling = 17;
alias WebMenuItemTagLearnSpelling = 18;
alias WebMenuItemTagOther = 19;
alias WebMenuItemTagSearchInSpotlight = 20;
alias WebMenuItemTagSearchWeb = 21;
alias WebMenuItemTagLookUpInDictionary = 22;
alias WebMenuItemTagOpenWithDefaultApplication = 23;
alias WebMenuItemPDFActualSize = 24;
alias WebMenuItemPDFZoomIn = 25;
alias WebMenuItemPDFZoomOut = 26;
alias WebMenuItemPDFAutoSize = 27;
alias WebMenuItemPDFSinglePage = 28;
alias WebMenuItemPDFFacingPages = 29;
alias WebMenuItemPDFContinuous = 30;
alias WebMenuItemPDFNextPage = 31;
alias WebMenuItemPDFPreviousPage = 32;

alias WebDragDestinationActionNone = 0;
alias WebDragDestinationActionDHTML = 1;
alias WebDragDestinationActionEdit = 2;
alias WebDragDestinationActionLoad = 4;
alias WebDragDestinationActionAny = 4294967295;

alias WebDragDestinationAction = Int;

alias WebDragSourceActionNone = 0;
alias WebDragSourceActionDHTML = 1;
alias WebDragSourceActionImage = 2;
alias WebDragSourceActionLink = 4;
alias WebDragSourceActionSelection = 8;
alias WebDragSourceActionAny = 4294967295;

alias WebDragSourceAction = Int;

external WebElementDOMNodeKey : NSString;

external WebElementFrameKey : NSString;

external WebElementImageAltStringKey : NSString;

external WebElementImageKey : NSString;

external WebElementImageRectKey : NSString;

external WebElementImageURLKey : NSString;

external WebElementIsSelectedKey : NSString;

external WebElementLinkURLKey : NSString;

external WebElementLinkTargetFrameKey : NSString;

external WebElementLinkTitleKey : NSString;

external WebElementLinkLabelKey : NSString;

external WebViewProgressStartedNotification : NSString;

external WebViewProgressEstimateChangedNotification : NSString;

external WebViewProgressFinishedNotification : NSString;

external WebViewDidBeginEditingNotification : NSString;

external WebViewDidChangeNotification : NSString;

external WebViewDidEndEditingNotification : NSString;

external WebViewDidChangeTypingStyleNotification : NSString;

external WebViewDidChangeSelectionNotification : NSString;
