// acosh
import ieee754.*;
public import claym.*;

overload acosh(x:Double) {
	alias ONE = 1.;
	var t,hx,lx = 0., ..EXTRACT_SIGNED_HI(x);
	if(hx < RM) {		/* x < 1 */
	    return (x-x)/(x-x);
	} 
	else if(hx >=0x41b00000) {	/* x > 2**28 */
	    if(hx >=EM)	/* x is inf of NaN */
	        return x+x;
	    else 
			return log(x)+M_LN2;	/* acosh(huge)=log(2x) */
	} 
	else 
		if(bitor(hx-RM,lx) == 0) {
	    	return 0.0;			/* acosh(1) = 0 */
		} else if (hx > CV2) {	/* 2**28 > x > 2 */
	    	t = x*x;
	    	return log(2.0*x-ONE/(x+sqrt(t-ONE)));
		} else {			/* 1<x<2 */
	    	t = x-ONE;
	    	return log1p(t+sqrt(2.0*t+t*t));
		}
}
