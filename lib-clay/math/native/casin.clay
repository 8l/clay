// Return arc sine of complex double value.

public import math.native.asin.(asin); 
import math.native.casinh.(asinh); 
import math.native.copysign.(copysign);
import complex.*;

overload asin(x:C) --> res:C {
 
    if (nan?(real(x)) or nan?(imagValue(x))) {
        if (real(x) == 0.0){
            res <-- x;
        }
        else if (infinity?(real(x)) or infinity?(imagValue(x))) {
           res <-- Complex(nan(ComplexBaseType(C)),copysign(GreatestPositiveFinite(Double),imagValue(x)));
        }
        else
            res <-- nan(C);
    }
    else {
        var y = asinh(Complex(-imagValue(x),real(x)));
        res <-- Complex(imagValue(y),-real(y));
    }
}