
import math.(exp);
import math.native.trig_safe.(sin_safe,cos_safe,tan_safe);
// import math.native.trig_unsafe.(sin_unsafe,cos_unsafe,tan_unsafe);

define sin;
define cos;
define tan;
define sinh;
define cosh;
define tanh;
define sigmoid;

[T | Float?(T) and Flag?(#"FAST_MATH")]
inline overload sin(x:T) = sin_safe(x);
[T | Float?(T) and not Flag?(#"FAST_MATH")]
inline overload sin(x:T) = sin_safe(x);

[T | Float?(T) and Flag?(#"FAST_MATH")]
inline overload cos(x:T) = cos_safe(x);
[T | Float?(T) and not Flag?(#"FAST_MATH")]
inline overload cos(x:T) = cos_safe(x);

[T | Float?(T) and Flag?(#"FAST_MATH")]
inline overload tan(x:T) = tan_safe(x);
[T | Float?(T) and not Flag?(#"FAST_MATH")]
inline overload tan(x:T) = tan_safe(x);

[T | Float?(T)]
inline overload sinh (p:T) = T(0.5) * (exp(p) - exp(-p));

[T | Float?(T)]
inline overload cosh (p:T) = T(0.5) * (exp(p) + exp(-p));

[T | Float?(T)]
inline overload tanh (p:T) = T(-1) + T(2) / (T(1) + exp (T(-2) * p));

[T | Float?(T)]
inline overload sigmoid (x:T) = T(1) / (T(1) + exp (-x));
