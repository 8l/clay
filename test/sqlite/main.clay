import sqlite.*;

record Wotsit (id: Int, name: String);

record ExemplaryError ();
instance Exception = ExemplaryError;

main() {
    var db = SqliteDB("temp.sqlite");

    println("creating table hoozits");
    runStatement(db, "create temp table hoozits (foo text, bar integer)"); 

    println("inserting table");
    withTransaction(db, () ref=> {
        runStatement(db, "insert into hoozits values ('lolcats', 9001)"); 
        runStatement(db, "insert into hoozits values ('goatse', -1)"); 
        runStatement(db, "insert into hoozits values ('doublerainbow', 2)"); 
    });

    println("selecting table");
    for (row in SqliteStatement(db, "select * from hoozits order by bar"))
        println("  ", row[0], " => ", row[1, Int]);

    println("updating table");

    runStatement(db, "update hoozits set foo = ?, bar = ? where foo = ?",
        "all your base", 2101, "goatse"
    );

    var updateStmt = SqliteStatement(db, "update hoozits set foo = ?, bar = ? where foo = ?");
    runStatement(updateStmt, "mario", 34, "lolcats");
    runStatement(updateStmt, "turkeys", 3, "doublerainbow");

    println("selecting table");
    for (row in SqliteStatement(db, "select * from hoozits order by bar"))
        println("  ", row[0], " => ", row[1, Int]);

    println("dropping table");
    runStatement(db, "drop table hoozits");

    println();
    println("creating table wotsits");
    runStatement(db, "create temp table wotsits (id integer primary key, name text)");

    var insertStmt = SqliteStatement(db, "insert into wotsits values (?, ?)", 0, "zim");
    println("inserting table");
    withTransaction(db, () ref=> {
        runStatement(insertStmt);
        runStatement(insertStmt, 1, SqliteNull);
        runStatement(insertStmt, 2, "zang");
    });

    println("selecting table");
    for (row in SqliteStatement(db, "select id, name from wotsits order by id")) {
        if (nullColumn?(row, 1))
            println("  -- null name in wotsit ", row[0, Int]);
        else {
            println("  -- values: ", ...weaveValues(", ", ...rowValues(row, Int, String)));
            println("     tuple:  ", rowTuple(row, Int, String));
            println("     record: ", rowRecord(row, Wotsit));
        }
    }

    println("trying transaction");
    try {
        withTransaction(db, () ref=> {
            runStatement(insertStmt, 3, "zung");
            throw ExemplaryError();
        });
    } catch (ex: ExemplaryError) {
        println("caught exception during transaction");
    }

    println("selecting table");
    for (row in SqliteStatement(db, "select id, name from wotsits order by id")) {
        if (nullColumn?(row, 1))
            println("  null name in wotsit ", row[0, Int]);
        else {
            println("  values: ", ...weaveValues(", ", ...rowValues(row, Int, String)));
        }
    }

    println("trying transaction again");
    withTransaction(db, () ref=> {
        runStatement(insertStmt, 3, "zung");
    });

    println("selecting table");
    for (row in SqliteStatement(db, "select id, name from wotsits order by id")) {
        if (nullColumn?(row, 1))
            println("  null name in wotsit ", row[0, Int]);
        else {
            println("  values: ", ...weaveValues(", ", ...rowValues(row, Int, String)));
        }
    }

    println("dropping table");
    runStatement(db, "drop table wotsits");
}
