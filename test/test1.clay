import base;

def factorial(n) {
    if (equals(n, 0))
        return 1;
    return multiply(n, factorial(subtract(n, 1)));
}

def isEven(n) {
    if (lesser(n, 2))
        return equals(n, 0);
    return isOdd(subtract(n, 1));
}

def isOdd(n) {
    if (lesser(n, 2))
        return equals(n, 1);
    return isEven(subtract(n, 1));
}

def foo() {
    return array(10, 10);
}

record NodeA[T] {
    value: T;
    next: Pointer[NodeB[T]];
}

record NodeB[T] {
    ptr: Pointer[T];
    next: Pointer[NodeA[T]];
}

def main() {
    var n = 7;
    n = subtract(n, 1);
    var f = factorial(n);
    var p = default(NodeA[(Int,Bool)]);
    return (foo(), isEven(n), f, p);
}
