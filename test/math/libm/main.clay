// Test math functions

import math.*;

ftypes() = Float64;

fdata() = 0., 1., -1.,3.,38., 355., M_PI,-M_PI, nan(Double), -nan(Double),
    infinity(Double), negativeInfinity(Double), LeastPositive(Double),
    LeastPositiveNormalized(Double), GreatestPositiveFinite(Double);


oneArgFuncs() = 
                abs,recip,
                sqrt,rsqrt,cbrt,square,cube,
                trunc,round,ceil,floor,rint,
                significand,
                sin,cos,tan,
                asin,acos,atan,
                sinh,cosh,tanh,
                exp,expm1,sigmoid,
                log,log10,log2,ilogb,log1p,
                erf,erfc,gamma,lgamma,
                //j0,j1,i1,
                sec,csc,cot,
                asec,acsc,acot,
                sech,csch,coth,
                asech,acsch,acoth, 
                ;


twoArgFuncs() = 
                pow,beta,atan2,
                ;


evalFuncs(funcs,data,types) {
    ..for(f in funcs()) {
        ..for(t in types())
            ..for(d in data())
                println(StaticName(f),"(",t(d),") = ",f(t(d)));
        println();            
    }
}

overload evalFuncs(funcs,data1,data2,types) {
    ..for(f in funcs()) {
        ..for(t in types())
            ..for(d1 in data1())
                ..for(d2 in data2())
                    println(StaticName(f),"(",t(d1),",",t(d2),") = ",f(t(d1),t(d2)));
        println();            
    }
}


main() {

    evalFuncs(oneArgFuncs,fdata,ftypes);
    evalFuncs(twoArgFuncs,fdata,fdata,ftypes);

}



