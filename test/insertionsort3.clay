import kernel.*;

insertionSort(a) {
    var i = begin(a) + 1;
    while (i < end(a)) {
        var x = deref(i);
        var j = i;
        while (deref(j-1) > x) {
            deref(j) = deref(j-1);
            j = j - 1;
            if (j == begin(a)) break;
        }
        deref(j) = x;
        i = i + 1;
    }
}

reverse(a) {
    var n = size(a);
    for (i in range(n / 2))
        swap(item(a, i), item(a, n-i-1));
}

main() {
    var a = Vector[Int32]();
    for (i in range(1000))
        push(a, i*2);
    for (i in range(100)) {
        insertionSort(a);
        reverse(a);
    }
    return item(a, 0);
}
