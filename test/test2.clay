import kernel.*;

record CustomCompare[T,F](x:T, static F);

overload lesser?[T,F](a:CustomCompare[T,F], b:CustomCompare[T,F]) =
    F(a.x, b.x);

min(a, b) {
    if (a <= b) returnref a;
    returnref b;
}

myLesser(a, b) = lesser?(a, b);

main() {
    var a = CustomCompare(10, myLesser);
    var b = CustomCompare[Int32,myLesser](-20);
    return min(a, b).x;
}
