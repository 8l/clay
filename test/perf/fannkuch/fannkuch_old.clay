
permute(n){
	var ctr=0;
	var max=0;
	var flips=0;		
	for(i in range(0,n)){
		flips=doJob(n,ctr);
		ctr+=1;
		if(max<flips)
			max=flips;
	}
	return max;
}

show(n){
	var r = n;
	var showmax=30;
    var perm = Array[Int, 16]();
    var count = Array[Int, 16]();
	for(i in range(0,n)){
        perm[i] = 0;
        count[i] = 0;
	}
	for(i in range(0,n))
		perm[i]=i+1;
	
    while (1>0) {
	    if (showmax>0) {
		    for (i in range(0,n))
		        print(perm[i]);
			println();
		    showmax-=1;
	    } 
	    else
		    break;

	    while (r > 1){
		    count[r - 1] = r;
		    r-=1;
	    }	

	    while (1>0) {
		    if (r == n)
		        return;
		    
		    var p0 = perm[0];
		    for (i in range(0,r))
		        perm[i] = perm[i + 1];
		    perm[r] = p0;
		    
		    count[r]-=1;	
		    if (count[r] > 0)
		        break;
		    r+=1;
	    }
    }
}

doJob(n,ctr){
	var flips=0;
	var k=0;	
	var m=0;
	var i=0;
	var j=0;	
	var tmp=0;
    var perm1 = Array[Int, 16]();
    var perm = Array[Int, 16]();
    var count = Array[Int, 16]();
	for(i in range(0,n)){
        count[i] = 0;
        perm1[i] = 0;
        perm[i] = 0;
	}
	for(i in range(0,n))
		perm1[i]=i;	
	perm1[ctr]=n-1;
	perm1[n-1]=ctr;
	var r=n;
	var maxflips=0;
	while (true) {
		while(r>1){
			count[r-1]=r;
			r-=1;	
		}
		if(not(perm1[0]==0) and not(perm1[n-1]==(n-1))){
			for(i in range(0,n))
				perm[i]=perm1[i];
			flips=0;			
			k=perm[0];
			while (k != 0) {
    	    	m=0;
        		while(m<(k+1)/2){
        			tmp=perm[m];
            		perm[m]=perm[k-m];
           		    perm[k-m]=tmp;
	     			m+=1;	   
      		    }              
                flips+=1;
		        k=perm[0];
    	    }
		    if(maxflips<flips)
			    maxflips=flips;				
		}	
		while (true) {
	       	if (r >= n-1) 
				return maxflips;
        	
            var p = perm1[0];
            for (i in range(0,r))
           	    perm1[i] = perm1[i + 1];
   	   	    perm1[r] = p;
   	        count[r]-=1;
            if (count[r] > 0)
       		    break;
            r+=1;
      	}
	}
	return -1;
}


main(){
	var cmd=commandLine();
	var n=0;
	if(size(cmd)>1)
		n=Int(cmd[1]);	
	var ans=permute(n);
	show(n);	
	println("Pfannkuchen(",n,") = ",ans);
}
