import base.*;

external qsort(base:RawPointer, n:SizeT, width:SizeT,
               compare:CCodePointer[RawPointer, RawPointer, Int]): Void;

external compare(pa:RawPointer, pb:RawPointer):Int {
    var x = Pointer[Int](pa);
    var y = Pointer[Int](pb);
    if (x^ < y^) return -1;
    if (x^ > y^) return 1;
    return 0;
}

testCompare(a, b) = compare(RawPointer(&a), RawPointer(&b));

main() {
    var a = Array[Int, 100]();
    var x = Int(size(a));
    for (e in a) {
        e = 2*x;
        x -= 1;
    }

    printf(cstring("a[0], a[2] = %d, %d\n"), a[0], a[2]);

    printf(cstring("compare test = %d\n"), testCompare(a[0], a[2]));
    printf(cstring("compare test = %d\n"), testCompare(a[0], a[0]));
    printf(cstring("compare test = %d\n"), testCompare(a[2], a[0]));

    qsort(RawPointer(&a[0]),
          SizeT(size(a)),
          TypeSize(Int),
          compare);

    printf(cstring("a[0], a[2] = %d, %d\n"), a[0], a[2]);
    return 0;
}
