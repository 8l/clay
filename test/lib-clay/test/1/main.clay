import test.*;
import strings.*;

instance Exception (Int);
instance Exception (Double);

throwInt() { throw 7; }
throwDouble() { throw 7.0; }
throwNothing() { }

main() = testMain(
    TestSuite(
        "test test suite", array(
            TestCase("should pass", -> {
                var seq = array(2, 3, 5, 7, 11);

                expectTrue(true);
                expectFalse(false);
                expectEqual(1, 1);
                expectEqualValues(Tuple(1, 3), 1, 3);
                expectCallDefined(add, Int, Int);
                expectCallUndefined(add, String, Int);
                expectCallDefined(cat, String, String);
                expectSequence(seq, 2, 3, 5, 7, 11);

                var iter = iterator(seq);
                expectIterator(iter, 2, 3, 5, 7, 11);

                expectExceptionType(Int, throwInt);
                expectException(7, throwInt);
            }),
            TestCase("should fail", -> {
                var seq = array(2, 3, 5, 7, 11);
                var iter = iterator(seq);

                expectTrue(false);
                expectFalse(true);
                expectEqual(1, 3);
                expectEqualValues(Tuple(1, 3), 1, 2);
                expectEqualValues(Tuple(1, 3), 1, 2, 3);
                expectCallDefined(add, Int, String);
                expectCallUndefined(cat, String, String);

                var iter = iterator(seq);
                expectIterator(iter, 1, 3, 5, 7, 11);
                iter = iterator(seq);
                expectIterator(iter, 2, 3, 5, 7, 9);
                iter = iterator(seq);
                expectIterator(iter, 2, 3, 5, 7);
                iter = iterator(seq);
                expectIterator(iter, 2, 3, 5, 7, 11, 13);

                expectExceptionType(Int, throwDouble);
                expectExceptionType(Int, throwNothing);
                expectException(6, throwInt);
                expectException(6, throwNothing);
            }),
            TestCase("should fail by throwing uncaught exception", -> {
                expectTrue(false);
                throwInt();
                expectFalse(true);
            }),
            PendingTestCase("should pass", -> {
                expectTrue(true);
            }),
            PendingTestCase("should fail", -> {
                expectTrue(false);
            }),
            TestCase("required", -> {
                required(-> { expectTrue(false); });
                // should not be reached
                expectTrue(true);
            }),
            TestCase("ifPasses", -> {
                ifPasses(-> { expectTrue(false); }, () -> {
                    // should not be reached
                    expectTrue(true);
                });
                ifPasses(-> { expectTrue(true); }, () -> {
                    expectTrue(true);
                });
            }),
        )
    )
);
