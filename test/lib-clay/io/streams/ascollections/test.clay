import data.strings.*;

import io.streams.*;
import io.streams.memory.*;

import test.*;


main() = testMain(
    TestSuite("io.streams collections", array(
        TestCase("InputStream as Iterator", -> {
            var s = "elk";
            var i = MemoryInputStream(begin(s), end(s));
            expectEqual(Byte('e'), getValue(nextValue(i)));
            expectEqual(Byte('l'), getValue(nextValue(i)));
            expectEqual(Byte('k'), getValue(nextValue(i)));
            expectEqual(nothing(Byte), nextValue(i));
        }),
        TestCase("OutputStream push protocol", -> {
            var a = Array[Char, 4]();
            var s = MemoryOutputStream(a);
            push(s, 'p');
            push(s, Byte('u'));
            push(s, "sh");
            expectEqual("push", String(coordinateRange(begin(a), end(a))));
        }),
    )));
