import strings.*;

import io.streams.buffered.*;
import io.streams.memory.*;

import test.*;

main() = testMain(
    TestSuite("io.streams.buffered", array(
        TestCase("BufferedOutputStream", -> {
            var os = BufferedOutputStream(String());
            write(os, "a");
            write(os, "b");
            write(os, "cde");
            expectEqual("", os.underlying);
            flush(os);
            expectEqual("abcde", os.underlying);
        }),
        TestCase("BufferedOutputStream flushOnNewlines", -> {
            var os = BufferedOutputStream(String(), true);
            write(os, "a");
            write(os, "b");
            expectEqual("", os.underlying);
            write(os, "cd\n");
            expectEqual("abcd\n", os.underlying);
        }),
        TestCase("BufferedInputStream", -> {
            var s = "qwerty";
            var m = MemoryInputStream(begin(s), end(s));
            var is = BufferedInputStream(m);
            expectEqual("qw", read(is, SizeT(2)));
            expectEqual(0, is.underlying.end - is.underlying.pos);
            expectEqual("erty", read(is, SizeT(100)));
            expectEqual("", read(is, SizeT(10)));
        }),
    )));
