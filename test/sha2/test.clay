import sha2.*;
import printer.*;
import printer.formatter.*;
import test.*;

expectDigest(test, algorithm, hash, string) {
    expectPrinted(test, algorithm ++ " of string " ++ str(repr(string)),
        hash,
        digest(string, algorithm));
}

expectSha256(test, hash, string) =
    ..expectDigest(test, SHA256_NAME, hash, string);

main() = testMain(
    TestSuite("sha2", array(
        TestCase("sha256", test => {
            expectSha256(test,
                "B9F195C5CC7EF6AFADBFBC42892AD47D3B24C6BC94BB510C4564A90A14E8B799",
                "swordfish");
            expectSha256(test,
                "600867073E9002961F853FD00BBB62108035197C17242BD70B871ACDB1BEC9E2",
                "ABCDEFGHIJabcdefghijABCDEFGHIJabcdefghijABCDEFGHIJ12345");
            expectSha256(test,
                "5C7C76D05CB971DF30EF14EB30E1B1C75A19AC6AC55E14F9A962181E6F694678",
                "ABCDEFGHIJabcdefghijABCDEFGHIJabcdefghijABCDEFGHIJ123456");
            expectSha256(test,
                "B25CADD808A9A96D977B326B65B9B2321E6D86462DB2392A6156EF167EC04725",
                "ABCDEFGHIJabcdefghijABCDEFGHIJabcdefghijABCDEFGHIJ1234567");
            expectSha256(test,
                "82C2BE1C906DA4B58B9EA060216A6EB4C74E99912BBC14B77F84F46B3396B1E5",
                "ABCDEFGHIJabcdefghijABCDEFGHIJabcdefghijABCDEFGHIJabcdefghij123");
            expectSha256(test,
                "7F1F966E506C85F443E39E82C74F41E923CC0CBF9A837E512F82798282A8BA05",
                "ABCDEFGHIJabcdefghijABCDEFGHIJabcdefghijABCDEFGHIJabcdefghij1234");
            expectSha256(test,
                "9DEDD7106DA68AAC98215B0B290BBC296A9C7C5129A53B8894FC45C6D69D4DF8",
                "ABCDEFGHIJabcdefghijABCDEFGHIJabcdefghijABCDEFGHIJabcdefghij12345");
            expectSha256(test,
                "520BAA51D704E8697E3431F87534DF9E275F34EAB5CF24A82DB26F477C44995B",
                "AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFGGGGGGGGGGHHHHHHHHHHIIIIIIIIIIJJJJJJJJJJKKKKKKKKKK123456789");
            expectSha256(test,
                "E117C07C5DD76D107065C5EC3F078C09C82FDC2F746838D6B6FDB9DEFDA30BF8",
                "AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFGGGGGGGGGGHHHHHHHHHHIIIIIIIIIIJJJJJJJJJJKKKKKKKKKKLLLLLLLLLL");
            expectSha256(test,
                "B727550D5FFAA7D263F41B044760FE171458E801C22705AC6ED1712CADCDA33A",
                "AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFGGGGGGGGGGHHHHHHHHHHIIIIIIIIIIJJJJJJJJJJKKKKKKKKKKLLLLLLLLLL1");
            expectSha256(test,
                "CB98A2D98EEEBE4F670F08B752DC5CC56BDB5BF1500DD7A88461363B68492351",
                "AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFGGGGGGGGGGHHHHHHHHHHIIIIIIIIIIJJJJJJJJJJKKKKKKKKKKLLLLLLLLLL1234567");
            expectSha256(test,
                "914E400A4E55E76D9981E0020F9971A64D030ED41AC67BD3C9136BE110EBEFAE",
                "AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFGGGGGGGGGGHHHHHHHHHHIIIIIIIIIIJJJJJJJJJJKKKKKKKKKKLLLLLLLLLL12345678");
            expectSha256(test,
                "50045F4231B493EB436AFC58E2B1F33B70E4071F68C1BC1930F58BA2776FBF25",
                "AAAAAAAAAABBBBBBBBBBCCCCCCCCCCDDDDDDDDDDEEEEEEEEEEFFFFFFFFFFGGGGGGGGGGHHHHHHHHHHIIIIIIIIIIJJJJJJJJJJKKKKKKKKKKLLLLLLLLLL123456789");
        }),

        TestCase("sha256 streaming", test => {
            var context = SHA256Context();
            digestUpdate(context, "A long time ago in a galaxy far,");
            digestUpdate(context, " far away....");
            expectPrinted(test, "SHA-256 1",
                "A014AE72628AC605EF9456695E3721D455271752DED65F630D741601DB42B1D4",
                digestFinish(context));
        
            context = SHA256Context();
            digestUpdate(context, "It is a period of civil war. ");
            digestUpdate(context, "Rebel spaceships, striking ");
            digestUpdate(context, "from a hidden base, have won ");
            digestUpdate(context, "their first victory against ");
            digestUpdate(context, "the evil Galactic Empire.");
            expectPrinted(test, "SHA-256 2",
                "1D16FB2F8303CEB13C0092C8C244FD84F5EA5D3E46622405BD33C389DDC4CC68",
                digestFinish(context));

            context = SHA256Context();
            for (i in range(1000)) {
                digestUpdate(context, str(i));
            }
            // check with: `for i in {0..999}; do echo -n $i; done | shasum -a 256`
            expectPrinted(test, "SHA-256 3",
                "14E7FD93E3D8DD8D448B65A1BA7DBEC9433C57E554B522831089EB2064EF1F34",
                digestFinish(context));
        }),
    )));

