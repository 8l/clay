from clay.env import *

def make_primitives_env() :
    env = Env()
    a = env.add_builtin
    a("Bool", BoolTypeEntry())
    a("Char", CharTypeEntry())
    a("Int", IntTypeEntry())
    a("Void", VoidTypeEntry())
    a("Array", ArrayTypeEntry())
    a("Ref", RefTypeEntry())
    a("default", PrimOpDefault())
    a("ref_get", PrimOpRefGet())
    a("ref_set", PrimOpRefSet())
    a("ref_offset", PrimOpRefOffset())
    a("ref_difference", PrimOpRefDifference())
    a("tuple_ref", PrimOpTupleRef())
    a("new_array", PrimOpNewArray())
    a("array_size", PrimOpArraySize())
    a("array_ref", PrimOpArrayRef())
    a("array_value", PrimOpArrayValue())
    a("array_value_ref", PrimOpArrayValueRef())
    a("record_ref", PrimOpRecordRef())
    a("struct_ref", PrimOpStructRef())
    a("bool_not", PrimOpBoolNot())
    a("char_to_int", PrimOpCharToInt())
    a("int_to_char", PrimOpIntToChar())
    a("char_equals", PrimOpCharEquals())
    a("char_lesser", PrimOpCharLesser())
    a("char_lesser_equals", PrimOpCharLesserEquals())
    a("char_greater", PrimOpCharGreater())
    a("char_greater_equals", PrimOpCharGreaterEquals())
    a("int_add", PrimOpIntAdd())
    a("int_subtract", PrimOpIntSubtract())
    a("int_multiply", PrimOpIntMultiply())
    a("int_divide", PrimOpIntDivide())
    a("int_modulus", PrimOpIntModulus())
    a("int_negate", PrimOpIntNegate())
    a("int_equals", PrimOpIntEquals())
    a("int_lesser", PrimOpIntLesser())
    a("int_lesser_equals", PrimOpIntLesserEquals())
    a("int_greater", PrimOpIntGreater())
    a("int_greater_equals", PrimOpIntGreaterEquals())
    return env
