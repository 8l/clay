Syntax:
------

GlobalSymbol -> "symbol" Identifier StaticParams? ";"

GlobalSymbolWithBody -> "symbol"? Identifier StaticParams? "=" Expr ";"

StaticParams -> "[" variadic_list(Identifier, Identifier) "]"

Function -> "function" Identifier ";"

Overload -> PatternVarsWithPredicate? "overload" Identifier
            "(" PatternList? ")" "=" ExprList ";"

FunctionWithBody -> PatternVarsWithPredicate? "function"? Identifier
                    "(" PatternList? ")" "=" ExprList ";"

PatternVarsWithPredicate -> "[" comma_list(PatternVar)? "|" Expr "]"
PatternVar -> ("...")? Identifier

PatternList -> variadic_list(Pattern, Identifier)

Pattern -> BoolLiteral
         | IntLiteral
         | StringLiteral
         | Identifier
         | Identifier "[" PatternList "]"

ExprList -> comma_list(ExprListItem)

ExprListItem -> "..." "(" ExprList ")"
              | "..." Expr
              | Expr

Expr -> BoolLiteral
      | IntLiteral
      | StringLiteral
      | Identifier
      | Expr "(" ExprList ")"
      | Expr "[" ExprList "]"
      | Lambda
      | "if" "(" Expr ")" Expr "else" Expr
      | "(" Expr ")"

Lambda -> LambdaArgs "=>" ExprListItem
LambdaArgs -> Identifier
            | "(" variadic_list(Identifier, Identifier)? ")"

variadic_list(Head, Tail) -> "..." Tail
                           | comma_list(Head) ("," "..." Tail)?
