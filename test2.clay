def fact(n) {
    if (intEquals(n,0))
        return 1;
    return intMultiply(n, fact(intSubtract(n,1)));
}

def isEven(n) {
    return isOdd(intSubtract(n, 1));
}

def isOdd(n) {
    if (intGreater(n, 1))
        return isEven(intSubtract(n, 1));
    return intEquals(n, 1);
}


record NodeA[T] {
    x: T;
    next: Ref[NodeA[T]];
}

def nullRef[T](type T):Ref[T] {
    return default(Ref[T]);
}

def mainA() {
    var i = 10;
    var n = new(NodeA(i, nullRef(NodeA[Int])));
    return n^.next;
}

def main() {
    return mainA();
}
