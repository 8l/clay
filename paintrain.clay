import simd.*;

external simple(x:Int, y:Bool, z:Float) { }

external oneWordTuple0(x:Tuple[Int32,Int32]) : Int32 = x.0;
external oneWordTuple1(x:Tuple[Int32,Int32]) : Int32 = x.1;
external oneWordTuple2(x:Tuple[Int64]) : Int64 = x.0;

external twoWordTuple0(x:Tuple[Int32,Int32,Int32]) : Int32 = x.0;
external twoWordTuple1(x:Tuple[Int32,Int32,Int32]) : Int32 = x.1;
external twoWordTuple2(x:Tuple[Int32,Int32,Int32]) : Int32 = x.2;
external twoWordTuple3(x:Tuple[Int32,Int32,Int64]) : Int32 = x.0;
external twoWordTuple4(x:Tuple[Int32,Int32,Int64]) : Int32 = x.1;
external twoWordTuple5(x:Tuple[Int32,Int32,Int64]) : Int64 = x.2;

external mixedTuple0(x:Tuple[Int32,Double]) : Int32 = x.0;
external mixedTuple1(x:Tuple[Int32,Double]) : Double = x.1;

external bigTuple0(x:Tuple[Int64,Int64,Int64]) : Int64 = x.0;
external bigTuple1(x:Tuple[Int64,Int64,Int64]) : Int64 = x.1;
external bigTuple2(x:Tuple[Int64,Int64,Int64]) : Int64 = x.2;

external oneWordTupleOut0(x:Int32,y:Int32) : Tuple[Int32,Int32] = [x,y];
external twoWordTupleOut0(x:Int64,y:Int64) : Tuple[Int64,Int64] = [x,y];

external bigTupleOut0(x:Int64,y:Int64,z:Int64) : Tuple[Int64,Int64,Int64] = [x,y,z];

external complexOut() : Complex64 = 1.0 + 2.0j;
external complexIn0(x:Complex64) : Float64 = real(x);
external complexIn1(x:Complex64) : Float64 = imag(x);

external complexFloatOut() : Complex32 = 1.0f + 2.0j32;
external complexFloatIn0(x:Complex32) : Float32 = real(x);
external complexFloatIn1(x:Complex32) : Float32 = imag(x);

external complexLongDoubleOut() : Complex80 = 1.0f80 + 2.0j80;
external complexLongDoubleIn0(x:Complex80) : Float80 = real(x);
external complexLongDoubleIn1(x:Complex80) : Float80 = imag(x);

external vec(x:Vec[Byte,16], y:Vec[Byte,16]) : Vec[Byte,16] = x + y;

external mutantUnion0(x:Union[Int,Vec[Double,2]]) : Int = x.0;
external mutantUnion1(x:Union[Int,Vec[Double,2]]) : Vec[Double,2] = x.1;
