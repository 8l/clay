
symbol valueReturn = NewProcedure();
overload valueReturn() x:Int32 __c__ """abort();""";

symbol refReturn = NewProcedure();
overload refReturn() ref x:Int32 __c__ """abort();""";

symbol rvalueReturn = NewProcedure();
overload rvalueReturn() rvalue x:Int32 __c__ """abort();""";

symbol constReturn = NewProcedure();
overload constReturn() const x:Int32 __c__ """abort();""";

symbol main = NewProcedure();
overload main() {
    return valueReturn(), forward valueReturn(),
        refReturn(), ref refReturn(), forward refReturn(),
        rvalueReturn(), rvalue rvalueReturn(), forward rvalueReturn(),
        constReturn(), const constReturn(), forward constReturn();
}

