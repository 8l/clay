
symbol RefArg = ();
symbol RvalueArg = ();
symbol ConstArg = ();

symbol foo = Procedure();
overload foo(x) = ConstArg;
overload foo(ref x) = RefArg;
overload foo(rvalue x) = RvalueArg;

symbol valueReturn = Procedure();
overload valueReturn() x:Int32 __c__ """abort();""";

symbol refReturn = Procedure();
overload refReturn() ref x:Int32 __c__ """abort();""";

symbol rvalueReturn = Procedure();
overload rvalueReturn() rvalue x:Int32 __c__ """abort();""";

symbol constReturn = Procedure();
overload constReturn() const x:Int32 __c__ """abort();""";

symbol main = Procedure();
overload main() {
    var x = valueReturn();
    ref y = refReturn();
    rvalue z1 = rvalueReturn();
    rvalue z2 = valueReturn();
    const w1 = constReturn();

    return foo(x),
           foo(y),
           foo(z1),
           foo(z2),
           foo(w1);
}
