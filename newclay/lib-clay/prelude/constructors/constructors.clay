import prelude.types.*;
import prelude.operators.c.*;
import unsafe.casts.(bitcast);

import __primitives__.(StaticInt, StaticUInt, StaticChar);


//
// default constructors for basic types
//

overload Bool() inline = false;

overload Int() inline = 0i;
overload UInt() inline = 0u;

overload Int8() inline  = 0_i8;
overload Int16() inline = 0_i16;
overload Int32() inline = 0_i32;
overload Int64() inline = 0_i64;

overload UInt8() inline  = 0_u8;
overload UInt16() inline = 0_u16;
overload UInt32() inline = 0_u32;
overload UInt64() inline = 0_u64;

overload Float32() inline = 0.0_f32;
overload Float64() inline = 0.0_f64;

overload Char() inline   = '\u000000';

overload Static['x]() inline --> returned:Static['x] {}

overload ContiguousCoordinate['T]() inline --> returned:ContiguousCoordinate['T] {
    bitcast(Int, returned) <-- 0;
}


//
// static Int, UInt, and Char conversion
//

overload #Int() = 0;
overload #Int('x) = StaticInt('x);
overload #UInt() = 0u;
overload #UInt('x) = StaticUInt('x);
overload #Char() = '\u000000';
overload #Char('x) = StaticChar('x);


//
// primitive conversions
//

overload 'A(b:'B) inline
    | ConvertiblePrimitiveTypes?('A, 'B)
    = cCast('A, b);

overload ContiguousCoordinate(forward x:'T) inline
    | DereferenceablePointerType?('T)
    = ContiguousCoordinate[PointerReferencedType('T)](x);

overload Pointer(forward x:'T) inline
    | DereferenceablePointerType?('T)
    = Pointer[PointerReferencedType('T)](x);


//
// disable StringConstant initializer
//

overload StringConstant();


//
// copy/move construction
//
overload 'T(x:'T) inline --> returned:'T
    | Defined?([copy(x)])
{
    returned <-- copy(x);
}

overload 'T(rvalue x:'T) inline --> returned:'T
    | Defined?([move(x)])
{
    returned <-- move(x);
}

