public import __primitives__.(
    StaticObserve,
    StaticError,
    StaticAssert,
);
import libc.(abort, puts, printf);
import ctypes.(CUInt, CString);
import meta.lambdas.(LambdaString, LambdaLocation);

private assertLocation(file, line, column) = CString(file), CUInt(line), CUInt(column);

assert(f, ..msg) | DefinedWithType?([f()], Bool) {
    if (not f()) {
        // XXX show message
        printf(CString("assertion %s failed at %s(%u,%u)\n"),
            CString(LambdaString(f)),
            ..assertLocation(..LambdaLocation(f))
        );
        abort();
        throw 0; // XXX until we can mark externals as noreturn
    }
}

fatal(msg, ..msgg) {
    puts(CString(msg));
    abort();
    throw 0; // XXX until we can mark externals as noreturn
}

