import meta.platform.*;
import libc.(strlen);
import unsafe.casts.(pointerCast);
import unsafe.coordinates.(begin, end, ContiguousCoordinate, CoordinateRange);

private symbol CLongType;
overload #CLongType() = Int64;
overload #CLongType()
    | PlatformFamilyName() == "windows" or PlatformCPUPointerBits == 32
    = Int32;

private symbol CULongType;
overload #CULongType() = UInt64;
overload #CULongType()
    | PlatformFamilyName() == "windows" or PlatformCPUPointerBits == 32
    = UInt32;

alias CChar  = Int8;
alias CShort = Int16;
alias CInt   = Int32;
alias CLongLong = Int64;
alias CUChar  = UInt8;
alias CUShort = UInt16;
alias CUInt   = UInt32;
alias CULongLong = UInt64;

var CLong  = #CLongType();
var CULong = #CULongType();

alias CSizeT = UInt;
alias CPtrdiffT = UInt;
alias CIntPtrT = Int;

symbol CString = NewType(Pointer[CChar]);

overload CString(s:StringConstant) = CString(pointerCast(Pointer[CChar], s.begin));

overload begin(s:CString) = ContiguousCoordinate(*s);
overload end(s:CString) = ContiguousCoordinate(*s) + size(s);
overload size(s:CString) = strlen(*s);

overload iterator(s:CString) = CoordinateRange(begin(s), end(s));
