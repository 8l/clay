

//
// mapValues
//

symbol mapValues = ();
static overload mapValues('f, 'first, ...'rest) = 'f('first), ...mapValues('f, ...'rest);
static overload mapValues('f) = ;



//
// clay types as symbols
//

symbol Bool = ();
symbol Int = ();
symbol Array['T, 'n] = ();
symbol Tuple[...'T] = ();

symbol RecordTag = ();

symbol recordType = ();
static overload recordType(...'fields) = (RecordTag, fieldNames(...'fields), fieldTypes(...'fields));

symbol fieldNames = ();
static overload fieldNames(...'fields) = (...mapValues(f => staticTupleElement(f, 0), ...'fields));

symbol fieldTypes = ();
static overload fieldTypes(...'fields) = (...mapValues(f => staticTupleElement(f, 1), ...'fields));

symbol record? = ();
static overload record?('t) =
    staticSymbol?('t)
    and tupleWithTag?(staticSymbolBody('t), RecordTag);

symbol tupleWithTag? = ();
static overload tupleWithTag?('x, 'tag) =
    staticTuple?('x)
    and staticLesser?(0, staticTupleSize('x))
    and staticEquals?(staticTupleElement('x, 0), 'tag);

symbol recordFieldCount = ();
static overload recordFieldCount('t) | record?('t) =
    staticTupleSize(staticTupleElement(staticSymbolBody('t), 1));

symbol recordFieldNames = ();
static overload recordFieldNames('t) | record?('t) =
    staticTupleElement(staticSymbolBody('t), 1);

symbol recordFieldTypes = ();
static overload recordFieldTypes('t) | record?('t) =
    staticTupleElement(staticSymbolBody('t), 2);


symbol Point['T] = recordType(
    ("x", 'T),
    ("y", 'T),
);

symbol recordInfo = ();
static overload recordInfo('t) | record?('t) =
    ('t, recordFieldNames('t), recordFieldTypes('t));

symbol main = ();
static overload main() = recordInfo(Point[Int]);
