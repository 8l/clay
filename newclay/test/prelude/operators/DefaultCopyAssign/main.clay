import show.(show);

var fooCount = 0u;

symbol Foo = CompositeType();

overload Foo() { inc(fooCount); return initializeRecord(Foo); }

overload copy(x:Foo) { inc(fooCount); return copyRecord(x); }
overload destroyUnsafe(x:Foo) { assert([fooCount > 0u]); dec(fooCount); }

main() {
    {
        var x = Foo();
        show(fooCount);
        x = x;
        show(fooCount);
        {
            var y = Foo();
            show(fooCount);
            y = x;
            show(fooCount);
        }
        show(fooCount);
    }
    show(fooCount);
}
