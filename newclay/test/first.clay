
symbol StaticProcedureTag = ();
symbol NewStaticProcedure = NewStaticProcedure();
static overload NewStaticProcedure() = (StaticProcedureTag,);

symbol PrimitiveTypeTag = ();
symbol NewPrimitiveType = NewStaticProcedure();
static overload NewPrimitiveType('cname) = (PrimitiveTypeTag, 'cname);

symbol Bool = NewPrimitiveType("char");
symbol Int = NewPrimitiveType("int");

symbol ProcedureTag = ();
symbol NewProcedure = NewStaticProcedure();
static overload NewProcedure() = (ProcedureTag,);


symbol lesser? = NewProcedure();
overload lesser?(a:Int, b:Int) returned:Bool __c__ """
    *returned = *a < *b;
""";

symbol subtract = NewProcedure();
overload subtract(a:Int, b:Int) returned:Int __c__ """
    *returned = *a - *b;
""";

symbol multiply = NewProcedure();
overload multiply(a:Int, b:Int) returned:Int __c__ """
    *returned = *a * *b;
""";

symbol factorial = NewProcedure();
overload factorial(n:Int) Int =
    if (lesser?(n, 2))
        1
    else
        multiply(n, factorial(subtract(n, 1)));

symbol main = NewProcedure();
overload main() = factorial(5);
