Primitive Types:
Bool, Char, Int, Float, Double, Void

Primitive Values:
true, false, CharLiteral, IntLiteral, FloatLiteral, DoubleLiteral

Primitive Type Constructors:
(Type,...) : tuple type constructor
Array[T,n] : array type constructor
record [T,..]? { (Name:Type;)* } : record type definition
Pointer[T] : raw pointer

Primitive Operations:

default[T](type T):T

typeSize[T](type T):Int

addressOf[T](ref a : T) : Pointer[T]
pointerDereference[T](e:Pointer[T]) ref : T
pointerOffset[T](e:Pointer[T], i:Int):Pointer[T]
pointerSubtract[T](e1:Pointer[T], e2:Pointer[T]):Int
pointerCast[T1,T2](type T2, a:Pointer[T1]):Pointer[T2]

pointerCopy
pointerEquals, pointerLesser, pointerLesserEquals,
pointerGreater, pointerGreaterEquals

allocateMemory(size:Int) : Pointer[Int]
freeMemory(ptr:Pointer[Int]) : Void

makeTuple(v_1, ..., v_n): TupleType
tupleFieldCount[T](type T) : Int
tupleFieldRef[T,i](ref a:T, type i) ref : FieldType

array[T,n](type n, v:T):Array[T, n]
arrayRef[T,n](ref a:Array[T,n], i:Int) ref : T;
arraySize[T,n](ref a:Array[T,n]) : Int

makeRecord(R, v_1, ..., v_n):RecordType
recordFieldCount[R](type R) : Int
recordFieldRef(ref a:R, type i) ref : FieldType;

boolCopy(ref dest:Bool, ref src:Bool):Void
boolNot(x:Bool):Bool

charCopy(ref dest:Char, ref src:Char):Void
charEquals(a:Char, b:Char):Bool
charLesser(a:Char, b:Char):Bool

intCopy(ref dest:Int, ref src:Int):Void
intEquals(a:Int, b:Int):Bool
intLesser(a:Int, b:Int):Bool
intAdd, intSubtract, intMultiply, intDivide,
intModulus, intNegate,

floatCopy(ref dest:Float, ref src:Float):Void
floatEquals(a:Float, b:Float):Bool
floatLesser(a:Float, b:Float):Bool
floatAdd, floatSubtract, floatMultiply, floatDivide,
floatNegate,

doubleCopy(ref dest:Double, ref src:Double):Void
doubleEquals(a:Double, b:Double):Bool
doubleLesser(a:Double, b:Double):Bool
doubleAdd, doubleSubtract, doubleMultiply, doubleDivide,
doubleNegate,

charToInt, intToChar,
floatToInt, intToFloat,
floatToDouble, doubleToFloat,
doubleToInt, intToDouble
