Primitive Types:
Bool, Char, Int, Float, Double, Void

Primitive Values:
true, false, CharLiteral, IntLiteral, FloatLiteral, DoubleLiteral

Primitive Type Constructors:
(Type,...) : tuple type constructor
Array[T,n] : array type constructor
record [T,..]? { (Name:Type;)* } : record type definition
Pointer[T] : raw pointer

Primitive Operations:

default[T](meta T):T

addressOf[T](ref a : T) : Pointer[T]
pointerDereference[T](e:Pointer[T]) ref : T
pointerOffset[T](e:Pointer[T], i:Int):Pointer[T]
pointerSubtract[T](e1:Pointer[T], e2:Pointer[T]):Int
pointerCast[T1,T2](meta T2, a:Pointer[T1]):Pointer[T2]

pointerEquals, pointerLesser, pointerLesserEquals,
pointerGreater, pointerGreaterEquals

allocate[T](meta T) : Pointer[T]
free[T](p:Pointer[T]) : Void
allocateBlock[T](meta T, n:Int) : Pointer[T]
freeBlock[T](p:Pointer[T]):Void
blockSize[T](p:Pointer[T]):Int

makeTuple(v_1, ..., v_n): TupleType
tupleFieldRef[T,i](a:T, meta i) : FieldType

array[T,n](meta n, v:T):Array[T, n]
arrayRef[T,n](ref a:Array[T,n], i:Int) ref : T;
arraySize[T,n](ref a:Array[T,n]) : Int

makeRecord(R, v_1, ..., v_n):RecordType
recordFieldRef(a:R, meta name) ref : FieldType;

boolNot(x:Bool):Bool

charEquals, charLesser, charLesserEquals,
charGreater, charGreaterEquals

intAdd, intSubtract, intMultiply, intDivide,
intModulus, intNegate,
intEquals, intLesser, intLesserEquals,
intGreater, intGreaterEquals

floatAdd, floatSubtract, floatMultiply, floatDivide,
floatNegate,
floatEquals, floatLesser, floatLesserEquals,
floatGreater, floatGreaterEquals

doubleAdd, doubleSubtract, doubleMultiply, doubleDivide,
doubleNegate,
doubleEquals, doubleLesser, doubleLesserEquals,
doubleGreater, doubleGreaterEquals

charToInt, intToChar,
floatToInt, intToFloat,
floatToDouble, doubleToFloat,
doubleToInt, intToDouble
